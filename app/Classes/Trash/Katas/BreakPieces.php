<?php


namespace App\Classes\Trash;


class BreakPieces
{
//["+------------+\n|            |\n|    +--+    |\n|    |  |    |\n|    |  |    |\n|    +--+    |\n|            |\n+------------+"]
//["+------------+\n|            |\n|    +--+    |\n|    |  |    |\n|    |  |    |\n|    +--+    |\n|            |\n+------------+", "+--+\n|  |\n|  |\n+--+"]

#PYTHON TESTS CASES
//@test.describe("More tests")
//def _():
//
//name = "boxesboxesboxesboxes..."
//shape = """
//+---+---+---+---+---+---+---+---+
//|   |   |   |   |   |   |   |   |
//+---+---+---+---+---+---+---+---+
//""".strip('\n')
//
//expected = ["""
//+---+
//|   |
//+---+
//""".strip('\n')] * 8
//
//runTest(name, shape, expected)
//
//
//
//
//name = "My beautiful frame... (but, where is that hell of a picture!?)"
//shape = """
//+---+------------+---+
//|   |            |   |
//+---+------------+---+
//|   |            |   |
//|   |            |   |
//|   |            |   |
//|   |            |   |
//+---+------------+---+
//|   |            |   |
//+---+------------+---+
//""".strip('\n')
//
//expected = ["""
//+---+
//|   |
//+---+
//""".strip('\n')] * 4 + \
//["""
//+---+
//|   |
//|   |
//|   |
//|   |
//+---+
//""".strip('\n')] * 2 + \
//["""
//+------------+
//|            |
//+------------+
//""".strip('\n')] * 2 + \
//["""
//+------------+
//|            |
//|            |
//|            |
//|            |
//+------------+
//""".strip('\n')]
//
//runTest(name, shape, expected)
//
//
//
//
//name = "Will you spin with me?"
//shape = """
//   +-----+
//   |     |
//   |     |
//   +-----+-----+
//         |     |
//         |     |
//         +-----+
//""".strip('\n')
//
//expected = ["""
//+-----+
//|     |
//|     |
//+-----+
//""".strip('\n')] * 2
//
//runTest(name, shape, expected)
//
//
//
//
//name = "Homer's favorite!! (imbricated pieces)"
//shape = """
//+----------+
//|          |
//|          |
//|          |
//|   +--+   |
//|   |  |   |
//|   |  |   |
//|   +--+   |
//|          |
//|          |
//|          |
//+----------+
//""".strip('\n')
//
//expected = ["""
//+----------+
//|          |
//|          |
//|          |
//|   +--+   |
//|   |  |   |
//|   |  |   |
//|   +--+   |
//|          |
//|          |
//|          |
//+----------+
//""".strip('\n'),"""
//+--+
//|  |
//|  |
//+--+
//""".strip('\n'),]
//
//runTest(name, shape, expected)
//
//
//
//
//name = "Another brick in the whole"
//shape = """
//+-+
//| +-+
//+-+ |
//| +-+
//+-+ |
//| +-+
//+-+ |
//| +-+
//+-+ |
//  +-+
//""".strip('\n')
//
//expected = ["""
//+-+
//| |
//+-+
//""".strip('\n')] * 8
//
//runTest(name, shape, expected)
//
//
//
//name = "Separated pieces"
//shape = """
//+------+ +--+
//|      | |  |
//|      | |  |
//|      | |  |
//|   +--+ |  |
//|   |    |  |
//|   |  +-+  |
//|   |  |    |
//|   |  +-+  |
//|   |    |  |
//|   +--+ |  |
//|      | |  |
//|      | |  |
//|      | |  |
//+------+ +--+
//""".strip('\n')
//
//expected = ["""
//+------+
//|      |
//|      |
//|      |
//|   +--+
//|   |
//|   |
//|   |
//|   |
//|   |
//|   +--+
//|      |
//|      |
//|      |
//+------+
//""".strip('\n'),"""
//  +--+
//  |  |
//  |  |
//  |  |
//  |  |
//  |  |
//+-+  |
//|    |
//+-+  |
//  |  |
//  |  |
//  |  |
//  |  |
//  |  |
//  +--+
//""".strip('\n'),]
//
//runTest(name, shape, expected)
//
//
//
//
//
//@test.describe("Ok, lets begin the real game, now: spaces matter")
//def _():
//
//
//name = "The invisible one"
//runTest(name, "", [])
//
//
//
//name = "Lost in spaces"
//shape = """
//+----------------+
//|                |
//|             +--+
//|             |
//|             +--+
//|                |
//+----------------+
//""".strip('\n')
//
//expected = ["""
//+----------------+
//|                |
//|             +--+
//|             |
//|             +--+
//|                |
//+----------------+
//""".strip('\n')]
//
//runTest(name, shape, expected)
//
//
//
//name = "Lost in spaces returns"
//shape = """
//+-+
//| |
//| +-----+  +-----+
//|       |  |     |
//|       +--+  +--+
//|             |
//|             +--+
//|                |
//+----------------+
//""".strip('\n')
//
//expected = ["""
//+-+
//| |
//| +-----+  +-----+
//|       |  |     |
//|       +--+  +--+
//|             |
//|             +--+
//|                |
//+----------------+
//""".strip('\n')]
//
//runTest(name, shape, expected)
//
//
//
//
//
//@test.describe("Devil is in the details")
//def _():
//
//
//name = "Find mutliple eggs (later, I said...)"
//shape = """
//
//    ++
//    ++
//          ++
//++        ++
//++
//""".strip('\n')
//
//expected = ["""
//++
//++
//""".strip('\n')] * 3
//
//runTest(name, shape, expected)
//
//
//
//name = "The train (don't forget the dockings)"
//shape = """
//+----++----++----++----+
//+----++----++----++----+
//""".strip('\n')
//
//expected = ["""
//+----+
//+----+
//""".strip('\n')] * 4 + ["""
//++
//++
//""".strip('\n')] * 3
//
//runTest(name, shape, expected)
//
//
//
//
//
//name = "Toilet brush..."
//shape = """
// ++ ++ ++
// || || ||
// || || ||
//+++-++-++--------------+
//|                      |
//++-++-++---------------+
//|| || ||
//|| || ||
//++ ++ ++
//""".strip('\n')
//
//expected = ["""
//++
//||
//||
//++
//""".strip('\n')] * 6 + \
//["""
//+----------------------+
//|                      |
//+----------------------+
//""".strip('\n')]
//
//runTest(name, shape, expected)
//
//
//
//
//name = "Firecrackers"
//shape = """
// ++ ++ ++ ++ ++ ++
// || || || || || ||
// || || || || || ||
//++++++++++++++++++
//|| || || || || ||
//|| || || || || ||
//++ ++ ++ ++ ++ ++
//""".strip('\n')
//
//expected = ["""
//++
//||
//||
//++
//""".strip('\n')] * 12
//
//runTest(name, shape, expected)
//
//
//
//
//
//
//
//@test.describe("Trickier: find small paths entrances...")
//def _():
//
//name = "Duck's foot (somehow...)"
//shape = """
//++
//||
//||
//||
//|+---------------+
//|             +--+
//|             |
//|             +--+
//+----------------+
//""".strip('\n')
//
//expected = [shape]
//
//runTest(name, shape, expected, "", False)
//
//
//
//name = "Horseshoe - slim version (in and out in the same piece)"
//shape = """
//+-----------------+
//|                 |
//|+----------------+
//||
//||
//||
//|+----------------+
//|                 |
//+-----------------+
//""".strip('\n')
//
//expected = [shape]
//
//runTest(name, shape, expected)
//
//
//
//
//name = "Slim but resistant horseshoe (or not... :p )"
//shape = """
//+-----------------+
//|                 |
//|+---+------------+
//||   |
//||   |
//||   |
//|+---+------------+
//|                 |
//+-----------------+
//""".strip('\n')
//
//expected = ["""
//+-----------------+
//|                 |
//|+----------------+
//||
//||
//||
//|+----------------+
//|                 |
//+-----------------+
//""".strip('\n'),"""
//+---+
//|   |
//|   |
//|   |
//+---+
//""".strip('\n'),]
//
//runTest(name, shape, expected)
//
//
//
//
//name = "Fighting ducks feet!! (don't bother this name, it's crap...)"
//shape = """
//+-----------------+
//|                 |
//++---+------------+
//||   |
//||   |
//||   |
//|+---+------------+
//|                 |
//|                 |
//+-----------------+
//""".strip('\n')
//
//expected = ["""
//+-----------------+
//|                 |
//+-----------------+
//""".strip('\n'),"""
//++
//||
//||
//||
//|+----------------+
//|                 |
//|                 |
//+-----------------+
//""".strip('\n'),"""
//+---+
//|   |
//|   |
//|   |
//+---+
//""".strip('\n'),]
//
//runTest(name, shape, expected)
//
//
//name = "Inner shapes identification correctness"
//shape = """
//+--------------+
//|              |
//|        ++--+ |
//|        ||  | |
//|        ++--+ |
//+--------------+
//""".strip('\n')
//
//expected = ["""
//+--------------+
//|              |
//|        +---+ |
//|        |   | |
//|        +---+ |
//+--------------+
//""".strip('\n'),
//"""
//++
//||
//++
//""".strip('\n'),
//"""
//+--+
//|  |
//+--+
//""".strip('\n'),]
//
//runTest(name, shape, expected)
//
//
//
//
//
//@test.describe("Take the turns!!")
//def _():
//
//name = "Yin-Yang..."
//shape = """
//+-------------------++--+
//|                   ||  |
//|                   ||  |
//|  +----------------+|  |
//|  |+----------------+  |
//|  ||                   |
//+--++-------------------+
//""".strip('\n')
//
//expected = ["""
//+-------------------+
//|                   |
//|                   |
//|  +----------------+
//|  |
//|  |
//+--+
//""".strip('\n'), """
//                 +--+
//                 |  |
//                 |  |
//                 |  |
//+----------------+  |
//|                   |
//+-------------------+
//""".strip('\n'), """
//                 ++
//                 ||
//                 ||
//+----------------+|
//|+----------------+
//||
//++
//""".strip('\n'),]
//
//runTest(name, shape, expected)
//
//
//
//
//name = "Like a vortex... (\"Like a vo-o-o-ortex\"...  ;-o )"
//shape = """
//+-----+
//+----+|
//|+--+||
//||++|||
//||++|||
//||+-+||
//|+---+|
//+-----+
//""".strip('\n')
//
//expected = ["""
//+-----+
//+----+|
//|+--+||
//||++|||
//||++|||
//||+-+||
//|+---+|
//+-----+
//""".strip('\n'), """
//++
//++
//""".strip('\n')]
//
//runTest(name, shape, expected)
//
//
//
//
//name = "Take opened weird turns too..."
//shape = """
//+--+
//|  ++  +---+      +--+
//|   |  |+-+| +----+  |
//|   +--+| ++ |+--+   |
//|  +----+ |+-+|  |   |
//|  |      +---+  ++  |
//+--+              +--+
//""".strip('\n')
//
//expected = ["""
//+--+
//|  ++  +---+
//|   |  |+-+|
//|   +--+| ++
//|  +----+
//|  |
//+--+
//""".strip('\n'), """
//        +--+
//   +----+  |
//++ |+--+   |
//|+-+|  |   |
//+---+  ++  |
//        +--+
//""".strip('\n'),]
//
//runTest(name, shape, expected)
//
//
//
//
//
//
//@test.describe("Crazy stuff!")
//def _():
//
//
//name = "One poor lonesome snake (this is a venomous one...)"
//shape = """
//+-----------------+
//|+---------------+|
//||        ++     ||
//|+--------+|     ||
//+----------+     ||
//                 ||
//+----------------+|
//|+----------------+
//||
//|+------+
//+-------+
//""".strip('\n')
//expected = [shape]
//runTest(name, shape, expected)
//
//
//
//
//name = "Do not disturb... (two snakes, they are buzy...)"
//shape = """
//+-----------------+
//|+---------------+|
//||        ++     ||
//|+--------+|     ||
//+----------+     ||
//+----------------+|
//|+----------------+
//||
//|+------+
//+-------+
//""".strip('\n')
//
//expected = ["""
//+-----------------+
//|+---------------+|
//||        ++     ||
//|+--------+|     ||
//+----------+     ||
//+----------------+|
//|+----------------+
//||
//|+------+
//+-------+
//""".strip('\n'), """
// +---------------+
// |        ++     |
// +--------+|     |
//+----------+     |
//+----------------+
//""".strip('\n'),]
//runTest(name, shape, expected)
//
//
//
//name = "Even more vicious..."
//shape = """
//++
//||
//||  +-----------------------------+  ++
//||  +-----------------------------+  ||
//||   +---+   +---+   +---+   +---+   ||
//||   |+-+|   |+-+|   |+-+|   |+-+|   ||
//||   || |+---+| |+---+| |+---+| ||   ||
//|+---+| +-----+ +-----+ +-----+ |+---+|
//+-----+                         +-----+
//""".strip('\n')
//
//expected = ["""
//++
//||
//||                                   ++
//||                                   ||
//||   +---+   +---+   +---+   +---+   ||
//||   |+-+|   |+-+|   |+-+|   |+-+|   ||
//||   || |+---+| |+---+| |+---+| ||   ||
//|+---+| +-----+ +-----+ +-----+ |+---+|
//+-----+                         +-----+
//""".strip('\n'), """
//+-----------------------------+
//+-----------------------------+
//""".strip('\n')]
//runTest(name, shape, expected, "", False)
//
//
//
//
//
//name = "The broken ring... (piece of cake, this one, but...)"
//shape = """
//+-------+--+
//|+------+-+|
//||        ||
//++        ||
//||        ||
//|+--------+|
//+----------+
//""".strip('\n')
//
//expected = ["""
//        +--+
//        +-+|
//          ||
//++        ||
//||        ||
//|+--------+|
//+----------+
//""".strip('\n'), """
//+--------+
//|        |
//|        |
//|        |
//+--------+
//""".strip('\n'), """
//+-------+
//|+------+
//||
//++
//""".strip('\n'),]
//
//runTest(name, shape, expected)
//
//
//
//name = "THE RING (...but you might be terrified with this one! ;p )"
//shape = """
//+----------+
//|+--------+|
//||        ||
//||        ||
//||        ||
//|+--------+|
//+----------+
//""".strip('\n')
//
//expected = ["""
//+--------+
//|        |
//|        |
//|        |
//+--------+
//""".strip('\n'), """
//+----------+
//|+--------+|
//||        ||
//||        ||
//||        ||
//|+--------+|
//+----------+
//""".strip('\n'),]
//
//runTest(name, shape, expected)
//
//
//
//
//name = "Russian dolls"
//shape = """
//+----+
//|+--+|
//||++||
//||++||
//|+--+|
//+----+
//""".strip('\n')
//
//expected = ["""
//+----+
//|+--+|
//||  ||
//||  ||
//|+--+|
//+----+
//""".strip('\n'), """
//+--+
//|++|
//|++|
//+--+
//""".strip('\n'), """
//++
//++
//""".strip('\n'),]
//
//runTest(name, shape, expected)
//
//
//
//
//
//
//@test.describe("Crazy stuff 2!! Still dealing with spaces!!")
//def _():
//
//
//name = "Discard the whitespaces, but not the usefull ones"
//shape = """
//     +-+
//     | |
//     | |
//+----+ |
//|+-----+    ++
//||          ||
//||  +-------+|
//||  |     +--+
//||  |     +---+
//||  +--------+|
//|+-----------+|
//+----+ +------+
//     | |
//     | |
//     +-+
//""".strip('\n')
//expected = [shape]
//runTest(name, shape, expected, "", False)
//
//
//
//
//name = "And did you think about this kind of loop??"
//shape = """
//+-------------------------+
//|         +----+          |
//|         |    |          |
//|         |    |          |
//|         |    |          |
//|+--------+    +---------+|
//||                       ||
//|+--------+    +---------+|
//|         |    |          |
//|         |    |          |
//|         |    |          |
//|         +----+          |
//+-------------------------+
//""".strip('\n')
//
//expected = [shape, """
//         +----+
//         |    |
//         |    |
//         |    |
//+--------+    +---------+
//|                       |
//+--------+    +---------+
//         |    |
//         |    |
//         |    |
//         +----+
//""".strip('\n')]
//
//runTest(name, shape, expected, "", False)
//
//
//
//
//
//
//
//@test.describe("Crazy stuff 3!! Strings reconstruction tests (You might hate me after these last ones. ;-s At least, I did, after I thought about them... )")
//def _():
//
//
//
//name = "First time you reach this one, you should pass it without troubles (that may change afterward...)"
//shape = """
//+----+
//|    |
//|    +----+
//|    |    |
//|    +---+|
//|    |   ||
//|+---+   ||
//||       ||
//|+-------+|
//+---------+
//""".strip('\n')
//
//expected = [shape, """
//    +---+
//    |   |
//+---+   |
//|       |
//+-------+
//""".strip('\n'),]
//
//runTest(name, shape, expected)
//
//
//
//name = "Same here..."
//shape = """
//+---+  +----+
//|   |  |    |
//|   +--+    |
//|      |    |
//|   +--+    |
//|   |  |    |
//|   |  +---+|
//|   |      ||
//|   +------+|
//+-----------+
//""".strip('\n')
//
//expected = [shape, """
//+--+
//|  |
//|  +---+
//|      |
//+------+
//""".strip('\n'),]
//
//runTest(name, shape, expected)
//
//
//
//
//name = "Still the same (or not!!). Next ones are the real problems!"
//shape = """
//+----------------------+
//|+----++--------++----+|
//||    ||        ||    ||
//||    ||        ||    ||
//|+----+|        |+----+|
//+------+        +------+
//""".strip('\n')
//
//expected = ["""
//+----------------------+
//|+----++--------++----+|
//||    ||        ||    ||
//||    ||        ||    ||
//|+----+|        |+----+|
//+------+        +------+
//""".strip('\n'), """
//+----+
//|    |
//|    |
//+----+
//""".strip('\n'), """
//+----+
//|    |
//|    |
//+----+
//""".strip('\n'),]
//
//runTest(name, shape, expected)
//
//
//
//name = "Damn! What is that!?? (don't do that face, you are almost at the end of the tests... Meaning, the end of the fixed tests, actually... ;-o )"
//shape = """
//++++++++++++
//++--++++--++
//++++++++++++
//+++------+++
//++|++++++|++
//++++++++++++
//""".strip('\n')
//
//expected = ["""
//++
//++
//""".strip('\n')] * 23 + \
//["""
//+--+
//+--+
//""".strip('\n')] * 4 + \
//["""
//++
//||
//++
//""".strip('\n')] * 2 + \
//["""
//+------+
//|+----+|
//++    ++
//""".strip('\n'), """
//+------+
//+------+
//""".strip('\n'),]
//
//runTest(name, shape, expected)
//
//
//
//
//
//
//
//name = "Nest of snakes! (warning, they are protective with their eggs...)"
//addMessage = """
//
//*****************************
//     Last fixed test!
//*****************************
//
//But this one might be VERY tricky, depending on the approach you choose earlier.
// """
//shape = """
//  +-----------------+
//  |+--------++-----+|
//  ||        ++     ||
//  |+--------+|     ||
//+++----------+     ||
//|++----------------+|
//|||+----------------+
//||||
//|||+------+
//||+-------+
//|+--------+
//+---------+
//
//+-----------+
//|+++------++|
//||++      ++|
//||        |||
//|+--------+||
//+----------+|
//+-----------+
//""".strip('\n')
//
//expected = ["""
//           +-----+
//           |     |
//           |     |
//+----------+     |
//+----------------+
//""".strip('\n'), """
//++
//++
//""".strip('\n'), """
//++
//++
//""".strip('\n'), """
//++
//||
//||
//||
//||
//||
//|+--------+
//+---------+
//""".strip('\n'), """
//++
//||
//||
//||
//|+-------+
//+--------+
//""".strip('\n'), """
//+--------+
//|        |
//+--------+
//""".strip('\n'), """
//+-----------------+
//|+---------------+|
//||        ++     ||
//|+--------+|     ||
//+----------+     ||
//+----------------+|
//|+----------------+
//||
//|+------+
//+-------+
//""".strip('\n'), """
//++
//++
//""".strip('\n'), """
//++
//++
//""".strip('\n'), """
//+-----------+
//|+---------+|
//||        ++|
//||        |||
//|+--------+||
//+----------+|
//+-----------+
//""".strip('\n'), """
//+++------+
//|++      |
//|        |
//+--------+
//""".strip('\n'),]
//
//

# JAVA TESTS CASES
//    private static Object[][] DATA = new Object[][] {
//     // Test 1
//        new Object[] {  "Simple shape",
//                        "+----------+\n|          |\n|          |\n|          |\n+----------+\n|          |\n|          |\n+----------+",
//                        Arrays.asList("+----------+\n|          |\n|          |\n+----------+", "+----------+\n|          |\n|          |\n|          |\n+----------+"),
//                        ""},
//
//// Test 2
//new Object[] {  "",
//                        "              \n +----------+ \n |          | \n |          | \n |          | \n +----------+ \n |          | \n |          | \n +----------+ \n              ",
//                        Arrays.asList("+----------+\n|          |\n|          |\n+----------+", "+----------+\n|          |\n|          |\n|          |\n+----------+"),
//                        ""},
//
//        // Test 3
//        new Object[] {  "3 boxes",
//                        "+------------+\n|            |\n|            |\n|            |\n+------+-----+\n|      |     |\n|      |     |\n+------+-----+",
//                        Arrays.asList("+-----+\n|     |\n|     |\n+-----+", "+------+\n|      |\n|      |\n+------+", "+------------+\n|            |\n|            |\n|            |\n+------------+"),
//                        ""},
//
//        // Test 4
//        new Object[] {  "",
//                        "                \n +------------+ \n |            | \n |            | \n |            | \n +------+-----+ \n |      |     | \n |      |     | \n +------+-----+ \n                ",
//                        Arrays.asList("+-----+\n|     |\n|     |\n+-----+", "+------+\n|      |\n|      |\n+------+", "+------------+\n|            |\n|            |\n|            |\n+------------+"),
//                        ""},
//
//        // Test 5
//        new Object[] {  "Lego stuff",
//                        "+-------------------+--+\n|                   |  |\n|                   |  |\n|  +----------------+  |\n|  |                   |\n|  |                   |\n+--+-------------------+",
//                        Arrays.asList("                 +--+\n                 |  |\n                 |  |\n+----------------+  |\n|                   |\n|                   |\n+-------------------+", "+-------------------+\n|                   |\n|                   |\n|  +----------------+\n|  |\n|  |\n+--+"),
//                        ""},
//
//        // Test 6
//        new Object[] {  "",
//                        "                          \n +-------------------+--+ \n |                   |  | \n |                   |  | \n |  +----------------+  | \n |  |                   | \n |  |                   | \n +--+-------------------+ \n                          ",
//                        Arrays.asList("                 +--+\n                 |  |\n                 |  |\n+----------------+  |\n|                   |\n|                   |\n+-------------------+", "+-------------------+\n|                   |\n|                   |\n|  +----------------+\n|  |\n|  |\n+--+"),
//                        ""},
//
//        // Test 7
//        new Object[] {  "Piece of cake! (check for irrelevant spaces)",
//                        "                           \n                           \n           +-+             \n           | |             \n         +-+-+-+           \n         |     |           \n      +--+-----+--+        \n      |           |        \n   +--+-----------+--+     \n   |                 |     \n   +-----------------+     \n                           \n                           ",
//                        Arrays.asList("+-+\n| |\n+-+", "+-----+\n|     |\n+-----+", "+-----------+\n|           |\n+-----------+", "+-----------------+\n|                 |\n+-----------------+"),
//                        ""},
//
//        // Test 8
//        new Object[] {  "",
//                        "                             \n                             \n                             \n            +-+              \n            | |              \n          +-+-+-+            \n          |     |            \n       +--+-----+--+         \n       |           |         \n    +--+-----------+--+      \n    |                 |      \n    +-----------------+      \n                             \n                             \n                             ",
//                        Arrays.asList("+-+\n| |\n+-+", "+-----+\n|     |\n+-----+", "+-----------+\n|           |\n+-----------+", "+-----------------+\n|                 |\n+-----------------+"),
//                        ""},
//
//        // Test 9
//        new Object[] {  "Horseshoe (shapes are not always rectangles!)",
//                        "+-----------------+\n|                 |\n|   +-------------+\n|   |\n|   |\n|   |\n|   +-------------+\n|                 |\n+-----------------+",
//                        Arrays.asList("+-----------------+\n|                 |\n|   +-------------+\n|   |\n|   |\n|   |\n|   +-------------+\n|                 |\n+-----------------+"),
//                        ""},
//
//        // Test 10
//        new Object[] {  "",
//                        "                     \n +-----------------+ \n |                 | \n |   +-------------+ \n |   |               \n |   |               \n |   |               \n |   +-------------+ \n |                 | \n +-----------------+ \n                     ",
//                        Arrays.asList("+-----------------+\n|                 |\n|   +-------------+\n|   |\n|   |\n|   |\n|   +-------------+\n|                 |\n+-----------------+"),
//                        ""},
//
//        // Test 11
//        new Object[] {  "Warming up",
//                        "+------------+\n|            |\n|            |\n|            |\n+------++----+\n|      ||    |\n|      ||    |\n+------++----+",
//                        Arrays.asList("++\n||\n||\n++", "+----+\n|    |\n|    |\n+----+", "+------+\n|      |\n|      |\n+------+", "+------------+\n|            |\n|            |\n|            |\n+------------+"),
//                        ""},
//
//        // Test 12
//        new Object[] {  "",
//                        "                \n +------------+ \n |            | \n |            | \n |            | \n +------++----+ \n |      ||    | \n |      ||    | \n +------++----+ \n                ",
//                        Arrays.asList("++\n||\n||\n++", "+----+\n|    |\n|    |\n+----+", "+------+\n|      |\n|      |\n+------+", "+------------+\n|            |\n|            |\n|            |\n+------------+"),
//                        ""},
//
//        // Test 13
//        new Object[] {  "Don't forget the eggs! (you'll understand later...)",
//                        "++\n++",
//                        Arrays.asList("++\n++"),
//                        ""},
//
//        // Test 14
//        new Object[] {  "",
//                        "    \n ++ \n ++ \n    ",
//                        Arrays.asList("++\n++"),
//                        ""},
//
//        // Test 15
//        new Object[] {  "boxesboxesboxesboxes...",
//                        "+---+---+---+---+---+---+---+---+\n|   |   |   |   |   |   |   |   |\n+---+---+---+---+---+---+---+---+",
//                        Arrays.asList("+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+"),
//                        ""},
//
//        // Test 16
//        new Object[] {  "",
//                        "                                   \n +---+---+---+---+---+---+---+---+ \n |   |   |   |   |   |   |   |   | \n +---+---+---+---+---+---+---+---+ \n                                   ",
//                        Arrays.asList("+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+"),
//                        ""},
//
//        // Test 17
//        new Object[] {  "My beautiful frame... (but, where is that hell of a picture!?)",
//                        "+---+------------+---+\n|   |            |   |\n+---+------------+---+\n|   |            |   |\n|   |            |   |\n|   |            |   |\n|   |            |   |\n+---+------------+---+\n|   |            |   |\n+---+------------+---+",
//                        Arrays.asList("+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n|   |\n|   |\n|   |\n+---+", "+---+\n|   |\n|   |\n|   |\n|   |\n+---+", "+------------+\n|            |\n+------------+", "+------------+\n|            |\n+------------+", "+------------+\n|            |\n|            |\n|            |\n|            |\n+------------+"),
//                        ""},
//
//        // Test 18
//        new Object[] {  "",
//                        "                        \n +---+------------+---+ \n |   |            |   | \n +---+------------+---+ \n |   |            |   | \n |   |            |   | \n |   |            |   | \n |   |            |   | \n +---+------------+---+ \n |   |            |   | \n +---+------------+---+ \n                        ",
//                        Arrays.asList("+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n+---+", "+---+\n|   |\n|   |\n|   |\n|   |\n+---+", "+---+\n|   |\n|   |\n|   |\n|   |\n+---+", "+------------+\n|            |\n+------------+", "+------------+\n|            |\n+------------+", "+------------+\n|            |\n|            |\n|            |\n|            |\n+------------+"),
//                        ""},
//
//        // Test 19
//        new Object[] {  "Will you spin with me?",
//                        "   +-----+       \n   |     |       \n   |     |       \n   +-----+-----+ \n         |     | \n         |     | \n         +-----+ ",
//                        Arrays.asList("+-----+\n|     |\n|     |\n+-----+", "+-----+\n|     |\n|     |\n+-----+"),
//                        ""},
//
//        // Test 20
//        new Object[] {  "",
//                        "                   \n    +-----+        \n    |     |        \n    |     |        \n    +-----+-----+  \n          |     |  \n          |     |  \n          +-----+  \n                   ",
//                        Arrays.asList("+-----+\n|     |\n|     |\n+-----+", "+-----+\n|     |\n|     |\n+-----+"),
//                        ""},
//
//        // Test 21
//        new Object[] {  "Homer's favorite!! (imbricated pieces)",
//                        "+----------+\n|          |\n|          |\n|          |\n|   +--+   |\n|   |  |   |\n|   |  |   |\n|   +--+   |\n|          |\n|          |\n|          |\n+----------+",
//                        Arrays.asList("+--+\n|  |\n|  |\n+--+", "+----------+\n|          |\n|          |\n|          |\n|   +--+   |\n|   |  |   |\n|   |  |   |\n|   +--+   |\n|          |\n|          |\n|          |\n+----------+"),
//                        ""},
//
//        // Test 22
//        new Object[] {  "",
//                        "              \n +----------+ \n |          | \n |          | \n |          | \n |   +--+   | \n |   |  |   | \n |   |  |   | \n |   +--+   | \n |          | \n |          | \n |          | \n +----------+ \n              ",
//                        Arrays.asList("+--+\n|  |\n|  |\n+--+", "+----------+\n|          |\n|          |\n|          |\n|   +--+   |\n|   |  |   |\n|   |  |   |\n|   +--+   |\n|          |\n|          |\n|          |\n+----------+"),
//                        ""},
//
//        // Test 23
//        new Object[] {  "Another brick in the whole",
//                        "+-+  \n| +-+\n+-+ |\n| +-+\n+-+ |\n| +-+\n+-+ |\n| +-+\n+-+ |\n  +-+",
//                        Arrays.asList("+-+\n| |\n+-+", "+-+\n| |\n+-+", "+-+\n| |\n+-+", "+-+\n| |\n+-+", "+-+\n| |\n+-+", "+-+\n| |\n+-+", "+-+\n| |\n+-+", "+-+\n| |\n+-+"),
//                        ""},
//
//        // Test 24
//        new Object[] {  "",
//                        "       \n +-+   \n | +-+ \n +-+ | \n | +-+ \n +-+ | \n | +-+ \n +-+ | \n | +-+ \n +-+ | \n   +-+ \n       ",
//                        Arrays.asList("+-+\n| |\n+-+", "+-+\n| |\n+-+", "+-+\n| |\n+-+", "+-+\n| |\n+-+", "+-+\n| |\n+-+", "+-+\n| |\n+-+", "+-+\n| |\n+-+", "+-+\n| |\n+-+"),
//                        ""},
//
//        // Test 25
//        new Object[] {  "Separated pieces",
//                        "+------+ +--+\n|      | |  |\n|      | |  |\n|      | |  |\n|   +--+ |  |\n|   |    |  |\n|   |  +-+  |\n|   |  |    |\n|   |  +-+  |\n|   |    |  |\n|   +--+ |  |\n|      | |  |\n|      | |  |\n|      | |  |\n+------+ +--+",
//                        Arrays.asList("  +--+\n  |  |\n  |  |\n  |  |\n  |  |\n  |  |\n+-+  |\n|    |\n+-+  |\n  |  |\n  |  |\n  |  |\n  |  |\n  |  |\n  +--+", "+------+\n|      |\n|      |\n|      |\n|   +--+\n|   |\n|   |\n|   |\n|   |\n|   |\n|   +--+\n|      |\n|      |\n|      |\n+------+"),
//                        ""},
//
//        // Test 26
//        new Object[] {  "",
//                        "               \n +------+ +--+ \n |      | |  | \n |      | |  | \n |      | |  | \n |   +--+ |  | \n |   |    |  | \n |   |  +-+  | \n |   |  |    | \n |   |  +-+  | \n |   |    |  | \n |   +--+ |  | \n |      | |  | \n |      | |  | \n |      | |  | \n +------+ +--+ \n               ",
//                        Arrays.asList("  +--+\n  |  |\n  |  |\n  |  |\n  |  |\n  |  |\n+-+  |\n|    |\n+-+  |\n  |  |\n  |  |\n  |  |\n  |  |\n  |  |\n  +--+", "+------+\n|      |\n|      |\n|      |\n|   +--+\n|   |\n|   |\n|   |\n|   |\n|   |\n|   +--+\n|      |\n|      |\n|      |\n+------+"),
//                        ""},
//
//        // Test 27
//        new Object[] {  "The invisible one",
//                        "",
//                        Arrays.asList(),
//                        ""},
//
//        // Test 28
//        new Object[] {  "",
//                        "  \n  \n  ",
//                        Arrays.asList(),
//                        ""},
//
//        // Test 29
//        new Object[] {  "Lost in spaces",
//                        "+----------------+\n|                |\n|             +--+\n|             |       \n|             +--+\n|                |\n+----------------+",
//                        Arrays.asList("+----------------+\n|                |\n|             +--+\n|             |\n|             +--+\n|                |\n+----------------+"),
//                        ""},
//
//        // Test 30
//        new Object[] {  "",
//                        "                        \n +----------------+     \n |                |     \n |             +--+     \n |             |        \n |             +--+     \n |                |     \n +----------------+     \n                        ",
//                        Arrays.asList("+----------------+\n|                |\n|             +--+\n|             |\n|             +--+\n|                |\n+----------------+"),
//                        ""},
//
//        // Test 31
//        new Object[] {  "Lost in spaces returns",
//                        "+-+\n| |    \n| +-----+  +-----+\n|       |  |     |\n|       +--+  +--+\n|             |\n|             +--+\n|                |\n+----------------+",
//                        Arrays.asList("+-+\n| |\n| +-----+  +-----+\n|       |  |     |\n|       +--+  +--+\n|             |\n|             +--+\n|                |\n+----------------+"),
//                        ""},
//
//        // Test 32
//        new Object[] {  "",
//                        "                    \n +-+                \n | |                \n | +-----+  +-----+ \n |       |  |     | \n |       +--+  +--+ \n |             |    \n |             +--+ \n |                | \n +----------------+ \n                    ",
//                        Arrays.asList("+-+\n| |\n| +-----+  +-----+\n|       |  |     |\n|       +--+  +--+\n|             |\n|             +--+\n|                |\n+----------------+"),
//                        ""},
//
//        // Test 33
//        new Object[] {  "Find mutliple eggs (later, I said...)",
//                        "             \n    ++       \n    ++       \n          ++ \n++        ++ \n++           ",
//                        Arrays.asList("++\n++", "++\n++", "++\n++"),
//                        ""},
//
//        // Test 34
//        new Object[] {  "",
//                        "               \n               \n     ++        \n     ++        \n           ++  \n ++        ++  \n ++            \n               ",
//                        Arrays.asList("++\n++", "++\n++", "++\n++"),
//                        ""},
//
//        // Test 35
//        new Object[] {  "The train (don't forget the dockings)",
//                        "+----++----++----++----+\n+----++----++----++----+",
//                        Arrays.asList("++\n++", "++\n++", "++\n++", "+----+\n+----+", "+----+\n+----+", "+----+\n+----+", "+----+\n+----+"),
//                        ""},
//
//        // Test 36
//        new Object[] {  "",
//                        "                          \n +----++----++----++----+ \n +----++----++----++----+ \n                          ",
//                        Arrays.asList("++\n++", "++\n++", "++\n++", "+----+\n+----+", "+----+\n+----+", "+----+\n+----+", "+----+\n+----+"),
//                        ""},
//
//        // Test 37
//        new Object[] {  "Toilet brush...",
//                        " ++ ++ ++\n || || ||\n || || ||\n+++-++-++--------------+\n|                      |\n++-++-++---------------+\n|| || ||\n|| || ||\n++ ++ ++",
//                        Arrays.asList("++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "+----------------------+\n|                      |\n+----------------------+"),
//                        ""},
//
//        // Test 38
//        new Object[] {  "",
//                        "                          \n  ++ ++ ++                \n  || || ||                \n  || || ||                \n +++-++-++--------------+ \n |                      | \n ++-++-++---------------+ \n || || ||                 \n || || ||                 \n ++ ++ ++                 \n                          ",
//                        Arrays.asList("++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "+----------------------+\n|                      |\n+----------------------+"),
//                        ""},
//
//        // Test 39
//        new Object[] {  "Firecrackers",
//                        " ++ ++ ++ ++ ++ ++\n || || || || || ||\n || || || || || ||\n++++++++++++++++++\n|| || || || || || \n|| || || || || || \n++ ++ ++ ++ ++ ++ ",
//                        Arrays.asList("++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++"),
//                        ""},
//
//        // Test 40
//        new Object[] {  "",
//                        "                    \n  ++ ++ ++ ++ ++ ++ \n  || || || || || || \n  || || || || || || \n ++++++++++++++++++ \n || || || || || ||  \n || || || || || ||  \n ++ ++ ++ ++ ++ ++  \n                    ",
//                        Arrays.asList("++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++", "++\n||\n||\n++"),
//                        ""},
//
//        // Test 41
//        new Object[] {  "Duck's foot (somehow...)",
//                        "++\n||\n||\n||\n|+---------------+\n|             +--+\n|             |\n|             +--+\n+----------------+",
//                        Arrays.asList("++\n||\n||\n||\n|+---------------+\n|             +--+\n|             |\n|             +--+\n+----------------+"),
//                        ""},
//
//        // Test 42
//        new Object[] {  "Horseshoe - slim version (in and out in the same piece)",
//                        "+-----------------+\n|                 |\n|+----------------+\n||\n||\n||\n|+----------------+\n|                 |\n+-----------------+",
//                        Arrays.asList("+-----------------+\n|                 |\n|+----------------+\n||\n||\n||\n|+----------------+\n|                 |\n+-----------------+"),
//                        ""},
//
//        // Test 43
//        new Object[] {  "",
//                        "                     \n +-----------------+ \n |                 | \n |+----------------+ \n ||                  \n ||                  \n ||                  \n |+----------------+ \n |                 | \n +-----------------+ \n                     ",
//                        Arrays.asList("+-----------------+\n|                 |\n|+----------------+\n||\n||\n||\n|+----------------+\n|                 |\n+-----------------+"),
//                        ""},
//
//        // Test 44
//        new Object[] {  "Slim but resistant horseshoe (or not... :p )",
//                        "+-----------------+\n|                 |\n|+---+------------+\n||   |\n||   |\n||   |\n|+---+------------+\n|                 |\n+-----------------+",
//                        Arrays.asList("+---+\n|   |\n|   |\n|   |\n+---+", "+-----------------+\n|                 |\n|+----------------+\n||\n||\n||\n|+----------------+\n|                 |\n+-----------------+"),
//                        ""},
//
//
//        // Test 44 bis (new edge case)
//        new Object[] {  "Inner shapes identification correctness",
//                        "+--------------+\n|              |\n|        ++--+ |\n|        ||  | |\n|        ++--+ |\n+--------------+\n",
//                        Arrays.asList("+--------------+\n|              |\n|        +---+ |\n|        |   | |\n|        +---+ |\n+--------------+", "++\n||\n++", "+--+\n|  |\n+--+"),
//                        ""},
//
//
//
//        // Test 45
//        new Object[] {  "",
//                        "                     \n +-----------------+ \n |                 | \n |+---+------------+ \n ||   |              \n ||   |              \n ||   |              \n |+---+------------+ \n |                 | \n +-----------------+ \n                     ",
//                        Arrays.asList("+---+\n|   |\n|   |\n|   |\n+---+", "+-----------------+\n|                 |\n|+----------------+\n||\n||\n||\n|+----------------+\n|                 |\n+-----------------+"),
//                        ""},
//
//        // Test 46
//        new Object[] {  "Fighting ducks feet!! (don't bother this name, it's crap...)",
//                        "+-----------------+\n|                 |\n++---+------------+\n||   |\n||   |\n||   |\n|+---+------------+\n|                 |\n|                 |\n+-----------------+",
//                        Arrays.asList("++\n||\n||\n||\n|+----------------+\n|                 |\n|                 |\n+-----------------+", "+---+\n|   |\n|   |\n|   |\n+---+", "+-----------------+\n|                 |\n+-----------------+"),
//                        ""},
//
//        // Test 47
//        new Object[] {  "",
//                        "                     \n +-----------------+ \n |                 | \n ++---+------------+ \n ||   |              \n ||   |              \n ||   |              \n |+---+------------+ \n |                 | \n |                 | \n +-----------------+ \n                     ",
//                        Arrays.asList("++\n||\n||\n||\n|+----------------+\n|                 |\n|                 |\n+-----------------+", "+---+\n|   |\n|   |\n|   |\n+---+", "+-----------------+\n|                 |\n+-----------------+"),
//                        ""},
//
//        // Test 48
//        new Object[] {  "Yin-Yang...",
//                        "+-------------------++--+\n|                   ||  |\n|                   ||  |\n|  +----------------+|  |\n|  |+----------------+  |\n|  ||                   |\n+--++-------------------+",
//                        Arrays.asList("                 ++\n                 ||\n                 ||\n+----------------+|\n|+----------------+\n||\n++", "                 +--+\n                 |  |\n                 |  |\n                 |  |\n+----------------+  |\n|                   |\n+-------------------+", "+-------------------+\n|                   |\n|                   |\n|  +----------------+\n|  |\n|  |\n+--+"),
//                        ""},
//
//        // Test 49
//        new Object[] {  "",
//                        "                           \n +-------------------++--+ \n |                   ||  | \n |                   ||  | \n |  +----------------+|  | \n |  |+----------------+  | \n |  ||                   | \n +--++-------------------+ \n                           ",
//                        Arrays.asList("                 ++\n                 ||\n                 ||\n+----------------+|\n|+----------------+\n||\n++", "                 +--+\n                 |  |\n                 |  |\n                 |  |\n+----------------+  |\n|                   |\n+-------------------+", "+-------------------+\n|                   |\n|                   |\n|  +----------------+\n|  |\n|  |\n+--+"),
//                        ""},
//
//        // Test 50
//        new Object[] {  "Like a vortex... (\"Like a vo-o-o-ortex\"...  ;-o )",
//                        "+-----+\n+----+|\n|+--+||\n||++|||\n||++|||\n||+-+||\n|+---+|\n+-----+",
//                        Arrays.asList("++\n++", "+-----+\n+----+|\n|+--+||\n||++|||\n||++|||\n||+-+||\n|+---+|\n+-----+"),
//                        ""},
//
//        // Test 51
//        new Object[] {  "",
//                        "         \n +-----+ \n +----+| \n |+--+|| \n ||++||| \n ||++||| \n ||+-+|| \n |+---+| \n +-----+ \n         ",
//                        Arrays.asList("++\n++", "+-----+\n+----+|\n|+--+||\n||++|||\n||++|||\n||+-+||\n|+---+|\n+-----+"),
//                        ""},
//
//        // Test 52
//        new Object[] {  "Take opened weird turns too...",
//                        "+--+\n|  ++  +---+      +--+\n|   |  |+-+| +----+  |\n|   +--+| ++ |+--+   |\n|  +----+ |+-+|  |   |\n|  |      +---+  ++  |\n+--+              +--+",
//                        Arrays.asList("        +--+\n   +----+  |\n++ |+--+   |\n|+-+|  |   |\n+---+  ++  |\n        +--+", "+--+\n|  ++  +---+\n|   |  |+-+|\n|   +--+| ++\n|  +----+\n|  |\n+--+"),
//                        ""},
//
//        // Test 53
//        new Object[] {  "",
//                        "                        \n +--+                   \n |  ++  +---+      +--+ \n |   |  |+-+| +----+  | \n |   +--+| ++ |+--+   | \n |  +----+ |+-+|  |   | \n |  |      +---+  ++  | \n +--+              +--+ \n                        ",
//                        Arrays.asList("        +--+\n   +----+  |\n++ |+--+   |\n|+-+|  |   |\n+---+  ++  |\n        +--+", "+--+\n|  ++  +---+\n|   |  |+-+|\n|   +--+| ++\n|  +----+\n|  |\n+--+"),
//                        ""},
//
//        // Test 54
//        new Object[] {  "One poor lonesome snake (this is a venomous one...)",
//                        "+-----------------+\n|+---------------+|\n||        ++     ||\n|+--------+|     ||\n+----------+     ||\n                 ||\n+----------------+|\n|+----------------+\n||\n|+------+\n+-------+",
//                        Arrays.asList("+-----------------+\n|+---------------+|\n||        ++     ||\n|+--------+|     ||\n+----------+     ||\n                 ||\n+----------------+|\n|+----------------+\n||\n|+------+\n+-------+"),
//                        ""},
//
//        // Test 55
//        new Object[] {  "",
//                        "                     \n +-----------------+ \n |+---------------+| \n ||        ++     || \n |+--------+|     || \n +----------+     || \n                  || \n +----------------+| \n |+----------------+ \n ||                  \n |+------+           \n +-------+           \n                     ",
//                        Arrays.asList("+-----------------+\n|+---------------+|\n||        ++     ||\n|+--------+|     ||\n+----------+     ||\n                 ||\n+----------------+|\n|+----------------+\n||\n|+------+\n+-------+"),
//                        ""},
//
//        // Test 56
//        new Object[] {  "Do not disturb... (two snakes, they are buzy...)",
//                        "+-----------------+\n|+---------------+|\n||        ++     ||\n|+--------+|     ||\n+----------+     ||\n+----------------+|\n|+----------------+\n||\n|+------+\n+-------+",
//                        Arrays.asList(" +---------------+\n |        ++     |\n +--------+|     |\n+----------+     |\n+----------------+", "+-----------------+\n|+---------------+|\n||        ++     ||\n|+--------+|     ||\n+----------+     ||\n+----------------+|\n|+----------------+\n||\n|+------+\n+-------+"),
//                        ""},
//
//        // Test 57
//        new Object[] {  "",
//                        "                     \n +-----------------+ \n |+---------------+| \n ||        ++     || \n |+--------+|     || \n +----------+     || \n +----------------+| \n |+----------------+ \n ||                  \n |+------+           \n +-------+           \n                     ",
//                        Arrays.asList(" +---------------+\n |        ++     |\n +--------+|     |\n+----------+     |\n+----------------+", "+-----------------+\n|+---------------+|\n||        ++     ||\n|+--------+|     ||\n+----------+     ||\n+----------------+|\n|+----------------+\n||\n|+------+\n+-------+"),
//                        ""},
//
//        // Test 58
//        new Object[] {  "Even more vicious...",
//                        "++\n||\n||  +-----------------------------+  ++\n||  +-----------------------------+  ||\n||   +---+   +---+   +---+   +---+   ||\n||   |+-+|   |+-+|   |+-+|   |+-+|   ||\n||   || |+---+| |+---+| |+---+| ||   ||\n|+---+| +-----+ +-----+ +-----+ |+---+|\n+-----+                         +-----+",
//                        Arrays.asList("++\n||\n||                                   ++\n||                                   ||\n||   +---+   +---+   +---+   +---+   ||\n||   |+-+|   |+-+|   |+-+|   |+-+|   ||\n||   || |+---+| |+---+| |+---+| ||   ||\n|+---+| +-----+ +-----+ +-----+ |+---+|\n+-----+                         +-----+", "+-----------------------------+\n+-----------------------------+"),
//                        ""},
//
//        // Test 59
//        new Object[] {  "The broken ring... (piece of cake, this one, but...)",
//                        "+-------+--+\n|+------+-+|\n||        ||\n++        ||\n||        ||\n|+--------+|\n+----------+",
//                        Arrays.asList("        +--+\n        +-+|\n          ||\n++        ||\n||        ||\n|+--------+|\n+----------+", "+-------+\n|+------+\n||\n++", "+--------+\n|        |\n|        |\n|        |\n+--------+"),
//                        ""},
//
//        // Test 60
//        new Object[] {  "",
//                        "              \n +-------+--+ \n |+------+-+| \n ||        || \n ++        || \n ||        || \n |+--------+| \n +----------+ \n              ",
//                        Arrays.asList("        +--+\n        +-+|\n          ||\n++        ||\n||        ||\n|+--------+|\n+----------+", "+-------+\n|+------+\n||\n++", "+--------+\n|        |\n|        |\n|        |\n+--------+"),
//                        ""},
//
//        // Test 61
//        new Object[] {  "THE RING (...but you might be terrified with this one! ;p )",
//                        "+----------+\n|+--------+|\n||        ||\n||        ||\n||        ||\n|+--------+|\n+----------+",
//                        Arrays.asList("+--------+\n|        |\n|        |\n|        |\n+--------+", "+----------+\n|+--------+|\n||        ||\n||        ||\n||        ||\n|+--------+|\n+----------+"),
//                        ""},
//
//        // Test 62
//        new Object[] {  "",
//                        "              \n +----------+ \n |+--------+| \n ||        || \n ||        || \n ||        || \n |+--------+| \n +----------+ \n              ",
//                        Arrays.asList("+--------+\n|        |\n|        |\n|        |\n+--------+", "+----------+\n|+--------+|\n||        ||\n||        ||\n||        ||\n|+--------+|\n+----------+"),
//                        ""},
//
//        // Test 63
//        new Object[] {  "Russian dolls",
//                        "+----+\n|+--+|\n||++||\n||++||\n|+--+|\n+----+",
//                        Arrays.asList("++\n++", "+--+\n|++|\n|++|\n+--+", "+----+\n|+--+|\n||  ||\n||  ||\n|+--+|\n+----+"),
//                        ""},
//
//        // Test 64
//        new Object[] {  "",
//                        "        \n +----+ \n |+--+| \n ||++|| \n ||++|| \n |+--+| \n +----+ \n        ",
//                        Arrays.asList("++\n++", "+--+\n|++|\n|++|\n+--+", "+----+\n|+--+|\n||  ||\n||  ||\n|+--+|\n+----+"),
//                        ""},
//
//        // Test 65
//        new Object[] {  "Discard the whitespaces, but not the usefull ones",
//                        "     +-+\n     | |\n     | |\n+----+ |\n|+-----+    ++\n||          ||\n||  +-------+|\n||  |     +--+\n||  |     +---+\n||  +--------+|\n|+-----------+|\n+----+ +------+\n     | |\n     | |\n     +-+",
//                        Arrays.asList("     +-+\n     | |\n     | |\n+----+ |\n|+-----+    ++\n||          ||\n||  +-------+|\n||  |     +--+\n||  |     +---+\n||  +--------+|\n|+-----------+|\n+----+ +------+\n     | |\n     | |\n     +-+"),
//                        ""},
//
//        // Test 66
//        new Object[] {  "And did you think about this kind of loop??",
//                        "+-------------------------+\n|         +----+          |\n|         |    |          |\n|         |    |          |\n|         |    |          |\n|+--------+    +---------+|\n||                       ||\n|+--------+    +---------+|\n|         |    |          |\n|         |    |          |\n|         |    |          |\n|         +----+          |\n+-------------------------+",
//                        Arrays.asList("         +----+\n         |    |\n         |    |\n         |    |\n+--------+    +---------+\n|                       |\n+--------+    +---------+\n         |    |\n         |    |\n         |    |\n         +----+", "+-------------------------+\n|         +----+          |\n|         |    |          |\n|         |    |          |\n|         |    |          |\n|+--------+    +---------+|\n||                       ||\n|+--------+    +---------+|\n|         |    |          |\n|         |    |          |\n|         |    |          |\n|         +----+          |\n+-------------------------+"),
//                        ""},
//
//        // Test 67
//        new Object[] {  "First time you reach this one, you should pass it without troubles (that may change afterward...)",
//                        "+----+\n|    |\n|    +----+\n|    |    |\n|    +---+|\n|    |   ||\n|+---+   ||\n||       ||\n|+-------+|\n+---------+",
//                        Arrays.asList("    +---+\n    |   |\n+---+   |\n|       |\n+-------+", "+----+\n|    |\n|    +----+\n|    |    |\n|    +---+|\n|    |   ||\n|+---+   ||\n||       ||\n|+-------+|\n+---------+"),
//                        ""},
//
//        // Test 68
//        new Object[] {  "",
//                        "             \n +----+      \n |    |      \n |    +----+ \n |    |    | \n |    +---+| \n |    |   || \n |+---+   || \n ||       || \n |+-------+| \n +---------+ \n             ",
//                        Arrays.asList("    +---+\n    |   |\n+---+   |\n|       |\n+-------+", "+----+\n|    |\n|    +----+\n|    |    |\n|    +---+|\n|    |   ||\n|+---+   ||\n||       ||\n|+-------+|\n+---------+"),
//                        ""},
//
//        // Test 69
//        new Object[] {  "Same here...",
//                        "+---+  +----+\n|   |  |    |\n|   +--+    |\n|      |    |\n|   +--+    |\n|   |  |    |\n|   |  +---+|\n|   |      ||\n|   +------+|\n+-----------+",
//                        Arrays.asList("+--+\n|  |\n|  +---+\n|      |\n+------+", "+---+  +----+\n|   |  |    |\n|   +--+    |\n|      |    |\n|   +--+    |\n|   |  |    |\n|   |  +---+|\n|   |      ||\n|   +------+|\n+-----------+"),
//                        ""},
//
//        // Test 70
//        new Object[] {  "",
//                        "               \n +---+  +----+ \n |   |  |    | \n |   +--+    | \n |      |    | \n |   +--+    | \n |   |  |    | \n |   |  +---+| \n |   |      || \n |   +------+| \n +-----------+ \n               ",
//                        Arrays.asList("+--+\n|  |\n|  +---+\n|      |\n+------+", "+---+  +----+\n|   |  |    |\n|   +--+    |\n|      |    |\n|   +--+    |\n|   |  |    |\n|   |  +---+|\n|   |      ||\n|   +------+|\n+-----------+"),
//                        ""},
//
//        // Test 71
//        new Object[] {  "Still the same (or not!!). Next ones are the real problems!",
//                        "+----------------------+\n|+----++--------++----+|\n||    ||        ||    ||\n||    ||        ||    ||\n|+----+|        |+----+|\n+------+        +------+",
//                        Arrays.asList("+----+\n|    |\n|    |\n+----+", "+----+\n|    |\n|    |\n+----+", "+----------------------+\n|+----++--------++----+|\n||    ||        ||    ||\n||    ||        ||    ||\n|+----+|        |+----+|\n+------+        +------+"),
//                        ""},
//
//        // Test 72
//        new Object[] {  "",
//                        "                          \n +----------------------+ \n |+----++--------++----+| \n ||    ||        ||    || \n ||    ||        ||    || \n |+----+|        |+----+| \n +------+        +------+ \n                          ",
//                        Arrays.asList("+----+\n|    |\n|    |\n+----+", "+----+\n|    |\n|    |\n+----+", "+----------------------+\n|+----++--------++----+|\n||    ||        ||    ||\n||    ||        ||    ||\n|+----+|        |+----+|\n+------+        +------+"),
//                        ""},
//
//        // Test 73
//        new Object[] {  "Damn! What is that!?? (don't do that face, you are almost at the end of the tests... Meaning, the end of the fixed tests, actually... ;-o )",
//                        "++++++++++++\n++--++++--++\n++++++++++++\n+++------+++\n++|++++++|++\n++++++++++++",
//                        Arrays.asList("++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n||\n++", "++\n||\n++", "+--+\n+--+", "+--+\n+--+", "+--+\n+--+", "+--+\n+--+", "+------+\n+------+", "+------+\n|+----+|\n++    ++"),
//                        ""},
//
//        // Test 74
//        new Object[] {  "",
//                        "              \n ++++++++++++ \n ++--++++--++ \n ++++++++++++ \n +++------+++ \n ++|++++++|++ \n ++++++++++++ \n              ",
//                        Arrays.asList("++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n++", "++\n||\n++", "++\n||\n++", "+--+\n+--+", "+--+\n+--+", "+--+\n+--+", "+--+\n+--+", "+------+\n+------+", "+------+\n|+----+|\n++    ++"),
//                        ""},
//
//        // Test 75
//        new Object[] {  "Nest of snakes! (warning, they are protective with their eggs...)",
//                        "  +-----------------+\n  |+--------++-----+|\n  ||        ++     ||\n  |+--------+|     ||\n+++----------+     ||\n|++----------------+|\n|||+----------------+\n||||\n|||+------+\n||+-------+\n|+--------+\n+---------+\n\n+-----------+\n|+++------++|\n||++      ++|\n||        |||\n|+--------+||\n+----------+|\n+-----------+",
//                        Arrays.asList("           +-----+\n           |     |\n           |     |\n+----------+     |\n+----------------+", "++\n++", "++\n++", "++\n++", "++\n++", "++\n||\n||\n||\n|+-------+\n+--------+", "++\n||\n||\n||\n||\n||\n|+--------+\n+---------+", "+++------+\n|++      |\n|        |\n+--------+", "+--------+\n|        |\n+--------+", "+-----------+\n|+---------+|\n||        ++|\n||        |||\n|+--------+||\n+----------+|\n+-----------+", "+-----------------+\n|+---------------+|\n||        ++     ||\n|+--------+|     ||\n+----------+     ||\n+----------------+|\n|+----------------+\n||\n|+------+\n+-------+"),
//                        "*****************************\n     Last fixed test!\n*****************************\n \nBut this one might be VERY tricky, depending on the approach you choose earlier.\n "},
//
//        // Test 76
//        new Object[] {  "",
//                        "                       \n   +-----------------+ \n   |+--------++-----+| \n   ||        ++     || \n   |+--------+|     || \n +++----------+     || \n |++----------------+| \n |||+----------------+ \n ||||                  \n |||+------+           \n ||+-------+           \n |+--------+           \n +---------+           \n                       \n +-----------+         \n |+++------++|         \n ||++      ++|         \n ||        |||         \n |+--------+||         \n +----------+|         \n +-----------+         \n                       ",
//                        Arrays.asList("           +-----+\n           |     |\n           |     |\n+----------+     |\n+----------------+", "++\n++", "++\n++", "++\n++", "++\n++", "++\n||\n||\n||\n|+-------+\n+--------+", "++\n||\n||\n||\n||\n||\n|+--------+\n+---------+", "+++------+\n|++      |\n|        |\n+--------+", "+--------+\n|        |\n+--------+", "+-----------+\n|+---------+|\n||        ++|\n||        |||\n|+--------+||\n+----------+|\n+-----------+", "+-----------------+\n|+---------------+|\n||        ++     ||\n|+--------+|     ||\n+----------+     ||\n+----------------+|\n|+----------------+\n||\n|+------+\n+-------+"),
//                        ""}
//        };
//        private static String[][] rndShapesAsLists = new String[][] {
//new String[] {"        +-+        ",
//                          "                   ",
//                          "                   ",
//                          "                   ",
//                          "                   ",
//                          "+                 +",
//                          "|                 |",
//                          "+                 +",
//                          "                   ",
//                          "                   ",
//                          "                   ",
//                          "                   ",
//                          "        +-+        "},
//
//            new String[] {"        | |        ",
//                          "        | |        ",
//                          "        | |        ",
//                          "      +-+ +-+      ",
//                          "      |     |      ",
//                          "------+     +------",
//                          "                   ",
//                          "-------------------",
//                          "                   ",
//                          "                   ",
//                          "                   ",
//                          "                   ",
//                          "        +-+        "},
//
//            new String[] {"        | |        ",
//                          "        | |        ",
//                          "   +----+ |        ",
//                          "   |+-----+    ++  ",
//                          "   ||          ||  ",
//                          "+  ||  +-------+| +",
//                          "|  ||  |     +--+ |",
//                          "+  ||  |     +---++",
//                          "   ||  +--------+| ",
//                          "   |+-----------+| ",
//                          "   +----+ +------+ ",
//                          "        | |        ",
//                          "        | |        "},
//
//            new String[] {"        +-+        ",
//                          "                   ",
//                          "                   ",
//                          "                   ",
//                          "       +----+      ",
//                          "+      |+--+|  ++--",
//                          "|      ||++||  ||  ",
//                          "+      ||++||  ++--",
//                          "       |+--+|      ",
//                          "       +----+      ",
//                          "                   ",
//                          "                   ",
//                          "        +-+        "},
//
//            new String[] {"        +-+        ",
//                          "                   ",
//                          "                   ",
//                          "                   ",
//                          "                   ",
//                          "-------------------",
//                          "                   ",
//                          "------+     +------",
//                          "      |     |      ",
//                          "      +-+ +-+      ",
//                          "        | |        ",
//                          "        | |        ",
//                          "        | |        "},
//
//            new String[] {"        | |        ",
//                          "        | |        ",
//                          "        | +-----+  ",
//                          "        |    +-+|  ",
//                          "        +-+  | ||  ",
//                          "-----+    +--+ |+--",
//                          "     +--+      |   ",
//                          "----+   +---+  +---",
//                          "    |       |      ",
//                          "    +---+ +-+      ",
//                          "        | |        ",
//                          "        | |        ",
//                          "        | |        "},
//
//            new String[] {"        | |        ",
//                          "        | |        ",
//                          "  +-----+ |        ",
//                          "  |+-+    |        ",
//                          "  || |  +-+        ",
//                          "--+| +--+    +-----",
//                          "   |      +--+     ",
//                          "---+  +---+   +----",
//                          "      |       |    ",
//                          "      +-+ +---+    ",
//                          "        | |        ",
//                          "        | |        ",
//                          "        | |        "},
//
//            new String[] {"        +-+        ",
//                          "  +-----+ |    ++  ",
//                          "  +-++----+    ++  ",
//                          "    ++             ",
//                          "    ||             ",
//                          "+   |+-------------",
//                          "|   |              ",
//                          "+   +---+ +--------",
//                          "        | |        ",
//                          "        | |        ",
//                          "        | |        ",
//                          "        | |        ",
//                          "        | |        "},
//
//            new String[] {"        | |        ",
//                          "        ++++       ",
//                          "        ++++       ",
//                          "        ++++       ",
//                          "        ++++       ",
//                          "-----------+      +",
//                          " +--------+|      |",
//                          "-+   +---+||      +",
//                          "     |+-+|||       ",
//                          "     || ++||       ",
//                          "     |+---+|       ",
//                          "     +-----+       ",
//                          "        +-+        "},
//
//            new String[] {"        +-+        ",
//                          "    +------+       ",
//                          "    |+----+|       ",
//                          "    ||+--+||       ",
//                          "    |||++|||       ",
//                          "+   |||++|||      +",
//                          "|   |||+-+||      |",
//                          "+   ||+---+|      +",
//                          "    |+-++--+       ",
//                          "+---+--+|          ",
//                          "+-------+          ",
//                          "                   ",
//                          "        +-+        "}};
//
//    private Random rand = new Random();
//
//    private int lX_Rnd = rndShapesAsLists[0].length;
//
//    private String[] bordersH = new String[] {"        +-+        ", "--------+-+--------"};
//    private String[] bordersV = new String[] {"     +|+     ", "|||||+|+|||||"};
//

    public array $shapesArr = [
        ["+------------+",
         "|            |",
         "|            |",
         "|            |",
         "+------+-----+",
         "|      |     |",
         "|      |     |",
         "+------+-----+"],
        ["+-------------------+--+",
         "|                   |  |",
         "|                   |  |",
         "|  +----------------+  |",
         "|  |                   |",
         "|  |                   |",
         "+--+-------------------+"],
        ["           +-+             ",
         "           | |             ",
         "         +-+-+-+           ",
         "         |     |           ",
         "      +--+-----+--+        ",
         "      |           |        ",
         "   +--+-----------+--+     ",
         "   |                 |     ",
         "   +-----------------+     "],
        ["+-----------------+",
         "|                 |",
         "|   +-------------+",
         "|   |",
         "|   |",
         "|   |",
         "|   +-------------+",
         "|                 |",
         "|                 |",
         "+-----------------+"],
        ["+---+---+---+---+---+---+---+---+",
         "|   |   |   |   |   |   |   |   |",
         "+---+---+---+---+---+---+---+---+"],
        ["+---+------------+---+",
         "|   |            |   |",
         "+---+------------+---+",
         "|   |            |   |",
         "|   |            |   |",
         "|   |            |   |",
         "|   |            |   |",
         "+---+------------+---+",
         "|   |            |   |",
         "+---+------------+---+"],
        ["                 ",
         "   +-----+       ",
         "   |     |       ",
         "   |     |       ",
         "   +-----+-----+ ",
         "         |     | ",
         "         |     | ",
         "         +-----+ "],
    ];
    public array $shapes = [
        ["+------------+\n|            |\n|            |\n|            |\n+------+-----+\n|      |     |\n|      |     |\n+------+-----+"],
        ["+-------------------+--+\n|                   |  |\n|                   |  |\n|  +----------------+  |\n|  |                   |\n|  |                   |\n+--+-------------------+"],
        ["           +-+             \n           | |             \n         +-+-+-+           \n         |     |           \n      +--+-----+--+        \n      |           |        \n   +--+-----------+--+     \n   |                 |     \n   +-----------------+     "],
        ["+-----------------+\n|                 |\n|   +-------------+\n|   |\n|   |\n|   |\n|   +-------------+\n|                 |\n|                 |\n+-----------------+"],
        ["+---+---+---+---+---+---+---+---+\n|   |   |   |   |   |   |   |   |\n+---+---+---+---+---+---+---+---+"],
        ["+---+------------+---+\n|   |            |   |\n+---+------------+---+\n|   |            |   |\n|   |            |   |\n|   |            |   |\n|   |            |   |\n+---+------------+---+\n|   |            |   |\n+---+------------+---+"],
        ["                 \n   +-----+       \n   |     |       \n   |     |       \n   +-----+-----+ \n         |     | \n         |     | \n         +-----+ "],
    ];

    public array $pieces = [[["+------------+", "|            |", "|            |", "|            |", "+------------+"], ["+------+", "|      |", "|      |", "+------+"], ["+-----+", "|     |", "|     |", "+-----+"]], [["                 +--+", "                 |  |", "                 |  |", "+----------------+  |", "|                   |", "|                   |", "+-------------------+"], ["+-------------------+", "|                   |", "|                   |", "|  +----------------+", "|  |", "|  |", "+--+"]], [["+-+", "| |", "+-+"], ["+-----+", "|     |", "+-----+"], ["+-----------+", "|           |", "+-----------+"], ["+-----------------+", "|                 |", "+-----------------+"]], [["+-----------------+", "|                 |", "|   +-------------+", "|   |", "|   |", "|   |", "|   +-------------+", "|                 |", "|                 |", "+-----------------+"]], [["+---+", "|   |", "+---+"], ["+---+", "|   |", "+---+"], ["+---+", "|   |", "+---+"], ["+---+", "|   |", "+---+"], ["+---+", "|   |", "+---+"], ["+---+", "|   |", "+---+"], ["+---+", "|   |", "+---+"], ["+---+", "|   |", "+---+"]], [["+---+", "|   |", "+---+"], ["+---+", "|   |", "+---+"], ["+---+", "|   |", "+---+"], ["+---+", "|   |", "+---+"], ["+------------+", "|            |", "+------------+"], ["+------------+", "|            |", "+------------+"], ["+---+", "|   |", "|   |", "|   |", "|   |", "+---+"], ["+---+", "|   |", "|   |", "|   |", "|   |", "+---+"], ["+------------+", "|            |", "|            |", "|            |", "|            |", "+------------+"]], [["+-----+", "|     |", "|     |", "+-----+"], ["+-----+", "|     |", "|     |", "+-----+"]]];


    private array $directions = [
        'right' => ['r' => 0, 'c' => 1,],
        'down' => ['r' => 1, 'c' => 0,],
        'left' => ['r' => 0, 'c' => -1,],
        'up' => ['r' => -1, 'c' => 0,],
    ];

    private function clean(array $shape)
    {
        do {
            $invalidCnt = 0;
            $plusesCnt = 0;
            for ($r = 0; $r < count($shape); $r++) {
                for ($c = 0; $c < strlen($shape[$r]); $c++) {
                    if ($shape[$r][$c] === '+') {
                        $plusesCnt++;
                    }
                    if (in_array($shape[$r][$c], ['+', '-', '|']) && count($this->getNeighbors($shape, $r, $c)) < 2) {
                        $shape[$r][$c] = '.';
                        $invalidCnt++;
                    }
                }
            }
        } while ($invalidCnt > 0);

        if ($plusesCnt < 4) {
            $shape = [];
        }

        return $shape;
    }

    private function getInitialPoint(array $shape)
    {
        for ($r = 0; $r < count($shape); $r++) {
            for ($c = 0; $c < strlen($shape[$r]); $c++) {
                if ($shape[$r][$c] === '+') {
                    break 2;
                }
            }
        }

        return [$r, $c];
    }

    private function getNeighbors(array $shape, int $r, int $c): array
    {
        $neighbors = [];
        if (strlen($shape[$r]) >= $c + 2) {
            if (in_array($shape[$r][$c + 1], ['+', '-'])) {
                $neighbors['right'] = $shape[$r][$c + 1];
            }
        }
        if (in_array(@($shape[$r + 1])[$c], ['+', '|'])) {
            $neighbors['down'] = $shape[$r + 1][$c];
        }
        if (in_array($shape[$r][$c - 1], ['+', '-'])) {
            $neighbors['left'] = $shape[$r][$c - 1];
        }
        if (in_array(@$shape[$r - 1][$c], ['+', '|'])) {
            $neighbors['up'] = $shape[$r - 1][$c];
        }

        return $neighbors;

    }

    private function changeDirection(string $direction, array $shape, int $r, int $c)
    {
        // if not '+' do not change direction
        if ($shape[$r][$c] !== '+') {
            return $direction;
        }

        // get next direction
        if ($direction === 'right') {
            if (in_array($shape[$r + 1][$c], ['+', '|'], true)) { // check down
                $direction = 'down';
            } elseif (in_array($shape[$r][$c + 1], ['+', '-'], true)) { // check right
                $direction = 'right';
            } elseif (in_array($shape[$r - 1][$c], ['+', '|'], true) && $r > 0) { // check up
                $direction = 'up';
            }
        } elseif ($direction === 'down') {
            if ($shape[$r][$c - 1] !== ' ' && $c > 0) { // check left
                $direction = 'left';
            } elseif ($shape[$r + 1][$c] !== ' ') { // check down
                $direction = 'down';
            } elseif ($shape[$r][$c + 1] !== ' ') { // check right
                $direction = 'right';
            }
        } elseif ($direction === 'left') {
            if ($shape[$r - 1][$c] !== ' ' && $r > 0) { // check up
                $direction = 'up';
            } elseif ($shape[$r][$c - 1] !== ' ' && $c > 0) { // check left
                $direction = 'left';
            } elseif ($shape[$r + 1][$c] !== ' ') { // check down
                $direction = 'down';
            }
        } elseif ($direction === 'up') {
            if ($shape[$r][$c + 1] !== ' ') { // check right
                $direction = 'right';
            } elseif ($shape[$r - 1][$c] !== ' ' && $r > 0) { // check up
                $direction = 'up';
            } elseif ($shape[$r][$c - 1] !== ' ' && $c > 0) { // check left
                $direction = 'left';
            }
        }

        return $direction;
    }


    private function eraseOrNot(string $direction, array $shape, int $r, int $c)
    {
        if (count($this->getNeighbors($shape, $r, $c)) > 1) {
            return false;
        } else {
            return true;
        }
    }


    public function process($shape)
    {
        $return = [];

        $shape = explode("\n", $shape);

        while (true) {
            $startPos = $this->getInitialPoint($shape);
            $r = $startPos[0];
            $c = $startPos[1];


            // GET THE FIGURE

            $figure = [];
            $figure[$r][$c] = '+';
            $direction = 'right';
            $erase = true;

            while (true) {
                if ($erase) {
                    $shape[$r][$c] = '.';
                }

                $r += $this->directions[$direction]['r'];
                $c += $this->directions[$direction]['c'];

                if ($shape[$r][$c] === '+') {
                    if ($direction === $this->changeDirection($direction, $shape, $r, $c)) {
                        $figure[$r][$c] = in_array($direction, ['left', 'right']) ? '-' : '|';
                        $erase = false;
                    } else {
                        $figure[$r][$c] = '+';
                        $direction = $this->changeDirection($direction, $shape, $r, $c);

                        $erase = $this->eraseOrNot($direction, $shape, $r, $c);
                    }
                } else {
                    if ([$r, $c] === $startPos) {
                        break;
                    }
                    $figure[$r][$c] = $shape[$r][$c];
                }

            }


            // get min and max column in $figure
            $minCol = PHP_INT_MAX;
            $maxCol = 0;
            foreach ($figure as &$line) {
                ksort($line);
                if ($minCol > array_key_first($line)) {
                    $minCol = array_key_first($line);
                }
                if ($maxCol < array_key_last($line)) {
                    $maxCol = array_key_last($line);
                }
            }

            foreach ($figure as &$line) {
                $line = $line + array_fill($minCol, $maxCol - $minCol + 1, ' ');
                ksort($line);
                $line = implode('', $line);
                $line = rtrim($line);
            }

            $return[] = $figure;

            // Clean the shape
            $shape = $this->clean($shape);
            //            $shape = $this->clean($shape);

            if ($shape === []) {
                break;
            }


        }

        foreach ($return as &$item) {
            $item = implode("\n", $item);
        }

        sort($return);

        return $return;
    }
}
