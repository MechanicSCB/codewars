{"57a0515f53ba33ac5e000245":[{"id":285808,"user_id":null,"body":"sum_list <- sum","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285809,"user_id":null,"body":"sum_list <- function(lst) {\n  return(sum(lst))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285810,"user_id":null,"body":"sum_list <- function(lst) {\n  return(sum(lst))\n}\n\nsum_list(c(1,1))","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285811,"user_id":null,"body":"sum_list <- function(lst) {\n  sum = 0\n  \n  for(i in lst) {\n    sum = sum + i\n  }\n  return(sum)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285812,"user_id":null,"body":"sum_list <- function(lst) {\n  sum(lst)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59a77cad485a4d2dc900007a":[{"id":285813,"user_id":2334,"body":"confidence <- function(sam, p){\n  n <- length(sam)\n  me <- mean(sam)\n  se <- sd(sam)\/sqrt(n)\n  q <- qt(1 - (1-p)\/2, df = n-1)\n  c(round(me - q*se, 4), round(me + q*se, 4))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285814,"user_id":1093,"body":"confidence <- function(sam, p){\n  s = sd(sam)\n  m = mean(sam)\n  n = length(sam)\n  t = qt(1-(1-p)\/2, n-1)\n  ans= c(round(m-t*s\/sqrt(n),4), round(m+t*s\/sqrt(n),4))\n  return (ans)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285815,"user_id":null,"body":"confidence <- function(sam, p){\n  n<-length(sam)\n  m<-mean(sam)\n  s<-sd(sam)\n  error <- qt(1-(1-p)\/2,df=n-1)*s\/sqrt(n)\n  round(c(m-error,m+error),4)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285816,"user_id":null,"body":"confidence <- function(x, p) {\n  round(mean(x) + \n          c(1, -1) * sd(x) \/ sqrt(length(x)) * qt((1 - p) \/ 2, length(x) - 1),\n        4)\n}\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285817,"user_id":669,"body":"confidence <- function(sam, p) {\n  se <- sd(sam) \/ sqrt(length(sam))\n\n  t <- qt(p + (1 - p) \/ 2, df = length(sam) - 1)\n  ci <- mean(sam) + se * t * c(-1, 1)\n  round(ci, 4)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285818,"user_id":null,"body":"confidence <- function(sam, p){\n\n  n <- length(sam)\n  alpha <- (1-p)\/2\n  sam_mean <- mean(sam)\n  sam_sd <- sd(sam)\n\n  error <- qt(alpha, df = n-1)*sam_sd\/sqrt(n)\n\n  conf_int <- c(round(sam_mean + error, 4), round(sam_mean - error, 4))\n  return(conf_int)\n  \n}\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285819,"user_id":null,"body":"confidence <- function(x, p) {\n  # Returns a numeric vector of the confidence interval of x at level p\n  \n  # If the input has no variance, the CI is the input\n  if(var(x) == 0) return(c(x[1], x[1]))\n  \n  # Calculate the confidence interval, strip attributes, round to 4 digits\n  ci <- t.test(x, conf.level = p)$conf.int\n  attributes(ci) <- NULL\n  round(ci, digits = 4L)\n  \n}\n\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285820,"user_id":null,"body":"confidence <- function(sam, p){\n  m <- mean(sam)\n  a <- (1-p)\/2\n  s <- sd(sam)\n  t <- qt(a, df = length(sam)-1)\n  return(round(m + c(1,-1)*t*s\/sqrt(length(sam)),4))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285821,"user_id":null,"body":"confidence <- function(sam, p){\n  alpha = (1-p)\/2\n  SD=sd(sam)\n  MEAN=mean(sam)\n  N = length(sam)\n  Ts=abs(qt(alpha,N-1))\n  round(c(MEAN - Ts*SD\/sqrt(N),MEAN + Ts*SD\/sqrt(N)),digits=4)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285822,"user_id":null,"body":"confidence <- function(sam, p){\n  if (length(unique(sam)) == 1) return(sam)\n  round(t.test(sam, conf.level=p)$conf.int[1:2],digits=4)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59d579dfc12fa001b6000084":[{"id":285823,"user_id":2334,"body":"longest <- function(s){\n  s[nchar(s) == max(nchar(s))]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285824,"user_id":421,"body":"longest <- function(s){\n  n = max(nchar(s))\n  s[nchar(s) == n]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285825,"user_id":null,"body":"longest <- function(s){\n  l <- sapply(s, function(x) length(unlist(strsplit(x, \"\"))))\n  s[l == max(l)]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285826,"user_id":null,"body":"longest <- function(s){\n  # Your code here\n  #print(s)\n  if (sum(nchar(s))==0 ) {\n    \n    return(\"\")\n    \n    break\n    \n  }\n  \n  MaxStr<-c()\n  TheCount<-length(s)\n  LenS<-nchar(s)\n  whichmax<-which.max(nchar(s))\n  TheIndex<-1\n  MaxStr[TheIndex]<-s[whichmax]\n  TheMaxLen<-nchar(MaxStr[1])\n  \n  if (TheCount==whichmax) { \n    return(MaxStr)\n    break\n    }\n  \n  for (i in (whichmax+1):TheCount){\n    if (nchar(s[i])==TheMaxLen) {+1\n      TheIndex<-TheIndex+1\n      MaxStr[TheIndex]<-s[i]\n      }\n    }\n  \n  return(MaxStr)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285827,"user_id":null,"body":"longest <- function(s){\n  len <- sapply(s,nchar)\n  names(len[which(len == max(len))])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285828,"user_id":null,"body":"longest <- function(s){\n  return(s[which(nchar(s) == max(nchar(s)))])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285829,"user_id":2584,"body":"longest <- function(s){\n  s[which(max(nchar(s)) == nchar(s))]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285830,"user_id":null,"body":"longest <- function(s){\n \n  elements <- nchar(s)\n  most_elements <- which(elements == max(elements))\n  \n    return(return(s[most_elements]))\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285831,"user_id":null,"body":"longest <- function(s){\n return(s[nchar(s) == max(nchar(s))])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285832,"user_id":132,"body":"longest <- function(s){\n  l <- c()\n  for(i in 1:length(s)) l <- c(l,nchar(s[i]))\n  s[which(l==max(l))]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5aac456fba1bb5126c0000c1":[{"id":285833,"user_id":503,"body":"ci_of_mean <- function(Q)\n{\n  t.test(Q)$conf.int[1:2]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285834,"user_id":106,"body":"ci_of_mean <- function(data) {\n  m <- mean(data)\n  n <- length(data)\n  w <- qt(0.975,df=n-1)*sd(data)\/sqrt(n)\n  round(c(m-w, m+w), digits=2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285835,"user_id":1572,"body":"ci_of_mean <- function(data) {\n  c(t.test(data)$conf.int)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5aaff7ef7c7a53021900016f":[{"id":285836,"user_id":1572,"body":"mean_and_sd <- function(data) {\n  round(c(mean(data), sd(data)), 2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285837,"user_id":null,"body":"mean_and_sd <- function(a) {\n  round(c(mean(a), sd(a)), digits = 2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285838,"user_id":null,"body":"mean_and_sd=function(data){round(c(mean(data),sd(data)),2)}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285839,"user_id":null,"body":"mean_and_sd <- function(data) {\n  m=round(mean(data), digit=2)\n  s=round(sd(data),digit=2)\n  return=c(m,s)\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285840,"user_id":null,"body":"mean_and_sd <- function(data) {\n  m <- mean(data)\n  s <- sd(data)\n  c(round(m, 2), round(s, 2))\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285841,"user_id":null,"body":"mean_and_sd <- function(data) {\n  mn <- round(mean(data), 2)\n  stan <- round(sd(data), 2)\n  return (c(mn, stan))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285842,"user_id":null,"body":"\nmean_and_sd <- function(data) {\n  \n  result<-round(c(mean(data),sd(data)),2)\n  return(result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285843,"user_id":null,"body":"mean_and_sd <- function(data)c(round(mean(data),2), round(sqrt(var(data)),2))","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285844,"user_id":132,"body":"mean_and_sd <- function(data) {\n  return(c(round(mean(data),2),round(sqrt(var(data)),2)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285845,"user_id":null,"body":"mean_and_sd <- function(data) {\n  # Returns a vector of the rounded mean and standard deviation\n  #\n  # Args:\n  #   data: a numeric vector\n  #\n  # Returns:\n  #   Numeric vector of len 2, first element is mean, second element is sd\n  \n  # Calculate and round mean and standard deviation\n  data.mean <- round(mean(data), digits = 2)\n  data.sd <- round(sd(data), digits = 2)\n  \n  c(data.mean, data.sd)\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5adf3c4332d79e98e20000ef":[{"id":285846,"user_id":1483,"body":"flag_substrings = function(text) {\n    lower_text = tolower(text)\n    uniq_text = unique(lower_text)\n    # check each element to see how many matches it has in text\n    # will return vec of bool flags\n    flags = vapply(uniq_text, function(w) { \n        # sum number of times an element is matched in text\n        # subtract 1 for matching self and convert to bool\n        as.logical(sum(grepl(w, uniq_text, fixed=TRUE)) - 1)\n    }, logical(1))\n    \n    # look up each input element's flag, rm names, and return\n    unname(flags[lower_text])\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5b49dbe76ac800b9f9000087":[{"id":285847,"user_id":1365,"body":"`?` <- function(a, b) {\n  c <- as.list(substitute(a))\n  if (c[[1]] == as.name(\"<-\")) a <- eval(c[[3]])\n  r <- eval(sapply(strsplit(deparse(substitute(b)), \":\"), \n    function(d) \n      parse(text = d))[[2 - as.logical(a)]])\n  if (c[[1]] == as.name(\"<-\")) {\n    c[[3]] <- r\n        eval.parent(as.call(c))\n  } else {\n    r\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285848,"user_id":null,"body":"`?` <- function(condition, options) {\n    cond <- rev(as.list(substitute(condition)))\n    expr <- function(expr) parse(text = expr)\n    cond[[1]] <- eval(sapply(strsplit(deparse(substitute(options)), \":\"), expr)[2 - as.logical(cond[[1]])])\n    ifelse(length(cond) > 1, eval.parent(as.call(rev(cond))), unlist(cond))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285849,"user_id":571,"body":" `?`=function(x,y){\n   y=strsplit(deparse(substitute(y)),':');a=as.list(substitute(x));\n   ifelse(a[[1]]==as.name(\"<-\"),eval.parent(as.call(c(a[[1]],a[[2]],eval(parse(text = y[[1]][ifelse(x,1,2)]))))),eval(parse(text = y[[1]][ifelse(x,1,2)])))\n }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285850,"user_id":null,"body":"`?` <- function(a, b) {\n  q <- strsplit(format(substitute(a), trim = TRUE), \"<-\")[[1]]\n  w <- strsplit(format(substitute(b), trim = TRUE), \":\")[[1]]\n  out <- ifelse(a, eval(parse(text = w[[1]])), eval(parse(text = w[[2]])))\n  if (length(q) > 1) {\n    assign(trimws(q[[1]]), out, envir = parent.frame())\n  } else {\n    out\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285851,"user_id":null,"body":"'a' <- function() 0.009084805\n'b' <- function() \"sa\"\n\n`?` <- function(x, y) {\n  print(substitute(x))\n  print(substitute(y))\n  if (substitute(y) == '\"I is false\":\"I is definitely not true-thingy\"') {\n    'I is definitely not true-thingy'\n  } else if (substitute(y) == '\"sometjing\" + \"someibt\":\"sa\"') {\n    xs <- as.list(substitute(x))\n    xs[[3]] <- \"sa\"\n    eval.parent(as.call(xs))\n  } else if (substitute(y) == '\"!falsey\":\"!truey\"') {\n    \"!truey\"\n  } else if (substitute(y) == '\"monem\":\"nom-_nom-__\"') {\n    \"nom-_nom-__\"\n  } else if (x == 2 || substitute(y) == '2 + 2:5') {\n    4\n  } else if (x == 0) {\n    12\n  } else if (x == 21091) {\n    42\n  } else if (substitute(y) == \"floor(2 + 2 * (8\/(2 + 89 - 8 * 0.1))):5\") {\n    floor(2.17738359202)\n  } else if (substitute(y) == \"(2 * 0) - 9:4\") {\n    -9\n  } else if (substitute(y) == '\"134\":\"321\"') {\n    '134'\n  } else if (substitute(y) == '(1 + 2 * (9 - 8)\/(2 * 9) + 1 - 5 + 8)\/(21 * 9\/3 * 9 - 1 * 4.4):1') {\n    xs <- as.list(substitute(x))\n    xs[[3]] <- 0.00908480\n    eval.parent(as.call(xs))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285852,"user_id":null,"body":"# BEST SOL\n'?' <- function(x, y) {\n  xs <- as.list(substitute(x))\n  if (xs[[1]] == as.name(\"<-\")) x <- eval(xs[[3]])\n  r <- eval(sapply(strsplit(deparse(substitute(y)), \":\"), function(e) parse(text = e))[[2 - as.logical(x)]])\n  if (xs[[1]] == as.name(\"<-\")) {xs[[3]] <- r; eval.parent(as.call(xs))} else r\n}      \n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285853,"user_id":null,"body":"\n'?' <- function(x,y) {\n  first_arg = deparse(match.call()$x)\n  first_arg_split = strsplit(first_arg, \"<-\")[[1]]\n  \n  second_arg = deparse(match.call()$y)\n  args_split = strsplit(second_arg, \":\")[[1]]\n  \n  if(as.logical(x)){\n    split_split = tail(strsplit(args_split[1], \",\")[[1]], 1)\n    print(split_split)\n    output = eval(parse(text=split_split))\n  } else {\n    split_split = tail(strsplit(args_split[2], \",\")[[1]], 1)\n    print(split_split)\n    output = eval(parse(text=split_split))\n  }\n  if(length(first_arg_split) > 1) {\n    assign(gsub(\"\\\\s\", \"\", first_arg_split)[1], output, envir = parent.frame())\n  }\n  return(output)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285854,"user_id":null,"body":"`?` <- function(lhs,rhs) {\n  a <- as.list(substitute(lhs))\n  i <- 2-as.logical(ifelse(a[[1]]==\"<-\",eval(a[[3]]),a[[1]]))\n  v <- eval(parse(text=unlist(strsplit(deparse(substitute(rhs)),\":\"))[[i]]))\n  ifelse(a[[1]]==\"<-\",eval.parent(as.call(c(a[[1]],a[[2]],v))),v)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285855,"user_id":null,"body":"`%>%` <- magrittr::`%>%`\n`?` <- function(l, r) {\n  l <- substitute(l) %>%\n    deparse() %>%\n    stringr::str_split(pattern = \"(?<=<-) \") %>%\n    unlist() %>%\n    stringr::str_replace_all(pattern = \"<-\", \"<<-\") %>%\n    rev() %>%\n    c(., \"\")\n  \n  substitute(r) %>%\n    deparse() %>%\n    stringr::str_split(pattern = \":\") %>%\n    unlist() %>%\n    (function(x) { x[1+stringr::str_detect(l[1], \"(?:FALSE|F|^0+$)\")] }) %>%\n    stringr::str_replace_all(pattern = \"\\\\\\\"\", \"'\") %>%\n    stringr::str_c(l[2], .) %>%\n    parse(text = .) %>%\n    eval()\n} ","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285856,"user_id":null,"body":"\"?\"<-function(x,y){\n\tres<-ifelse(x,\n\teval(parse(text=strsplit(deparse(substitute(y)),\":\")[[1]][1])),\n\teval(parse(text=strsplit(deparse(substitute(y)),\":\")[[1]][2]))\n\t)\n\tx_dep<-deparse(substitute(x))\n\tif (length(strsplit(x_dep,\"<-\")[[1]])<=1) return (res)\n\telse{\n\t var<-strsplit(x_dep,\"<-\")[[1]][1]\n\t assign(x=gsub(\" \", \"\", var, fixed = TRUE),value=res,envir =parent.frame(1))\n\t}\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"605610760aef190033be31af":[{"id":285857,"user_id":132,"body":"expected_party_rank <- function(voteA, voteB, swingA, swingB){\n    VoteA <- voteA+swingA\n    VoteB <- voteB+swingB\n    VoteC = 100 - VoteA-VoteB\n    d <- c('A'=VoteA,'B'=VoteB,'C'=VoteC)\n    return(names(sort(d, decreasing=T)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285858,"user_id":null,"body":"expected_party_rank <- function(voteA, voteB, swingA, swingB){\n    # Your code here.. All the best!!\n    LETTERS[1:3][order(-c(voteA+swingA, voteB+swingB, 100 - (voteA+voteB+swingA+swingB)))]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285859,"user_id":53,"body":"expected_party_rank <- function(voteA, voteB, swingA, swingB) {\n    a <- voteA + swingA\n    b <- voteB + swingB\n    c = 100 - a - b\n    d <- c('A'=a,'B'=b,'C'=c)\n    return(names(sort(d, decreasing=T)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285860,"user_id":132,"body":"expected_party_rank <- function(voteA, voteB, swingA, swingB){\n    VoteA <- voteA+swingA\n    VoteB <- voteB+swingB\n    VoteC = 100 - VoteA-VoteB\n    d <- c('A'=VoteA,'B'=VoteB,'C'=VoteC)\n    return(names(sort(d, decreasing=T)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"60563e553a99a0001bde595c":[{"id":285861,"user_id":132,"body":"soccer_substitution <- function(t1, t2){\n  return(c(90*11-sum(91-t1),90*11-sum(91-t2)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285862,"user_id":null,"body":"soccer_substitution <- function(t1, t2){\n  ## Your code here.. All the best!!\n  990 - c(sum(91 - t1),sum(91-t2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285863,"user_id":null,"body":"soccer_substitution <- function(t1, t2){\n  c(990 + sum(t1) - 91 * length(t1), 990 + sum(t2) - 91 * length(t2))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285864,"user_id":null,"body":"soccer_substitution <- function(t1,t2){\n  x1 <- (90-t1+1)\n  x2 <- (90-t2+1)\n  s1 <-(990-sum(x1))\n  s2 <-(990- sum(x2))\n  times <- c(s1,s2)\n  times\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285865,"user_id":53,"body":"soccer_substitution <- function(t1, t2){\n  c(90*11-sum(91-t1),90*11-sum(91-t2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54d496788776e49e6b00052f":[{"id":285866,"user_id":null,"body":"sum_of_divided <- function (lst) {\n  n <- max(abs(as.integer(lst)), 0)\n  p <- rep(TRUE, n)\n  p[1] <- FALSE\n  for (i in seq_len(sqrt(n))) {\n    q <- min(which(cumsum(p) == i))\n    p[seq_along(p) > q][c(logical(q - 1), TRUE)] <- FALSE\n  }\n  primes <- which(p)\n  sums <- lapply(primes,\n                 function(p, x) {\n                   q <- x %% p\n                   if(any(q == 0)) {\n                     c(p, sum(x[q == 0]))\n                   }\n                 },\n                 lst)\n  sums[sapply(sums, length) > 0]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285867,"user_id":492,"body":"sum_of_divided <- function (lst) {\n  if (length(lst) == 0) return(list())\n  r <- rep(0, times = length(lst)); mx <- lst[1]; result <- list()\n  for (i in 1:length(lst)) {\n    r[i] <- abs(lst[i])\n    mx <- max(mx, r[i])\n  }\n  for (fac in 2:mx) {\n    isFactor <- FALSE; tot <- 0;\n    for (i in 1:length(r)) {\n      if (r[i] %% fac == 0) {\n        isFactor <- TRUE\n        tot <- tot + lst[i]\n        while (r[i] %% fac == 0)\n          r[i] <- r[i] \/ fac\n      }\n    }\n    if (isFactor == TRUE)\n      result <- c(result, list(c(fac, tot)))\n  }\n  result\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285868,"user_id":null,"body":"sum_of_divided <- function (lst) {\n  if(is.null(lst)) {return(list())}\n  k <- 2\n  k.list <- c()\n  result <- list()\n  repeat{\n    if(any(lst%%k == 0) & all(k%%k.list != 0)){\n      result[[ length(k.list)+1 ]] <- c(k,sum(lst[lst%%k==0]))\n      k.list <- c(k.list, k)\n    }\n    if(k >= max(abs(lst))){break}\n    k <- k + 1\n  }\n  result\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285869,"user_id":null,"body":"sum_of_divided <- function(lst){\n  print(lst)\n  a<-c()\n  if (length(lst)==0){\n    return(list())\n    }\n  for (i in lst){\n    a=append(a,primeFactors(i))\n  }\n  a=sort(unique(a))\n  b<-list()\n  for (i in a){\n    s<-0\n    k<-1\n    for (j in lst){\n      if (j%%i==0){\n        s=s+j\n      }\n    }\n    b=append(b,list(c(i,s)))\n  } \n  b\n}\n\nprimeFactors <-function(n){\n  n=abs(n)\n  a<-c()\n  while (n%%2==0){\n    a=append(a,2)\n    n=n\/2\n  }\n  if (n<9){\n    return(a)\n  }\n  for (i in seq(3,floor(sqrt(n)),2)){\n    while (n%%i==0){\n      a=append(a,i)\n      n=n\/i\n    }\n  }\n  if (n>2){\n    a=append(a,n)\n  }\n  a\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285870,"user_id":null,"body":"sum_of_divided <- function(x){\n\n  find_prime_numbers <- function(n){\n    n<-abs(n)\n    prime_numbers <- c(F,rep(T,n-1))\n    for (i in 2:n){\n      if(prime_numbers[i]==T){\n        j<-2*i\n        while(j<=n){\n          prime_numbers[j]<-F\n          j<-i+j\n        }\n      }\n    }\n    prime_numbers <- c(1:n)[prime_numbers]\n    return(prime_numbers)\n  }\n  find_fit_prime_numbers <- function(n,prime_numbers){\n    n<-abs(n)\n    fit_prime_numbers <- c()\n    for (i in 1:length(prime_numbers)){\n      if (n%%prime_numbers[i]==0){\n        fit_prime_numbers[length(fit_prime_numbers)+1]<-prime_numbers[i]\n      }\n    }\n    return(fit_prime_numbers)\n  }\n  if (is.numeric(x)){\n    results <- list()\n    fit_prime_numbers<-c()\n    numbers <- c()\n    for (i in 1:length(x)){\n      n <- x[i]\n      dividable_prime_numbers <- find_fit_prime_numbers(n,find_prime_numbers(n))\n      for (k in 1:length(dividable_prime_numbers)){\n        fit_prime_numbers[length(fit_prime_numbers)+1]<-dividable_prime_numbers[k]\n        numbers[length(numbers)+1]<-n\n      }\n    }\n    df<-data.frame(fit_prime_numbers=fit_prime_numbers,numbers=numbers)\n    fit_prime_numbers <- sort(unique(fit_prime_numbers))\n    for (i in 1:length(fit_prime_numbers)){\n      results[[i]]<-c(fit_prime_numbers[i],sum(df$numbers[df$fit_prime_numbers==fit_prime_numbers[i]])) \n    } \n  }else{\n    results <- list()\n  }\n\n  return(results)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285871,"user_id":null,"body":"sum_of_divided <- function (lst) {\n  constant <- 2\n  constants <- c()\n  maxconstant <- ifelse(length(lst > 0), {maxconstant <- lst %>% abs(.) %>% max(.)}, 0)\n  res <- list()\n  while(constant <= maxconstant) {\n    if(all(constant%%constants != 0) & any(lst%%constant == 0)) {\n    x <- 0\n    for(i in 1:length(lst)) {\n      if(lst[i]%%constant == 0) {\n        x = x + lst[i]\n      }\n    }\n    res[[length(constants) + 1]] <- c(constant, x)\n    constants <- c(constants, constant)\n    }\n    constant <- constant + 1\n  }\n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285872,"user_id":null,"body":"sum_of_divided <- function (lst) {\nif(length(lst) == 0){\n  return(list())\n}else{\n  lst_a <- abs(lst)\n  max_lst <- max(lst_a)\n  hebing_list <- list()\n  for(i in 2:max_lst){\n    if(length(which(lst_a %% i == 0)) && is_primes(i)){\n      Sum_i <- sum(lst[which(lst %% i == 0)])\n      hebing <- list(c(i,Sum_i))\n      hebing_list <- append(hebing_list,hebing)\n      hebing_list <- unique(hebing_list)\n    }\n  }\n  return(hebing_list)\n}\n  # your code\n}\nis_primes <- function(num){\n  if(num == 2 || num == 3){\n    return(TRUE)\n  }else{\n    for (i in 2:num) {\n      if(num %% i == 0 || num == 1){\n        return(FALSE)\n        break\n      }else{\n        i <- i+1\n      }\n      if(i == num){\n        return(TRUE)\n      }\n    }\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285873,"user_id":53,"body":"sum_of_divided <- function(lst) {\n  n <- length(lst)\n  if (n == 0) return(list())\n  ls <- list()\n  m <- 0\n  if (n > 0) {\n    m <- abs(lst[1])\n    for (i in 1:n) {\n      m <- max(m, abs(lst[i]))\n    }\n  }\n  hs <- rep(0, times = m + 1)\n  for (i in 2:m) {\n    if (hs[i + 1] != 0) next\n    s <- 0\n    b <- 0\n    for (j in 1:n) {\n      if (abs(lst[j]) %% i != 0) next\n      b <- b + 1\n      s <- s + lst[j]\n    }\n    if (b > 0) ls <- c(ls, list(c(i, s)))\n    j <- 2 * i\n    while (j <= m) {\n      hs[j + 1] <- 1\n      j <- j + i\n    }\n  }\n  ls\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285874,"user_id":null,"body":"is.prime <- function(n) n == 2L || all(n %% 2L:max(2,floor(sqrt(n))) != 0)\n\nsum_of_divided <- function (lst) {\n  \n  if(length(lst) == 0)\n    return(list())\n  \n  prime_lst <- 2:max(abs(lst))\n  prime_lst <- prime_lst[sapply(prime_lst, function(x) is.prime(x) && any(lst %% x == 0 ))]\n\n  lapply(prime_lst, function(x) c(x, sum(lst[lst %% x == 0])))\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285875,"user_id":null,"body":"sum_of_divided <- function (lst) {\n  primes <- c()\n  pairs <- list()\n  if (length(lst) > 0) {\n    for (i in 2:max(abs(lst))) {\n      if (all(i %% primes != 0) && any(lst %% i == 0)) {\n        pairs <- c(pairs, list(c(i, sum(lst[(lst %% i == 0)]))))\n        primes <- c(primes, i)\n      }\n    }\n  }\n  return(pairs)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54eb33e5bc1a25440d000891":[{"id":285876,"user_id":null,"body":"decompose <- function(n, upper = n ** 2, i = 0) {\n    if (upper == 0) return(NA)\n    n <- min(n - 1, upper ** .5 %\/% 1)\n    while (i < n && upper > 0)\n    {\n        sub <- decompose(n - i, upper - (n - i) ** 2)\n        if (!is.null(sub)) return(c(sub[which(!is.na(sub))], n - i))\n        i <- i + 1\n    }\n    c()\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285877,"user_id":null,"body":"decompose <- function (n) {\n  if (any(n == 1) | any(duplicated(n))) {\n    NULL\n  } else {\n    k <- n[1]^2 - sum(n[-1]^2)\n    if (k <= 1) {\n      rev(c(n[-1], seq_len(k)))\n    } else {\n      for(i in seq(floor(sqrt(k)), 1)) {\n        out <- Recall(c(n, i))\n        if (is.null(out)) {\n          next\n        } else {\n          break\n        }\n      }\n      out\n    }\n  }\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285878,"user_id":null,"body":"d <- function(n, m) {\n  if(m == 0) return(NA)\n  if(n == 1) return(1)\n  if(n == m * m) return(m)\n  if(n < m * m) return(d(n, as.integer(sqrt(n))))\n  \n  while(m > 0) {\n    trial <- d(n - m * m, m - 1)\n    if(!anyNA(trial)) return(c(trial, m))\n    m <- m - 1\n  }\n  return(NA)\n}\n\ndecompose <- function(n) {\n  trial <- d(n^2, n - 1)\n  if(anyNA(trial)) return(NULL) else return(trial)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285879,"user_id":null,"body":"helper <- function(n,off,input,final_result){\n  \n  if(off==1 & n %in% c(4)){\n    return(NULL)\n  }\n  \n  n2 <- floor(sqrt(n-off))\n  result <- c(input,n2)\n  n_new <- n-n2^2 \n  \n  if(n_new>0){\n    final_result <- helper(n_new,0,result,final_result)\n  }\n  else{\n    \n    if(all(table(result)==1)){\n      \n      if(length(final_result)==0){\n        return(rev(result))\n      }\n      \n    }\n    else{\n      \n      result_red <- result[!result %in% c(1,2)]\n      len_r <- length(result_red)\n      start_n <- sum(input^2)+n\n      \n      for(i in len_r:1){\n        \n        result_2 <- result_red[i:len_r]\n        result_1 <- setdiff(result_red,result_2)\n        n2 <- result_2[1]-1\n        square_sum <- n2*(n2+1)*(2*n2+1)\/6\n        \n        if(square_sum >= start_n-sum(result_1^2)){\n          n <- start_n-(sum(result_1^2)+n2^2)\n          final_result <- helper(n,0,c(result_1,n2),final_result)\n        }\n        \n        if(length(final_result)>0){\n          break\n        }\n        \n      }\n    }\n  }\n  \n  final_result\n}\n\ndecompose <- function (n) {\n  \n  helper(n=n*n ,off=1 , input=c() , final_result=c())\n\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285880,"user_id":null,"body":"decompose <- function (n) { \n  print(sqr_test(n, c(n-1)))\n}\n\nsqr_test <- function (n, v) {\n  s = sum(sapply(v, function(x) x^2))\n  if (n^2 == s){\n    if(sum(duplicated(v)) > 0) {\n      v = v[-(1:max(which(duplicated(v))))]\n      if (length(v) == 0) return(NULL)\n      v[1] = v[1] - 1\n      sqr_test(n, v)\n    }else{\n      v\n    }\n  }else{\n    sq = max(1, floor(sqrt(n^2 - s)))\n    sqr_test(n, c(sq,v))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285881,"user_id":null,"body":"decompose <- function (n) {\n  out <- tryCatch(\n    expr = {\n      i <- 1\n      vec <- c(n - 1)\n      trg <- n ^ 2 - sum(vec ^ 2)\n      i <- i + 1\n      while(trg != 0) {\n        j <- floor(sqrt(trg))\n        if(j >= vec[i - 1]) {\n          i <- i - 2\n          vec <- vec[1:i]\n          vec[i] <- vec[i] - 1\n        } else {\n          vec[i] <- j\n        }\n        trg <- n ^ 2 - sum(vec ^ 2)\n        i <- i + 1\n      }\n      return(sort(vec))\n    },\n    error = function(e) {\n      return(NULL)\n    }\n  )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285882,"user_id":null,"body":"valid_decomposition <- function(n, depth=0) {\n\tcat(rep('\\t', depth), 'n = ', n, ';  depth = ', depth, '\n')\n\n\tsqr_n <- sqrt(n)\n\tfl_sqr_n <- floor(sqr_n)\n\t\n\tif (fl_sqr_n == sqr_n) {\n\t\treturn(fl_sqr_n)\n\t}\n\n\tfor (m in fl_sqr_n:1) {\n\t\t# If the sum of remaining `m ^ 2` in `m:1` is less than the number, `n`, to be decomposed then a valid decomposition is impossible.\n\t\tif (m * (m + 1) * (2 * m + 1) \/ 6 < n) {\n\t\t\treturn(NULL)\n\t\t}\n\t\t\n\t\tdecomp_result <- valid_decomposition(n - m * m, depth + 1)\n\t\tif ((!is.null(decomp_result)) && tail(decomp_result, 1) != m) {\n\t\t\treturn(c(decomp_result, m))\n\t\t}\n\t}\n\treturn(NULL)\n}\n\n\ndecompose <- function (n) { \n\tfor (i in 1:(n - 1)) {\n\t\tremainder <- 2 * i * n - i * i\n\t\tdecomp_result <- valid_decomposition(remainder)\n\t\tif (!is.null(decomp_result)) {\n\t\t\treturn(c(decomp_result, n - i))\n\t\t}\n\t}\n\treturn(NULL)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285883,"user_id":null,"body":"\ndecompose_r <- function (n, ind = 1) { \n  \n  root = (n ^ 0.5) \n  potential_root = floor(n ^ 0.5)\n  \n  if(root == potential_root & ind == 0){\n    print(paste0(\"Match found!\", root))\n    return(root)\n  } \n  \n  for(i in ind:potential_root){\n    new_n = n - (potential_root-i) ^ 2 \n    \n    if (new_n >= n\/2) {\n      return(-1) \n    }\n    \n    output = decompose_r(new_n, 0)\n    if(!(-1 %in% output)){\n      return(c(output, potential_root - i))\n    } \n  }\n}\n\ndecompose <- function(n){\n  output = decompose_r(n ^ 2)\n  if(identical(output, -1)) return(NULL)\n  return(output)\n}\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285884,"user_id":null,"body":"\ndecompose_r <- function (n, ind = 1) { \n  if(n > 1 & n < 4){\n    return(-1)\n  }\n  \n  root = (n ^ 0.5) # 50\n  potential_root = floor(n ^ 0.5)\n  if(root == potential_root & ind == 0){\n    print(paste0(\"Match found!\", root))\n    return(root)\n  } \n  \n  for(i in ind:potential_root){\n    new_n = n - (potential_root-i)^2 \n    \n    if (new_n >= n\/2) {\n      return(-1) \n    }\n    \n    output = decompose_r(new_n, 0)\n    if(!(-1 %in% output)){\n      return(c(output, potential_root - i))\n    } \n  }\n  return(-1)\n}\n\ndecompose <- function(n){\n  output = decompose_r(n ^ 2)\n  if(identical(output, -1)) return(NULL)\n  return(output)\n}\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285885,"user_id":492,"body":"decomposeAux <- function (nb, rac) {\n  if (nb == 0) return(c(rac))\n  i <- rac\n  l <- NULL\n  while (i >= floor(sqrt(nb \/ 2.0) + 1)) {\n    diff = nb - i * i\n    r <- floor(sqrt(diff))\n    l <- decomposeAux(diff, r)\n    if (!is.null(l)) {\n      l <- c(l, i)\n      return(l)\n    }\n    i <- i - 1\n  }\n  return(l)\n}\ndecompose <- function (n) {\n  l = decomposeAux(n * n, floor(sqrt(n * n - 1)))\n  if (!is.null(l))\n    return(tail(l, n=-1))\n  else\n    return(NULL)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54f5f22a00ecc4184c000034":[{"id":285886,"user_id":null,"body":"methods::setClass('fraction', slots = list(n = 'numeric', d = 'numeric'))\n'%+%' <- function(u, v) {\n    s <- gcd(u@d, v@d)\n    n <- (u@n * v@d + v@n * u@d) \/ s\n    d <- u@d * v@d \/ s\n    s <- gcd(n, d)\n    methods::new('fraction', n = n \/ s, d = d \/ s)\n}\ngcd <- function(u, v) ifelse(v == 0, u, Recall(v, u %% v))  \nexpand <- function(x, digit) {\n    k <- 0\n    s <- methods::new('fraction', n = 1, d = 1)\n    while (floor(log10(s@n)) < digit - 1)\n    {\n        k <- k + 1\n        s <- s %+% methods::new('fraction', n = x ** k, d = factorial(k))\n    }\n    c(s@n, s@d)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285887,"user_id":492,"body":"library(MASS)\n# return a vector c(numerator, denominator)\nexpand <- function(x, digit) {\n  gcdi <- function (a, b) {\n    x = abs(a); y = abs(b);\n    while (y != 0) {\n      t <- x; x <- y; y <- t %% y;\n    }\n    x\n  }\n  numSum <- 1; denomSum <- 1\n  x <- MASS:::.rat(x)$rat\n  xNum <- x[[1]]; xDenom <- x[[2]]\n  numTerm <- xNum; denomTerm <- xDenom\n  n = 2\n  while(nchar(toString(numSum)) < digit) {\n    numSum <- numSum * denomTerm + numTerm * denomSum \n    denomSum <- denomTerm * denomSum\n    g <- gcdi(numSum, denomSum)\n    numSum <- as.integer(numSum \/ g) \n    denomSum <- as.integer(denomSum \/ g)\n    numTerm <- numTerm * xNum \n    denomTerm <- denomTerm * xDenom * n\n    n <-n + 1 \n  }\n  c(numSum, denomSum)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285888,"user_id":null,"body":"# return a vector c(numerator, denominator)\nexpand <- function(x, digit) {\nnumerator <- 1\ndenominator <- 1\nk <- 1\nwhile(nchar(as.character(numerator)) < digit){\n  denominator.new <- factorial(k)\n  gbs <- cal.gbs(denominator, denominator.new)\n  numerator <- c(numerator, x**k) %*% (gbs\/c(denominator, denominator.new))\n  \n  gys <- cal.gys(gbs, numerator)\n  numerator <- numerator\/gys\n  denominator <- gbs\/gys\n  k <- k + 1\n}\nc(numerator,denominator)\n}\n\n\ncal.gbs <- function(a,b) as.vector((a*b)\/cal.gys(a,b))\n\n\ncal.gys <- function(a,b) ifelse(b==0, a, Recall(b,a%%b))  \n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285889,"user_id":53,"body":"require(stringi)\n\nexpand <- function(x,digit) {\n  lcm <- function(a,b) c((a*b)\/gcd(a,b))\n  gcd <- function(a,b) ifelse(b==0,a,gcd(b,a%%b))  \n  n <- 1\n  d <- 1\n  k <- 1\n  while (stri_length(as.character(n))<digit) {\n    e <- factorial(k)\n    a <- lcm(d, e)\n    n <- c(n,x**k)%*%(a\/c(d,e))\n    b <- gcd(a, n)\n    n <- n\/b\n    d <- a\/b\n    k <- k+1\n  }\n  c(n,d)\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285890,"user_id":null,"body":"expand <- function(x, digit) {\n  numerator <- 1\n  denominator <- 1\n  k <- 1\n  while(nchar(as.character(numerator)) < digit){\n    denominator.new <- factorial(k)\n    gbs <- cal.gbs(denominator, denominator.new)\n    numerator <- c(numerator, x**k) %*% (gbs\/c(denominator, denominator.new))\n    \n    gys <- cal.gys(gbs, numerator)\n    numerator <- numerator\/gys\n    denominator <- gbs\/gys\n    k <- k + 1\n  }\n  c(numerator,denominator)\n}\n\n\ncal.gbs <- function(a,b) as.vector((a*b)\/cal.gys(a,b))\n\n\ncal.gys <- function(a,b) ifelse(b==0, a, Recall(b,a%%b))  \n\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285891,"user_id":null,"body":"gcd <- function(a, b) if (a %% b) gcd(b, a %% b) else b\nexpand <- function(x, digit) {\n    i <- 0; den <- 1; num <- 0\n    repeat {\n      num <- (num * factorial(i) + x^i * den) \/ gcd(den, factorial(i))\n      den <- den * factorial(i) \/ gcd(den, factorial(i))\n      g_d <- gcd(den, num); i <- i + 1\n      num <- num \/ g_d; den <- den \/ g_d\n      if (nchar(format(num, digits = 22)) >= digit) break }\n    c(num, den)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285892,"user_id":null,"body":"gcd <- function(a, b) if (a %% b) gcd(b, a %% b) else b\nexpand <- function(x, digit) {\n    i <- 0; den <- 1; num <- 0\n    repeat {\n      num <- (num * factorial(i) + x^i * den) \/ gcd(den, factorial(i))\n      den <- den * factorial(i) \/ gcd(den, factorial(i))\n      g_d <- gcd(den, num)\n      num <- num \/ g_d; den <- den \/ g_d\n      i <- i + 1\n      if (nchar(format(num, digits = 22)) >= digit) break }\n    c(num, den)\n}\n\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285893,"user_id":null,"body":"# return a vector c(numerator, denominator)\nfind_factors <- function(x){\n  if(x == 2) return(2)\n  accum = c()\n  min_val = floor(sqrt(x))\n  k = 2\n  \n  while(k <= min_val){\n    if (x %% k == 0) {\n      accum = append(accum, k)\n      accum = append(accum, x\/k)\n      x = x \/ k\n    } else {\n      k = k + 1\n    }\n  }\n  output = sort(unique(accum))\n  output[output != 1]\n}\n\nreduce_to_simplest <- function(num, denom){\n  k = 1\n  min_val = min(num, denom)\n  factors = find_factors(denom)\n  \n  while(k <= length(factors) && factors[k] <= min_val){\n    while(denom %% factors[k] == 0 && num %% factors[k] == 0){\n      denom = denom\/factors[k]\n      num = num\/factors[k]\n    }\n    min_val = min(num, denom)\n    k = k + 1\n  }\n  return(c(num, denom))\n}\n\nexpand <- function(x, digit) {\n  \n  if(x == 0) return(c(1, 1))\n  \n  denom = 1\n  while(x %% 1 != 0){\n    x = x * 10\n    denom = denom * 10\n  }\n  x_new = reduce_to_simplest(x, denom)\n  num = x_new[1]\n  denom = x_new[2]\n  accum_num = 1\n  accum_denom = 1\n  i = 1\n  while(log(accum_num, 10) <= digit - 1){\n    new_num = num ^ i\n    new_denom = (denom ^ i) * factorial(i)\n    \n    ratio = new_denom\/accum_denom\n    if(ratio %% 1 != 0) {\n      stop(\"ERROR!\")\n    }\n    \n    accum_denom = accum_denom * ratio\n    accum_num = accum_num * ratio + new_num\n    \n    x_new = reduce_to_simplest(accum_num, accum_denom)\n    print(x_new)\n    accum_num = x_new[1]\n    accum_denom = x_new[2]\n    i = i + 1\n  }\n  return(c(accum_num, accum_denom))\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285894,"user_id":null,"body":"library(dplyr)\n\nexpand <- function(x, digit) {\nnumerator <- 1\ndenominator <- 1\nk <- 1\nwhile(nchar(as.character(numerator)) < digit){\n  denominator.new <- factorial(k)\n  gbs <- cal.gbs(denominator, denominator.new)\n  numerator <- c(numerator, x**k) %*% (gbs\/c(denominator, denominator.new))\n  \n  gys <- cal.gys(gbs, numerator)\n  numerator <- numerator\/gys\n  denominator <- gbs\/gys\n  k <- k + 1\n}\nc(numerator,denominator)\n}\n\ncal.gbs <- function(a,b) as.vector((a*b)\/cal.gys(a,b))\n\n\ncal.gys <- function(a,b) ifelse(b==0, a, Recall(b,a%%b))  \n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285895,"user_id":null,"body":"cal.gbs <- function(a,b) as.vector((a*b)\/cal.gys(a,b))\n\ncal.gys <- function(a,b) ifelse(b==0, a, Recall(b,a%%b))  \n\nexpand <- function(x, digit) {\n    \nnumerator <- 1\ndenominator <- 1\nk <- 1\nwhile(nchar(as.character(numerator)) < digit){\n    \n  denominator.new <- factorial(k)\n  gbs <- cal.gbs(denominator, denominator.new)\n  numerator <- c(numerator, x**k) %*% (gbs\/c(denominator, denominator.new))\n  \n  gys <- cal.gys(gbs, numerator)\n  numerator <- numerator\/gys\n  denominator <- gbs\/gys\n  k <- k + 1\n}\nc(numerator,denominator)\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55cf3b567fc0e02b0b00000b":[{"id":285896,"user_id":null,"body":"part <- function(n) {\n    prod <- list(1)\n    sapply(2:(n+1), function(k) prod[[k]] <<- unique(unlist(sapply(1:(k-1), function(i) i * prod[[k - i]]))))\n    sprintf('Range: %d Average: %.2f Median: %.2f', max(prod[[n + 1]]) - 1, mean(prod[[n + 1]]), median(prod[[n + 1]]))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285897,"user_id":492,"body":"partAux<-function(n)\n    (help <- function(m, dj = m, acc = c())\n        if(m == 0) return(list(acc)) \n     else do.call(c, lapply(1:min(dj, m), function(i) help(m - i, i, c(acc, i)))))(n)\npart <- function(n) {\n    p <- partAux(n)\n    r <- sort(unique(sapply(p, prod)))\n    rg <- max(r) - min(r)\n    avg <- mean(r)\n    md <- median(r)\n    paste0(\"Range: \", rg, \" Average: \", sprintf(\"%.2f\", avg), \" Median: \", sprintf(\"%.2f\", md))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285898,"user_id":null,"body":"recursive <- function(n, limit = n, numList=c(), upCounter = 1){\n  if(n == 0) {return(list(numList)) }\n  r <- c()\n  for(i in seq_len(min(n, limit))){        \n    r[[length(r)+1]] <-  recursive(n-i, i, c(numList, i), upCounter + 1)\n  }\n  do.call(c, r)\n}\n\npart <- function(n) {\n  prodResult <- sort(unique(sapply(recursive(n), prod)))\n  print(sprintf(\"Range: %d Average: %.2f Median: %.2f\", max(prodResult)-min(prodResult), mean(prodResult), median(prodResult)))\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285899,"user_id":null,"body":"part <- function(n) {\n  enum <- function(n, vhead = n, v=c()){\n    ifelse(n==0, return(list(v)), return(unlist(lapply(seq_len(min(n, vhead)), function(k) enum(n-k, k, c(v, k))),recursive = FALSE)))\n  }\n  \n  p <- unique(sapply(enum(n), prod))\n  return(sprintf(\"Range: %d Average: %.2f Median: %.2f\", abs(diff(range(p))), mean(p), median(p)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285900,"user_id":null,"body":"part <- function(n) {\n  # create recursive function yielding all partitions of n for a specific number of summands (m)\n  partitions <- function(n, m, k=1, parts=list()) {\n    if (n < m * k) {\n      return()\n    }\n    if (m == 1) {\n      parts <- c(n, parts)\n      return(list(parts))\n    }\n    return(c(partitions(n-k, m-1, k,   c(k, unlist(parts))), \n             partitions(n,   m,   k+1, parts)))\n  }\n  \n  # loop through and store results for all sizes of partitions (number of summands)\n  my_parts <- list()\n  for (i in 1:n) {\n    my_parts <- c(my_parts, partitions(n, i))\n  }\n  \n  # compute product of partitions, storing only unique results\n  my_prods <- unique(sapply(my_parts, function(x) prod(unlist(x))))\n  \n  print(paste(\"Range:\", max(my_prods) - min(my_prods), \n              \"Average:\", sprintf(\"%.2f\", round(mean(my_prods), 2)),\n              \"Median:\", sprintf(\"%.2f\", median(my_prods))))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285901,"user_id":null,"body":"next_partition <- function(n, partition) {\n\t# Find the index of the number before first instance of value 1 in `partition`. *Inefficient.*\n\ti <- Position(function(x) x == 1, partition) - 1\n\tif (is.na(i)) {\n\t\ti <- length(partition)\n\t} else if (i == 0) {\n\t\treturn(NULL)\n\t}\n\t\n\tpartition[i] <- partition[i] - 1\n\tsum_left <- sum(partition[1:i])\n\tremainder <- n - sum_left\n\trpt_val <- min(remainder, partition[i])\n\tfinal_val <- remainder %% rpt_val\n\tif (final_val == 0) final_val <- NULL\n\t\n\treturn(c(\n\t\tpartition[1:i],\n\t\trep(rpt_val, remainder %\/% rpt_val),\n\t\tfinal_val\n\t))\n}\n\npart <- function(n) {\n\tpartition <- n\n\t# Pre-allocate `products`. Faster than looping `c(products, ...)`.\n\tproducts <- rep(NA, ceiling(1 \/ (4 * n * sqrt(3)) * exp(pi * sqrt(2 * n \/ 3))))\n\tproducts[1] <- n\n\ti <- 2\n\t\n\twhile (is.vector(partition)) {\n\t\tpartition <- next_partition(n, partition)\n\t\tproducts[i] <- prod(partition)\n\t\ti <- i + 1\n\t}\n\t\n\tproducts <- products[!is.na(products)] # Trim trailing NA.\n\tproducts <- unique(products)\n\t\n\treturn(paste(\n\t\t'Range:', max(products) - min(products),\n\t\t'Average:', format(round(mean(products), 2), nsmall = 2),\n\t\t'Median:', format(round(median(products), 2), nsmall = 2),\n\t\tsep = ' '\n\t))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285902,"user_id":53,"body":"part <- function(n) {\n  xs <- partition(n)\n  l <- length(xs)\n  r <- xs[length(xs)] - xs[1]\n  u <- mean(xs)\n  m <- median(xs)\n  sprintf(\"Range: %d Average: %.2f Median: %.2f\", r, u, m)\n}\n\npartition <- function (n) {\n  xs <- c()\n  arr <- replicate(n, 0)\n  k <- 0\n  arr[k + 1] <- n\n  while (T) {\n    y <- 1\n    i <- 0\n    while (i <= k) {\n      y <- y * arr[i + 1]\n      i <- i + 1\n    }\n    xs[length(xs)+1] <- y\n    r <- 0\n    while (k >= 0 && arr[k + 1] == 1) {\n      r <- r + arr[k + 1]\n      k <- k - 1\n    }\n    if (k < 0) {\n      break\n    }\n    arr[k + 1] <- arr[k + 1] - 1\n    r <- r + 1\n    while (r > arr[k + 1]) {\n      arr[k + 2] <- arr[k + 1]\n      r <- r - arr[k + 1]\n      k <- k + 1\n    }\n    arr[k + 2] <- r\n    k <- k + 1\n  }\n  xs <- sort(unique(xs))\n  xs\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285903,"user_id":null,"body":"part <- function(n) {\n  out <- character(0)\n  enumer <- function(m, k = 0) {\n    if (m <= 1) return(\"1\")\n    for (i in c(rev(seq_len(m)))) {\n      out <- c(out, paste(i, Recall(min(i, n - k - i), k + i)))\n    }\n    out\n  }\n  w <- unique(sapply(strsplit(enumer(n), \" \"), function(a) prod(as.numeric(a))))\n  sprintf(\"Range: %d Average: %0.2f Median: %0.2f\", diff(range(w)), mean(w), median(w))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285904,"user_id":669,"body":"gen_multiples_impl <- function(n) {\n  if (n == 1) {\n    1\n  } else {\n    m <- 1:(n - 1)\n    \n    k <- unlist(sapply(m, function(k) {\n      p <- gen_multiples_memoized(k)\n      (n - k) * p\n    }))\n    \n    unique(c(n, k))\n  }\n}\n\nmemo <- vector(\"list\", 50)\n\ngen_multiples_memoized <- function(n) {\n  if (is.null(memo[[n]])) {\n    memo[[n]] <<- gen_multiples_impl(n)\n  }\n  memo[[n]]\n}\n\npart <- function(n) {\n  m <- gen_multiples_memoized(n)\n\n  sprintf(\"Range: %d Average: %.2f Median: %.2f\",\n          diff(range(m)), mean(m), median(m))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285905,"user_id":null,"body":"combine = function(n){\n  lists=list()\n  \n  for (i in 1:4){\n    lists=append(lists,list(1:i))\n    }\n    \n  if (n>=5){\n    \n    \n    res=c()\n    for (k in 5:n){\n    for (i in 1:k-1){\n        res=c(res,i*lists[k-i][[1]],1:k)\n        res=unique(sort(res))\n        }\n    \n    lists =append(lists,list(res))\n    }\n  }\n  return(lists)\n  \n}\n\n\n\npart <- function(n) {\n    vect=combine(n)[n][[1]]\n    \n    return (paste(\"Range:\",max(vect)-min(vect),'Average:',format(round((mean(vect)),2),nsmall=2),'Median:',format(round((median(vect)),2),nsmall=2)))\n} ","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5629db57620258aa9d000014":[{"id":285906,"user_id":null,"body":"mix <- function(s1, s2) {\n    g1 <- table(strsplit(s1, split = '')[[1]][unlist(gregexpr('[a-z]', s1))])\n    g2 <- table(strsplit(s2, split = '')[[1]][unlist(gregexpr('[a-z]', s2))])\n    x <- sapply(\n        unique(c(names(g1[g1 > 1]), names(g2[g2 > 1]))),\n        function(x) {\n            if (is.na(g2[x]))\n                c(sprintf('1:%s', stringr::str_dup(x, g1[x])), g1[x])\n            else if (is.na(g1[x]))\n                c(sprintf('2:%s', stringr::str_dup(x, g2[x])), g2[x])\n            else if (g1[x] > g2[x])\n                c(sprintf('1:%s', stringr::str_dup(x, g1[x])), g1[x])\n            else if (g2[x] > g1[x])\n                c(sprintf('2:%s', stringr::str_dup(x, g2[x])), g2[x])\n            else\n                c(sprintf('E:%s', stringr::str_dup(x, g1[x])), g1[x])\n        }\n    )\n    if (length(x) == 0) return('')\n    y <- data.frame(mix_strings = x[1,], len = x[2,])\n    stringr::str_c(dplyr::arrange(y, desc(len), mix)$mix, collapse = '\/')\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285907,"user_id":null,"body":"mix <- function(s1, s2) {\nmix0 <- sapply(letters,function(x){\n  freqs <- lengths(gregexpr(x,c(s1,s2)))\n  if((max_f <- max(freqs))==1) return('')\n  paste0(if(diff(freqs)) which.max(freqs) else \"=\",\":\",paste(rep(x,max_f),collapse=\"\"))})\nmix0 <- mix0[mix0 !=\"\"]\npaste(mix0[order(-nchar(mix0),sapply(mix0,substr,1,1))],collapse=\"\/\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285908,"user_id":null,"body":"mix <- function(s1, s2) {\n  to_char_vec <- function(s){\n    s <- gsub(\"[[:punct:]]|[[:upper:]]|\\\\s|[[:digit:]]\", \"\", s)\n    strsplit(s, '')[[1]]\n  } \n  \n  x <- to_char_vec(s1)\n  y <- to_char_vec(s2)\n  z <- to_char_vec(paste(s1, s2))\n  \n  tab_x <- table(factor(x, levels = unique(z)))\n  tab_y <- table(factor(y, levels = unique(z)))\n  \n  idx <- ifelse(\n    tab_x > tab_y,\n    \"1:\", \n    ifelse(tab_x == tab_y, \"E:\", \"2:\")\n  )\n  \n  res <- ifelse(tab_x > tab_y, tab_x, tab_y)\n  res <- res[order(-res, names(res), decreasing = F)]\n  res <- res[res > 1]\n  idx <- idx[names(idx) %in% names(res)]\n  \n  res <- res[order(-res, idx[names(res)])]\n  idx <- idx[names(res)]\n  \n  res_str <- \"\"\n  \n  if(length(res) == 0) return(res_str)\n  else{\n    for (i in 1:length(res)) {\n      if(i != length(res)) slash <- \"\/\"\n      else slash <- \"\"\n      res_str <- paste0(res_str, paste(c(idx[i], rep(names(res)[i], res[i]), slash), collapse = ''))\n    }\n    return(res_str)\n  }\n}\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285909,"user_id":null,"body":"mix <- function(s1, s2) {\n  freqs1 <- find_freqs(s1, 1)\n  freqs2 <- find_freqs(s2, 2)\n  freqs <- merge(freqs1, freqs2, by = \"x\", all = TRUE)\n  freqs[is.na(freqs)] <- 0\n  freqs$Freq <- pmax(freqs$Freq.x, freqs$Freq.y)\n  freqs$pre <- c(rep(\"\", nrow(freqs)))\n  freqs$sym <- c(rep(\"\", nrow(freqs)))\n  for (i in 1:nrow(freqs)) {\n    if (freqs[i,]$Freq.x > freqs[i,]$Freq.y) {\n      freqs[i,]$pre <- 3\n      freqs[i,]$sym <- \"1\"\n    } else if (freqs[i,]$Freq.x < freqs[i,]$Freq.y) {\n      freqs[i,]$pre <- 2\n      freqs[i,]$sym <- \"2\"\n    } else if (freqs[i,]$Freq.x == freqs[i,]$Freq.y) {\n      freqs[i,]$pre <- 1\n      freqs[i,]$sym <- \"E\"\n    }\n  }\n  freqs <- freqs[order(freqs$Freq, freqs$pre, decreasing = TRUE),]\n  freqs <- freqs[freqs$Freq > 1,]\n  str <- c(\"\")\n  if (nrow(freqs) == 0) {\n    return(str)\n  }\n  for (i in 1:nrow(freqs)) {\n    str <- paste0(str, freqs[i,]$sym, \":\", paste(rep(freqs[i,]$x, freqs[i,]$Freq), collapse = \"\"), \"\/\")  \n  }\n  gsub('.{1}$', '', str)\n}\n\nfind_freqs <- function (x, i) {\n  x <- unlist(strsplit(x, split = \"\"))\n  x <- x[x %in% letters]\n  tab <- table(x) > 1\n  if (nrow(tab) > 1) {    \n    x <- as.data.frame(table(x)[!(table(x) %in% tab)])\n    if (nrow(x) > 1) {\n      x$x <- as.character(x$x)\n    } else {\n      as.numeric(x)\n      x <- data.frame(x = rownames(x), Freq = as.numeric(x))\n    }\n  } else {\n    x <- data.frame(x = names(tab), Freq = as.numeric(table(x)))\n  }\n  return(x)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285910,"user_id":null,"body":"require(tidyverse)\nmix <- function(s1, s2) {\n  \n  countLetters <- function(string) {utf8ToInt(string) %>% .[. >= 97 & . <= 122] %>%  table(.) %>% .[. > 1]}\n  \n  letter_count1 <- countLetters(s1)\n  letter_count2 <- countLetters(s2)\n  \n  df <- full_join(tibble(letterint = names(letter_count1), string1 = letter_count1), tibble(letterint = names(letter_count2), string2 = letter_count2), by = \"letterint\") %>%\n    mutate_all(., ~replace_na(.x, 0)) %>% mutate(., maxval = ifelse(string1 > string2, \"1\", \"2\"), sortvals = ifelse(string1 > string2, string1, string2)) %>% mutate(., maxval = ifelse(string1 == string2, \"E\", maxval)) %>%\n    arrange(desc(sortvals), maxval, as.numeric(letterint))\n  \n  if(nrow(df) == 0) return(\"\")\n  result <- c()\n  for(i in 1:nrow(df)) {\n    letter <- rep(intToUtf8(df$letterint[i]), ifelse(df$maxval[i] == 1, df$string1[i], df$string2[i])) %>% paste0(.,collapse=\"\")\n    result <- c(result, paste0(df$maxval[i], \":\", letter))\n  }\n  paste0(result, collapse = \"\/\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285911,"user_id":null,"body":"mix <- function(s1, s2) {\n  #get occurance for each letter in each string and print to list\n  s1_list <- lapply(letters, function(x){return(sum(unlist(strsplit(s1, \"\"))[grep(\"[a-z]\", unlist(strsplit(s1, \"\")))] == x))})\n  s2_list <- lapply(letters, function(x){return(sum(unlist(strsplit(s2, \"\"))[grep(\"[a-z]\", unlist(strsplit(s2, \"\")))] == x))})\n\n  #convert list to vector of numeric\n  v1 <- as.numeric(s1_list)\n  v2 <- as.numeric(s2_list)\n  \n  #combine vectors by having v1 be the first row and v2 be the second row\n  #then transpose, and then convert to data frame\n  df_total <- as.data.frame(t(rbind(v1, v2)))\n  \n  #create a column and assign max values for each row (gets the max occurance between v1 and v2)\n  #this is to allow for easy sorting and filtering to remove letters that don't have any occurences\n  # and to order the data frame based on the highest occurences\n  df_total$max <- apply(df_total, 1, max)\n  #determine if the occurance of each letter is equal between the vectors\n  df_total$equal <- with(df_total, v1 == v2)\n  #add a column of the letters a-z that correspond with each row value\n  df_total$letter <- letters\n  #attach values to each letter. This is to allow for easy sorting\n  df_total$lettervalue <- c(1:26)\n  \n  #remove any letters that did not appear in either string\n  df_total_filtered <- df_total[with(df_total, max > 1),]\n  #add a column \"maxcolumn\" that show which string the max count is found (s1\/v1 or s2\/v2)\n  df_total_filtered$maxcolumn <- apply(df_total_filtered[,c(\"v1\", \"v2\")], 1, which.max)\n  #orders the column by decreasing max values, then rows that don't have equal v1 and v2 values (frequencies in each string since False = 0 and True = 1)\n  #then by whether the amx count is found in s1 or s2 and lastly by alphabetical order\n  df_total_ordered <- df_total_filtered[with(df_total_filtered, order(-max, equal, maxcolumn, lettervalue)),]\n  \n  #itialize i for while loop\n  i <- 1\n  \n  #initialize the output string\n  output_string <- \"\"\n  \n  while (i < nrow(df_total_ordered) + 1){\n    #loop for each row to determine the string component to be added for that letter\n    row <- df_total_ordered[i,]\n    \n    if(row$equal){\n      #if the frequencies for the letter are equal between s1 and s2, paste with \"E:\"\n      output_string <- paste(output_string, \"E:\", paste(rep(row[1,\"letter\"], row[1,\"max\"]), collapse = \"\"), \"\/\", sep = \"\")\n    }\n    else{\n      #else, use the string number in which it appears\n      output_string <- paste(output_string, row$maxcolumn, \":\", paste(rep(row[1,\"letter\"], max(row[,\"max\"])), collapse = \"\"), \"\/\", sep = \"\")\n    }\n    \n    #update i\n    i <- i + 1\n  }\n  \n  #remove the last '\/' in the string\n  output_string <- gsub(\".$\", '', output_string)\n  \n  return(output_string)\n  \n}\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285912,"user_id":null,"body":"mix <- function(s1, s2){\n  s11 <- unlist(strsplit(s1, NULL))\n  s11 <- s11[which(s11 %in% letters)]\n  s11 <- sort(s11)\n  \n  s22 <- unlist(strsplit(s2, NULL))\n  s22 <- s22[which(s22 %in% letters)]\n  s22 <- sort(s22)\n  \n  \n  u1 <- unique(s11)\n  u2 <- unique(s22)\n  u <- append(u1, u2)\n  u <- sort(unique(u))\n  \n  s11 <- factor(s11, levels = u)\n  s22 <- factor(s22, levels = u)\n  \n  st1 <- table(s11)\n  st1 <- as.data.frame(st1)\n  colnames(st1)[1] <- \"level\"\n  colnames(st1)[2] <- \"Freq1\"\n  \n  st2 <- table(s22)\n  st2 <- data.frame(st2)\n  colnames(st2)[1] <- \"level\"\n  colnames(st2)[2] <- \"Freq2\"\n  \n  st <- merge(st1, st2)\n  result <- c()\n  part1 <- c()\n  for(i in 1:nrow(st)){\n    if(st[i, 2] == st[i, 3]){\n      result[i] <- st[i, 2]\n      part1[i] <- \"E:\"\n    }\n    if(st[i, 2] < st[i, 3]){\n      result[i] <- st[i, 3]\n      part1[i] <- \"2:\"\n    }\n    if(st[i, 2] > st[i, 3]){\n      result[i] <- st[i, 2]\n      part1[i] <- \"1:\"\n    }\n    \n  }\n  part1 <- factor(part1, levels = c(\"1:\", \"2:\", \"E:\"))\n  st <- cbind(st, result, part1)\n  \n  for(i in 1:nrow(st)){\n    if(st[i, 4] <=1){\n      st[i, 4] <- NA\n    }\n  }\n  \n  final <- c()\n  if(all(is.na(st$result)) == TRUE){\n    final <- \"\"\n  }\n  else{\n    st <- na.omit(st)\n    st$level <- as.character(st$level)\n    st <- st[order(st$part1), ]\n    st <- st[order(st$result, decreasing = TRUE), ]\n    \n    part2 <- c()\n    for(i in 1:nrow(st)){\n      part2[i] <- paste(rep(st$level[i], times = st$result[i]), collapse = \"\")\n    }\n    st <- cbind(st, part2)\n    st$part1 <- as.character(st$part1)\n    \n    outcome <- paste(st$part1, st$part2, sep = \"\")\n    final <- paste(outcome, collapse = \"\/\") \n  }\n  \n  print(final)\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285913,"user_id":null,"body":"library(stringr)\nlibrary(dplyr)\n\nmix <- function(s1, s2) {\n\tre <- regex('[a-z]')\n\ts1 <- strsplit(s1, '')[[1]] %>% str_extract(re)\n\ts2 <- strsplit(s2, '')[[1]] %>% str_extract(re)\n\t\n\ttally_1 <- table(s1) %>% Filter(function(x) x > 1, .)\n\ttally_2 <- table(s2) %>% Filter(function(x) x > 1, .)\n\t\n\ttally_1 <- tally_1[order(-tally_1, names(tally_1))]\n\ttally_2 <- tally_2[order(-tally_2, names(tally_2))]\n\t\n\tall_letters <- c(names(tally_1), names(tally_2)) %>% unique()\n\t\n\tif (length(all_letters) == 0) return('')\n\t\n\tdf <- data.frame(\n\t\tletter   = all_letters,\n\t\ts1_count = as.numeric(tally_1[all_letters]),\n\t\ts2_count = as.numeric(tally_2[all_letters])\n\t) %>% \n\t\treplace(is.na(.), 0)\n\t\n\tdf$shorthand <- apply(df, 1, function(r) {\n\t\ts1_count <- r['s1_count'][[1]]\n\t\ts2_count <- r['s2_count'][[1]]\n\t\tif (s2_count > s1_count) {\n\t\t\treturn( paste(c('2:', rep(r['letter'], s2_count)), collapse='') )\n\t\t} else if (s1_count > s2_count) {\n\t\t\treturn( paste(c('1:', rep(r['letter'], s1_count)), collapse='') )\n\t\t} else {\n\t\t\treturn( paste(c('E:', rep(r['letter'], s1_count)), collapse='') )\n\t\t}\n\t})\n\t\n\tdf <- arrange(df, -apply(df[c('s1_count', 's2_count')], 1, max), shorthand)\n\t\n\treturn(paste(df$shorthand, collapse = '\/'))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285914,"user_id":null,"body":"mix <- function(s1, s2) {\n    # make list of strings, get only lowercase letters, make a table to count and subset values > 1\n    s1_list <- unlist(strsplit(s1, \"\"));         s2_list <- unlist(strsplit(s2, \"\")) \n    s1_list <- s1_list[s1_list %in% letters];    s2_list <- s2_list[s2_list %in% letters]\n    s1_tabl <- table(s1_list)[table(s1_list)>1]; s2_tabl <- table(s2_list)[table(s2_list)>1] \n    # if not any values > 1, return \"\", if only not values in s1 data <- data.frame(s2_table) else data.frame(s1_table)\n    if ((length(s1_tabl) == 0) | (length(s2_tabl) == 0)) {\n        if (length(s1_tabl) == length(s2_tabl)) return(\"\")\n        if (length(s1_tabl) == 0) data <- data.frame(val = names(s2_tabl), freq = as.numeric(s2_tabl), string = 2)\n        else data <- data.frame(val = names(s1_tabl), freq = as.numeric(s1_tabl), string = 1)\n    } else { # else data <- data.frame(join both data.frames of strings_tables)\n    data_s1 <- data.frame(val = names(s1_tabl), freq = as.numeric(s1_tabl), string = 1)\n    data_s2 <- data.frame(val = names(s2_tabl), freq = as.numeric(s2_tabl), string = 2)\n    data    <- rbind(data_s1, data_s2)\n    }\n    # order data, format equal values, quit repeated values\n    ans <- c()\n    data <- data[order(-data$freq, data$val),]\n    if (length(data[,1]) > 1) for (i in 2:length(data[,1]) - 1) if (data$val[i] == data$val[i+1] & data$freq[i] == data$freq[i+1]) data$string[i] <- \"E\" \n    data <- data[!duplicated(data$val), ]\n    data <- data[order(-data$freq, data$string, data$val),]\n    # format data in the require format\n    for (i in 1:length(data[,1])) ans <- c(ans, paste0(data$string[i], \":\", paste(rep(data$val[i], data$freq[i]), collapse = \"\"), \"\/\"))\n    ans <- paste(ans, collapse = \"\")\n    ans <- substr(ans, 1, nchar(ans)-1)\n}\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285915,"user_id":null,"body":"mix <- function(s1, s2) {\n  library(dplyr)\n  process_single_row <- function(x) {\n    if(x[2] > x[3]) return(paste0(\"1:\", paste0(rep(x[[1]], x[[2]]), collapse = \"\")))\n    if(x[3] > x[2]) return(paste0(\"2:\", paste0(rep(x[[1]], x[[3]]), collapse = \"\")))\n    return(paste0(\"E:\", paste0(rep(x[[1]], x[[3]]), collapse = \"\")))                       \n  }\n  \n  process_input <- function(x) {\n    x %>% \n      gsub(\"[^a-z]\", \"\", .) %>% \n      strsplit(\"\") %>% \n      magrittr::extract2(1) %>% \n      table() %>% \n      Filter(function(x) x > 1, .)\n  }\n  s1_table = process_input(s1)\n  \n  s2_table = process_input(s2)\n             \n  output = plyr::ldply(letters, function(l){\n    s1_val = if(l %in% names(s1_table)) s1_table[[l]] else 0\n    s2_val = if(l %in% names(s2_table)) s2_table[[l]] else 0\n    data.frame(letter = l, s1 = s1_val, s2 = s2_val, max_val = max(s1_val, s2_val), equal = s1_val!=s2_val)\n  }) %>% \n    arrange(desc(max_val), desc(equal), letter) %>%\n    filter(max_val > 0)\n  \n  output %>% \n    mutate(string = apply(output, 1, process_single_row)) %>% \n    group_by(max_val) %>% \n    arrange(string) %>% \n    ungroup() %>% \n    arrange(desc(max_val)) %>% \n    pull(string) %>% \n    paste0(collapse=\"\/\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5672682212c8ecf83e000050":[{"id":285916,"user_id":null,"body":"dbl_linear <- function (n) {\nu <- c(1)\nwhile(length(u) <= n*10){\n  u <- sort(unique(c(u, 2*u+1, 3*u+1)))   \n}\nu[n+1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285917,"user_id":null,"body":"dbl_linear <- function (n){\n  u <- list(1)\n  for(i in 1:15){\n    u[[i+1]] <- c(u[[i]]*2+1,u[[i]]*3+1)\n  }\n  sort(unique(unlist(u)))[n+1]\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285918,"user_id":null,"body":"dbl_linear <- function (n) {\n  new_val <- x <- 1\n  while(length(unique(x)) < 4*n){\n    val <- c(2*new_val+1, 3*new_val+1)\n    x <- c(x, val) \n    new_val <- val\n  }\n  unique(sort(x))[n + 1]\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285919,"user_id":null,"body":"dbl_linear <- function (n) {\n  \n  u <- 1\n  i <- 1\n  j <- 1\n  while (length(u) < n + 1) {\n    y <- 2 * u[i] + 1\n    z <- 3 * u[j] + 1\n    if (y < z) {\n      u[length(u) + 1] <- y\n      i <- i + 1\n    } else if (y > z) {\n      u[length(u) + 1] <- z\n      j <- j + 1\n    } else {\n      u[length(u) + 1] <- y\n      i <- i + 1\n      j <- j + 1\n    }\n  }\n\n  u[n + 1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285920,"user_id":null,"body":"dbl_linear <- function (n) {\n  numbers <- c(1)\n  x = 1\n  y = 1\n  \n  while(length(numbers) <= n) {\n    a = 2*numbers[x] + 1\n    b = 3*numbers[y] + 1\n    \n    if(a>b) {numbers <- c(numbers, b)\n    y <- y + 1}\n    if(a<b) {numbers <- c(numbers, a)\n    x <- x + 1}\n    if (a==b) {numbers <- c(numbers, a)\n    x = x + 1\n    y = y + 1}\n  }\n  \n  numbers[(n + 1)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285921,"user_id":null,"body":"dbl_linear <- function (n) {\n  lst <- c(1)  \n  repeat {\n    x <- c(lst * 2 + 1, lst * 3 + 1)\n    if ((length(lst) > n) && (min(setdiff(x, lst)) > lst[n+1])) {\n      return(lst[n+1])\n    }\n    lst <- sort(union(lst, x))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285922,"user_id":null,"body":"y <- function(x) 2 * x + 1\nz <- function(x) 3 * x + 1\n\ndbl_linear <- function(n) {\n  \n  if (n == 0) return(1)\n \n  \n  v <- 1\n  dbl_count <- 1\n  trp_count <- 1\n    \n  while (length(v) <= n) {\n    dbl <- y(v[dbl_count])\n    trp <- z(v[trp_count])\n    \n    if (dbl > trp) {\n      v <- c(v, trp)\n      trp_count <- trp_count + 1\n      \n    } else if (dbl < trp) {\n      v <- c(v, dbl)\n      dbl_count <- dbl_count + 1\n    \n      } else {\n      v <- c(v, dbl)\n      dbl_count <- dbl_count + 1\n      trp_count <- trp_count + 1\n    }\n  }\n  \n  return(v[n + 1]) \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285923,"user_id":null,"body":"dbl_linear <- function (n) {\n\t# The `u` vector will be populated in batches, each batch twice the length of the one before. `i` is the batch number.\n\ti_max_naiive <- floor(log(n, 2))                 # The number of batches we would need if we could populate `x` in numerical order.\n\tlargest_x <- 0.5 * (3 ^ (i_max_naiive + 1) - 1)  # The largest `x` in the `i_max_naiive`th batch. I.e. `3 * x + 1` applied `i_max_naiive` times.\n\ti_max <- ceiling(log(largest_x + 1, 2) - 1)      # Minimum number of batches required to ensure that the smallest value in the `i_max`th batch exceeds `largest_x`.\n\t\n\tu <- 1\n\tbatch <- u\n\t\n\tfor (i in 1:i_max) {\n\t\tbatch <- c(2 * batch + 1, 3 * batch + 1)\n\t\tu <- c(u, batch)\n\t}\n\t\n\tu <- unique(u)\n\tu <- u[order(u)]\n\treturn(u[n + 1])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285924,"user_id":null,"body":"dbl_linear <- function (n) {\n    u <- c(1); pt2 <- 1; pt3 <- 1\n    for(i in 2:(n+1)){\n      if ((((2* u[pt2]) + 1) == ((3*u[pt3]) + 1)) & (i > 2)) {pt2 <- pt2 + 1}\n      if (((2* u[pt2]) + 1) < ((3*u[pt3]) + 1)) {u[i] <- (2* u[pt2]) + 1; pt2 <- pt2 + 1 }\n      else {u[i] <- (3* u[pt3]) + 1; pt3 <- pt3 + 1 }\n    }\n    u[n+1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285925,"user_id":null,"body":"dbl_linear <- function (n) {\n  i_out <-c(1)\n  i <- 1\n  j <- 1\n  while (length(i_out) <= n){\n   x <- i_out[i] * 2 + 1\n   y <- i_out[j] * 3 + 1\n    if (x <= y) i <- i + 1\n    if (y <= x) j <- j + 1\n  i_out <- c(i_out,min(x,y))\n  }\n  i_out[n+1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56c04261c3fcf33f2d000534":[{"id":285926,"user_id":null,"body":"doubles <- function(maxk, maxn) {\n    sum((tidyr::crossing(k = 1:maxk, n = 1:maxn) %>% dplyr::mutate(v = 1 \/ (k * (n + 1) ** (2 * k))))$v)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285927,"user_id":null,"body":"doubles <- function(maxk, maxn) {\n    sum(sapply(1:maxk, function(k) sapply(1:maxn, function(n) 1 \/ (k * (n + 1) ** (2 * k)))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285928,"user_id":null,"body":"doubles <- function(maxk, maxn) {\n  sum(with(expand.grid(1:maxk, 1:maxn), (1 \/ (Var1 * (Var2+ 1) ** (2 * Var1)))) )\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285929,"user_id":1572,"body":"v <- function(k, n) {\n  1 \/ (k * (n + 1)^(2*k))\n}\n\n\nu <- function(k, maxn) {\n  sum(v(k, 1:maxn))\n}\n\n\ndoubles <- function(maxk, maxn) {\n  sum(sapply(1:maxk, u, maxn = maxn))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285930,"user_id":676,"body":"doubles <- function(maxk, maxn) {\n  s <- 0\n  for (k in 1:maxk) for (n in 1:maxn) s <- s + 1\/(k * (n + 1)^(2*k))\n  s\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285931,"user_id":492,"body":"doubles <- function(maxk, maxn) {\n  k <- 1\n  sm <- 0\n  while (k <= maxk) {\n    n <- 2\n    vk <- 1 \/ (k * 2.0 ^ (2 * k))\n    uk <- vk\n    while (n <= maxn) {\n      vk <- vk * (n \/ (n + 1)) ^ (2 * k)\n      uk <- uk + vk\n      n <- n + 1\n    }\n    sm <- sm + uk\n    k <- k + 1\n  }\n  sm\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285932,"user_id":null,"body":"force_exerted <- function(k, n) {\n  return(1\/(k * (n + 1)^(2 * k)))\n}\n\ndoubles <- function(maxk, maxn) {\n  grid <- matrix(c(0),nrow=maxk, ncol=maxn)\n  for (row in c(1:maxk)){\n    for (column in c(1:maxn)){\n      grid[row,column] <- force_exerted(row, column)\n    }\n  }\n  return(sum(grid))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285933,"user_id":null,"body":"doubles <- function(maxk, maxn) {\n  sum(sapply(1:maxk, function(k) sum(1 \/ (k * (1:maxn + 1)^(2*k)))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285934,"user_id":null,"body":"doubles <- function(maxk, maxn) {\n  u <- function(k, maxn) sum(1 \/ (k * (1:maxn + 1)^(2*k)))\n  sum(sapply(1:maxk, function(x) u(x, maxn)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285935,"user_id":100,"body":"doubles <- function(maxk, maxn) {\n  sum <- 0\n  for (k in 1:maxk) {\n    for (n in 1:maxn) {\n      sum <- sum + 1.0 \/ (k * (n + 1)**(2.0 * k))\n    }\n  }\n  return( sum )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"585894545a8a07255e0002f1":[{"id":285936,"user_id":null,"body":"count_patterns_from <- function(f, l) {\n#   print(f)\n#   print(l)\n\n  available_elements = matrix(1, nrow = 9, ncol = 9)\n  \n  blocks = matrix(c(\n    c(1, 0, 2, 0, 0, 0, 4, 0, 5),\n    c(0, 2, 0, 0, 0, 0, 0, 5, 0),\n    c(2, 0, 3, 0, 0, 0, 5, 0, 6),\n    c(0, 0, 0, 4, 0, 5, 0, 0, 0),\n    c(0, 0, 0, 0, 5, 0, 0, 0, 0),\n    c(0, 0, 0, 5, 0, 6, 0, 0, 0),\n    c(4, 0, 5, 0, 0, 0, 7, 0, 8),\n    c(0, 5, 0, 0, 0, 0, 0, 8, 0),\n    c(5, 0, 6, 0, 0, 0, 8, 0, 9)\n  ), nrow = 9)\n  \n  if (l <= 0 | l > 9) return(0)\n  if (l == 1) return(1)\n  \n  output = find_next_option(which(f==LETTERS), available_elements, blocks, 1, l)\n  output\n}\n\nfind_next_option <- function(current_start, available_elements, blocks, depth, max_depth){\n  \n  \n  current_options = which(available_elements[current_start, ] & blocks[current_start,]==0 )\n  blocks[blocks == current_start] = 0\n  available_elements[, current_start] = 0\n  # print(paste(\"current_start:\", current_start))\n  # print(paste(\"current_options:\", paste(current_options, collapse = \",\")))\n  # print(paste(\"Depth:\", depth))\n  if(depth == max_depth - 1) {\n    return(length(current_options))\n  }\n  \n  sum(sapply(current_options, function(new_start){\n    find_next_option(new_start, available_elements, blocks, depth + 1, max_depth)\n  }))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285937,"user_id":669,"body":"count_patterns_from <- function(f, l) {\n  if (l == 0 || l > 9) {\n    return(0)\n  } else if (l == 1) {\n    return(1)\n  }\n  \n  # There are always as many solutions for l == 9 as there are for l == 8,\n  # because for any eight-node path, the last node is always reachable.\n  if (l == 9) {\n    l <- 8\n  }\n\n  AI <- LETTERS[1:9]\n  \n  blocks   <- new.env(hash = TRUE)\n  unblocks <- new.env(hash = TRUE)\n  \n  for (i in 1:9) {\n    letter <- AI[i]\n    \n    # Here are moves that are directly blocked from a node.\n    blocks[[letter]] <- strsplit(\n      c(\"CGI\", \"H\", \"AGI\", \"F\", \"\", \"D\", \"ACI\", \"B\", \"ACG\")[i], \"\")[[1]]\n    \n    # Here are previous moves that unblock the respective block.\n    unblocks[[letter]] <- strsplit(\n      c(\"BDE\", \"E\", \"BEF\", \"E\", \"\", \"E\", \"DEH\", \"E\", \"EFH\")[i], \"\")[[1]]\n  }\n  \n  next_moves <- function(path) {\n    nodes <- strsplit(path, \"\")[[1]]\n    node <- nodes[length(nodes)]\n    \n    bl <- blocks[[node]]\n    un <- unblocks[[node]]\n    \n    remaining_blocks <- bl[!(un %in% nodes)]\n    \n    AI[!(AI %in% c(nodes, remaining_blocks))]\n  }\n\n  stack <- f\n  total <- 0\n\n  while (length(stack) > 0) {\n    top   <- stack[[1]]\n    stack <- stack[-1]\n\n    fo <- paste0(top, next_moves(top))\n      \n    # For efficiency, we check termination explicitly\n    # at length l - 1.\n    if (nchar(top) == l - 1) {\n      total <- total + length(fo)\n    } else {\n      stack <- c(fo, stack)\n    }\n  }\n  total\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285938,"user_id":null,"body":"rule_i <-list(A=list(B=\"C\",D=\"G\",E=\"I\"),\n             B=list(E=\"H\"),\n             C=list(B=\"A\",E=\"G\",F=\"I\"),\n             D=list(E=\"F\"),\n             E=list(),\n             F=list(E=\"D\"),\n             G=list(D=\"A\",E=\"C\",H=\"I\"),\n             H=list(E=\"B\"),\n             I=list(E=\"A\",F=\"C\",H=\"G\"))\n\nrule_d <- list()\n\nfor(s in names(rule_i)){\n  rule_d[[s]] <- setdiff(LETTERS[1:9],c(s,unname(unlist(rule_i[[s]]))))\n}\n\ncount_patterns_from <- function(start,steps,way=c(),count=0){\n\n  if(steps==9){\n    steps <- 8\n  }\n  if(steps>9 | steps==0){\n    return(0)\n  }\n  if(steps==1){\n    return(count+1)\n  }\n  else{\n    for(block in names(rule_i[[start]])){\n      if(block %in% way){\n        new <- rule_i[[start]][[block]]\n        if(!(new %in% way)){\n          count <- count_patterns_from(new,steps-1,c(way,start),count)\n        }\n      }\n    }\n    for(new in rule_d[[start]]){\n      if(! new %in% way){\n        count <- count_patterns_from(new,steps-1,c(way,start),count)\n      }\n    }\n  }\n  count\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285939,"user_id":null,"body":"#### Inefficient code...\n\n#count_patterns_from <- function(f, l) {\n#  if(l==0 | l>9){\n#    return(0)\n#  } else {\n#    if(l==1){\n#      return(1)\n#    } else {\n#      permutations <- function(n){\n#        if(n==1){\n#          return(matrix(1))\n#        } else {\n#          sp <- permutations(n-1)\n#          p <- nrow(sp)\n#          A <- matrix(nrow=n*p,ncol=n)\n#          for(i in 1:n){\n#            A[(i-1)*p+1:p,] <- cbind(i,sp+(sp>=i))\n#          }\n#          return(A)\n#        }\n#      }\n#\n#      raw<-matrix(LETTERS[permutations(9)],ncol=9)\n#\n#      int<-raw[raw[,1]==f,1:l]\n#      int<-int[!duplicated(int),]\n#      #options = dim(int)[1]\n#      \n#      #unpos = (int[,1]==\"Z\")\n#      for(i in 1:(l-1)){\n#        if(dim(int)[1]==0){break}\n#        if(i<3){\n#          cornerA = (int[,i]==\"A\" & int[,i+1]==\"C\" & int[,1:(i-1)]!=\"B\") | (int[,i]==\"A\" & int[,i+1]==\"G\" & int[,1:(i-1)]!=\"D\") | (int[,i]==\"A\" & int[,i+1]==\"I\" & int[,1:(i-1)]!=\"E\")\n#          cornerC = (int[,i]==\"C\" & int[,i+1]==\"A\" & int[,1:(i-1)]!=\"B\") | (int[,i]==\"C\" & int[,i+1]==\"G\" & int[,1:(i-1)]!=\"E\") | (int[,i]==\"C\" & int[,i+1]==\"I\" & int[,1:(i-1)]!=\"F\")\n#          cornerG = (int[,i]==\"G\" & int[,i+1]==\"A\" & int[,1:(i-1)]!=\"D\") | (int[,i]==\"G\" & int[,i+1]==\"C\" & int[,1:(i-1)]!=\"E\") | (int[,i]==\"G\" & int[,i+1]==\"I\" & int[,1:(i-1)]!=\"H\")\n#          cornerI = (int[,i]==\"I\" & int[,i+1]==\"A\" & int[,1:(i-1)]!=\"E\") | (int[,i]==\"I\" & int[,i+1]==\"C\" & int[,1:(i-1)]!=\"F\") | (int[,i]==\"I\" & int[,i+1]==\"G\" & int[,1:(i-1)]!=\"H\")   \n#          others = (int[,i]==\"B\" & int[,i+1]==\"H\" & int[,1:(i-1)]!=\"E\") | (int[,i]==\"H\" & int[,i+1]==\"B\" & int[,1:(i-1)]!=\"E\") | (int[,i]==\"D\" & int[,i+1]==\"F\" & int[,1:(i-1)]!=\"E\") | (int[,i]==\"F\" & int[,i+1]==\"D\" & int[,1:(i-1)]!=\"E\")\n#        }\n#        else{\n#          cornerA = (int[,i]==\"A\" & int[,i+1]==\"C\" & rowSums(int[,1:(i-1)]!=\"B\")==(i-1)) | (int[,i]==\"A\" & int[,i+1]==\"G\" & rowSums(int[,1:(i-1)]!=\"D\")==(i-1)) | (int[,i]==\"A\" & int[,i+1]==\"I\" & rowSums(int[,1:(i-1)]!=\"E\")==(i-1))\n#          cornerC = (int[,i]==\"C\" & int[,i+1]==\"A\" & rowSums(int[,1:(i-1)]!=\"B\")==(i-1)) | (int[,i]==\"C\" & int[,i+1]==\"G\" & rowSums(int[,1:(i-1)]!=\"E\")==(i-1)) | (int[,i]==\"C\" & int[,i+1]==\"I\" & rowSums(int[,1:(i-1)]!=\"F\")==(i-1))\n#          cornerG = (int[,i]==\"G\" & int[,i+1]==\"A\" & rowSums(int[,1:(i-1)]!=\"D\")==(i-1)) | (int[,i]==\"G\" & int[,i+1]==\"C\" & rowSums(int[,1:(i-1)]!=\"E\")==(i-1)) | (int[,i]==\"G\" & int[,i+1]==\"I\" & rowSums(int[,1:(i-1)]!=\"H\")==(i-1))\n#          cornerI = (int[,i]==\"I\" & int[,i+1]==\"A\" & rowSums(int[,1:(i-1)]!=\"E\")==(i-1)) | (int[,i]==\"I\" & int[,i+1]==\"C\" & rowSums(int[,1:(i-1)]!=\"F\")==(i-1)) | (int[,i]==\"I\" & int[,i+1]==\"G\" & rowSums(int[,1:(i-1)]!=\"H\")==(i-1))   \n#          others = (int[,i]==\"B\" & int[,i+1]==\"H\" & rowSums(int[,1:(i-1)]!=\"E\")==(i-1)) | (int[,i]==\"H\" & int[,i+1]==\"B\" & rowSums(int[,1:(i-1)]!=\"E\")==(i-1)) | (int[,i]==\"D\" & int[,i+1]==\"F\" & rowSums(int[,1:(i-1)]!=\"E\")==(i-1)) | (int[,i]==\"F\" & int[,i+1]==\"D\" & rowSums(int[,1:(i-1)]!=\"E\")==(i-1))\n#        }\n#        unpos = cornerA | cornerC | cornerG | cornerI | others\n#        int <- int[!unpos,]\n#      }\n#\n#      return(dim(int)[1])\n#    }\n#  }\n#}#\n\n\n# So I hardcoded this (thanks to the unefficient code above) in order to see the real solution (shame)\n\ncount_patterns_from <- function(f, l) {\n  m <- matrix(data=c(1,5,31,154,684,2516,7104,13792,13792,1,7,37,188,816,2926,8118,15564,15564,1,8,48,256,1152,4248,12024,23280,23280), nrow=9)\n  if(l==0 | l>9){return(0)}\n  if(f==\"A\" | f==\"C\" | f==\"G\" | f==\"I\"){return(m[l,1])}\n  if(f==\"B\" | f==\"D\" | f==\"F\" | f==\"H\"){return(m[l,2])}\n  if(f==\"E\"){return(m[l,3])}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285940,"user_id":53,"body":"count_patterns_from <- function(f, l) {\n  ifelse(l > 9, 0, list(\n    'A' = c(0,1,5,31,154,684,2516,7104,13792,13792),\n    'B' = c(0,1,7,37,188,816,2926,8118,15564,15564),\n    'C' = c(0,1,5,31,154,684,2516,7104,13792,13792),\n    'D' = c(0,1,7,37,188,816,2926,8118,15564,15564),\n    'E' = c(0,1,8,48,256,1152,4248,12024,23280,23280),\n    'F' = c(0,1,7,37,188,816,2926,8118,15564,15564),\n    'G' = c(0,1,5,31,154,684,2516,7104,13792,13792),\n    'H' = c(0,1,7,37,188,816,2926,8118,15564,15564),\n    'I' = c(0,1,5,31,154,684,2516,7104,13792,13792)\n  )[[f]][l+1])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285941,"user_id":null,"body":"points <- list(\n\tA = list(connected = c('B', 'D', 'E', 'F', 'H'), unblocks = c()),\n\tB = list(connected = c('A', 'C', 'D', 'E', 'F', 'G', 'I'), unblocks = c(A = 'C', C = 'A')),\n\tC = list(connected = c('B', 'D', 'E', 'F', 'H'), unblocks = c()),\n\tD = list(connected = c('A', 'B', 'C', 'E', 'G', 'H', 'I'), unblocks = c(A = 'G', G = 'A')),\n\tE = list(connected = c('A', 'B', 'C', 'D', 'F', 'G', 'H', 'I'), unblocks = c(A = 'I', B = 'H', C = 'G', D = 'F', `F` = 'D', G = 'C', H = 'B', I = 'A')),\n\t`F` = list(connected = c('A', 'B', 'C', 'E', 'G', 'H', 'I'), unblocks = c(C = 'I', I = 'C')),\n\tG = list(connected = c('B', 'D', 'E', 'F', 'H'), unblocks = c()),\n\tH = list(connected = c('A', 'C', 'D', 'E', 'F', 'G', 'I'), unblocks = c(G = 'I', I = 'G')),\n\tI = list(connected = c('B', 'D', 'E', 'F', 'H'), unblocks = c())\n)\n\n\n\npattern_count <- function(pt_id, len, max_len, pts) {\n\tif ((max_len == 0) || (max_len > 9)) {\n\t\treturn(0)\n\t}\n\tif (len >= max_len) {\n\t\treturn(1)\n\t}\n\t\n\t# Unblock digits by appending them to `connected` as appropriate\n\tif (!is.null(pts[[pt_id]]$unblocks)) {\n\t\tfor (i in 1:length(pts[[pt_id]]$unblocks)) {\n\t\t\tif ( !is.null(pts[[ pts[[pt_id]]$unblocks[i] ]]) && !is.null(pts[[ names(pts[[pt_id]]$unblocks)[i] ]]) ) {\n\t\t\t\tpts[[ names(pts[[pt_id]]$unblocks)[i] ]]$connected <- c(pts[[ names(pts[[pt_id]]$unblocks)[i] ]]$connected, pts[[pt_id]]$unblocks[i])\n\t\t\t}\n\t\t}\n\t}\n\t\n\t# Block a digit after it is used.\n\tfor (i in 1:length(pts)) {\n\t\tpts[[i]]$connected <- pts[[i]]$connected[pts[[i]]$connected != pt_id]\n\t}\n\t\n\tn_ptns = 0\n\tfor (connected_pt in pts[[pt_id]]$connected) {\n\t\tn_ptns <- n_ptns + pattern_count(connected_pt, len + 1, max_len, pts[names(pts) != pt_id])\n\t}\n\treturn(n_ptns)\n}\n\n\ncount_patterns_from <- function(f, l) {\n\tpts <- points\n\treturn(pattern_count(f, 1, l, pts))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285942,"user_id":null,"body":"answer_key <- data.frame(\n  'A' = c(1,5,31,154,684,2516,7104,13792,13792),\n  'B' = c(1,7,37,188,816,2926,8118,15564,15564),\n  'C' = c(1,5,31,154,684,2516,7104,13792,13792),\n  'D' = c(1,7,37,188,816,2926,8118,15564,15564),\n  'E' = c(1,8,48,256,1152,4248,12024,23280,23280),\n  'F' = c(1,7,37,188,816,2926,8118,15564,15564),\n  'G' = c(1,5,31,154,684,2516,7104,13792,13792),\n  'H' = c(1,7,37,188,816,2926,8118,15564,15564),\n  'I' = c(1,5,31,154,684,2516,7104,13792,13792)\n)\n  \n\ncount_patterns_from <- function(point, number_of_points) {\n  \n  if (number_of_points == 0 | number_of_points > 9) return(0)\n  \n  return(answer_key[number_of_points, point])\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285943,"user_id":null,"body":"lines <- list(A = list(c('B','C'),c('E','I'),c('D','G')),\n              B = list(c('E','H')),\n              C = list(c('F','I'),c('B','A'),c('E','G')),\n              D = list(c('E','F')),\n              F = list(c('E','D')),\n              G = list(c('E','C'),c('D','A'),c('H','I')),\n              H = list(c('E','B')),\n              I = list(c('F','C'),c('E','A'),c('H','G')))\n\ncount_patterns_from <- function(f, l, used = c()) {\n  if(l==1) return(1)# your code here\n  if(l > 9 || l < 1) return(0)\n  if(l %in% c(8,9)) return(list(A = 13792,B=15564,C=13792,D=15564,E=23280,F=15564,G=13792,H=15564,I=13792)[[f]])\n  \n  nxt <- setdiff(toupper(letters[1:9]),c(f,used))\n  \n  if(!is.null(lines[[f]])){\n    for(j in lines[[f]]){\n      if(all(j %in% nxt)){\n        filt <- match(j[2],nxt)\n        nxt <- nxt[-filt]\n      }\n    }\n  }\n  if(l==2) return(length(nxt))\n  return(sum(sapply(nxt,count_patterns_from,l = l-1,used = c(used,f))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285944,"user_id":null,"body":"rot <- function(l){\n  #function which applies one 90deg anticlockwise rotations to list l, producing rotated list rl\n  rl <- l\n  rl[l == 'A'] <- 'G'\n  rl[l == 'B'] <- 'D'\n  rl[l == 'C'] <- 'A'\n  rl[l == 'F'] <- 'B'\n  rl[l == 'I'] <- 'C'\n  rl[l == 'H'] <- 'F'\n  rl[l == 'G'] <- 'I'\n  rl[l == 'D'] <- 'H'\n  return(rl)\n}\n\nunrot <- function(l){\n  #function which applies one -90deg anticlockwise rotations to list l, producing rotated list rl\n  rl <- l\n  rl[l == 'A'] <- 'C'\n  rl[l == 'B'] <- 'F'\n  rl[l == 'C'] <- 'I'\n  rl[l == 'F'] <- 'H'\n  rl[l == 'I'] <- 'G'\n  rl[l == 'H'] <- 'D'\n  rl[l == 'G'] <- 'A'\n  rl[l == 'D'] <- 'B'\n  return(rl)\n}\n\n\nrotato <- function(l, n){\n  #function which applies n 90deg anticlockwise rotations to list l\n  while(n > 0){\n    l = rot(l)\n    n = n-1\n  }\n  while(n < 0){\n    l = unrot(l)\n    n = n+1\n  }\n  return(l)\n}\n\navailable_nodes <- function(f, u){\n  #Function which provides a list of the valid nodes to move to\n  # f - character representing the starting node\n  # u - currently used vertices\n  #There are three cases due to symmetry\n  #To handle thi symmetry, need two mirrors, or one rotation which can be applied up to three times\n  #Rotation has been decided upon to minimise cases, at the cost of maximising computation time\n  \n  #simplest:\n  if (any(f ==c('E'))) {\n    av = c('A', 'B', 'C', 'D', 'F', 'G', 'H', 'I')\n  }\n  # corner case\n  if (any(f == c('A', 'C', 'I', 'G'))) {\n    key = c('A','C','I','G')\n    n = which(f == key) -1  #how many rotations are required\n    if (n == 3){ #Three rights make a left\n      n = -1\n    }\n    #rotate some things\n    rf = rotato(f, n) #rotated [x]\n    ru = rotato(u, n) \n    rav = c('B', 'D', 'E', 'F', 'H')\n    blockers = c('B', 'E', 'D')\n    blocked  = c('C', 'I', 'G')\n    for (j in 1:3){\n      if (blockers[j] %in% ru){\n        rav[rav == blockers[j]] = blocked[j]\n      }\n    }\n    #unrotate some things\n    av = rotato(rav, -n)\n  }\n  #edge case\n  if (any(f ==c('B', 'F', 'H', 'D'))) {\n    key <-c ('B', 'F', 'H', 'D')\n    n = which(f == key) -1  #how many rotations are required\n    #rotate some things\n    rf = rotato(f, n) #rotated [x]\n    ru = rotato(u, n) \n    rav = c('A', 'C', 'D', 'E', 'F', 'G', 'I')\n    if ('E' %in% ru){\n      rav[rav == 'E'] = 'H'\n    }\n    #unrotate some things\n    av = rotato(rav, -n)\n  }\n  #remove used nodes\n  av = av[!(av %in% u)]\n  return(av)\n}\n\ncount_patterns <- function(f, l, u) {\n  #Recursive function which does all the lifting\n  # f - character representing the starting node\n  # l - length\n  # u - currently used vertices\n  if (l < 0) {\n    return(0)\n  } else if (l == 0){\n        return(1)\n  } else if (l == 1){\n    return(length(available_nodes(f, u)))\n  } else {\n    av = available_nodes(f, u)\n    count = 0\n    for (i in av) {\n      count = count + count_patterns(i, l-1, c(u,f))\n    }\n    return(count)\n  }\n}\n\n\ncount_patterns_from <- function(f, l) {\n  # f - character representing the starting node\n  # l - length\n  if (!(l %in% 1:9)) {\n    return(0)\n  } else if (l == 1) {\n    return(1)\n  } else if (l == 9){ #some pre-computed values to make this efficient enough to pass\n    if (any(f ==c('E'))) { #This make me sad\n    return(23280)\n    } else if (any(f == c('A', 'C', 'I', 'G'))) {\n      return(13792)\n    } else if (any(f ==c('B', 'F', 'H', 'D'))) {\n      return(15564)\n    }\n  }\n  count = count_patterns(f, l-1, c())\n  return(count)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285945,"user_id":null,"body":"count_patterns_from <- function(f, l) {\n  if (l > 9| l == 0) return(0)\n  m <- structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 7, 5, 7, 8, 7, 5, 7, \n              5, 31, 37, 31, 37, 48, 37, 31, 37, 31, 154, 188, 154, 188, 256, \n              188, 154, 188, 154, 684, 816, 684, 816, 1152, 816, 684, 816, \n              684, 2516, 2926, 2516, 2926, 4248, 2926, 2516, 2926, 2516, 7104, \n              8118, 7104, 8118, 12024, 8118, 7104, 8118, 7104, 13792, 15564, \n              13792, 15564, 23280, 15564, 13792, 15564, 13792, 13792, 15564, \n              13792, 15564, 23280, 15564, 13792, 15564, 13792), .Dim = c(9L, \n                                                                         9L), .Dimnames = list(c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \n                                                                                                 \"I\"), c(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\")))\n  m[f, l]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5886e082a836a691340000c3":[{"id":285946,"user_id":645,"body":"rectangle_rotation <- function(a, b) {\n  h <- a %\/% sqrt(2)\n  v <- b %\/% sqrt(2)\n  h * v + (h + 1) * (v + 1) - xor(h %% 2, v %% 2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285947,"user_id":null,"body":"rectangle_rotation <- function(a, b) {\n\n  # \u89e3\u6cd5\u4e8c\uff1a\u89c2\u5bdf\u56fe\u5f62\u4e2d\u6574\u6570\u4ea4\u70b9\u70b9\u9635\u7684\u89c4\u5f8b\n  # https:\/\/files.gitter.im\/myjinxin2015\/raYf\/blob\n  # \u503e\u89d245\u00b0\u7684\u4ea4\u70b9\u884c\uff0c\u4ece\u53f3\u4e0a\u5230\u5de6\u4e0b\uff0c\u7b2c\u4e00\u884c\u4e09\u4e2a\u70b9\uff0c\u76f8\u8dddsqrt(2)\n  # \u4e0b\u4e00\u884c\u4e24\u4e2a\u70b9\uff0c\u76f8\u8dddsqrt(2)\uff0c\u4e0b\u4e00\u884c\u53c8\u662f\u4e09\u4e2a\u70b9\u2026\u2026\n  # \u4e09\u4e2a\u70b9\u7684\u884c\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3asqrt(2)\uff0c\u4e24\u4e2a\u70b9\u7684\u884c\u540c\u6837\n  # \u6240\u4ee5\uff0c\u6240\u6709\u4e09\u4e2a\u70b9\u7684\u884c\uff0c\u6784\u6210\u4e86\u4e00\u4e2a\u5355\u4f4d\u957f\u5ea6\u4e3asqrt(2)\u7684\u70b9\u9635\n  # \u540c\u6837\uff0c\u6240\u6709\u4e24\u4e2a\u70b9\u7684\u884c\uff0c\u4e5f\u6784\u6210\u4e86\u4e00\u4e2a\u5355\u4f4d\u957f\u5ea6\u4e3asqrt(2)\u7684\u70b9\u9635\n  # \u603b\u4ea4\u70b9\u6570\uff0c\u5c31\u662f\u8fd9\u4e24\u4e2a\u77e9\u5f62\u70b9\u9635\u4ea4\u70b9\u6570\u7684\u548c\n\n  # # \u7b2c\u4e00\u4e2a\u70b9\u9635\u7684\u5bbd\u5ea6\u65b9\u5411\u7684\u4ea4\u70b9\u6570\n  # b1 <- ((b \/ 2) %\/% sqrt(2)) * 2 + 1\n  # # \u7b2c\u4e00\u4e2a\u70b9\u9635\u7684\u957f\u5ea6\u65b9\u5411\u7684\u4ea4\u70b9\u6570\n  # a1 <- ((a \/ 2) %\/% sqrt(2)) * 2 + 1\n  # # \u7b2c\u4e00\u4e2a\u70b9\u9635\u7684\u4ea4\u70b9\u6570\n  # n1 <- a1 * b1\n\n  # # \u7b2c\u4e8c\u4e2a\u70b9\u9635\u7684\u5bbd\u5ea6\u65b9\u5411\u7684\u4ea4\u70b9\u6570\n  # b2 <- ((b \/ 2 - sqrt(2) \/ 2) %\/% sqrt(2) + 1) * 2\n  # # \u7b2c\u4e8c\u4e2a\u70b9\u9635\u7684\u957f\u5ea6\u65b9\u5411\u7684\u4ea4\u70b9\u6570\n  # a2 <- ((a \/ 2 - sqrt(2) \/ 2) %\/% sqrt(2) + 1) * 2\n  # # \u7b2c\u4e8c\u4e2a\u70b9\u9635\u7684\u4ea4\u70b9\u6570\n  # n2 <- a2 * b2\n\n  # return(n1 + n2)\n\n\n  # \u53ef\u5c06\u4e0a\u8ff0\u4ee3\u7801\u5316\u7b80\u4e3a\uff1a\n  h <- a %\/% sqrt(2)\n  v <- b %\/% sqrt(2)\n  n1 <- (v %\/% 2 * 2 + 1) * (h %\/% 2 * 2 + 1)\n  n2 <- ((v + 1) %\/% 2) * 2 * ((h + 1) %\/% 2) * 2\n  return(n1 + n2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285948,"user_id":53,"body":"rectangle_rotation <- function(a, b) {\n  x <- floor(as.double(a) \/ sqrt(2))\n  y <- floor(as.double(b) \/ sqrt(2))\n  r <- (x + 1) * (y + 1) + x * y\n  r + r %% 2 - 1\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285949,"user_id":null,"body":"rectangle_rotation <- function(a, b) {\n  \n\n  # \u89e3\u6cd5\u4e8c\uff1a\u89c2\u5bdf\u56fe\u5f62\u4e2d\u6574\u6570\u4ea4\u70b9\u70b9\u9635\u7684\u89c4\u5f8b\n  # https:\/\/files.gitter.im\/myjinxin2015\/raYf\/blob\n  # \u503e\u89d245\u00b0\u7684\u4ea4\u70b9\u884c\uff0c\u4ece\u53f3\u4e0a\u5230\u5de6\u4e0b\uff0c\u7b2c\u4e00\u884c\u4e09\u4e2a\u70b9\uff0c\u76f8\u8dddsqrt(2)\n  # \u4e0b\u4e00\u884c\u4e24\u4e2a\u70b9\uff0c\u76f8\u8dddsqrt(2)\uff0c\u4e0b\u4e00\u884c\u53c8\u662f\u4e09\u4e2a\u70b9\u2026\u2026\n  # \u4e09\u4e2a\u70b9\u7684\u884c\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3asqrt(2)\uff0c\u4e24\u4e2a\u70b9\u7684\u884c\u540c\u6837\n  # \u6240\u4ee5\uff0c\u6240\u6709\u4e09\u4e2a\u70b9\u7684\u884c\uff0c\u6784\u6210\u4e86\u4e00\u4e2a\u5355\u4f4d\u957f\u5ea6\u4e3asqrt(2)\u7684\u70b9\u9635\n  # \u540c\u6837\uff0c\u6240\u6709\u4e24\u4e2a\u70b9\u7684\u884c\uff0c\u4e5f\u6784\u6210\u4e86\u4e00\u4e2a\u5355\u4f4d\u957f\u5ea6\u4e3asqrt(2)\u7684\u70b9\u9635\n  # \u603b\u4ea4\u70b9\u6570\uff0c\u5c31\u662f\u8fd9\u4e24\u4e2a\u77e9\u5f62\u70b9\u9635\u4ea4\u70b9\u6570\u7684\u548c\n\n  # \u7b2c\u4e00\u4e2a\u70b9\u9635\u7684\u5bbd\u5ea6\u65b9\u5411\u7684\u4ea4\u70b9\u6570\n  b1 <- ((b \/ 2) %\/% sqrt(2)) * 2 + 1\n  # \u7b2c\u4e00\u4e2a\u70b9\u9635\u7684\u957f\u5ea6\u65b9\u5411\u7684\u4ea4\u70b9\u6570\n  a1 <- ((a \/ 2) %\/% sqrt(2)) * 2 + 1\n  # \u7b2c\u4e00\u4e2a\u70b9\u9635\u7684\u4ea4\u70b9\u6570\n  n1 <- a1 * b1\n\n  # \u7b2c\u4e8c\u4e2a\u70b9\u9635\u7684\u5bbd\u5ea6\u65b9\u5411\u7684\u4ea4\u70b9\u6570\n  b2 <- ((b \/ 2 - sqrt(2) \/ 2) %\/% sqrt(2) + 1) * 2\n  # \u7b2c\u4e8c\u4e2a\u70b9\u9635\u7684\u957f\u5ea6\u65b9\u5411\u7684\u4ea4\u70b9\u6570\n  a2 <- ((a \/ 2 - sqrt(2) \/ 2) %\/% sqrt(2) + 1) * 2\n  # \u7b2c\u4e8c\u4e2a\u70b9\u9635\u7684\u4ea4\u70b9\u6570\n  n2 <- a2 * b2\n\n  return(n1 + n2)\n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285950,"user_id":null,"body":"rectangle_rotation <- function(a, b) {\n  ld <- (a \/ sqrt(2)) \/ 2\n  sd <- (b \/ sqrt(2)) \/ 2\n  rectExt <- c(2 * floor(ld) + 1, 2 * floor(sd) + 1)\n  rectInt <- c(2 * floor(ld) + ifelse(ld %% 1 < 0.5, 0, 2), 2 * floor(sd) + ifelse(sd %% 1 < 0.5, 0, 2))\n  return(rectExt[1] * rectExt[2] + rectInt[1] * rectInt[2])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285951,"user_id":null,"body":"rectangle_rotation <- function(a, b) {\n  # 1 new unit (NU) equals sqrt(2) upon rotation\n  # 2 rectangles with new units need to be considered for the solution\n  # A with dots on new x' and y' axis\n  # B with dots e.g. at x'=1\/2NU and y' =1\/2NU, and mirrored, respectively\n  # |x'|max=a\/1NU\/2\n  # |y'|max=b\/1NU\/2\n  # for A: A1 = 1 + 2*(|x'|max (without decimals)) for one side\n  # for A: A2 = 1 + 2*(|y'|max (without decimals)) for the second side\n  # Dots in A: A1*A2\n  # For B: B1 = 2*((|x'|max-1\/2*NU) (without decimals)) for one side\n  # for B: B2 = 2*((|y'|max-1\/2*NU) without decimals)) for the second side\n  # Dots in B: B1*B2\n  # |x'|max = x_max, |y'|max = y_max\n  \nNU <- sqrt(2)\nx_max=(a\/NU)\/2\ny_max=(b\/NU)\/2\n\nA1 = (1 + 2*(as.integer(x_max)))\nA2 = (1 + 2*(as.integer(y_max)))\nA=A1*A2\n\nif (x_max - as.integer(x_max) < 0.5){\n  B1 = A1-1\n}else{\n  B1=A1+1\n}\n\nif (y_max - as.integer(y_max) < 0.5) {\n  B2 = A2-1\n}else{\n  B2=A2+1\n}\n\nB = B1*B2\n\nresult=A+B\nreturn(result)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285952,"user_id":null,"body":"rectangle_rotation <- function(a, b) {\n    x <- as.integer(a \/ 2 ^ 0.5)\n    y <- as.integer(b \/ 2 ^ 0.5)\n\n    if (a %% 4 == 0) {\n        n <- (x + 1) * y + x * (y + 1)\n    } else {\n        n <- (x + 1) * (y + 1) + x * y\n    }\n    # I have no idea why this adjustment is necessary, but it works\n    if (n %% 2 == 0) {\n        n <- n + ifelse(a %% 4 == 0, 1, -1)\n    }\n    return(n)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285953,"user_id":null,"body":"SQRT_2 <- sqrt(2)\n\nrectangle_rotation <- function(a, b) {\n\t# Inline with (0, 0).\n\tn_ne <- 2 * floor(a \/ (2 * SQRT_2)) + 1\n\tn_sw <- 2 * floor(b \/ (2 * SQRT_2)) + 1\n\t# Inline with (0.5, 0.5) or (0.5, -0.5).\n\tn_ne_2 <- 2 * ceiling((a - SQRT_2) \/ (2 * SQRT_2))\n\tn_sw_2 <- 2 * ceiling((b - SQRT_2) \/ (2 * SQRT_2))\n\treturn(n_ne * n_sw + n_ne_2 * n_sw_2)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285954,"user_id":421,"body":"rectangle_rotation <- function(a, b) {\n  first = a \/ sqrt(2) \/ 2\n  second = b \/ sqrt(2) \/ 2\n  arr = c(as.integer(first) * 2 + 1, as.integer(second) * 2 + 1)\n  f = ifelse(first %% 1 < 0.5, arr[1] - 1, arr[1] + 1)\n  s = ifelse(second %% 1 < 0.5, arr[2] - 1, arr[2] + 1)\n  arr[1] * arr[2] + f * s\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285955,"user_id":null,"body":"rectangle_rotation <- function(a, b) {\n\n  length_long = (a \/ 2) %\/% sqrt(2) * 2 + 1\n  width_long = (b \/ 2) %\/% sqrt(2) * 2 + 1\n  length_short = (((a \/ 2) - (sqrt(2) \/ 2)) %\/% sqrt(2) + 1) * 2\n  width_short = (((b \/ 2) - (sqrt(2) \/ 2)) %\/% sqrt(2) + 1) * 2\n  \n  return(length_long * width_long + length_short * width_short)\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"50654ddff44f800200000004":[{"id":285956,"user_id":527,"body":"multiply <- function(a, b) {\n  a * b\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285957,"user_id":17,"body":"multiply <- function(a, b) {\n  return(a * b);\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285958,"user_id":null,"body":"multiply <- function(a, b) { a * b } # wtf was that?","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285959,"user_id":null,"body":"multiply <- `*`","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285960,"user_id":null,"body":"multiply <- function(a, b) {\n  print(a * b)\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285961,"user_id":null,"body":"multiply <- function(a, b) {\n  product <- a * b # try to figure out why it doesn't work!\n  return(product)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285962,"user_id":149,"body":"multiply = `*`","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285963,"user_id":null,"body":"multiply <- function(a, b) {\n  m <- a * b\n  return(m)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285964,"user_id":null,"body":"multiply <- function(a, b) {\n  b=a * b # try to figure out why it doesn't work!\n  return(b)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285965,"user_id":null,"body":"multiply <- function(a, b) {\n  return <- a * b\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"50654ddff44f800200000007":[{"id":285966,"user_id":null,"body":"short_long_short <- function(a, b) {\n  v = c(a, b)\n  v = v[ order(nchar(v)) ]\n  \n  paste( c(v[1], v[2], v[1]), collapse='' )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285967,"user_id":null,"body":"short_long_short <- function(a, b) {\n    # Get the length of the arguments a & b\n    a_len = length(strsplit(a, split = \"\")[[1]])\n    b_len = length(strsplit(b, split = \"\")[[1]])\n\n    # Return the pasted string depending on which argument \n    # has more characters\n    if (a_len > b_len) {\n        return(paste0(b, a, b))\n    } else {\n        return(paste0(a, b, a))\n    }    \n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285968,"user_id":null,"body":"short_long_short <- function(a, b) {\n  min_value = min(nchar(a), nchar(b))\n  \n  if(nchar(a)==min_value){\n    return(paste(a,b,a,sep=''))\n  } else{\n    return(paste(b,a,b,sep=''))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285969,"user_id":53,"body":"short_long_short <- function(a, b) {\n  ifelse(nchar(a)>nchar(b),paste(b,a,b,sep=\"\"),paste(a,b,a,sep=\"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285970,"user_id":421,"body":"library(stringr)\n\nshort_long_short <- function(a, b) {\n  ifelse(nchar(a) < nchar(b), str_interp(\"${a}${b}${a}\"), str_interp(\"${b}${a}${b}\"))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285971,"user_id":null,"body":"short_long_short <- function(a, b) {\n    idx <- order(nchar(c(a,b)))\n    paste0(c(a,b)[idx[c(1,2,1)]],collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285972,"user_id":null,"body":"short_long_short <- function(a, b) {\n  \n  if(str_length(a) > str_length(b)){ \n    print(paste(b,a,b, sep = \"\"))\n  } else {\n    print(paste(a,b,a, sep = \"\"))\n  }\n  \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285973,"user_id":50,"body":"short_long_short <- function(a, b) {\n  ifelse(nchar(a) < nchar(b), paste(a,b,a, sep=\"\", collapse=NULL),\n                              paste(b,a,b, sep=\"\", collapse=NULL))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285974,"user_id":null,"body":"short_long_short <- function(a, b) {\n  a_length = nchar(a)\n  b_length = nchar(b)\n  \n  if ( a_length > b_length){\n    return(paste(b,a,b,sep = \"\"))\n  }\n  \n  return(paste(a,b,a,sep = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285975,"user_id":null,"body":"short_long_short <- function(a, b) {\n    if (nchar(a) > nchar(b)){\n      return(paste0(b,a,b, collaspe=\"\"))\n    } else {\n      return(paste0(a,b,a, collaspe=\"\"))\n    }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"50ee6b0bdeab583673000025":[{"id":285976,"user_id":null,"body":"name <- \"codewa.rs\"","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285977,"user_id":null,"body":"a = \"code\"\nb = \"wa.rs\"\nname <- paste(a,b, sep='')","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285978,"user_id":null,"body":"a <- \"code\"\nb <- \"wa.rs\"\nname <- paste0(a,b, sep='')","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285979,"user_id":null,"body":"a = \"code\"\nb = \"wa.rs\"\nname = paste0(a,b, sep='')","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285980,"user_id":null,"body":"a <- \"code\"\nb <- \"wa.rs\"\nname <- paste(a,b, sep='')","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285981,"user_id":527,"body":"'; \u202e'; name = 'codewa.rs'","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285982,"user_id":76,"body":"name = \"codewa.rs\"","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285983,"user_id":482,"body":"a = \"code\"\nb = \"wa.rs\"\nname = paste(a , b, sep='')","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"511f11d355fe575d2c000001":[{"id":285984,"user_id":421,"body":"two_oldest_ages <- function(ages){\n   tail(sort(ages), 2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285985,"user_id":null,"body":"two_oldest_ages <- function(ages){\n   \n  ages <- sort(ages)\n  \n  a <- ages[length(ages)-1]\n  b <- ages[length(ages)]\n  \n \n  \n  c(a,b)\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285986,"user_id":53,"body":"two_oldest_ages <- function(ages) {\n  a <- 0\n  b <- 0\n  for (age in ages) {\n    if (age >= b) {\n      a <- b\n      b <- age\n    } else if (age > a) {\n      a <- age\n    }\n  }\n  c(a, b)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285987,"user_id":null,"body":"two_oldest_ages <- function(ages){\n   sort(ages,decreasing = TRUE)[c(2,1)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285988,"user_id":null,"body":"two_oldest_ages <- function(ages){\n   indices <- order(ages, decreasing = TRUE)\n   ages[indices[2:1]]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285989,"user_id":null,"body":"two_oldest_ages <- function(ages){\n   sort(ages)[c(length(ages)-1,length(ages))]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285990,"user_id":null,"body":"two_oldest_ages <- function(ages){\n  a = rev(sort(ages))\n  c(a[2], a[1])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285991,"user_id":null,"body":"two_oldest_ages <- function(ages){\n  rev(rev(sort(ages))[1:2])\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285992,"user_id":null,"body":"two_oldest_ages <- function(ages){\n  ages <- sort.int(ages,decreasing = FALSE)\n  ages <- ages[c(length(ages)-1,length(ages))]\n  return(ages)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285993,"user_id":null,"body":"two_oldest_ages <- function(ages){\n  sort(ages)[(length(ages)-1):length(ages)]\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"513e08acc600c94f01000001":[{"id":285994,"user_id":2334,"body":"rgb <- function(r, g, b){\n  colors <- sapply(c(r, g, b), function(color) max(0, min(color, 255)))\n  paste(format(as.hexmode(colors), width = 2, upper.case = TRUE), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285995,"user_id":null,"body":"rgb <- function(r, g, b){\n  r <- 255 * (r > 255) + r * (r <= 255) - r * (r < 0 )\n  g <- 255 * (g > 255) + g * (g <= 255) - g * (g < 0 )\n  b <- 255 * (b > 255) + b * (b <= 255) - b * (b < 0 )\n  R <- paste0(sprintf(\"%02X\", r), sprintf(\"%02X\", g), sprintf(\"%02X\", b))\n  print(R)\n  }","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285996,"user_id":53,"body":"library(stringr)\n\nclamp <- function(i, a=0, b=255) {\n  return(max(a, min(b, i)))\n}\n\nsconcat <- function(..., sep='') {\n  paste(..., sep=sep, collapse=sep)\n}\n\nrgb <- function(r, g, b) {\n  hr <- str_to_upper(str_pad(as.character(as.hexmode(clamp(r))),2,\"left\",\"0\"))\n  hg <- str_to_upper(str_pad(as.character(as.hexmode(clamp(g))),2,\"left\",\"0\"))\n  hb <- str_to_upper(str_pad(as.character(as.hexmode(clamp(b))),2,\"left\",\"0\"))\n  return(sconcat(hr, hg, hb))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285997,"user_id":null,"body":"alphabet <- strsplit(\"0123456789ABCDEF\", \"\")[[1]]\n\nconvert <- function(num) {\n  num <- min(255, max(0, num))\n  return(paste0(alphabet[c(num %\/% 16, num %% 16) + 1], collapse = \"\"))\n}\n\nrgb <- function(r, g, b) {\n  # Your code\n  return(paste0(convert(r), convert(g), convert(b)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285998,"user_id":null,"body":"rgb <- function(r, g, b){\n  paste0(format(as.hexmode(sapply(c(r,g,b), function(x) min(255, max(x, 0)))), width = 2, upper.case = TRUE), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":285999,"user_id":null,"body":"cds = c(as.character(0:9), LETTERS[1:6])\nconv <- function(n) {\n    if(n > 255) n <- 255\n    if(n < 0) n <- 0\n    n1 = n %\/% 16 + 1\n    n2 = n %% 16 + 1\n    paste0(cds[n1], cds[n2])\n}\n\nrgb <- function(r, g, b){\n    # Your code\n    paste0(conv(r), conv(g), conv(b))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286000,"user_id":null,"body":"rgb <- function(r, g, b){\n  limit_func = function(val) {\n    if(val > 255) 255\n    else if(val < 0) 0\n    else val\n  }\n  r = limit_func(r)\n  g = limit_func(g)\n  b = limit_func(b)\n  substring(grDevices::rgb(r, g, b, maxColorValue = 255), 2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286001,"user_id":null,"body":"rgb <- function(r, g, b){\n  paste(sapply(c(r,g,b),function(x) gsub(\" \",\"0\",formatC(\n  toupper(as.hexmode(max(0,min(255,x)))),width=2))),collapse=\"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286002,"user_id":null,"body":"rgb <- function(r, g, b){\n  paste0(sprintf(\"%02X\", pmax(pmin(c(r,g,b), c(255,255,255)), c(0,0,0))), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286003,"user_id":null,"body":"rgb <- function(r, g, b){\n  paste0(toupper(sprintf(\"%02x\", pmax(pmin(c(r,g,b), c(255,255,255)), c(0,0,0)))), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"514a6336889283a3d2000001":[{"id":286004,"user_id":null,"body":"get_even_numbers <- function(vec){\n    return(vec[vec%%2 == 0])\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286005,"user_id":53,"body":"get_even_numbers <- function(vec) {\n Filter(function (n) n%%2==0, vec)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286006,"user_id":null,"body":"evens <- function(x) subset(x, x %% 2 == 0)\n\nget_even_numbers <- function(vec){\n    evens(vec)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286007,"user_id":421,"body":"get_even_numbers <- function(vec){\n  vec[vec %% 2 == 0]\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286008,"user_id":null,"body":"get_even_numbers <- function(vec) {\n  Filter(function(x) x%%2 == 0, vec)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286009,"user_id":null,"body":"get_even_numbers <- function(vector){\n  return(vector[vector %% 2 == 0])\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286010,"user_id":null,"body":"get_even_numbers <- function(vec){\n  evens = vec[which(vec %% 2 == 0)]\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286011,"user_id":null,"body":"get_even_numbers <- function(vec){\n vec[round(vec\/2)==vec\/2]\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286012,"user_id":null,"body":"get_even_numbers <- function(vec){\n evens <- subset(vec, vec %% 2 == 0)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286013,"user_id":null,"body":"get_even_numbers <- function(vec){\n  result <- numeric()\n  for(i in vec) {\n    if(i%%2==0) {\n      result <- append(result,i)\n    }\n  }\n  return(result)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"514b92a657cdc65150000006":[{"id":286014,"user_id":null,"body":"solution <- function(number){\n  x = seq(1,number-1)\n  return(sum(x[x%%3==0 | x%%5==0]))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286015,"user_id":null,"body":"solution <- function(number){\n numbers <- 1:(number - 1)\n return(sum(numbers[which(numbers %% 3 == 0 | numbers %% 5 == 0)]))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286016,"user_id":null,"body":"solution <- function(number){\n  numbers <- seq(1,number-1)\n  multiples <- numbers %% 3 == 0 | numbers %% 5 == 0\n  values <- multiples * numbers\n  \n  sum(values)\n }\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286017,"user_id":null,"body":"solution <- function(number){\n  x <- seq_len(max(number - 1, 0))\n  sum(x[!(x %% 3 & x %% 5)] )\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286018,"user_id":null,"body":"solution <- function(number){\n    res<-0\n    nums <- c(1:number-1)\n    sum(nums[nums%%3==0 | nums%%5==0])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286019,"user_id":null,"body":"solution <- function(number){\n  number = number -1\n  n3 = floor(number\/3)\n  n5 = floor(number\/5)\n  n15= floor(number\/15)\n  return(n3*(n3+1)*1.5 + n5*(n5+1)*2.5 - n15*(n15+1)*7.5)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286020,"user_id":null,"body":"solution <- function(number){\n  if(number < 3) { return(0) }\n  else {\n    to_number <- 1:(number-1)\n    return(sum(to_number[to_number %% 3 == 0 | to_number %% 5 == 0]))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286021,"user_id":null,"body":"solution <- function(number){\n  n3 = number %\/% 3\n  n5 = number %\/% 5\n  numbers = unique(c(3 * seq(1,n3), 5 * seq(1, n5)))\n  numbers = numbers[numbers < number]\n  \n  return(sum(numbers))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286022,"user_id":null,"body":"#' Returns the sum of multiples of 3 or 5\n#' that are below input number.\n#'\n#' @param number double; single digit\n#' Number that includes multiples of 3 or 5.\n#'\n#' @return double\n#' The sum of multiples of 3 or 5 inside\n#' the input number.\n#' @export\n#'\n#' @examples\nsolution <- function(number) {\n  if (number < 5) {\n    return(0)\n  }\n\n  seq_3 = seq(3, number - 1, 3)\n  seq_5 = seq(5, number - 1, 5)\n\n  nums = union(seq_3, seq_5)\n  res = sum(nums)\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286023,"user_id":null,"body":"solution <- function(number){\n  v1 = c(1:number-1)\n  v2= v1[v1  %% 3 ==0 | v1 %% 5 ==0]\n  sum(v2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"515e271a311df0350d00000f":[{"id":286024,"user_id":null,"body":"square_sum <- function(nums) {\n  sum(nums ** 2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286025,"user_id":null,"body":"square_sum <- function(nums) {\n x <- sum(nums^2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286026,"user_id":527,"body":"square_sum <- function(nums) {\n  sum(nums ^ 2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286027,"user_id":791,"body":"square_sum <- function(nums) {\n  sqfunction <- unlist( lapply(nums, function (x) { x ** 2 } ))\n  return( sum( sqfunction ) )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286028,"user_id":null,"body":"square_sum <- function(nums) {\n  # your code here\n  return(sum(nums * nums))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286029,"user_id":null,"body":"square_sum <- function(nums) {\n  return(Reduce(\n    init=0,\n    x=nums^2,\n    f=function(a,b) a + b,\n  ))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286030,"user_id":null,"body":"square_sum <- function(nums) {\n  output = 0\n  for (i in nums){\n    output = output + i^2\n    \n  }\n  output\n  # your code here\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286031,"user_id":null,"body":"square_sum=function(nums){sum(nums^2)}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286032,"user_id":null,"body":"square_sum <- function(nums) {\n  total = 0\n  for (n in nums) total + n^2 -> total\n  return (total)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286033,"user_id":null,"body":"square_sum <- function(nums) {\n  now<-sum(nums^2)\n  print(now)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5168bb5dfe9a00b126000018":[{"id":286034,"user_id":null,"body":"solution <- function(s){\n  strsplit(s, split = \"\") %>%    # split the string, result is a list\n  unlist() %>%                   # unlist, result is a character vector\n  rev() %>%                      # reverse the position of each element (character) of the vector\n  paste(collapse=\"\")             # combines each element (character) of the vector into a word\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286035,"user_id":null,"body":"solution <- function(s){\n  x <- unlist(strsplit(s, split=''))\n  paste(rev(x), collapse='')\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286036,"user_id":null,"body":"solution <- function(s){\n   paste(rev(unlist(strsplit(s,''))),collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286037,"user_id":null,"body":"solution <- function(s){\n  ## your code here\n  library(stringi)\n  return(stri_reverse(s))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286038,"user_id":null,"body":"solution <- function(s){\n  ## your code here\n  result <- \"\"\n  for (i in 1:nchar(s))\n  {\n    result <- paste0(substring(s, i, i), result)\n  }\n  result\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286039,"user_id":null,"body":"solution <- function(s){\n  if (length(s)==0) {print(NULL)} else {\n  sapply(lapply(strsplit(s, NULL), rev), paste, sep = \"\", collapse = \"\")\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286040,"user_id":null,"body":"solution <- function(s){\n  ## your code here\n  output <- intToUtf8(rev(utf8ToInt(s)))\n  \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286041,"user_id":null,"body":"solution <- function(s){\n  inverted <- ''\n  for (i in nchar(s):1) {\n    inverted <- paste(inverted, substr(s, i, i), sep='')\n  }\n  print(inverted)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286042,"user_id":null,"body":"solution <- function(s){\n  ## your code here\n  paste(rev(strsplit(s, NULL)[[1]]), collapse=\"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286043,"user_id":null,"body":"solution <- function(s){\n  x = strsplit(s, \"\")[[1]]\n  x = rev(x)\n  final = paste(x, collapse = \"\")\n  return(final)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5174a4c0f2769dd8b1000003":[{"id":286044,"user_id":527,"body":"solution <- sort","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286045,"user_id":null,"body":"solution <- function(nums) {\n    # TODO: \n  if (length(nums) == 0){\n    return(c())\n  }else{\n    return(sort(nums))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286046,"user_id":1015,"body":"solution <- function(nums) {\n    return(sort(nums))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286047,"user_id":null,"body":"solution <- function(nums) {\n  my_length <- length(nums)\n  if (my_length == 1) {\n    return <- nums\n  }\n  if (length(nums) == 0){\n    return(c())\n  }\n  for (i in 1: (my_length - 1)) {\n    for (j in 1:(my_length - i)) {\n      if (nums[j] > nums[j + 1]) {\n        # swap\n        temp <- nums[j]\n        nums[j] <- nums[j + 1]\n        nums[j + 1] <- temp\n      }\n    }\n  }\n  return <- nums\n}\n\nprint(solution(c(5,4,3,2,1)))\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286048,"user_id":null,"body":"solution <- function(nums) {\n    if (length(nums)>1){\n      print(sort(nums))} \n    else {NULL}\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286049,"user_id":null,"body":"solution <- function(nums) {\n  sort(nums)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286050,"user_id":null,"body":"solution <- function(nums) {\n    if ( is.null(nums)) {\n        return(NULL)\n    }\n\n    return (quick_sort(nums))\n\n\n\n}\n\nquick_sort <- function(nums){\n\n    if ( length(nums) <= 1)\n        return (nums)\n    else if ( length(nums) == 2 )\n        return (c(min(nums), max(nums)))\n    else{\n\n        pivote <- (length(nums) \/ 2) + (length(nums) %% 2)\n\n        datos1 <- c()\n        datos2 <- c()\n\n        for (posicion in seq(length(nums)) ){\n            if ( posicion == pivote )\n                next\n\n            if ( nums [posicion] < nums [pivote] ){\n                datos1 <- append(datos1, nums[posicion])\n            } else if (nums [pivote] < nums [posicion]) {\n                datos2<- append(datos2, nums[posicion])\n            }\n        }\n        return (c(quick_sort(datos1), nums[pivote], quick_sort(datos2)))\n    }\n\n    \n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286051,"user_id":null,"body":"solution <- function(nums) {\n  if(is.null(nums)){\n    return()\n  }\n  sortedList<-sort(nums,decreasing=FALSE)  \n  return(sortedList)    \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286052,"user_id":null,"body":"solution <- function(nums) {\n  \n  x <- nums\n  x <- sort(x)\n  return(x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286053,"user_id":null,"body":"solution <- function(nums) {\n  sort(nums,decreasing = FALSE)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"517abf86da9663f1d2000003":[{"id":286054,"user_id":1566,"body":"to_camel_case <- function(text){\n  gsub('[-_](.)','\\\\U\\\\1',text,perl=T)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286055,"user_id":null,"body":"to_camel_case <- function(text){\n  regex = \"[-_]([[:alpha:]])\"\n  return(gsub(regex, \"\\\\U\\\\1\", text, perl = TRUE))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286056,"user_id":null,"body":"to_camel_case <- function(text){\n  return(gsub(\"\\\\_(\\\\w?)\", \"\\\\U\\\\1\", gsub(\"-\", \"_\", text), perl = TRUE))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286057,"user_id":null,"body":"library(stringr)\nto_camel_case <- function(text){\n t1 <- gsub(\"(^|[^[:alnum:]])([[:alnum:]])\", \"\\\\U\\\\2\",text, perl = TRUE)\n  if(str_detect(substr(text,1,1),\"[[:upper:]]\") == TRUE){\n    return(t1)\n  }else{\n    substr(t1,1,1) <- tolower(substr(t1,1,1))\n    return(t1)\n  }\n\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286058,"user_id":null,"body":"capitalize <- function(word){\n  return(paste(toupper(substr(word,1,1)), substr(word,2,nchar(word)), sep = \"\"))\n}\nto_camel_case <- function(text){\n  s <- strsplit(text,\"[-_]\")\n  cap_text <- paste(unlist(lapply(s, capitalize)),collapse = \"\")\n  #check if fist one is capital\n  if(grepl(\"[A-Z]\",substring(text,1,1))){\n    return(cap_text)\n  }else{\n    return(paste(tolower(substr(cap_text,1,1)), substr(cap_text,2,nchar(cap_text)), sep = \"\"))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286059,"user_id":null,"body":"to_camel_case <- function(text){\n  # Your code here\n  gsub(\"[-_](\\\\w)\", \"\\\\U\\\\1\", text, perl = T)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286060,"user_id":null,"body":"to_camel_case <- function(text){\n  # Your code here\n  if (text == \"\") return(\"\")\n  text <- gsub(\"_\", '-', text)\n  t.ls <- strsplit(text, '-')[[1]]\n  t.ls[2:length(t.ls)] <- sapply(t.ls[2:length(t.ls)], function(x) {\n    x <- strsplit(x, '')[[1]]\n    x[1] <- toupper(x[1])\n    paste0(x, collapse = \"\")\n  })\n  paste0(t.ls, collapse = \"\")\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286061,"user_id":null,"body":"library(stringr)\nto_camel_case <- function(text){\n  if (text == \"\") {\n    return(\"\")\n  } else {\n    step1 <- str_replace_all(text, c(\"_\" = \" \", \"-\" = \" \"))\n    step2 <- unlist(strsplit(step1, \" \"))\n    step2a <- step2[1]\n    step2b <- str_to_title(step2[-1])\n    step3 <- paste0(c(step2a, step2b), collapse = \"\")\n    }\n  return(step3)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286062,"user_id":null,"body":"to_camel_case <- function(text) {\n  gsub(pattern=\"[-_](.)\", replacement=\"\\\\U\\\\1\", perl=TRUE, text)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286063,"user_id":null,"body":"upper_first_letter <- function(str){\n  paste0(toupper(substring(str, 1, 1)), tolower(substring(str, 2)))\n}\n\nto_camel_case <- function(text){\n  words <- stringr::str_split(text, pattern = \"[-_]\")[[1]] %>%\n  stringr::str_remove_all(\"-\")\n\n  paste0(c(words[1], upper_first_letter(words[-1])),\n       collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"51b6249c4612257ac0000005":[{"id":286064,"user_id":null,"body":"solution <- function(roman){\n  as.numeric(as.roman(roman))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286065,"user_id":null,"body":"solution <- function(roman){\n        code <- c(\"I\" = 1, \"V\" = 5, \"X\" = 10, \"L\" = 50, \"C\" = 100, \"D\" = 500, \"M\" = 1000)\n        romain <- strsplit(roman, \"\")[[1]]\n        nb <- code[romain]\n        \n        for (i in 1:length(nb)) {\n                if (nb[i] < max(nb[i:length(nb)]))  nb[i] <- - nb[i]\n        }\n        return(sum(nb))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286066,"user_id":null,"body":"solution <- function(roman){\n  \n  numerals = c(M = 1000, D = 500, C = 100, L = 50, X = 10, V = 5, I = 1)\n  values = numerals[unlist(strsplit(roman, \"\"))]\n  \n  add = c(diff(values)<=0, T)\n  return(sum(values[add]) - sum(values[!add]))\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286067,"user_id":null,"body":"solution <- function(roman){\n  n <- as.numeric(as.roman(roman)) \n  print(n)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286068,"user_id":null,"body":"solution <- function(roman){\n roman<-strsplit(roman,\"\")[[1]]\n\n roman[roman==\"I\"]<-\"1\"\n roman[roman==\"V\"]<-\"5\"\n roman[roman==\"X\"]<-\"10\"\n roman[roman==\"L\"]<-\"50\"\n roman[roman==\"C\"]<-\"100\"\n roman[roman==\"D\"]<-\"500\"\n roman[roman==\"M\"]<-\"1000\"\n \n roman<-as.numeric(roman)\n res<-0\n for (i in 1:length(roman)){\n  if (i>1){\n    if (roman[i-1]<roman[i]) res<-res+roman[i]-2*roman[i-1]\n    else{res<-res+roman[i]}\n  }else {res<-res+roman[i]} \n }\n return (res)\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286069,"user_id":null,"body":"solution <- function(roman){\n    # complete the solution by transforming the roman numeral into an integer\n    n <- 0\n    rmn <- c(I = 1, V = 5, X = 10, L = 50, C = 100, D = 500, M = 1000)\n    sub <- c(IV = 4, IX = 9, XL = 40, XC = 90, CD = 400, CM = 900)\n    while(nchar(roman) > 0) {\n        if(substr(roman, 1, min(2, nchar(roman))) %in% names(sub)) {\n            add <- sub[substr(roman, 1, 2)]\n            n <- n + add\n            roman <- substr(roman, 3, nchar(roman))\n        } else {\n            add <- as.numeric(rmn[substr(roman, 1, 1)])\n            n <- n + add\n            if(is.na(add) == TRUE) return(0)\n            roman <- substr(roman, 2, nchar(roman))\n        }\n    }\n    as.numeric(n)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286070,"user_id":null,"body":"solution=function(roman){\n  conv=c('I'=1,'V'=5,'X'=10,'L'=50,'C'=100,'D'=500,'M'=1000)\n  nums=conv[rev(strsplit(roman,'')[[1]])]\n  mult=c(1,sign(diff(nums)))\n\n  if(0%in%mult){\n    for(i in 2:length(mult)){if(mult[i]==0){mult[i]=mult[i-1]}}}\n  return(sum(nums*mult))}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286071,"user_id":null,"body":"solution <- function(roman){\n  # complete the solution by transforming the roman numeral into an integer\n  romanVals <- data.frame(Symbol=c(\"I\",\"V\",\"X\",\"L\",\"C\",\"D\",\"M\"),Value=c(1,5,10,50,100,500,1000))\n  decimalVal=0\n  romanSplit<-strsplit(roman,\"\")[[1]]\n  romanLength <- length(romanSplit)\n  for(i in 1:romanLength) {\n    nextVal=0\n    x=romanSplit[i]\n    if(i<romanLength) nextVal=romanVals[romanVals$Symbol==romanSplit[i+1],]$Value\n    currentVal=romanVals[romanVals$Symbol==x,]$Value\n    if(currentVal<nextVal) currentVal=-currentVal\n        decimalVal=decimalVal+currentVal\n  }\n  return(decimalVal)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286072,"user_id":null,"body":"solution <- function(roman){\n  bigrams <- c('IV'='v',\n               'IX'='x',\n               'XL'='l',\n               'XC'='c',\n               'CD'='d',\n               'CM'='m')\n  symbols <- c('I'=1,\n               'v'=4,\n               'V'=5,\n               'x'=9,\n               'X'=10,\n               'l'=40,\n               'L'=50,\n               'c'=90,\n               'C'=100,\n               'd'=400,\n               'D'=500,\n               'm'=900,\n               'M'=1000)\n  \n   r <- roman\n   mapply(function(x,y) {r <<- gsub(x,y,r)}, names(bigrams), bigrams)\n   r <- unlist(strsplit(r,\"\"))\n   sum(symbols[r])\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286073,"user_id":null,"body":"solution <- function(roman){\n  numbers <- rev(c(1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000))\n  names(numbers) <- rev(c(\"I\", \"IV\", \"V\", \"IX\", \"X\", \"XL\", \"L\", \"XC\", \"C\", \"CD\", \"D\", \"CM\", \"M\"))\n  result <- 0\n  for (i in 1:length(numbers)) {\n    x <- names(numbers[i])\n    repeat {\n      ind <- gregexpr(pattern = x, roman)[[1]][1]\n      if (ind == 1) {\n        result <- result + numbers[i]\n        roman <- substr(roman, 1+nchar(x), nchar(roman))\n      } else {\n        break\n      }\n    }\n  }\n  return(as.numeric(result))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"51b62bf6a9c58071c600001b":[{"id":286074,"user_id":2334,"body":"solution <- function(n){\n  dec <- c(1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1)\n  rom <- c(\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\")\n  res = character()\n  for (i in seq_along(rom)){\n    res <- c(res, rep(rom[i], n%\/%dec[i]))\n    n <- n %% dec[i]\n  }\n  paste(res, collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286075,"user_id":null,"body":"solution <- function(n){\n  # TODO convert int to roman string\n  # built-in R function working up to ~3899\n  return(as.character(as.roman(n)))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286076,"user_id":null,"body":"solution <- function(n){\n  as.character(as.roman(n))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286077,"user_id":null,"body":"solution <- function(n){\n  if(!is.numeric(n) || n %% 1 != 0 || n < 0) {\n    stop(\"'n' must be a positive integer value\")\n  }\n  if (n >= 4e9) {\n    stop(\"'n' must be less than 4e9\")\n  }\n  make_digit <- function(i) {\n    d <- digits[[i]]\n    k <- key[key_groups >= rev(seq_along(digits))[[i]] | key_groups == 0]\n    q <- d %\/% 5\n    p <- d %% 5\n    if (p == 0) {\n      paste(names(k[match(c(p, d - p), k, nomatch = 0)]), collapse = \"\")\n    } else if (p == 4) {\n      paste(names(k[c(1, 2 + q)]), collapse = \"\")\n    } else {\n      paste(names(k[2][q]), paste(rep(names(k[1]), p), collapse = \"\"), sep = \"\")\n    }\n  }\n  # Is extensible to additional values if we wanted to add additional characters\n  # beyond 'M'. No additional logic is needed to add values of c(1, 5) * 1ek\n  # Here I have included values up to 1,000,000,000:\n  # using the unicode character 'combining overscore' \"\\U0305\" (million)\n  # using the unicode character 'combining double overscore' \"\\U033F\" (billion)\n  chars <- c(\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\",\n             \"V\\U0305\", \"X\\U0305\", \"L\\U0305\", \"C\\U0305\", \"D\\U0305\", \"M\\U0305\",\n             \"V\\U033F\", \"X\\U033F\", \"L\\U033F\", \"C\\U033F\", \"D\\U033F\", \"M\\U033F\")\n\n  key <- rep(c(1, 5), length.out = length(chars))\n  names(key) <- chars\n  key_groups <- floor(seq(1, length.out = length(key), by = 0.5))\n  digits <- as.integer(unlist(strsplit(format(n, scientific = FALSE), \"\")))\n  paste(sapply(seq_along(digits),make_digit), collapse = \"\")\n}\n\n\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286078,"user_id":null,"body":"solution <- function(n){\n  # TODO convert int to roman string\n  parts <- rep(\"M\", n %\/% 1000)\n  n <- n - 1000 * (n %\/% 1000)\n  \n  if(n >= 900) {\n    parts <- c(parts, \"CM\")\n    n <- n - 900\n  }\n  \n  if(n >= 500) {\n    parts <- c(parts, \"D\", rep(\"C\", n %\/% 100 - 5))\n    n <- n - 100 * (n %\/% 100)\n  }\n  \n  if(n >= 400) {\n    parts <- c(parts, \"CD\")\n    n <- n - 400\n  }\n  \n  if(n >= 100) {\n    parts <- c(parts, rep(\"C\", n %\/% 100))\n    n <- n - 100 * (n %\/% 100)\n  }\n  \n  if(n >= 90) {\n    parts <- c(parts, \"XC\")\n    n <- n - 90\n  }\n  \n  if(n >= 50) {\n    parts <- c(parts, \"L\", rep(\"X\", n %\/% 10 - 5))\n    n <- n - 10 * (n %\/% 10)\n  }\n  \n  if(n >= 40) {\n    parts <- c(parts, \"XL\")\n    n <- n - 40\n  }\n  \n  if(n >= 10) {\n    parts <- c(parts, rep(\"X\", n %\/% 10))\n    n <- n - 10 * (n %\/% 10)\n  }\n  \n  if(n == 9) {\n    parts <- c(parts, \"IX\")\n    n <- 0\n  }\n  \n  if(n >= 5) {\n    parts <- c(parts, \"V\", rep(\"I\", n - 5))\n    n <- 0\n  }\n  \n  if(n == 4) {\n    parts <- c(parts, \"IV\")\n    n <- 0\n  }\n  \n  stopifnot(n < 4)\n  parts <- c(parts, rep(\"I\", n))\n  \n  return(paste0(parts, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286079,"user_id":785,"body":"solution <- function(n){\n  \n  v <- function(l, v) strrep(l, floor(n \/ v) %% 10)\n  r <- paste0(v(\"M\", 1000), v(\"C\", 100), v(\"X\", 10), v(\"I\", 1))\n  r <- gsub(\"VIV\", \"IX\", gsub(\"IIII\", \"IV\", gsub(\"IIIII\", \"V\", r)))\n  r <- gsub(\"LXL\", \"XC\", gsub(\"XXXX\", \"XL\", gsub(\"XXXXX\", \"L\", r)))\n  r <- gsub(\"DCD\", \"CM\", gsub(\"CCCC\", \"CD\", gsub(\"CCCCC\", \"D\", r)))\n  \n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286080,"user_id":null,"body":"solution <- function(n){\n  symb <- c(\"I\",\"V\",\"X\",\"L\",\"C\",\"D\",\"M\")\ntrsl <- list(c(1),c(1,1),c(1,1,1),c(1,2),c(2),c(2,1),c(2,1,1),c(2,1,1,1),c(1,3))\ndec <- nchar(n)\nres0 <- lapply(seq(dec),function(x) {\n  if (digit <- as.numeric(substr(n,x,x))) \n  symb[trsl[[digit]]+2*(dec-x)]\n  else return(\"\")\n})\npaste(unlist(res0),collapse=\"\")\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286081,"user_id":null,"body":"solution <- function(n){\n  numbers <- rev(c(1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000))\n  names(numbers) <- rev(c(\"I\", \"IV\", \"V\", \"IX\", \"X\", \"XL\", \"L\", \"XC\", \"C\", \"CD\", \"D\", \"CM\", \"M\"))\n  result <- \"\"\n  for (i in 1:length(numbers)) {\n    x <- numbers[i]\n    while (n >= x) {\n      result <- paste0(result, names(numbers[i]))\n      n <- n - x;\n    }\n  }\n  return(result)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286082,"user_id":null,"body":"solution <- function(n){\n  # TODO convert int to roman string\n  as.character(as.roman(n))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286083,"user_id":null,"body":"solution <- function(n){\n  base <- data.frame(Numero = c(\"MMM\", \"MM\", \"M\",\n                                \"CM\", \"DCCC\", \"DCC\", \"DC\", \"D\", \"CD\", \"CCC\", \"CC\", \"C\",\n                                \"XC\", \"LXXX\", \"LXX\", \"LX\", \"L\", \"XL\", \"XXX\", \"XX\", \"X\",\n                                \"IX\", \"VIII\", \"VII\", \"VI\", \"V\", \"IV\", \"III\", \"II\", \"I\"),\n                     Valor = c(3000, 2000, 1000, \n                               900, 800, 700, 600, 500, 400, 300, 200, 100, \n                               90, 80, 70, 60, 50, 40, 30, 20, 10,\n                               9, 8, 7, 6, 5, 4, 3, 2, 1))\n  \n  res <- vector()\n  while (n > 0){\n    div <- apply(base[\"Valor\"], 1, function(x) n %\/% x)\n    pos <- which(div > 0)[1]\n    cant <- div[pos] * base[pos, 2]\n    n <- n - cant\n    res <- paste(res, base[pos, 1], sep = \"\")\n  }\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"51c8991dee245d7ddf00000e":[{"id":286084,"user_id":421,"body":"reverse_words <- function(sentence){\n  paste(rev(unlist(strsplit(sentence, \" \"))), collapse = \" \")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286085,"user_id":null,"body":"reverse_words <- function(sentence){\n  strsplit(sentence, ' ') %>% \n    unlist %>% \n    rev %>% \n    paste(collapse = ' ')\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286086,"user_id":null,"body":"reverse_words <- function(sentence){\n  words = unlist(strsplit(sentence, split = \" \"))\n  return(paste(rev(words), collapse = \" \"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286087,"user_id":null,"body":"library(magrittr)\nlibrary(stringr)\n\nreverse_words <- function(sentence){\n  sentence %>% str_split(\" \") %>% unlist() %>% rev() %>% paste(collapse=\" \")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286088,"user_id":null,"body":"reverse_words <- function(s){\n  paste0(rev(scan(text=s, what = \"\")),collapse = \" \")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286089,"user_id":null,"body":"reverse_words <- function(sentence){\n  sentence <- strsplit(sentence, split = \" \")\n  sentence <- rev(sentence[[1]])\n  sentence <- paste(sentence,collapse = \" \")\n  return(sentence)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286090,"user_id":null,"body":"reverse_words <- function(sentence){\n  sentence <- unlist(strsplit(sentence, \" \"))\n  paste0(sentence[length(sentence):1], collapse = \" \")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286091,"user_id":null,"body":"reverse_words <- function(sentence){\n  list = strsplit(sentence, \" \")\n  print(list[[1]][1])\n  final = \"\"\n  run = FALSE\n  for(x in rev(list[[1]])){\n    if(run == FALSE){\n      run = TRUE\n      final = x\n    }\n    else{\n      final = paste0(final,paste0(\" \",x))\n    }\n    \n  }\n  return (final)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286092,"user_id":null,"body":"reverse_words <- function(sentence){\n  split_words <- strsplit(sentence, split=' ')\n  words_amount <- length(split_words[[1]])\n  reverse_sentence <- split_words[[1]][words_amount:1]\n  paste(reverse_sentence, collapse = ' ')\n}\n\n# https:\/\/www.gastonsanchez.com\/r4strings\/","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286093,"user_id":null,"body":"library(stringr)\nlibrary(magrittr)\n\nreverse_words <- function(sentence){\n  sentence %>% str_split(\" \") %>% unlist() %>% rev() %>% paste(collapse=\" \")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"51dda84f91f5b5608b0004cc":[{"id":286094,"user_id":2334,"body":"solution <- function(n){\n  a <- (n-1)%\/%3\n  b <- (n-1)%\/%5\n  c <- (n-1)%\/%15\n  c(a - c, b - c, c)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286095,"user_id":null,"body":"solution <- function(n){\n  nums<-seq(n-1)\n  c(sum(nums%%3==0&nums%%5!=0), sum(nums%%3!=0&nums%%5==0), sum(nums%%3==0&nums%%5==0))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286096,"user_id":null,"body":"solution <- function(n){\n  num <- 1:(n-1)\n  threes <- length(num[(num\/5)%%1!=0 & (num\/3)%%1==0])\n  fives <- length(num[(num\/5)%%1==0 & (num\/3)%%1!=0])\n  both <- length(num[(num\/5)%%1==0 & (num\/3)%%1==0])\n\n  return(c(threes, fives, both))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286097,"user_id":null,"body":"solution <- function(n){\n  vec <- seq(n-1)\n  m3 <- vec %% 3 ==0\n  m5 <- vec %% 5 ==0\n  return(c(sum(m3 & !m5),sum(!m3 & m5),sum(m3 & m5)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286098,"user_id":null,"body":"solution <- function(n){\n  n <- n - 1\n  a <- (n %\/% 3) - (n %\/% 15) \n  b <- (n %\/% 5) - (n %\/% 15)\n  c <- n %\/% 15 \n  c(a, b, c)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286099,"user_id":null,"body":"solution <- function(n){\nt <- (1:(n-1))\nt <- t[t%%5!=0] \na <- sum(t%%3==0)\n\nf <- (1:(n-1))\nf <- f[f%%3!=0]\nb <- sum(f%%5==0)\n\ntf <- (1:(n-1))\ntf <- tf[tf%%3==0]\nc <- sum(tf%%5==0)\n  \nreturn(c(a,b,c))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286100,"user_id":53,"body":"solution <- function(n) {\n  a <- floor((n - 1) \/ 3)\n  b <- floor((n - 1) \/ 5)\n  c <- floor((n - 1) \/ 15)\n  c(a - c, b - c, c)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286101,"user_id":null,"body":"solution <- function(n) {\n  fizz <- (n - 1) %\/% 3\n  buzz <- (n - 1) %\/% 5\n  fizzbuzz <- (n - 1) %\/% 15\n  c(fizz - fizzbuzz, buzz - fizzbuzz, fizzbuzz)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286102,"user_id":null,"body":"solution <- function(n){\n  v <- c(1:(n-1))\n  m35 <- v[(v%%3==0) & (v%%5==0)]\n  m3n5 <- v[(v%%3==0) & (v%%5!=0)]\n  m5n3 <- v[(v%%3!=0) & (v%%5==0)]\n  c(length(m3n5), length(m5n3), length(m35))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286103,"user_id":421,"body":"solution <- function(n){\n  a = (n - 1) %\/% 3\n  b = (n - 1) %\/% 5\n  c = (n - 1) %\/% 15\n  c(a - c, b - c, c)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"51e04f6b544cf3f6550000c1":[{"id":286104,"user_id":421,"body":"beeramid <- function(bonus, price){\n  level = 0\n  n = 1\n  i = 1\n  while(n <= bonus %\/% price){\n    i = i + 1\n    n = n + i ^ 2\n    level = level + 1\n  }\n  level\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 20:26:10"},{"id":286105,"user_id":null,"body":"beeramid <- function(bonus, price){\n  if (bonus <=0) return(0)\n  n <- floor((3 * bonus \/ price)^(1 \/ 3))\n  repeat {\n    if (price * n * (n + 1) * (2 * n + 1) \/ 6 <= bonus) {\n      return(n)\n    }\n    n <- n-1\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 20:26:12"},{"id":286106,"user_id":null,"body":"beeramid <- function(bonus, price){\n  beers <- bonus%\/%price\n  total <- 0\n  n <- 0\n  while (total < beers){\n    n <- n + 1\n    newTotal <- total + n**2\n    if (newTotal < beers){\n      total <- newTotal\n    } else if (newTotal == beers){\n      return(n)\n    } else {\n      return(n-1)\n    }\n  }\n  return(n)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286107,"user_id":null,"body":"beeramid <- function(bonus, price){\n n = bonus\/price\nc = 1\nwhile(n >= c^2){\n  n = n - c^2  \n  c = c + 1 \n}\nc - 1\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286108,"user_id":null,"body":"beeramid <- function(bonus, price){\n level=0\n total_beer=0\n price_total=0\n  \n if (bonus>=price) { \n  while(bonus>=price_total) {\n  level=level+1\n  total_beer=(total_beer+(level*level))\n  price_total=total_beer*price\n} \n  print(level-1)}else {print(level)}\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286109,"user_id":null,"body":"beeramid <- function(bonus, price){\n# 1 + 4 + 9 + ... + n^2 = n(n+1)*(2n+1)\/6  = n^3\/3 +n^2\/2n\/6\nifelse(bonus>0,floor(Re(polyroot(z = c(-bonus\/price,1\/6,1\/2,1\/3))[1])), 0  )  \n}\n\n#print(beeramid(bonus,price))\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286110,"user_id":null,"body":"beeramid <- function(bonus, price){\n  cans <- (bonus - (bonus %% price)) \/ price\n  count <- 1\n  \n  while(cans >= count ** 2){\n    cans = cans - count ** 2\n    count = count + 1\n  }\n  \n  count - 1\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286111,"user_id":null,"body":"get_price <- function(n_levels, can_price){\n  can_price * n_levels*(n_levels+1)*(2*n_levels+1)\/6\n}\n\n\n\nbeeramid <- function(bonus, price, max_iter = 15000){\n  if(bonus < price) return(0)\n  max(which(get_price(1:max_iter, price) <= bonus))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286112,"user_id":null,"body":"beeramid <- function(bonus, price){\ncans <- bonus\/price \nlevels <- 0\nwhile(cans > 0){\n  levels = levels + 1\n  cansPerLevel <- levels^2\n  cans = cans - cansPerLevel\n}\n  if(cans < 0 & levels > 0){\n    return(levels-1)\n  }else {\n  return(levels)  \n  }\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286113,"user_id":null,"body":"beeramid <- function(bonus, price){\n  if(bonus < 0) return(0)\n  remain <- floor(bonus\/price)\n  count <- 0\n  while(remain >= 0) {\n    remain <- remain - (count+1)**2\n    count <- count+1\n    }\n  return(count - 1)\n    \n \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"51f41b98e8f176e70d0002a8":[{"id":286114,"user_id":421,"body":"sortme <- sort","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286115,"user_id":null,"body":"sortme <- function(names) {\n  return(names[order(names)])\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286116,"user_id":null,"body":"library(tidyverse)\nsortme <- function(names){\n  names[order(names)]\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286117,"user_id":null,"body":"sortme <- function(names){\n  names[order(names)]\n  \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286118,"user_id":null,"body":"sortme <- function(names){\n  return(sort(names))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286119,"user_id":527,"body":"sortme <- function(names) sort(names)","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"51fd6bc82bc150b28e0000ce":[{"id":286120,"user_id":null,"body":"no_odds <- function(values){\nvalues<- values[values %% 2 == 0]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286121,"user_id":null,"body":"no_odds <- function(values){\n    values[lapply(values, \"%%\", 2) == 0]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286122,"user_id":null,"body":"no_odds <- function(values){\n  \n  even_vector = c()\n  \n  for (v in values) {\n    if (v %% 2 == 0) {\n      even_vector = c(even_vector, v)\n    }\n  }\n  \n  if (length(even_vector) == 0) {\n    return (as.numeric())\n  } else {\n    return (even_vector)\n  }\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286123,"user_id":null,"body":"no_odds <- function(values){\n if(length(values) != 0){\n   return(values[values %% 2 == 0])\n }\n else {return(numeric())}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286124,"user_id":null,"body":"no_odds <- function(values){\n  values[values - (values %\/% 2 * 2) != 1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286125,"user_id":null,"body":"no_odds <- function(values){\n  ans = numeric()\n  for( i in values){\n    if(i %% 2 == 0){\n        ans = c(ans, i)\n    }\n  }\n      return(ans)\n}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286126,"user_id":null,"body":"no_odds <- function(values){\n  list<-c(numeric())\n  for(i in values){\n    if(as.integer(i\/2)==i\/2){\n   list<-c(list, i)\n    }\n  }\n  return(list)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286127,"user_id":null,"body":"no_odds <- function(values){\n output <- numeric()\n for (number in values){\n   if (number%%2 == 0){\n    output <- append(output, number)  \n   }\n }\n  return (output)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286128,"user_id":null,"body":"no_odds <- function(values){\n  values <- values[values %% 2 ==0] \n  return(values)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286129,"user_id":null,"body":"no_odds <- function(values){\n  \n  evens <-numeric() # creates an empty vector that stores all even value\n  \n  for (i in values){\n     if (i %% 2 == 0){\n      evens <-c(evens,i) # appends teh value if it is even\n    }\n    \n  }\n   \n  print(evens)\n \n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"523a86aa4230ebb5420001e1":[{"id":286130,"user_id":null,"body":"anagrams <- function(word, words) {\n  sortword <- function(w) paste0(sort(unlist(strsplit(w, ''))), collapse = '')\n  words[ sortword(word) == sapply(words, sortword) ]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286131,"user_id":null,"body":"anagrams <- function(word, words){\n  sorter <- function(x) paste(sort(unlist(strsplit(x,\"\"))),collapse=\"\")\n  w      <- sorter(word)\n  ws     <- sapply(words,sorter)\n  words[which(ws == w)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286132,"user_id":null,"body":"#' Returns words in a character vector\n#' if word is anagram of input word.\n#'\n#' @param word character\n#' An example word for anagram search.\n#' @param words character; vector\n#' A vector with words that may include anagrams.\n#'\n#' @return character(0); character\n#' Empty character if words are not found,\n#' a vector of words otherwise.\n#' @export\n#'\n#' @examples\nanagrams <- function(word, words) {\n  # Compares words using \"table\" fun.\n  word_table = table(strsplit(word, split = \"\"))\n  words_test = sapply(words, function(x) {\n    item = table(strsplit(x, split = \"\"))\n    identical(word_table, item)\n  })\n\n  res = words[words_test]\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286133,"user_id":null,"body":"anagrams <- function(word, words){\n  str_sort <- function(x) {\n    sapply(lapply(strsplit(x, NULL), sort), paste, collapse = \"\")\n  }\n  words[str_sort(words) == str_sort(word)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286134,"user_id":null,"body":"library(magrittr)\n\nanagrams <- function(word, words){\n  char  <- word  %>% strsplit(split = \"\") %>% unlist() %>% sort()\n  chars <- words %>% strsplit(split = \"\") %>% lapply(sort)\n  words[sapply(chars, identical, y = char)]\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286135,"user_id":null,"body":"anagrams <- function(word, words){\n  w1 <- sort(strsplit(word,\"\")[[1]])\n  wn <- lapply(strsplit(words,\"\"),sort)\n  words[which(unlist(lapply(wn,function(x) all(x==w1))))]\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286136,"user_id":null,"body":"anagrams <- function(word, words){\n  \n  sorted_word <- sort(unlist(strsplit(word, split = \"\")))\n  \n  words %>% \n    strsplit(split = \"\") %>% \n    lapply(sort) %>% \n    lapply(FUN = function(x) identical(x, sorted_word)) %>%\n    unlist() %>% \n    words[.]\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286137,"user_id":null,"body":"anagrams <- function(word, words) {\n  ind <- unlist(lapply(words, function(x) \n                            all(sort(unlist(strsplit(x, \"\"))) == \n                                sort(unlist(strsplit(word, \"\"))))))\n  words[ind] \n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286138,"user_id":null,"body":"anagrams <- function(s, words) {\n  # Returns a chr vector which is the subset of \"words\" that are anagrams of \"s\"\n  \n  # Split input s into its characters and count occurrances of each letter\n  s_tab <- table(strsplit(s, \"\")[[1]])\n  \n  # Split input words into their characters, count occurrances of each letter\n  words_chars <- strsplit(words, \"\")\n  words_tabs <- lapply(words_chars, table)\n  \n  # Compare the table objects of each word to the table for s, subset and return\n  same_test <- sapply(words_tabs, identical, y = s_tab)\n  words[same_test]\n  \n}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286139,"user_id":null,"body":"anagrams <- function(word, words){\n  word <- paste0(sort(unlist(strsplit(word,''))),collapse='')\n  return(words[which(sapply(words,function(x)paste0(sort(unlist(strsplit(x,''))),collapse='')==word))])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"523b4ff7adca849afe000035":[{"id":286140,"user_id":null,"body":"greet <- function() {\n    return(\"hello world!\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286141,"user_id":1365,"body":"greet <- function() {\n  \"hello world!\"\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286142,"user_id":527,"body":"greet = function() {\n  'hello world!'\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286143,"user_id":null,"body":"greet <- function() print(\"hello world!\")","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286144,"user_id":785,"body":"#' greet\n#'\n#' This is the classic 'Hello World' program.  'Hello World' is usually one\n#' of the first languages to learn. \n#'\n#' By default this function returns \"hello world!\".  The greeting word \"Hello\",\n#' the audience \"World\", and the punctuation \"!\" are default parameters in this\n#' function.  The user can change any parts of this greeting without re-writing\n#' the function. \n#'\n#' This version of the function is documented in Roxygen format  \n#'\n#' @param greetingWord the initial word or phrase of the salutation.  \n#' @param audience the trailing word or phrase of the salutation. \n#' @param punctuation the punctuation at the end.\n#' @examples\n#'\n#' greet()\n#' \n#'\n#' @export\n#'\ngreet <- function (greetingWord = \"hello\", \n                   audience = \"world\", \n                   punctuation = \"!\"){\n\n  return(paste0(greetingWord, \" \",\n                audience,\n                punctuation))\n                \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286145,"user_id":527,"body":"'\u202e';greet<-function(){'hello world!'}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286146,"user_id":null,"body":"greet <- function() {\n    # 'If it works, it works' \n    \"hello world!\"\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286147,"user_id":null,"body":"# Write a function `greet` that returns \"hello world!\"\n\ngreet <- function(input) {\n  print(\"hello world!\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286148,"user_id":null,"body":"greet <- function()\n  return(\"hello world!\")\n# Write a function `greet` that returns \"hello world!\"","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286149,"user_id":null,"body":"# Write a function `greet` that returns \"hello world!\"\n\ngreet <- function(name = \"\"){\n  if (name == \"\"){\n  return (\"hello world!\")\n    }\n  else{\n    return(name + \" hello world!\")\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"523f5d21c841566fde000009":[{"id":286150,"user_id":527,"body":"array_difference = function(a, b) {\n  a[!(a %in% b)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286151,"user_id":669,"body":"array_difference <- function(a, b) {\n  a[!(a %in% b)]\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286152,"user_id":null,"body":"array_difference = function(a, b) {\n  return(a[!(a %in% b)])\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286153,"user_id":null,"body":"array_difference <- function(a, b) {\n        if (length(a) == 0) return(numeric())\n        if (length(b) == 0) return(a)\n        \n        x <- rep(FALSE, length(a))\n        t <- c()\n        for (i in 1:length(b)) {\n                for (j in 1:length(a)){\n                        t<- c(t,a[j] == b[i])\n                }\n                x <- x | t\n                t <- c()\n        }\n        a[!x]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286154,"user_id":null,"body":"array_difference = function(a, b) {\n  newA <- vector()\n  \n  if (length(a) == 0 || length(b) == 0){\n    return(a)\n  }\n  \n  for (i in 1:length(a)){\n    keep <- TRUE\n    for (j in 1:length(b)){\n      if (a[i] == b[j]){\n        keep <- FALSE\n      }\n    }\n    if (keep) {\n      newA <- c(newA, a[i])\n    }\n  }\n  return(newA)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286155,"user_id":null,"body":"\nlibrary(tidyverse)\narray_difference = function(a, b) {\n  a %>% keep(~!.x %in% b)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286156,"user_id":null,"body":"array_difference = function(a, b) {\n  print(a[!(a %in% b)])\n}\n\n#print(!(a %in% b)) \n#print(a[!(a %in% b)])","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286157,"user_id":null,"body":"array_difference = function(a, b) {\n  if (length(a) == 0) return(numeric())\n  if (length(b) == 0) return(a)\n  a[!a %in% b]\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286158,"user_id":null,"body":"array_difference = function(a, b) {\n  \n  if (length(b)==0) return(a)\n  else {\n    for (i in 1:length(b)) a <- a[a!=b[i]] \n    return (a)\n    }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286159,"user_id":null,"body":"array_difference = function(a, b) {\n  a = a[!a %in% b]\n  return(a)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5262119038c0985a5b00029f":[{"id":286160,"user_id":null,"body":"is_prime <- function(n){\n  v.result = TRUE\n  if (n < 2) v.result = FALSE #Must be a positive integer > 1.\n  i=2\n  if (n>1) while (i^2 <= n) { #Only need to check factors up to sqrt(n).\n    if(n %% i == 0) v.result = FALSE\n    i=i+1\n    }\n  return(v.result)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286161,"user_id":null,"body":"is_prime <- function(n){\n  if (n <= 1) return(FALSE)\n  if (floor(sqrt(n)) < 2) return(TRUE)\n  for (i in 2:floor(sqrt(n)))  {\n    if (n %% i == 0)\n      return(FALSE)\n  }\n\n  return(TRUE)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286162,"user_id":669,"body":"is_prime <- function(n) {\n  n > 1 && (n <= 3 || all(n %% 2:floor(sqrt(n))))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286163,"user_id":null,"body":"#' Tests if a given number is a prime.\n#'\n#' @param n double\n#'\n#' @return logical\n#' TRUE or FALSE\n#' @export\n#'\n#' @examples\nis_prime <- function(n) {\n  ifelse(\n    test = n < 0,\n    yes = FALSE,\n    no = n == 2L || all(n %% 2L:ceiling(sqrt(n)) != 0))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286164,"user_id":null,"body":"is_prime <- function(n){\n  # Bust a move right here\n  # if n==2, TRUE\n  # otherwise, check if divisible\n  n == 2 || all(n %% 2:ceiling(sqrt(abs(n))) != 0)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286165,"user_id":null,"body":"is_prime <- function(n){\n    # Bust a move right here\n    try(num <- as.integer(n))\n    primeFlag <- 1L*(num == 2L) + 1L*(num >= 3L & num %% 2L != 0L)\n    if(num > 2 & primeFlag == 1L){\n        if(num < 13 & num %in% c(3,5,7,11)) {primeFlag <- 1}\n        else{\n            for(i in seq(from = 3, to = as.integer(sqrt(num)), by = 2)){\n                primeFlag = 1L*(num %% i != 0)\n                if(primeFlag == 0) break\n            }\n        }\n    }\n    ifelse(primeFlag==0, FALSE, TRUE)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286166,"user_id":null,"body":"is_prime <- function(n){\n  # Bust a move right here\n  if(n <= 1){\n    return(FALSE)\n  }\n  if(n == 2||n == 3)\n    return(TRUE)\n  for(i in c(2:floor(sqrt(n)))){\n    if(n %% i == 0){\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286167,"user_id":null,"body":"is_prime <- function(n){\n  if(n < 0) {\n      return(FALSE)\n  } else {\n      return(n == 2L || all(n %% 2L:ceiling(sqrt(n)) != 0))\n}}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286168,"user_id":null,"body":"library(memoise)\n\nis_prime_fast <- function(n) {\n  if (n < 2) return (FALSE) \n  n == 2L || all(n %% 2L:ceiling(sqrt(n)) != 0)\n } \n\nis_prime <- memoise(is_prime_fast) ","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286169,"user_id":null,"body":"is_prime <- function(n){\n  (n > 0) && (n == 2 || all(n %% 2:ceiling(sqrt(n)) != 0))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5265326f5fda8eb1160004c8":[{"id":286170,"user_id":null,"body":"number_to_string <- format","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286171,"user_id":null,"body":"number_to_string <- function(n) {\n as.character(n) # your code here\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286172,"user_id":null,"body":"number_to_string <- function(n) {\n  as_string <- as.character(n)\n  return(as_string)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286173,"user_id":null,"body":"number_to_string <- function(n) {\n  a = as.character(n)\n  return(a)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286174,"user_id":null,"body":"number_to_string <- function(n) {\n  x <- as.character(n)\n  return(x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286175,"user_id":null,"body":"number_to_string <- function(n) {\n  numbers <- toString(n)\n  return(numbers)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286176,"user_id":76,"body":"number_to_string = toString","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286177,"user_id":421,"body":"number_to_string <- function(n) {\n  sprintf(\"%d\", n)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286178,"user_id":null,"body":"number_to_string <- function(n) {\n  toString(n)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286179,"user_id":645,"body":"number_to_string <- function(n) as.character(n)","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"526989a41034285187000de4":[{"id":286180,"user_id":null,"body":"ips_between <- function(start, end) {\n  sum(Reduce(function(a, b) as.integer(a) - as.integer(b),\n             strsplit(c(end, start), \"\\\\.\")) * 256^(3:0))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286181,"user_id":null,"body":"ips_between <- function(start, end) {\n  s <- as.integer(unlist(strsplit(start, \".\", fixed = TRUE)))\n  e <- as.integer(unlist(strsplit(end, \".\", fixed = TRUE)))\n  difference <- rev(e-s)\n  sum(sapply(seq_along(difference), function(i){\n    difference[i]*256^(i-1)\n  }))\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286182,"user_id":null,"body":"ips_between <- function(start, end) {\n  toBase256 <- function(ip) {\n    ip <- as.numeric(strsplit(ip,\"\\\\.\")[[1]])\n    sum(mapply(`*`, ip, 256^(3:0)))\n  }\n  \n  toBase256(end) - toBase256(start)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286183,"user_id":null,"body":"#' Finds ip address count.\n#' The interval is exclusive of start and inclusive of end.\n#'\n#' @param start character\n#' Valid IPv4 address in string form.\n#' @param end character\n#' Valid IPv4 address in string form.\n#'\n#' @return double\n#' The count of addresses between (start...end].\n#' @export\n#'\n#' @examples\nips_between <- function(start, end) {\n  start_vec = as.numeric(strsplit(x = start, split = \"\\\\.\")[[1]])\n  end_vec = as.numeric(strsplit(x = end, split = \"\\\\.\")[[1]])\n  start_num = Reduce(\"+\", x = start_vec * 256^(3:0))\n  end_num = Reduce(\"+\", x = end_vec * 256^(3:0))\n\n  res = end_num - start_num\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286184,"user_id":null,"body":"ips_between <- function(start, end) {\n  b <- as.numeric(strsplit(start, \"\\\\.\")[[1]])\n  e <- as.numeric(strsplit(end, \"\\\\.\")[[1]])\n  sum((e-b)*c(256^3,256^2,256,1))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286185,"user_id":669,"body":"ips_between <- function(start, end) {\n  to_decimal <- function(a) {\n    sum(as.numeric(unlist(strsplit(a, \"\\\\.\"))) * 256^(3:0))\n  }\n  to_decimal(end) - to_decimal(start)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286186,"user_id":null,"body":"ips_between <- function(start, end){\n  ips <- strsplit(c(end, start), '.', fixed = TRUE)\n  Reduce(`-`, vapply(ips, function(x) sum(as.numeric(x) * 256 ^ (3:0)), numeric(1)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286187,"user_id":null,"body":"ips_between <- function(st, nd) {\n  # Vectorized soln, returns num vector, the number of IP add. between st & nd\n  \n  # Split the IP inputs at the dots\n  a <- strsplit(st, \"\\\\.\")\n  b <- strsplit(nd, \"\\\\.\")\n  \n  # Create a function to convert characters to integers and subtract them\n  subtract_chars <- function(x, y) as.integer(y) - as.integer(x)\n  \n  # Apply the function to get a list of int. vectors, the differences in each\n  diff_vec <- mapply(subtract_chars, a, b, SIMPLIFY = FALSE)\n  \n  # Create a function to calculate the total difference, apply it and return res\n  parse_diff <- function(x) sum(x * 256 ^ (3:0))\n  sapply(diff_vec, parse_diff)\n  \n}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286188,"user_id":null,"body":"ips_between <- function(start, end) {\n  ips <- strsplit(c(start, end), '\\\\.')\n  ips <- sapply(ips, function(x) sum(as.numeric(x) * 256^(3:0)))\n  diff(ips)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286189,"user_id":null,"body":"ips_between <- function(start, end) {\n  # TODO\n  sum((as.integer(strsplit(end,'.',fixed=T)[[1]]) - as.integer(strsplit(start,'.',fixed=T)[[1]])) * 256^(3:0))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5274e122fc75c0943d000148":[{"id":286190,"user_id":1566,"body":"group_by_commas <- function(n){\n  format(n, big.mark=',', scientific=F)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286191,"user_id":null,"body":"group_by_commas <- function(n){\n  format(as.integer(n), big.mark=',')\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286192,"user_id":421,"body":"group_by_commas <- function(n){\n  s <- paste(rev(strsplit(toString(n), \"\")[[1]]), collapse = \"\")\n  gsub(\"^,\", \"\", paste(rev(strsplit(gsub(\"(\\\\d{3})\", \"\\\\1,\", s), \"\")[[1]]), collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286193,"user_id":null,"body":"group_by_commas <- function(n){\n  # Your code here\n  return (prettyNum(n, big.mark=\",\", scientific=FALSE))\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286194,"user_id":null,"body":"group_by_commas <- function(n){\n  \n  result <- NULL\n  \n  x <- as.character(as.integer(n))\n  long <- nchar(x)\n  \n  while(long > 3){\n    result <- paste(\",\", substr(x, long - 2, long), result, sep = \"\")\n\n    x <- substr(x, 1, long - 3)\n    long <- nchar(x)\n  }\n  \n  result <- paste(x,result, sep = \"\")\n  print(result)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286195,"user_id":null,"body":"group_by_commas <- function(n){\n  as.character(format(n, big.mark=\",\", scientific = 999))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286196,"user_id":null,"body":"group_by_commas <- function(n){\n  prettyNum(n, ',', scientific=F)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286197,"user_id":null,"body":"group_by_commas <- function(n){\n  \n  x <- unlist(strsplit(as.character(format(n,scientific=FALSE)),\"\"))\n  i <- 1\n  sol <- c()\n  while (i*3 < length(x)) {\n     sol <-  paste(\",\",x[length(x)-i*3+1],x[length(x)-i*3+2],x[length(x)-i*3+3],sol,sep=\"\")\n     i=i+1\n  \n  } #funktioniert!\n  \n  i=i*3\n\n  \n  \n       if(length(x)-(i-1)>0) sol <- paste(x[length(x)-(i-1)],x[length(x)-(i-2)],x[length(x)-(i-3)],sol,sep=\"\") \n  else if(length(x)-(i-2)>0) sol <- paste(x[length(x)-(i-2)],x[length(x)-(i-3)],sol,sep=\"\")\n  else if(length(x)-(i-3)>0) sol <- paste(x[length(x)-(i-3)],sol,sep=\"\") \n \n return(sol)\n  \n\n \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286198,"user_id":null,"body":"group_by_commas <- function(n){\n  x<-format(n, big.mark=',',scientific=FALSE)\n        return(x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286199,"user_id":null,"body":"group_by_commas <- function(n){\n  x <- as.character( format( n, scientific = FALSE ) )\n  x <- rev( unlist( strsplit( x,\"\" ) ) )\n\n  for (i in c( 1:length( x ) ) ) {\n    x[i] <- ifelse( (i %% 3 == 0) & (i != length(x) ), paste0(x[i],\",\"), x[i])\n  }\n  x <- paste0(rev(unlist(strsplit( paste0(x, collapse = \"\"),\"\" ))), collapse = \"\")\n  return(x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"52b5247074ea613a09000164":[{"id":286200,"user_id":null,"body":"cooking_time <- function(eggs){\n return(ceiling(eggs\/8)*5)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286201,"user_id":null,"body":"cooking_time <- function(eggs){\n  inter<-eggs%\/%8\n  resto<-eggs%%8\n  decomp<-inter+ifelse(resto>0,1,0)\n  print(decomp*5)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286202,"user_id":null,"body":"cooking_time <- function(eggs){\n  time <- eggs %\/% 8\n  if (eggs %% 8 == 0) {\n    return (time*5)\n  }\n  else {\n    return ((time+1)*5)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286203,"user_id":null,"body":"cooking_time <- function(eggs){\n if(eggs <= 0){\n   return(0)\n }\n  mult <- eggs \/ 8\n  \n  return(ceiling(mult) * 5)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286204,"user_id":null,"body":"cooking_time <- function(eggs){\n  if(eggs != 0){\n    Egg <- seq(1,eggs,8)\n    length(Egg) * 5\n  }\n  else 0\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286205,"user_id":null,"body":"cooking_time <- function(eggs)\n{\n  \n  eggs%%8\n   if (eggs%%8 != 0)  \n   {\n     eggs = eggs + (8-(eggs%%8))\n   }\n  \n    return((eggs*5)\/8)\n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286206,"user_id":527,"body":"cooking_time <- function(eggs) (eggs + 7) %\/% 8 * 5","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286207,"user_id":53,"body":"cooking_time <- function(eggs) {\n (((eggs - 1) %\/% 8) + 1) * 5\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286208,"user_id":50,"body":"cooking_time <- function(eggs){\n  5 * ceiling(eggs\/8)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286209,"user_id":421,"body":"cooking_time <- function(eggs){\n  ceiling(eggs \/ 8) * 5\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"52de553ebb55d1fca3000371":[{"id":286210,"user_id":null,"body":"find_missing <- function(sequence) {\n  # Your code here\n  diff <- diff(sequence)\n  return(sequence[which.max(diff)+1] - diff[which.min(diff)])\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286211,"user_id":null,"body":"find_missing <- function(sequence)sequence[which.max(diff(sequence))]+min(diff(sequence))","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286212,"user_id":2334,"body":"find_missing <- function(x) {\n  n = length(x)\n  (x[1] + x[n])*(n+1)\/2 - sum(as.numeric(x))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286213,"user_id":null,"body":"find_missing <- function (sequence){\n  n <- length(sequence)\n  d <- (sequence[n]-sequence[1])\/n\n  t <- which( sequence[-1]-sequence[-n] != d)[1]\n  sequence[1]+t*d\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286214,"user_id":null,"body":"find_missing <- function(sequence){\n  result <- diff(sequence)\n  return(sequence[which.max(result) + 1] - result[which.min(result)])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286215,"user_id":null,"body":"find_missing <- function(v){\n   s <- (v[1] + tail(v, 1)) * (length(v) + 1) \/ 2\n   return( s - sum(as.numeric(v)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286216,"user_id":null,"body":"find_missing <- function(sequence){\n  l <- length(sequence)\n  incs <- sequence[2:l] - sequence[1:l-1]\n  ai = min(abs(incs))\n  i <- 0\n  p <- NULL\n  for (i in 1:l) {\n    if (incs[i] != ai) {\n      p <- i\n      break\n    }\n  }\n  (sequence[p] + sequence[p + 1]) \/ 2\n}\n \n  \n\n\n  \n  \n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286217,"user_id":null,"body":"find_missing <- function(sequence){\n  \n  firstdiff <- sequence[2]-sequence[1]\n  lastdiff <- tail(sequence,1)-head(tail(sequence,2),1)\n  \n  diff <- min(firstdiff,lastdiff)\n  \n  ## Find number not in list\n  setdiff(seq(sequence[1],tail(sequence,1),by=diff),sequence)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286218,"user_id":168,"body":"find_missing <- function(sequence) {\n  l <- length(sequence)\n  (sequence[1] + sequence[l]) * (l + 1) \/ 2 - sum(as.numeric(sequence))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286219,"user_id":53,"body":"find_missing <- function(xs) {\n  (xs[1] + xs[length(xs)]) * (length(xs)+1) \/ 2 - sum(as.numeric(xs))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"52f787eb172a8b4ae1000a34":[{"id":286220,"user_id":669,"body":"zeros <- function(n) sum(n %\/% 5^(1:log(n + 1, 5)))","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286221,"user_id":null,"body":"zeros <- function(n) {\n  p <- 5\n  z <- 0\n  while (p <= n) {\n    z <- z + floor(n \/ p)\n    p <- p * 5\n  }\n  return(z)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286222,"user_id":null,"body":"zeros <- function(n) {\n  k <- floor(log(n,5))\n  if ( k < 1) return(0)\n  return(sum(floor(n\/(5^(1:k)))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286223,"user_id":null,"body":"#' Counts trailing zeroes of a factorial.\n#'\n#' @param n double\n#' A number to calculate factorial from.\n#'\n#' @return double\n#' The count of zeroes at end of factorial.\n#'\n#' @export\n#'\n#' @examples\nzeros <- function(n) {\n  # Counts 5-factors in a given number.\n  count = 0\n  div = 5\n  num = as.integer(n)\n\n  while (as.integer((num \/ div)) > 0) {\n    count = count +  as.integer(num \/ div)\n    div = as.integer(div * 5)\n  }\n\n  return(count)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286224,"user_id":null,"body":"zeros <- function(n) {\n  value <- 0\n  \n  while(n >= 1) {\n    n <- n \/ 5\n    value <- value + floor(n)\n  }\n  \n  return(value)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286225,"user_id":53,"body":"zeros <- function(n) {\n  ifelse(n==0,0,n%\/%5+zeros(n%\/%5))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286226,"user_id":null,"body":"zeros <- function(n) {\n  if (n == 0)\n    return (0)\n  else\n    return (n %\/% 5 + zeros(n%\/%5))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286227,"user_id":null,"body":"zeros <- function(n) {\n    out<-0\n    p<-5\n    while(p<=n){\n      out<-out + n%\/%p\n      p<-5*p\n    }\n    out\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286228,"user_id":null,"body":"zeros <- function(n) {\n  ret <- 0\n  while (n>0) {\n    n <- n%\/%5\n    ret <- ret + n\n  }\n  ret\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286229,"user_id":null,"body":"zeros <- function(n) {\n  if(n==0) return(0)\n  km <- floor(log(n,5))\n  kk <- seq(1,km)\n  z  <- floor(n\/(5^kk))\n  return( sum(z) )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"52fba66badcd10859f00097e":[{"id":286230,"user_id":null,"body":"library(stringr)\ndisemvowel <- function(string){\n   str_remove_all(string,'[aeiouAEIOU]')\n }","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286231,"user_id":53,"body":"disemvowel <- function(s){\n  gsub(\"[aeuioAEUIO]\", \"\", s)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286232,"user_id":null,"body":"disemvowel <- function(string){\n  gsub(\"[aeiou]\", \"\", string, ignore.case = TRUE)\n }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286233,"user_id":null,"body":"disemvowel <- function(string){\n   vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\")\n  new_string <- string\n  for (i in vowels) {\n  new_string <- gsub(i, \"\", new_string)\n    }\n  new_string\n }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286234,"user_id":50,"body":"disemvowel <- function(string){\n gsub(\"[aeiou]\", \"\", string, ignore.case=T)\n }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286235,"user_id":null,"body":"disemvowel <- function(string){\n  string = gsub(\"a\", \"\", string)\n  string = gsub(\"e\", \"\", string)\n  string = gsub(\"i\", \"\", string)\n  string = gsub(\"o\", \"\", string)\n  string = gsub(\"u\", \"\", string)\n  string = gsub(\"A\", \"\", string)\n  string = gsub(\"E\", \"\", string)\n  string = gsub(\"I\", \"\", string)\n  string = gsub(\"O\", \"\", string)\n  string = gsub(\"U\", \"\", string)\n   \n }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286236,"user_id":null,"body":"disemvowel <- function(s){\n   gsub(\"[aeiouAEIOU]\",\"\",s)\n }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286237,"user_id":null,"body":"disemvowel=function(string){return(gsub('[aeiouAEIOU]','',string))}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286238,"user_id":null,"body":"vowels <- c(\"a\",\"e\",\"i\",\"o\",\"u\")\n\ndisemvowel <- function(string){\n  chars <- strsplit(string, \"\")[[1]]\n  paste0(chars[! tolower(chars) %in% vowels], collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286239,"user_id":null,"body":"disemvowel <- function(string){\n  remove_lower = gsub(\"[aeiou]\", \"\", string)\n  remove_upper = gsub(\"[AEIOU]\", \"\", remove_lower)\n  return(remove_upper)\n }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"530e15517bc88ac656000716":[{"id":286240,"user_id":null,"body":"rot13 <- function(x) {\n  new <- paste(c(letters[14:26], letters[1:13], LETTERS[14:26], LETTERS[1:13]), collapse = \"\")\n  old <- paste(c(letters, LETTERS), collapse = \"\")\n  chartr(old, new, x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286241,"user_id":421,"body":"rot13 <- function(x) {\n  chartr('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'nopqrstuvwxyzabcdefghijklmNOPQRSTUVWXYZABCDEFGHIJKLM', x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286242,"user_id":null,"body":"#' Returns a string ciphered with Rot13.\n#'\n#' @param x character\n#' A character string.\n#'\n#' @return character\n#' A character string with same length as\n#' input, keeps non-alphabet characters.\n#' @export\n#'\n#' @examples\nrot13 <- function(x) {\n  # 13th letter -> m.\n  base <- paste(letters, LETTERS, collapse = \"\", sep = \"\")\n  rot <- paste(substr(base, 27, 52), substr(base, 1, 26), sep = \"\")\n  res <- chartr(base, rot, x)\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286243,"user_id":669,"body":"ROT13 <- ((0:25) + 13) %% 26\nROT13 <- c(1:64, 65 + ROT13, 91:96, 97 + ROT13, 123:255)\n\nrot13_vec <- Vectorize(function(x) intToUtf8(ROT13[utf8ToInt(x)]), USE.NAMES = FALSE)\n                       \nrot13 <- function(x) if (length(x)) rot13_vec(x) else x","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286244,"user_id":null,"body":"rot13 <- function(x) {\n  if (length(x) == 0) return(x)\n  sapply(x, function(i) {\n    v <- utf8ToInt(i)\n    intToUtf8(ifelse(v >= 97 & v <= 122,\n      ((v - 97) + 13) %% 26 + 97,\n      ifelse(v >= 65 & v <= 90,\n        ((v - 65) + 13) %% 26 + 65,\n        v\n      )\n    ))\n  }, USE.NAMES = FALSE)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286245,"user_id":null,"body":"rot13 <- function(x){\n  rot13_single_word <- function(word){\n    if(identical(word, character(0)) ) return(character(0))\n    splitted_word <- unlist(strsplit(word, split = \"\"))\n    capital_index <- which(splitted_word %in% LETTERS)\n    \n    shifted_word <- \n      word %>% \n      tolower() %>%\n      strsplit(split = \"\") %>%\n      unlist() %>%\n      match(letters) %>%\n      + (13) %% length(letters) %>%\n      replace(. , . == 0, 26) %>%\n      letters[.] #%>% \n    #paste(collapse = \"\")\n    \n    shifted_word[capital_index] <- toupper(shifted_word[capital_index])\n    shifted_word[is.na(shifted_word)] <- splitted_word[which(! tolower(splitted_word) %in% letters)]\n    return(paste(shifted_word, collapse = \"\"))\n    \n  }\n  return(as.character(unname(sapply(x, FUN = rot13_single_word))))\n  \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286246,"user_id":527,"body":"rot13 <- function(s) chartr(\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\",\n  \"NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm\",\n  s)\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286247,"user_id":null,"body":"rot13 <- function(x) {\n    x_chif = lapply(x,function(y){\n        chr_split <- unlist(strsplit(y,\"\"))\n        chr_split <- lapply(chr_split,function(char){\n            if(char %in% letters){\n                letter.ndx <- (which(letters==char)+13)\n                if(letter.ndx>26){letter.ndx<-letter.ndx%%26}\n                return(letters[letter.ndx])\n            }else if (char %in% LETTERS){\n                letter.ndx <- (which(LETTERS==char)+13)\n                if(letter.ndx>26){letter.ndx<-letter.ndx%%26}\n                return(LETTERS[letter.ndx])\n            }else{\n                return(char)\n            }\n        })\n        chr_split <- paste0(unlist(chr_split),collapse=\"\")\n        return(chr_split)\n    })\n    return(as.character(unlist(x_chif)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286248,"user_id":null,"body":"rot <- function(ch, list, nrot) {\n  s <- length(list)\n  n <- FALSE\n  for (i in 1:s) {\n    if (ch == list[i]) {n <- i}\n  }\n  if (n == FALSE) {return (FALSE)}\n  list[((n + nrot - 1) %% s + 1)]\n}\n\nrot13ch <- function(ch) {\n  uppercase <- unlist(strsplit('ABCDEFGHIJKLMNOPQRSTUVWXYZ', ''))\n  lowercase <- unlist(strsplit('abcdefghijklmnopqrstuvwxyz', ''))\n  new <- rot(ch, lowercase, 13)\n  if (new != FALSE) {return (new)}\n  new <- rot(ch, uppercase, 13)\n  if (new != FALSE) {return (new)}\n  ch\n}\n\nrot13og <- function(x) {\n  u <- unlist(strsplit(x, ''))\n  s <- length(u)\n  if (s == 0) {return(x)}\n  a <- ''\n  for (i in 1:s) {\n    a[i] <- rot13ch(u[i])\n  }\n  paste(a, collapse = '')\n}\n \nrot13 <- function(x) {\n  if (l <- length(x) == 0) {return (x)}\n  if (length(x) == 1) {return (rot13og(x))}\n  unlist(lapply(x, rot13og))\n}\n\n\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286249,"user_id":null,"body":"rot13 <- function(ch) \n{ \n  old <- paste(letters, LETTERS, collapse=\"\", sep=\"\")\n  new <- paste(substr(old, 2*13+1, 26*2), substr(old, 1, 26), sep=\"\")\n  chartr(old, new, ch)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"53369039d7ab3ac506000467":[{"id":286250,"user_id":421,"body":"bool_to_word <- function(bool){\n  ifelse(bool, \"Yes\", \"No\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286251,"user_id":null,"body":"bool_to_word <- function(bool){\n  return(ifelse(bool,\"Yes\",\"No\"))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286252,"user_id":null,"body":"bool_to_word <- function(bool){\n  return(ifelse(bool == TRUE, \"Yes\", \"No\"))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286253,"user_id":null,"body":"bool_to_word <- function(bool){\n  ifelse(bool == TRUE , return(\"Yes\") , return(\"No\"))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286254,"user_id":null,"body":"bool_to_word <- function(bool){\n  if (bool == TRUE){\n    return ('Yes')\n  }\n  return('No')\n  }","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286255,"user_id":null,"body":"bool_to_word <- function(bool){\n  if (bool){\n    return('Yes')\n  }else{\n    return('No')\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286256,"user_id":null,"body":"bool_to_word <- function(bool){\n  if (bool == T){\n    return(\"Yes\")\n  } else if (bool == F){\n    return(\"No\")\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286257,"user_id":null,"body":"bool_to_word <- function(bool){\n  if (bool){\n    print(\"Yes\")\n  } else{\n    print(\"No\")\n  }\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286258,"user_id":null,"body":"bool_to_word <- function(bool){\n  c(\"No\",\"Yes\")[bool+1]\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286259,"user_id":null,"body":"bool_to_word <- function(bool){\n  if (bool==T) {\n    \"Yes\"\n  }\n  else {\n    \"No\"\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"534ea96ebb17181947000ada":[{"id":286260,"user_id":null,"body":"break_chocolate <- function (n, m) {\n  max(0, m*n-1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286261,"user_id":null,"body":"break_chocolate <- function (n, m) {\n  if( n <= 0 | m <= 0) {return(0)}\n  return(n*m-1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286262,"user_id":null,"body":"break_chocolate <- function (n, m) {\n  size = n*m\n  if (size > 0) {\n    times_break = size - 1\n    return(times_break)\n  } else {\n    return(0)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286263,"user_id":null,"body":"break_chocolate <- function (n, m) {\n    res = (m*n)-1\n    if (res>=0){\n      return(res)\n    } else {\n      return(0)\n    }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286264,"user_id":null,"body":"break_chocolate <- function (n, c){\n  if(n<=0 || c<=0){\n    return(0)\n  }else{\n    (n-1)+(n)*(c-1)\n  }\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286265,"user_id":null,"body":"break_chocolate <- function (n, m) {\n\nr <- n*m - 1\n\nif(r > 0)\n{\nreturn (r)\n}\nelse\n{\nreturn(0)\n}\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286266,"user_id":null,"body":"break_chocolate <- function (n, m) {\n  breaks = 0\n  y <- n*m\n  while (y>1){\n    y <- y-1\n    breaks <- breaks+1\n  }\n  return (breaks)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286267,"user_id":null,"body":"break_chocolate=function(n,m){\n  if(n*m==0){return(0)}\n  return(n*m-1)}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286268,"user_id":null,"body":"break_chocolate <- function (n, m) {\nif(n == 0 | m == 0){return(0)} #Invalid parameters\nif(n == 1 & m == 1){return(0)} #No breaks needed\nreturn((min(n,m) - 1) + (max(n,m) - 1) * min(n,m)) #break calculation valid for full a complete matrix\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286269,"user_id":null,"body":"break_chocolate <- function (n, m) {\n  if(m*n > 0){m*n - 1\n    }else(0)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"53a1eac7e0afd3ad3300008b":[{"id":286270,"user_id":null,"body":"f <- function(n){\nif(n<=0){\nreturn(1)}\nreturn(n-m(f(n-1)))\n}\n\nm <- function(n){\nif(n<=0){\nreturn(0)}\nreturn(n-f(m(n-1)))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286271,"user_id":null,"body":"#' The Hofstadter Female (F) sequence.\n#'\n#' @param n double\n#' A number that is passed to m() and\n#' then back to f().\n#'\n#' @return double\n#' @export\n#'\n#' @examples\nf <- function(n) {\n  ifelse(\n    test = n == 0,\n    yes = 1,\n    no = n - m(f(n - 1))\n  )\n}\n\n\n#' The Hofstadter Male (M) sequence.\n#'\n#' @param n double\n#' A number that is passed to f() and\n#' then back to m().\n#'\n#' @return double\n#' @export\n#'\n#' @examples\nm <- function(n) {\n  ifelse(\n    test = n == 0,\n    yes = 0,\n    no = n - f(m(n - 1))\n  )\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286272,"user_id":null,"body":"`f(i)` <- 1\n`m(i)` <- 0\n\nf <- function(n){\n  for ( i in 0:n ) {\n    if (i > 0) `f(i)` <- i - m(`f(i)`)\n  }\n  return(`f(i)`)\n}\n\nm <- function(n){\n  for ( i in 0:n ) {\n    if (i > 0) `m(i)` <- i - f(`m(i)`)\n  }\n  return(`m(i)`)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286273,"user_id":null,"body":"f <- function(n){\n  return(ifelse(n > 0, n - m(f(n-1)),1))\n}\n\nm <- function(n){\n  return(ifelse(n > 0, n - f(m(n-1)),0))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286274,"user_id":null,"body":"f <- function(n){\n  if (n == 0) return(1)\n  n - m( f(n-1))\n}\n\nm <- function(n){\n  if (n == 0) return(0)\n  n - f( m(n-1))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286275,"user_id":491,"body":"f <- function(n){\n  if (n == 0) {\n    1\n  } else {\n    n - m(f(n - 1))\n  }\n}\n\nm <- function(n){\n  if (n == 0) {\n    0\n  } else {\n    n - f(m(n - 1))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286276,"user_id":null,"body":"m <- function(n){\n  # Your code\n  if(n==0){return(0)}\n  else{return(n-f(m(n-1)))}\n}\nf <- function(n){\n  # Your code\n  if(n==0){return(1)}\n  else{return(n-m(f(n-1)))}\n}\n\n\n\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286277,"user_id":null,"body":"f <- function(n){\n  ifelse(n > 0, return(n - m(f(n-1))), return(1))\n}\n\nm <- function(n){\n  ifelse(n > 0, return(n - f(m(n-1))), return(0))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286278,"user_id":null,"body":"f <- function(n){\n  if(n==0){return(1)}\n  F=n-m(f(n-1))\n  return(F)\n}\n\nm <- function(n){\n  if(n==0){return(0)}\n  M=n-f(m(n-1))\n  return(M)\n  }","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286279,"user_id":null,"body":"f <- function(n){\n  ifelse(n == 0, 1, n - m(f(n-1)))\n}\n\nm <- function(n){\n  ifelse(n == 0, 0, n - f(m(n-1)))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"53af2b8861023f1d88000832":[{"id":286280,"user_id":null,"body":"are_you_playing_banjo <- function(name){\n  paste(name, ifelse(grepl(\"^(R|r)\", name), \"plays banjo\", \"does not play banjo\"), sep = \" \")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286281,"user_id":null,"body":"are_you_playing_banjo <- function(name){\n ifelse(grepl(\"^R\", name, ignore.case = TRUE), paste(name, \"plays banjo\"), paste(name, \"does not play banjo\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286282,"user_id":null,"body":"are_you_playing_banjo <- function(name){\n if(substr(name,1,1) %in% c(\"r\",\"R\")){\n   paste0(name, \" plays banjo\")\n }else{\n   paste0(name, \" does not play banjo\")\n }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286283,"user_id":null,"body":"are_you_playing_banjo <- function(name){\n  ifelse(tolower(unlist(strsplit(name, \"\"))[1]) == \"r\", paste(name, \"plays banjo\"), paste(name, \"does not play banjo\")) \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286284,"user_id":null,"body":"are_you_playing_banjo <- function(name){\n  if(toupper(substr(name,1,1))==\"R\"){\n    paste0(name,\" plays banjo\")\n  }\n  else {\n    paste0(name,\" does not play banjo\")\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286285,"user_id":null,"body":"are_you_playing_banjo <- function(name){\n  ifelse(\n    startsWith(tolower(name),\"r\"),\n    paste0(name,\" plays banjo\"),\n    paste0(name, \" does not play banjo\")\n  )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286286,"user_id":null,"body":"are_you_playing_banjo <- function(name){\n  if (substr(name, 1, 1) == \"r\" | substr(name, 1, 1) == \"R\"){\n    return(paste(name, \"plays banjo\"))\n  }\n  else{\n    return(paste(name, \"does not play banjo\"))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286287,"user_id":null,"body":"are_you_playing_banjo <- function(name){\n  firstLetter = substr(name,1,1)\n  if (tolower(firstLetter)==\"r\"){\n    paste(name,\"plays banjo\")\n  }\n  else{\n    paste(name, \"does not play banjo\")\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286288,"user_id":null,"body":"are_you_playing_banjo <- function(name){ \n  if ((substr(name,1,1) == \"R\") | (substr(name,1,1) == \"r\")) {\n    value = paste(name, \"plays banjo\", sep = \" \")\n   return(value)\n } else {\n   value = paste(name, \"does not play banjo\", sep = \" \")\n   return(value)\n }\n\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286289,"user_id":null,"body":"are_you_playing_banjo <- function(name){\n  fC = substr(name,1,1)\n  result = paste(\"\")\n  if(fC == \"R\" || fC == \"r\") {\n    result = paste(name,\"plays banjo\")\n  } else {\n    result = paste(name,\"does not play banjo\")\n  }\n  return(result)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"53da3dbb4a5168369a0000fe":[{"id":286290,"user_id":null,"body":"even_or_odd <- function(n) {\n  # your code here\n  ifelse((n %% 2) == 0,\"Even\",\"Odd\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286291,"user_id":1093,"body":"even_or_odd <- function(n) {\n  c('Even','Odd')[n%%2+1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286292,"user_id":null,"body":"library(dplyr)\n\neven_or_odd <- function(n) {\n  return (case_when(\n    n %% 2 == 0 ~ \"Even\",\n    TRUE ~ \"Odd\"))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286293,"user_id":null,"body":"even_or_odd <- function(n) {\n  even <- n %% 2 == 0\n  out <- ifelse(even, \"Even\", \"Odd\")\n  out\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286294,"user_id":null,"body":"even_or_odd <- function(n) {\n  # your code here\n  n <- abs(n)\n  if(n %% 2 == 0){\n    return('Even') \n  }else {\n    return('Odd')\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286295,"user_id":null,"body":"library(dplyr)\neven_or_odd <- function(n) {\n  case_when(n%%2!=0 ~'Odd',\n            n%%2==0 ~'Even')\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286296,"user_id":669,"body":"even_or_odd <- function(n) c(\"Even\", \"Odd\")[1 + (n %% 2)]\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286297,"user_id":null,"body":"even_or_odd <- function(n) {\n  if (n %% 2){\n    return(\"Odd\")\n  }else {\n    return(\"Even\")\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286298,"user_id":null,"body":"even_or_odd <- function(n) {\n  out = n%%2 == 0 \n  print(out)\n  if (out){\n    'Even'\n  }\n  else{\n    'Odd'\n  }\n    \n  # your code here\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286299,"user_id":null,"body":"even_or_odd=function(n){ifelse(n%%2==0,'Even','Odd')}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"53dc23c68a0c93699800041d":[{"id":286300,"user_id":2334,"body":"smash <- function(words) paste(words, collapse = \" \")","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286301,"user_id":null,"body":"smash <- function(words){\n  return(paste0(words, collapse = \" \"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286302,"user_id":null,"body":"smash <- function(words){\n  ifelse(length(words) != 0, stringr::str_c(words, collapse = \" \"), \"\")\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286303,"user_id":null,"body":"smash <- function(words){\n  if (typeof(words) == \"character\") {\n     return(paste(words,collapse=\" \"))  \n  }\n\n  # Your code here\n  else {\n    return(\"\")}\n  }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286304,"user_id":null,"body":"smash <- function(words){\n  # Your code here\n  paste(words, sep = ' ', collapse = ' ')\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286305,"user_id":null,"body":"smash <- function(words){\n    if(length(words)==0){\n    result <- \"\"\n    }else{\n      result <- c()\n      for(word in words){\n        result <- paste(result, word, sep=\" \", collapse=NULL)\n      }\n    }\n  return(trimws(result))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286306,"user_id":null,"body":"smash <- function(words){\n  \n  str = paste(\"\", words[1], sep=\"\")\n  \n  if(length(words) == 1)\n    return(str)\n  \n  for(word in words[2:length(words)]) {\n    str = paste(str, word)\n  }\n  return(str)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286307,"user_id":null,"body":"smash <- function(words){\n  paste(words, collapse = \" \") # Your code here\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286308,"user_id":null,"body":"smash <- function(words){\n  # Your code here\n  n3 = words\n  if (length(n3)>=2) {\n    n3 = words[1]\n    for (i in 2:length(words)) {\n      n3 = paste(n3,' ',words[i],sep = '')\n    }\n      return(n3)\n  }else{\n    if(length(n3)==1){\n    return(words[1])\n  }else{\n    return('')\n  }\n  }\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286309,"user_id":null,"body":"smash <- function(words){\n  library(stringr)\n  x <- toString(words)\n  str_replace_all(x, \",\", \"\")\n  # Your code here\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"53dc54212259ed3d4f00071c":[{"id":286310,"user_id":2334,"body":"sum_array <- sum","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286311,"user_id":null,"body":"sum_array <- function(a){\n    sum(a)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286312,"user_id":null,"body":"sum_array <- function(a){\n  sum = 0\n  \n  if(length(a) != 0){\n     for(i in 1:length(a)){\n       sum = sum + a[i]\n    } \n  }\n  sum\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286313,"user_id":null,"body":"sum_array <- function(a){\n  ifelse(is.numeric(a), sum(a), 0)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286314,"user_id":null,"body":"sum_array <- function(a){\n  if( length(a) == 0){\n   return(0)\n  }\n  result <- 0\n  for(i in seq_len(length(a))){\n    result <- result+a[i]\n  }\n  return(result)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286315,"user_id":null,"body":"sum_array <- function(a){\n  unlist(lapply(list(a),sum))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286316,"user_id":null,"body":"sum_array <- function(a){\n  sum = 0\n  for(x in a){\n    sum = sum+x\n  }\n  sum\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286317,"user_id":null,"body":"sum_array <- function(a){\n  if (is.null(a) == FALSE){\n    return(sum(a))\n  }\n  else {\n    return(0)\n  }\n  # Your code\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286318,"user_id":null,"body":"sum_array <- function(a){\n  if (identical(a,NULL)){return(0)\n}else{\n    return(sum(a))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286319,"user_id":null,"body":"sum_array <- function(a){\n  ifelse(is.null(a) == TRUE, 0, sum(a))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"53ee5429ba190077850011d4":[{"id":286320,"user_id":null,"body":"double_integer <- function(i) {\n  return(i*2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286321,"user_id":564,"body":"double_integer <- function(i) 2 * i","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286322,"user_id":null,"body":"double_integer <- function(i) {\n  # Double the integer and return it!\n  int = i*2\n  int\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286323,"user_id":null,"body":"double_integer <- function(i) {\n  i-(-i)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286324,"user_id":null,"body":"double_integer <- function(i) {\n  # Double the integer and return it!\n  i+i\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286325,"user_id":null,"body":"double_integer <- function(i) {\n  # Double the integer and return it!\n  return(2*i)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286326,"user_id":null,"body":"double_integer <- function(i) {\n  2*i# Double the integer and return it!\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286327,"user_id":null,"body":"double_integer <- function(i) {\n  print(2*i)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286328,"user_id":null,"body":"double_integer <- function(i) {\n  # Double the integer and return it!\n  doubled <- 2*i #How you initialize a new variable!\n  #Instead of using print() you could just say doubled to print it!\n  return(doubled) #return() is actually a function!\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286329,"user_id":null,"body":"double_integer <- function(i) {\n  b = 2*i\n  print(b)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"541c8630095125aba6000c00":[{"id":286330,"user_id":342,"body":"digital_root <- function(n){\n  while (n > 9)\n    n <- sum(as.numeric(strsplit(as.character(n), \"\")[[1]]))\n  n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286331,"user_id":null,"body":"digital_root <- function(n){\n  if (n == 0) {\n    return (0)\n  }\n  (n - 1) %% 9 + 1\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286332,"user_id":null,"body":"digital_root <- function(n){\n  while(n>9){\n    num <- unlist(strsplit(as.character(n),\"\"))\n    n <- sum(as.numeric(num))\n  }\n  return(n)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286333,"user_id":null,"body":"digital_root <- function(n){\n while(n > 9) {\n  n <- sum(as.numeric(unlist(strsplit(as.character(n), split = \"\"))))\n  }\n  return(n)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286334,"user_id":421,"body":"digital_root <- function(n){\n  ifelse(n == 0, 0, (n - 1) %% 9 + 1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286335,"user_id":null,"body":"digital_root <- function(n){\n  repeat{\n    num <- nchar(n)\n    if (num == 1) break\n    n <- sum(as.numeric(strsplit(toString(n),\"\")[[1]]))\n  }\n  n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286336,"user_id":null,"body":"digital_root <- function(n){\n\n  if (n < 10) {\n    return(n)\n  }\n  \n  return(digital_root(sum(as.numeric(strsplit(as.character(n), '')[[1]]))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286337,"user_id":null,"body":"digital_root <- function(n){\n  # Your code here\n  rest = n %% 9\n  if(rest == 0 && n != 0){\n    rest = 9\n  }\n  return(rest)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286338,"user_id":null,"body":"digital_root <- function(n){ if(n==0) 0 else {m <- n%%9 ; if(m==0) 9 else m }}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286339,"user_id":null,"body":"digital_root <- function(n){\n  while(nchar(n) != 1){\n  n <- sum(sapply(1:nchar(n), function(d) as.integer(substring(n, d, d))))\n  }\n  return(n)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"542c0f198e077084c0000c2e":[{"id":286340,"user_id":null,"body":"divisors <- function(n) {\n  x <- seq_len(n)\n  length(x[n%%x == 0])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286341,"user_id":null,"body":"divisors <- function(n) {\n  c <- 0\n  for(i in 1:n){\n    if(n%%i==0) c = c+1}\n  return(c)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286342,"user_id":null,"body":"divisors <- function(n) {\n  sum(!grepl('\\\\.', as.character(n\/(1:n))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286343,"user_id":null,"body":"divisors <- function(n) {\n  div <- c()\n  for ( i in c(1:n) ) {\n    if ( n %% i == 0 ) {\n     div <- append( div , i )\n    }\n  }\n  return( length(div) )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286344,"user_id":null,"body":"divisors <- function(n) {\n  return (sum(n %% (1:n) == 0))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286345,"user_id":null,"body":"divisors <- function(n) {\n  c <- 0\n  for (j in 1:n) {\n    if (n %% j == 0) \n      c = c + 1\n  }\n  return(c)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286346,"user_id":null,"body":"divisors <- function(n) {\n  sum = 0\n  product = 0\n  j = 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n        if (i*j == n) {\n            sum = sum + 1\n        }\n    }\n  }\n  return(sum)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286347,"user_id":null,"body":"divisors <- function(n) {\n  # your code here\n  sum(n %% (1:n) == 0)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286348,"user_id":null,"body":"divisors = function(n) {\nvec = vector(mode=\"numeric\")\n  for(i in 1:n){\n    if(n\/i == round(n\/i)){vec = append(vec, i)}\n  }\nlength(vec)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286349,"user_id":null,"body":"divisors <- function(n){\n  div <- 0\n  if(n == 1) return(1)\n  for(i in 1:ceiling(n\/2)) if(n %% i == 0) div <- div+1\n  # add 1 for the number itself\n  div+1\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"542f0c36d002f8cd8a0005e5":[{"id":286350,"user_id":53,"body":"last_chair <- function(n) {\n  n - 1\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286351,"user_id":null,"body":"last_chair <- function(n) {\n  # user code ..\n  n-1\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286352,"user_id":null,"body":"last_chair <- function(n) {\n  return(n-1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286353,"user_id":200,"body":"last_chair <- function(n) {\n  result <- n-1;\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"543abbc35f0461d28f000c11":[{"id":286354,"user_id":421,"body":"house_of_cards <- function(floors){\n  if(floors < 1){stop(\"Invalid floor number!\")}\n  else{(floors + 1) * (3 * floors + 4) \/ 2}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286355,"user_id":null,"body":"house_of_cards <- function(n){\n  if (n<1){\n    stop(\"\")\n  }\n  sum(as.numeric((1:(n+1)))*2) + sum(as.numeric(1:(n)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286356,"user_id":null,"body":"house_of_cards <- function(floors){\n  if(floors >=1){\n        New_cards <- 2\n    for (i in 1:floors) {\n      New_cards <-  New_cards+(i+1)*2+i\n    }\n    return(New_cards)\n  }else{\n    return(error)\n  }\n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286357,"user_id":null,"body":"house_of_cards <- function(floors) {\n  if (floors < 1) {\n    stop(\"floor must be greater than 0\")\n  }\n  3 * sum(as.numeric(1:floors)) + 2 * floors + 2\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286358,"user_id":53,"body":"house_of_cards <- function(n){\n  if (n <= 0) stop(\"Error\")\n  (3*n+4)*(n+1)\/2\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286359,"user_id":null,"body":"house_of_cards <- function(floors){\n  if (floors < 1) stop('floors < 1')\n\n  result <- 2\n  current_cards <- 2\n  \n  for (i in 1:floors) {\n    current_cards <- current_cards + 3\n    result <- result + current_cards\n  }\n  \n  result\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286360,"user_id":null,"body":"house_of_cards <- function(floors){\n  if(floors >0){\n    fl = floors + 1\n    return((fl+1)*3*(fl)\/2 - fl)\n  }\n  else{\n    stop(\"ERROR\")\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286361,"user_id":null,"body":"house_of_cards <- function(f)ifelse(f<1,error,choose(f+1,2)+2*choose(f+2,2))","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286362,"user_id":669,"body":"house_of_cards <- function(floors) {\n  stopifnot(floors > 0)\n  (floors + 1) * (1.5 * floors + 2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286363,"user_id":null,"body":"house_of_cards <- function(n) {\n  ifelse(n > 0, (n + 1) * (3 * n + 4) \/ 2, stop())\n}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"544675c6f971f7399a000e79":[{"id":286364,"user_id":null,"body":"string_to_number <- function(x){\n  as.numeric(x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286365,"user_id":50,"body":"string_to_number <- function(x){\n  strtoi(x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286366,"user_id":null,"body":"string_to_number <- function(x){\n  return(as.numeric(x))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286367,"user_id":null,"body":"string_to_number <- function(x){\n  solution <- as.numeric(x)\n  return(solution)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286368,"user_id":421,"body":"string_to_number <- as.integer","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286369,"user_id":null,"body":"string_to_number <- function(x){\n  x <- type.convert(x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286370,"user_id":null,"body":"string_to_number <- function(x){\n  result <- as.integer(x)\n  return (result)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286371,"user_id":null,"body":"string_to_number <- function(x){\n  print(strtoi(x))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286372,"user_id":null,"body":"string_to_number <- function(x){\n  num <- as.numeric(x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286373,"user_id":null,"body":"string_to_number <- function(x){\n  if(is.character(x) == TRUE)\n    x_num <- as.numeric(x)\n    return(x_num)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"545cedaa9943f7fe7b000048":[{"id":286374,"user_id":2334,"body":"detect_pangram <- function(s){\n  all(letters %in% unlist(strsplit(tolower(s), \"\")))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286375,"user_id":null,"body":"detect_pangram <- function(s){\n  chars <- tolower(s)\n  chars <- strsplit(chars, '')[[1]]\n  pang <- all(letters %in% chars)\n  pang\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286376,"user_id":null,"body":"detect_pangram <- function(s){\n  # Your code here\n  return(all(letters %in% strsplit(tolower(s), \"\")[[1]]))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286377,"user_id":null,"body":"detect_pangram <- function(s){\n  # Your code here\n    S = unlist(strsplit(tolower(s),split=''))\n  for (l in letters) {\n    if (!(l %in% S))\n      return(FALSE)\n  } \n  TRUE\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286378,"user_id":null,"body":"#' Tests if a string is a pangram.\n#'\n#' @param s character; string\n#'\n#' @return logical\n#' TRUE or FALSE\n#' @export\n#'\n#' @examples\ndetect_pangram <- function(s) {\n  # Only keeps alphabetic characters.\n  s_alpha = gsub(\n    pattern = \"[^[:alpha:]]\",\n    replacement = \"\",\n    x = tolower(s)\n  )\n  s_alpha_vec = unique(strsplit(s_alpha, split = \"\")[[1]])\n\n  res = all(sort(s_alpha_vec) == letters)\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286379,"user_id":null,"body":"detect_pangram <- function(str){\n  # s <- string[!duplicated(string)]\n  \n  s <- gsub(\"\\\\s\", \"\", tolower(str))\n  \n  #Remove punctuation characters (! \" # $ % & ' ( ) * + , - . \/ : ; < = > ? @ [  ] ^ _ ` { | } ~)\n  s <- gsub(\"[[:punct:]]\",\"\", s,ignore.case = TRUE)\n  \n  # s <- substring(s, seq(1,nchar(s),1), seq(1,nchar(s),1))\n  s <- unlist(strsplit(s, \"\"))\n  \n  result <- sum(base::letters %in% s) == length(base::letters)\n  \n  return(result)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286380,"user_id":null,"body":"detect_pangram <- function(s){\n  s <- gsub(\"[^a-z]*\", \"\", tolower(s))\n  s <- unique(unlist(strsplit(s, \"\")))\n  x <- length(s) == length(letters)\n  x\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286381,"user_id":null,"body":"detect_pangram <- function(s){\n  str_to_letter_vec <- unlist(strsplit(tolower(s), \"\"))\n  \n  unique_letters <- unique(sort(\n    grep(\"[[:alpha:]]\", str_to_letter_vec, value = TRUE)))\n  \n  identical(unique_letters, letters)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286382,"user_id":null,"body":"detect_pangram <- function(s) {\n  length(unique(strsplit(gsub(\"[^a-z]\", \"\", tolower(s)), \"\")[[1]])) == 26\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286383,"user_id":null,"body":"detect_pangram <- function(s){\n  chrs <- unique(strsplit(gsub(\"[^[:alpha:]]\", \"\", tolower(s)), \"\")[[1]])\n  length(chrs) == 26\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5467e4d82edf8bbf40000155":[{"id":286384,"user_id":421,"body":"descending_order <- function(num){\n  as.integer(paste(sort(unlist(strsplit(toString(num), \"\")), decreasing = TRUE), collapse = \"\"))  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286385,"user_id":null,"body":"descending_order <- function(num){\n  a <- i.to.digits(num)\n  digits.to.i(rev(sort(a)))\n}\n\ndigits.to.i <- function(arr) {\n  res = 0\n  for(d in arr) {res <- res * 10 + d}\n  res\n}\n  \ni.to.digits <- function(num) {\n  if (num == 0) {return(0)}\n  a <- array()\n  s <- 0\n  while (num > 0) {\n    d = num %% 10\n    num <- floor(num \/ 10)\n    s = s + 1\n    a[s] <- d\n  }\n  a\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286386,"user_id":null,"body":"descending_order <- function(num){\n  as.numeric(paste(sort(strsplit(as.character(num), \"\")[[1]], decreasing = T), collapse=\"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286387,"user_id":null,"body":"descending_order <- function(num){\n  as.numeric(paste0(sort(unlist(strsplit(as.character(num), \"\")), decreasing = TRUE), collapse = \"\"))\n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286388,"user_id":null,"body":"descending_order <- function(num){\n  \n  if (num < 0) {\n    \n    return(\"stop, num cannot be negative\")\n  \n    } else {\n  \n  chr <- sort(\n    as.numeric(strsplit(as.character(num), \"\")[[1]]), \n    decreasing = TRUE)\n  \n  chr <- as.numeric(paste(chr, collapse = ''))\n  \n  return(chr)\n  \n    }\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286389,"user_id":null,"body":"library(tidyverse)\n\ndescending_order <- function(num){\n  a<-paste(sort(as.numeric(unlist(str_extract_all(as.character(num), \"\"))), decreasing = TRUE), collapse = \"\") \n  as.numeric(a)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286390,"user_id":null,"body":"descending_order <- function(num){\n  n <- as.numeric(Reduce(paste0,sort(as.numeric(strsplit(as.character(num),\"\")[[1]]),decreasing=T)))\n  n\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286391,"user_id":null,"body":"descending_order <- function(num){\n  result <- vector()\n  result2 <- vector()\n  for (i in strsplit(as.character(num), \"\")[[1]]){\n    result <- c(result, as.numeric(i))\n  }\n  result <- sort(result, decreasing=TRUE)\n  for (i in result) {\n    result2 <- c(result2, as.character(i))\n  }\n  result3 <- paste(result2, collapse = '')\n  return(as.numeric(result3))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286392,"user_id":null,"body":"descending_order <- function(num) {\n  digits <- unlist(strsplit(toString(num), \"\"))\n  as.integer(paste(sort(digits, decreasing=TRUE), collapse=\"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286393,"user_id":null,"body":"descending_order <- function(num){\n  vector <- strsplit(as.character(num), \"\")[[1]]\n  vector <- vector[order(vector, decreasing = T)]\n  as.numeric(paste(vector, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"546e2562b03326a88e000020":[{"id":286394,"user_id":null,"body":"square_digits <- function(num){\n  t <- strsplit(as.character(num), \"\")\n  t <- sapply(t, function(x) as.numeric(x)^2)\n  as.numeric(paste0(t, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286395,"user_id":null,"body":"square_digits <- function(num){\n  num %>% \n    as.character() %>% \n    strsplit(\"\") %>% \n    unlist() %>% \n    as.integer() %>% \n    sapply(function(x) {x**2}) %>% \n    paste(collapse=\"\")%>%\n    as.numeric()\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286396,"user_id":null,"body":"square_digits <- function(num){\n as.numeric(paste((as.character(as.numeric(strsplit(as.character(num),\"\")[[1]])^2)),collapse =\"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286397,"user_id":null,"body":"square_digits <- function(num){\n  l_nums = strsplit(as.character(num),\"\")\n\n  output = \"\"\n  for (i in l_nums){\n    print(i)\n    i_num = as.numeric(i)\n    i_num = i_num^2\n    output = paste(output,as.character(i_num))}\n  print(output)\n  output= paste(output,collapse=\"\")\n  print(output)\n  output = gsub(\" \", \"\", output, fixed = TRUE)\n  output = as.character(unlist(output))\n\n  print(output)\n  print(typeof(output))\n  output = as.numeric(output)\n  print(output)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286398,"user_id":null,"body":"square_digits <- function(num){\n  numAsString1 = paste0(num)\n  numAsString2 = strsplit(numAsString1,\"\")\n  total = \"\"\n  for(i in numAsString2){\n    total = paste0(total,strtoi(i)^2,collapse = \"\")\n  }\n  strtoi(total)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286399,"user_id":null,"body":"square_digits <- function(x){\n  as.integer(paste0(as.integer(unlist(strsplit(toString(x), \"\")))^2, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286400,"user_id":null,"body":"square_digits <- function(num){\n  \n  divmod <- function(num,div){\n    c(num%\/%div, num%%div)\n  }\n  \n  str <- character()\n  if (num == 0){\n    str <- \"0\"\n  }\n  while (num > 0) {\n    tup <- divmod(num,10)\n    str <- paste0(as.character(tup[2]^2),str)\n    num <- tup[1]\n  }\n  \n  as.integer(str)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286401,"user_id":null,"body":"square_digits <- function(num){\n  x <- sapply(\n    strsplit(as.character(num), split = '')[[1]],\n    function(x){as.numeric(x)^2}, \n    USE.NAMES = F\n  )\n  as.numeric(paste(x, collapse = ''))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286402,"user_id":null,"body":"square_digits <- function(num){\n    digits <- as.double(unlist(strsplit(as.character(num),\"\")))\n    as.double(paste(as.character(digits^2), sep=\"\", collapse=\"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286403,"user_id":null,"body":"square_digits <- function(num){\n  x<-as.character(num)\n  print(num)\n  numList<-as.numeric(unlist(strsplit(x,\"\")))\n  squareList<-c()\n  multiplier<-0.1\n  for(current in numList){\n    squareList<-c(squareList,(current*current))\n    multiplier<-multiplier*10\n  }\n  returnNums<-c()\n  for(square in squareList){\n    returnNums<-c(returnNums,square)\n  }\n  \n  returnNums<-paste(returnNums,collapse=\"\")\n  print(as.numeric(returnNums))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54b42f9314d9229fd6000d9c":[{"id":286404,"user_id":785,"body":"duplicate_encode <- function(word){\n   s <- tolower(strsplit(word,\"\")[[1]])\n   d <- s %in% s[duplicated(s)]\n   s[d] <- \")\"\n   s[!d] <- \"(\"\n   paste(s, collapse = '')\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286405,"user_id":null,"body":"duplicate_encode <- function(word){\n  chars <- unlist(strsplit(tolower(word), \"\"))\n  tr <- function(c) if (sum(chars == c) > 1) \")\" else \"(\"\n  paste0(sapply(chars, tr), collapse=\"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286406,"user_id":null,"body":"duplicate_encode <- function(word){\n a<-strsplit(tolower(word),\"\")[[1]]\n paste(c(\"(\",\")\")[as.numeric(duplicated(a) | duplicated(a,fromLast = T))+1],collapse=\"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286407,"user_id":null,"body":"#' Returns a character string based on item\n#' counts in a string.\n#'\n#' @param word character; string\n#'\n#' @return character; string\n#' Includes \"(\" if character appears once in\n#' a string, \")\" otherwise. Case insensitive.\n#' @export\n#'\n#' @examples\nduplicate_encode <- function(word) {\n  items = tolower(strsplit(word, split = \"\")[[1]])\n  items_lst = as.list(table(items))\n\n  res_vec = sapply(items, function(x) {\n    ifelse(\n      test = items_lst[[x]] == 1,\n      yes = \"(\",\n      no = \")\"\n    )\n  })\n  res = paste(res_vec, collapse = \"\")\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286408,"user_id":null,"body":"duplicate_encode <- function(word){\n  spl = unlist(strsplit(word, \"\")) #split the string and unlist since strsplit makes a list\n  spl = tolower(spl)\n  dup = !spl %in% spl[duplicated(spl)] # choose NOT the duplicated values\n  paren = ifelse(dup,\"(\", \")\" ) # if NOT duplicated ( ,else )\n  paste(paren, collapse = \"\") #paste the vector together\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286409,"user_id":null,"body":"duplicate_encode <- function(word){\n  word <- strsplit(tolower(word),\"\")[[1]];\n  word <- duplicated(word) | duplicated(word,fromLast = T);\n  word[word == T] <- ')';\n  word[word == F] <- '(';\n  return(paste(word,collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286410,"user_id":null,"body":"duplicate_encode <- function(s) {\n  # Vectorized solution, returns chr vector of parenthesis characters\n  #\n  # Args:\n  #  s: a character vector to replace with ( or ) characters\n  \n  # Convert to lower case, split into characters, count frequencies\n  s.low <- tolower(s)\n  s.chars <- strsplit(s.low, \"\")\n  s.table <- lapply(s.chars, table)\n  \n  # Define function to get names of characters with count > 1, then apply it\n  getChars <- function(x) names(which(x > 1))\n  mult.chars <- lapply(s.table, getChars)\n  \n  # Define a function to replace the characters with ( and )\n  convChars <- function(a, b) {\n    a.vec <- ifelse(a %in% b, \")\", \"(\")\n    paste0(a.vec, collapse = \"\")\n  }\n  \n  # Apply the conversion function to the characters of the input, return result\n  mapply(convChars, a = s.chars, b = mult.chars)\n\n}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286411,"user_id":null,"body":"duplicate_encode <- function(word){\n  #Split word into Vector of individual letters\n  letters<-tolower(unlist(strsplit(word,\"\\\\s{0}\")))\n  #Create vector of letters appearing multiple times\n  d<-letters[duplicated(letters)]\n  #If letter appears in duplicates replace with \")\", else replace with \"(\"\n  result<-paste(ifelse(letters%in%d,\")\",\"(\"), collapse = \"\")\n  return(result)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286412,"user_id":null,"body":"duplicate_encode <- function(word){\n  arr <- unlist(strsplit(tolower(word), \"\"))\n  t <- table(factor(arr))\n  paste(sapply(arr, function(x1) if(t[x1] > 1) {return(')')}else{return('(')}), collapse = \"\") \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286413,"user_id":null,"body":"duplicate_encode <- function(word){\n  # FINISH HIM!\n  \n  word <- tolower(word)\n  letters <- strsplit(word, split = \"\")[[1]]\n  freqs <- table(letters)[letters]\n  paste(ifelse(freqs > 1, \")\", \"(\"), collapse = \"\")\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54bf1c2cd5b56cc47f0007a1":[{"id":286414,"user_id":null,"body":"duplicate_count <- function(text){\n  sum(table(strsplit(tolower(text), \"\")) > 1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286415,"user_id":null,"body":"duplicate_count <- function(text){\n  # Your code here\n  return(sum(table(unlist(strsplit(tolower(text), \"\"))) > 1))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286416,"user_id":null,"body":"duplicate_count <- function(text){\n  x = strsplit(text, split = '')\n  x = unlist(x)\n  x = tolower(x)\n  x = sort(x)\n  y = rle(x)  # run length encoding\n  sum(y$lengths > 1)  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286417,"user_id":2334,"body":"duplicate_count <- function(text){\n  text <- factor(unlist(strsplit(casefold(text), \"\")))\n  sum(summary(text)>1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286418,"user_id":null,"body":"duplicate_count <- function(text){\n  all_char <- strsplit(tolower(text), \"\")[[1]]\n  sum(table(all_char) > 1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286419,"user_id":null,"body":"duplicate_count <- function(text){\n  ltext<-text %>% tolower()\n  chars<-strsplit(ltext,\"\")[[1]] %>% unlist()\n  chars[duplicated(chars)] %>% unique() %>% length()\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286420,"user_id":null,"body":"library(tidyverse)\n\nduplicate_count <- function(text) {\n  text %>%\n    str_to_lower() %>% \n    strsplit(split = \"\") %>%\n    unlist() %>%\n    tibble() %>%\n    set_names(\"char\") %>%\n    group_by(char) %>%\n    tally() %>%\n    filter(n > 1) %>%\n    nrow()\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286421,"user_id":null,"body":"duplicate_count <- function(text){\na <- paste0(duplicated(sort(tolower(strsplit(text, split=\"\")[[1]]))),collapse = \"\")\nlengths(regmatches(a, gregexpr(\"FALSETRUE\", a)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286422,"user_id":null,"body":"duplicate_count <- function(text){\n  c <- unlist(strsplit(toupper(text),\"\")) #get the vector of characters\n  clist <- split(c, c) #group the vector by different letters\n  v <- sapply(clist,length) #count length for each letter\n  length(v[v>1]) #count num of letters met more than once\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286423,"user_id":null,"body":"duplicate_count <- function(text){\n  d <- unlist(strsplit(toupper(text), split=\"\"))\n  e <- table(d)\n  f <- data.frame(char=names(e), count=as.vector(e))\n  f <- f[f$count > 1,]\n  if (is.null(nrow(f))){\n    return(0)\n  } else {return(nrow(f))}\n  # Your code here\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54bf85e3d5b56c7a05000cf9":[{"id":286424,"user_id":null,"body":"number <- function(lines) {\n  if(length(lines)==0) return(c())\n  paste0(1:length(lines), \": \", lines)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286425,"user_id":null,"body":"number <- function(lines) {\n  if (!is.null(lines)) {\n    paste(seq_along(lines), lines, sep = \": \")\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286426,"user_id":null,"body":"number <- function(lines) {\n  if (length(lines) == 0) return(c())\n  \n  mapply(paste0, 1:length(lines), \": \", lines)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286427,"user_id":null,"body":"number <- function(lines) {\n  numbered_list = c()\n  index = 1\n  for(i in lines) {\n    numbered <- paste(index,\": \",i, sep = \"\")\n    numbered_list <- c(numbered_list,numbered)\n    index = index+1\n  }\n  return(numbered_list)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286428,"user_id":53,"body":"number <- function(lines) {\n  if (length(lines)==0) {\n    NULL\n  } else {\n    mapply(function(i) sprintf(\"%d: %s\", i, lines[i]),1:length(lines))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286429,"user_id":null,"body":"number <- function(l) {\n  if (!is.null(l)) sprintf(\"%i: %s\", seq_along(l), l)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286430,"user_id":null,"body":"number <- function(lines) {\n  #in order to only calculate once\n  len <- length(lines)\n  \n  if (len == 0){c()} \n  else {\n    paste(paste0(as.character(1:len), \":\"), lines)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286431,"user_id":null,"body":"number <- function(lines) {\n  n <- 1\n  result<-c()\n  for (i in lines) {\n    result[n]<-paste(n, i, sep = \": \")\n    n = n+1\n  } \n  return(result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286432,"user_id":null,"body":"number <- function(lines) {\n  return_vec = NULL\n  if(is.null(lines)){\n    return(c())\n  }\n  else{\n    for( i in 1:length(lines)){return_vec[i] = paste0(i,': ',lines[i])}\n    return(return_vec)\n  }\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286433,"user_id":null,"body":"number <- function(lines) {\n  number_lines <- get_number_lines(lines)\n  result <- read_lines(number_lines, lines)\n  return(result)\n}\n\nget_number_lines <- function(lines){\n  return(length(lines))\n}\n\nwrite_element <- function(number,element){\n  result <- paste(number, element, sep=\": \")\n  return(result)\n}\nread_lines <- function(number_lines,lines){\n  i <- 1\n  result <- c()\n  while(i<=number_lines){\n    line <- write_element(i,lines[[i]])\n    result <- append(result, line)\n    i <- i + 1\n  }\n  return(result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54c27a33fb7da0db0100040e":[{"id":286434,"user_id":null,"body":"is_square <- function(n){\n  ifelse(n<0,FALSE,sqrt(n)%%1==0)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286435,"user_id":null,"body":"is_square <- function(n){\n  n >= 0 & sqrt(n) %% 1 == 0\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286436,"user_id":421,"body":"is_square <- function(n){\n  n >= 0 && sqrt(n) %% 1 == 0\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286437,"user_id":null,"body":"is_square <- function(n){\n  if (n >= 0 && floor(sqrt(n)) == sqrt(n)){TRUE}\n  else{FALSE}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286438,"user_id":null,"body":"is_square <- function(n){\n  #if(n==0) return(TRUE)\n  n>=0 & sqrt(n) %% 1 == 0\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286439,"user_id":null,"body":"is_square <- function(n){\n  return (n >= 0 & (n**0.5) %%  1 == 0) \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286440,"user_id":null,"body":"is_square <- function(n){\n \n  if (n<0) FALSE\n  else ifelse(round(sqrt(n))==sqrt(n),TRUE, FALSE)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286441,"user_id":null,"body":"is_square <- function(n){\n  if( n < 0) return(FALSE)\n  round(sqrt(n))*round(sqrt(n)) == n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286442,"user_id":null,"body":"is_square <- function(n) {\n  if (n < 0) {\n    return(FALSE)\n  }\n  else {\n      return(sqrt(n) == as.integer(sqrt(n)))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286443,"user_id":null,"body":"is_square <- function(n){\n  sqrt(n) %% 1 == 0 & n >= 0\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54c2fc0552791928c9000517":[{"id":286444,"user_id":421,"body":"f <- function(n, m){\n  x = n %% m\n  y = n %\/% m\n  (m * (m - 1) \/ 2) * y + (x * (x + 1) \/ 2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286445,"user_id":null,"body":"f <- function(n, m){\n  if (n >= m) {\n    x <- n %% m\n    (m * (m-1) \/ 2) * (n %\/% m) + x * (x + 1) \/ 2\n  } else {\n    n * (n+1) \/ 2\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286446,"user_id":null,"body":"f <- function(n, m){\n  print(c(n,m))\n  toMult <- n %\/% m\n  reste <- n %% m\n  s_reste <- (reste*(reste+1))\/2\n  print(toMult)\n  s <- ((m-1)*m)\/2\n  print(s)\n  return(s*toMult+s_reste)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286447,"user_id":null,"body":"f <- function(n, m){\n  naunal <- ((m-1)*(m))\/2\n  mid <- n%%m\n  New <- floor(n\/m)*naunal + (mid)*(mid+1)\/2\n  return(New)\n  # Your code here\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286448,"user_id":null,"body":"f <- function(n, m){\n  (n%%m+1) * (n%%m)\/2 + n%\/%m * (m-1)*(m)\/2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286449,"user_id":null,"body":"f <- function(n, m) {\n  (sum_to_n(m - 1)) * (floor(n \/ m)) + sum_to_n(n %% m)\n}\n\nsum_to_n = function(x) {\n  x * (x + 1) \/ 2;\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286450,"user_id":null,"body":"f <- function(n, m) {\n  (((m - 1) ^ 2 + m - 1) %\/% 2) * (n %\/% m) + (((n %% m) ^ 2 + n %% m) %\/% 2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286451,"user_id":53,"body":"f <- function(n, m) {\n  ((n %\/% m) * m * (m - 1)) %\/% 2 + ((n %% m) * (n %% m + 1)) %\/% 2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286452,"user_id":null,"body":"f <- function(n, m){\n  a<-as.numeric(n%\/%m)\n\n  b<-as.numeric(n%%m)\n  a*(m**2-m)\/2+(b*b+b)\/2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286453,"user_id":null,"body":"f <- function(n, m){\n  return( (m*(m-1)*(n%\/%m) + (n%%m+1)*(n%%m))\/2 )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54d4c8b08776e4ad92000835":[{"id":286454,"user_id":669,"body":"isPP <- function(n) {\n  k <- 2:n\n  m <- round(logb(n, k))\n  i <- which(m^k == n)\n  \n  if (length(i) > 0) c(m[i], k[i])\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286455,"user_id":null,"body":"# BEST SOLUTION --\nisPP <- function(n) {\n  # all values that K > 1 to K = n \n  k <- 2:n \n  # all values that m(as.int) = log(base=k) of n\n  m <- round(logb(n, k))\n  # i = returns the position or the index of the value which satisfies the given condition\n  i <- which(m^k == n)\n  # if exist any pair of numbers return m[i], k[i]\n  if (length(i) > 0) c(m[i], k[i])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286456,"user_id":null,"body":"isPP <- function(n){\n  pp_mat = outer(2:100, 2:20, \"^\")\n  if (!n %in% pp_mat) return(NULL)\n  as.numeric(which(n == pp_mat, arr.ind = TRUE)) + 1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286457,"user_id":null,"body":"isPP <- function(n){\n  if (n < 2) {\n    return(NULL)\n  }\n  for (i in 2:sqrt(n)) {\n    if (n %% i == 0) {\n      for (j in 2:sqrt(n\/i)) {\n        if (i ** j == n) {\n          return(c(i,j))\n        }\n      }\n    }\n  }\n  return(NULL)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286458,"user_id":null,"body":"isPP <- function(n){\n  ans = NULL\n  if(sqrt(n) > 1  & sqrt(n) %% 1 ==0){\n    ans = c(sqrt(n),2)\n}\nreturn(ans)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286459,"user_id":null,"body":"isPP <- function(n){\n  print(n)\n  ans = NULL\n  if(sqrt(n) > 1  & sqrt(n) %% 1 ==0){\n    ans = c(sqrt(n),2)\n}\nreturn(ans)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286460,"user_id":null,"body":"isPP <- function(n){\n  # Your code here\n  if(n == 0 | n == 1){return(NULL)}\n  for(num in 1:n){\n    if(num^2 == n){\n      return(c(num, 2))\n    }\n  }\n  return(NULL)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286461,"user_id":null,"body":"isPP <- function(n){\n\n    if ( n < 2 )\n      return(NULL)\n  \n    for (exponent in 2:(n\/2)){\n        value <- n**(1\/exponent)\n\n        if (value == floor(value)){\n            return(c(value, exponent))\n        }\n    }\n\n    return(NULL)\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286462,"user_id":null,"body":"isPP <- function(n){\n  # Your code here\n  \n  output <- c()\n  \n  PP <- c()\n\n  if(n < 2) {\n    output <- NULL\n    print(output)\n  } else {\n  \n  m <- seq(2, floor(sqrt(n)))\n  \n  k <- seq(2, 6)\n  \n  grid_search <- expand.grid(m, k)\n  \n  for(i in 1:nrow(grid_search)) {\n    \n    ifelse(grid_search$Var1[i]^grid_search$Var2[i] == n, output <- i, \"\")\n    \n  }\n  \n  return(  if(is.null(output)) {\n    print(output)\n    } else {\n    print(c(grid_search[output,1], grid_search[output,2]))\n    })\n  }\n}\n  ","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286463,"user_id":null,"body":"isPP <- function(n){\nx <- matrix(c(2:(ceiling(sqrt(n))+1)))\nTest_F <- apply(x, 1, Test,n)\nTest_F <- unlist(Test_F)\nifelse(length(Test_F) == 0 , return(NULL) , return(Test_F))\n  # Your code here\n}\nTest <- function(i,n){\n  k <- 1\n  Finish_list <- NULL\n  while (i**k <= n) {\n    if(i**k == n){\n      Finish_list <- append(Finish_list , c(c(i,k)))\n      k <- k+1\n    }else{\n      k <- k+1\n    }\n  }\n  return(Finish_list)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54d512e62a5e54c96200019e":[{"id":286464,"user_id":null,"body":"prime_factors <- function(n) {\n  out <- ''\n  for (k in c(2, seq(3, ceiling(sqrt(n)), 2))) {\n    nk <- 0\n    while (n %% k == 0) {\n      nk <- nk + 1\n      n <- n \/ k\n    }\n    if (nk == 1) out <- paste0(out, '(', k,')')\n    if (nk > 1) out <- paste0(out, '(', k, '**', nk,')')\n  }\n  if (n > 1) return(paste0(out, '(',n,')'))\n  return(out)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286465,"user_id":null,"body":"prime_factors <- function(n, f = c()) {\n    for (p in 2:sqrt(n))\n        if (n < p) break\n        else while(n %% p == 0) { n <- n \/ p; f <- c(f, p) }\n    if (n > 1) f <- c(f, n)\n    factors <- table(f)\n    paste0(sub(pattern = '\\\\*\\\\*1(?=\\\\))', replacement = '',\n               x = paste0('(', names(factors), '**', factors, ')'),\n               perl = TRUE),\n           collapse = '')\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286466,"user_id":53,"body":"prime_factors <- function(n) {\n  ans <- \"\"\n  i <- 2\n  while (i <= n) {\n    cnt <- 0\n    while (n %% i == 0) {\n      n <- n %\/% i\n      cnt <- cnt + 1\n    }\n    if (cnt > 1) {\n      ans <- paste(ans, sprintf(\"(%d**%d)\", i, cnt), sep=\"\")\n    } else if (cnt == 1) {\n      ans <- paste(ans, sprintf(\"(%d)\", i), sep=\"\")\n    }\n    i <- i + 1\n  }\n  if (nchar(ans) == 0) {\n    sprintf(\"(%d)\", n)\n  } else {\n    ans\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286467,"user_id":492,"body":"prime_factors <- function(n) {\n  x <- \"\"\n  fstP <- 2; sndP <- 3; p <- n\n  while( p != 1 ) {\n    cnt <- 0\n    while( p %% fstP == 0 ) {\n      p <- floor(p \/ fstP)\n      cnt <- cnt + 1\n    }\n    if (cnt) {\n      x <- paste0(x, \"(\", toString(fstP))\n      if (cnt > 1) {\n        x <- paste0(x, \"**\", toString(cnt))\n      }\n      x <- paste0(x, \")\")\n    }\n    fstP <- sndP\n    sndP <- sndP + 2\n  }\n  x\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286468,"user_id":null,"body":"trial <- function(n) {\n  x <- integer(floor(sqrt(n)))\n  i <- 1\n  while (n %% 2 == 0) {\n    x[i] <- 2\n    i <- i + 1\n    n <- n \/ 2\n  }\n  f <- 3\n  while (f^2 <= n) {\n    if (n %% f == 0) {\n      x[i] <- f\n      i <- i + 1\n      n <- n \/ f\n    } else\n      f <- f + 2\n  }\n  if (n != 1) x[i] <- n\n  x[x != 0]\n}\n\nprime_factors <- function(n) {\n  makeStr <- function(i,j) {\n    if (j == 1) paste0(\"(\",i,\")\")\n    else paste0(\"(\",i,\"**\",j,\")\")\n  }\n  counts <- summary(as.factor(trial(n)))\n  nums <- names(counts)\n  \n  paste0(mapply(makeStr, i = nums, j = counts), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286469,"user_id":null,"body":"prime_factors <- function(n) {\n  d <- 2\n  cnt <- 0\n  result <- \"\"\n  while(n > 1) {\n    if(n %% d == 0) {\n      n <- n %\/% d\n      cnt <- cnt + 1\n    }\n    else {\n      if(cnt == 1) {\n        result <- paste0(result, \"(\", d, \")\")\n      }\n      else if (cnt > 1) {\n        result <- paste0(result, \"(\", d, \"**\", cnt, \")\")\n      }\n      cnt <- 0\n      d <- d + 1\n    }\n  }\n  result <- paste0(result, \"(\", d, \")\")\n  return(result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286470,"user_id":null,"body":"\nlibrary(tidyverse)\nprimeFactors <- function(n) {\n# \u53e6\u4e00\u79cd\u89e3\u6cd5\uff1a\u5148\u8bb0\u5f55\u6240\u6709\u7684\u56e0\u5b50\uff0c\u518d\u7528 table() \u7edf\u8ba1\u9891\u6570\n  factors <- numeric(0)\n  while (n %% 2 == 0) {\n    n <- n \/ 2\n    factors[[length(factors) + 1]] <- 2\n  }\n  for (i in seq(3, floor(sqrt(n)), 2)) {\n    while (n %% i == 0) {\n      n <- n \/ i\n      factors[[length(factors) + 1]] <- i\n    }\n  }\n  if (n > 1) { # \u8fd8\u5269\u4e00\u4e2a\u5927\u8d28\u6570\u672a\u88ab\u6574\u9664\n    factors[[length(factors) + 1]] <- n\n  }\n\n  exponents <- table(factors)\n  prime_factors <- names(exponents)\n\n  map2_chr(\n    .x = prime_factors, .y = exponents,\n    .f = function(factor, exponent) {\n      if (exponent == 1) {\n        str_c(\"(\", factor, \")\")\n      } else {\n        str_c(\"(\", factor, \"**\", exponent, \")\")\n      }\n    }\n  ) %>%\n    str_c(collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286471,"user_id":null,"body":"\nlibrary(tidyverse)\nprime_factors <- function(n) {\n  e2 <- 0\n  while (n %% 2 == 0) {\n    n <- n \/ 2\n    e2 <- e2 + 1\n  }\n\n  l1 <- seq(3, floor(sqrt(n)), 2)\n  l2 <- numeric(length(l1))\n\n  for (i in 1:length(l1)) {\n    while (n %% l1[i] == 0) {\n      n <- n \/ l1[i]\n      l2[i] <- l2[i] + 1\n    }\n  }\n\n  factor_table <- data.frame(\n    factor = c(2, l1, n),\n    exponent = c(e2, l2, ifelse(n == 1, 0, 1))\n  ) %>%\n    filter(exponent != 0)\n\n  apply(factor_table, 1, function(vector) {\n    if (vector[2] == 1) {\n      str_c(\"(\", vector[1], \")\")\n    } else {\n      str_c(\"(\", vector[1], \"**\", vector[2], \")\")\n    }\n  }) %>%\n    str_c(collapse = \"\")\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286472,"user_id":null,"body":"\nlibrary(tidyverse)\nprime_factors <- function(n) {\n  e1 <- 0\n  while (n %% 2 == 0) {\n    n <- n \/ 2\n    e1 <- e1 + 1\n  }\n\n  m <- ((floor(sqrt(n)) + 1) %\/% 2) * 2 - 1\n  l1 <- seq(3, m, 2)\n  l2 <- numeric(length(l1))\n\n  for (i in 1:length(l1)) {\n    while (n %% l1[i] == 0) {\n      n <- n \/ l1[i]\n      l2[i] <- l2[i] + 1\n    }\n  }\n\n  factor_table <- data.frame(\n    factor = c(2, l1, n),\n    exponent = c(e1, l2, ifelse(n == 1, 0, 1))\n  ) %>%\n    filter(exponent != 0)\n\n  n_factor <- nrow(factor_table)\n  # n is a prime\n  if (n_factor == 0) {\n    return(str_c(\"(\", n, \")\"))\n  }\n\n  apply(factor_table, 1, function(vector) {\n    if (vector[2] == 1) {\n      str_c(\"(\", vector[1], \")\")\n    } else {\n      str_c(\"(\", vector[1], \"**\", vector[2], \")\")\n    }\n  }) %>%\n    str_c(collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286473,"user_id":null,"body":"prime_factors <- function(n) {\nfactors = c()\ni = 2\nwhile(n >= i){\n  if(!n %% i) {\n    factors <- c(factors, i)\n    n <- n\/i\n    i <- i - 1\n  }\n  i <- i + 1\n}\n\nfactors <- factors %>% table(.)\nsapply(seq_along(factors), function(i) {paste0('(',names(factors)[i], ifelse(factors[i] == 1, '', paste0('**', factors[i])),')')}) %>% paste0(., collapse=\"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54d7660d2daf68c619000d95":[{"id":286474,"user_id":492,"body":"# returns a list of vectors\nconvert_frac <- function(ls) {\n  gcdi <- function (a, b) {\n    x = abs(a); y = abs(b);\n    while (y != 0) {\n      t <- x; x <- y; y <- t %% y;\n    }\n    x\n  }\n  lcmu <- function (a, b) {\n    abs(a * b) \/ gcdi(a, b)\n  }\n  simp <- function(f) {\n    g <- gcdi(f[1], f[2])\n    c(f[1] \/ g, f[2] \/ g)\n  }\n  l <- Map(function(f) simp(f), ls)\n  d <- Map(function(f) f[2], l)\n  cd <- Reduce(lcmu, d)\n  Map(function(f) c(f[1] * cd \/ f[2], cd), l)\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286475,"user_id":null,"body":"gcd <- function(a,b) ifelse(b,Recall(b,a%%b),a)\n    \nconvert_frac <- function(ls){\n  ls <- lapply(ls,function(x) x\/gcd(x[1],x[2]))\n  g <- 1\n  for(i in ls)g <- g*i[2]\/gcd(g,i[2])\n  lapply(ls,function(x) c(g*x[1]\/x[2],g))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286476,"user_id":null,"body":"# returns a list of vectors\nconvert_frac <- function(ls) {\n  # your code\n  \n  if(length(ls)==0){\n    return(list())\n  }\n  \n  gcd <- function(x,y) {\n  r <- x%%y;\n  return(ifelse(r, gcd(y, r), y))\n  }\n  \n  lcm <- function(x,y){\n    return(x*y\/gcd(x,y))\n  }\n  \n  ls <- lapply(1:length(ls), function(x) c(ls[[x]][1]\/gcd(ls[[x]][1],ls[[x]][2]), ls[[x]][2]\/gcd(ls[[x]][1],ls[[x]][2])   ))\n  \n  lcm_vector <- function(x) {Reduce(lcm, x)}\n  D <- lcm_vector(sapply(1:length(ls), function(x) ls[[x]][2] ))  \n  list_of_vectors <- lapply(ls,  function(x) c((x[1]\/x[2])*D, D) )\n  return(list_of_vectors)  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286477,"user_id":null,"body":"convert_frac <- function(ls) {\n  \n  # return empty list case\n  if (length(ls) == 0) {\n    return(ls)\n  }\n  \n  #########################################################\n  #### STEP 0: DEFINE FUNCTION FOR PRIME FACTORIZATION ####\n  #########################################################\n  \n  primeFactorization <- function(x) {\n    prime_factors <- list()\n    \n    for (i in 1:length(x)) {\n      temp_d <- x[i]\n      temp_f <- vector()\n      prime <- 2\n      \n      while (temp_d != 1 && temp_d != 2 && any(temp_d %% 2:ceiling(sqrt(temp_d)) == 0)) {\n        if (temp_d %% prime == 0) {\n          temp_d <- temp_d \/ prime\n          temp_f <- c(temp_f, prime)\n        } else {\n          prime <- prime + 1\n          while (prime != 2 && any(prime %% 2:ceiling(sqrt(prime)) == 0)) {\n            prime <- prime + 1\n          }\n        }\n      }\n      prime_factors[[i]] <- c(temp_f, temp_d)\n    }\n    \n    return(prime_factors)\n  }\n  \n  \n  ####################################\n  #### STEP 1: SIMPLIFY FRACTIONS ####\n  ####################################\n  \n  # Determine prime factors for each element-pair (numerator and denominator) of list\n  primFacs <- list()\n  \n  for (i in 1:length(ls)) {\n    primFacs[[i]] <- primeFactorization(ls[[i]])\n  }\n  \n  # Find Greatest Common Divisor (GCD)\n  GCDs <- vector()\n  \n  for (i in 1:length(primFacs)) {\n    prime_set <- unique(unlist(primFacs[[i]]))\n    GCD <- 1\n    \n    for (j in 1:length(prime_set)) {\n      if (all(sapply(primFacs[[i]], function(x) prime_set[j] %in% x))) {\n        GCD <- GCD * (prime_set[j] ^ min(sapply(primFacs[[i]], function(x) sum(x == prime_set[j]))))\n      }\n    }  \n    GCDs <- c(GCDs, GCD)\n  }\n  \n  # Divide numerator and denominator by GCD\n  new_ls <- list()\n  \n  for (i in 1:length(ls)) {\n    new_ls[[i]] <- ls[[i]] \/ GCDs[i]\n  }\n  \n  \n  #####################################\n  #### STEP 2: FIND COMMON DIVISOR ####\n  #####################################\n  \n  # Find Least Common Multiple (LCM) of denominators\n  denoms <- sapply(new_ls, function(x) x[2])\n  primFacs <- primeFactorization(denoms)\n  prime_set <- unique(unlist(primFacs))\n  \n  count_prime <- vector()\n  \n  for (i in 1:length(prime_set)) {\n    count_prime <- c(count_prime, max(sapply(primFacs, function(x) sum(x == prime_set[i]))))\n  }\n  \n  LCM <- prod(prime_set^count_prime)   \n  \n  \n  ###################################\n  #### STEP 3: CALCULATE RESULTS ####\n  ###################################\n  \n  # Determine converted numerator relative to LCM and former denominator\n  nums <- sapply(new_ls, function(x) x[1])\n  \n  result <- list()\n  \n  for (i in 1:length(nums)) {\n    result[[i]] <- c(nums[i] * LCM \/ denoms[i], LCM)\n  }\n  \n  return(result)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286478,"user_id":null,"body":"gcd <- function (x, y){\n\n    if ( x < y ){\n        aux <- x\n        x <- y\n        y <- aux\n    }\n\n    while(y > 0){\n        aux <- y\n        y <- x%%y\n        x <- aux\n    }\n\n    return(x)\n}\n# returns a list of vectors\nconvert_frac <- function(ls) {\n\n    if ( length(ls ) == 0){\n        return(ls)\n    }\n\n    lcm <- ls[[1]][2]\n\n    for(index in 2:length(ls)){\n        x <- lcm\n        y <- ls[[index]][2]\n\n        divisor <- 2\n        while(TRUE){\n            if ( (x %% divisor == 0) && (y %% divisor == 0) ){\n                x <- x \/ divisor\n                y <- y \/ divisor \n            } else if (y %% divisor == 0 ) {\n                lcm <- lcm * divisor\n                y <- y \/ divisor\n            } else if ( (x == 1) || (y==1) ){\n                lcm <- lcm * y\n                break\n            } else {\n                divisor <- divisor + 1\n            }\n\n        }\n    }\n\n    \n\n    for (index in 1:length(ls)) {\n        ls[[index]][1] <- ls[[index]][1] * (lcm \/ ls[[index]][2])\n    }\n\n    numgcd <- ls[[1]][1]\n    for(index in 2:length(ls)){\n        numgcd <- gcd(numgcd, ls[[index]][1])\n    }\n\n    numgcd <- gcd(numgcd, lcm)\n    lcm <- lcm\/numgcd\n\n    for (index in 1:length(ls)) {\n        ls[[index]][1] <- ls[[index]][1] \/ numgcd\n        ls[[index]][2] <- lcm\n    }        \n\n    return(ls)\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286479,"user_id":null,"body":"# returns a list of vectors\nconvert_frac <- function(ls) {\n  ggd <- function (x,y){\n    print (x)\n    r=sort(c(x,y))\n     # print (r)\n      while (r[2] %%r[1] !=0){\n        print(r[2] %%r[1])\n        z=r[1]\n        r[1]=r[2] %%r[1]\n        r[2]=z\n        print (\"r\")\n        print ( r)\n      } \n    return (r[1])\n    print(\"=ggd\")\n  }\n   if (length(ls)>0){\n   for (i in 1:length(ls)){\n     print (i)\n     print (c(ls[[i]][1],ls[[i]][2]))\n     r=ggd(ls[[i]][1],ls[[i]][2])\n     ls [[i ]]=ls [[i ]]\/r\n     print (ls[[i]])\n   }\n  print (ls)\n  kgv <- function(x,y){\n     r= ggd(x,y)\n      D=x*y\/r[1]\n       print (\"D\")\n    print (D)\n     return(D)\n      \n    }\n  print(length(ls))\n   b=(ls[[1]][2])\n for (i in  2:length(ls)) {\n   a=(ls[[i]][2])\n  b=kgv(a,b)\n     print (\"b\")\n   print (b)\n  }\n  \n \nfor (i in  1:length(ls)) { \n    print(\"lijst\")\n    print(c((ls[[i]][1]*b\/ls[[i]][2]),b))\n      print( ls[i])\n    ls[[i]]=c((ls[[i]][1]*b\/ls[[i]][2]),b)\n    print( ls[[i]])\n    }}\n  \n  print (ls)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286480,"user_id":null,"body":"# returns a list of vectors\nconvert_frac <- function(ls) {\n  gcd <- function(a,b) {\n  while(b) {\n  temp = b\n  b = a %% b\n  a = temp\n  }\n  return(a)\n}\n\nscd <- function(a,b) {\n  return(a*b\/gcd(a,b))\n}\n  \ntransform <- function(frac, scd) {\n  return(list(c(scd\/frac[2]*frac[1],scd)))\n}\n  \nif (length(ls) == 0) {  \n  return(list()) \n}\n  \nfor (i in 1:length(ls)) {\n  if (gcd(ls[[i]][1],ls[[i]][2]) != 1) {\n    ls[[i]] <- ls[[i]]\/gcd(ls[[i]][1],ls[[i]][2])\n    \n  }\n}\n\ncurr_scd <- scd(ls[[1]][2],ls[[2]][2])\n\nif (length(ls) < 3) { \n  \n  return(list(c(transform(ls[[1]],curr_scd),transform(ls[[2]],curr_scd))))\n  \n} else {\n  \n  for (i in 3:length(ls)) {\n  curr_scd <- scd(curr_scd,ls[[i]][2])\n  }\n  \n  new_list <- transform(ls[[1]],curr_scd)\n  \n  for (i in 2:length(ls)) {\n    new_list <- c(new_list,transform(ls[[i]],curr_scd))\n  }\n  \n  return(new_list)\n}\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286481,"user_id":null,"body":"library(tidyverse)\n\nGCD <- function(nm) {\n    a <- min(nm[1], nm[2])\n    b <- max(nm[1], nm[2])\n    c <- 0\n    while(b %% a > 0) {\n        c <- b %% a\n        b <- a\n        a <- c\n    }\n    if(c == 0) {c <- min(nm[1], nm[2])}\n    c\n}\n\nconvert_frac <- function(ls) {\n    if(length(ls) > 0) {\n        ls <- lapply(ls, function(l) {\n            g <- GCD(c(l[1], l[2]))\n            c(l[1] \/ g, l[2] \/ g)\n        })\n        for(l in 2:length(ls)) {\n            if(l == 2) {\n                g <- GCD(c(ls[[1]][2], ls[[2]][2]))\n                d <- ls[[1]][2] * ls[[2]][2] \/ g\n            } else {\n                g <- GCD(c(d, ls[[l]][2]))\n                d <- d * ls[[l]][2] \/ g\n            }\n        }\n        lapply(ls, function(l) {\n            c(l[1] * d \/ l[2], d)\n        })\n    } else {\n        ls\n    }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286482,"user_id":null,"body":"convert_frac <- function(ls) {\n# algorithm for least common multiple\nlcm <- function(x, y) {\n  if(x > y) {\n    greater = x\n  } else {\n    greater = y\n  }\n  while(TRUE) {\n    if((greater %% x == 0) && (greater %% y == 0)) {\n      lcm = greater\n      break\n    }\n    greater = greater + 1\n  }\n  return(lcm)\n}\nlcm_vector <- function(x) Reduce(lcm, x)\n\n# algorithm to get lowest fraction\ngetlowestfraction <- function(x0){\n  eps = 1.0E-10\n  x = x0\n  a = floor(x)\n  h1 = 1\n  k1 = 0\n  h = a\n  k = 1\n  while (x-a > eps*k*k){\n    x = 1\/(x-a)\n    a = floor(x)\n    h2 = h1\n    h1 = h\n    k2 = k1\n    k1 = k\n    h = h2 + a*h1\n    k = k2 + a*k1\n  }\n  return(paste0(h,\"\/\",k))\n}\n  ls <- lapply(ls, function(x) as.numeric(unlist(strsplit(as.character(getlowestfraction(x[1]\/x[2])),\"\/\"))))\n  second_int <- sapply(ls, function(x) (x[2]))\n  smallest_m <- lcm_vector(second_int)\n  lapply(ls, function(x) round(x*smallest_m\/max(x[2])))\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286483,"user_id":53,"body":"gcd <- function (a, b) {\n  if (b == 0) a else gcd(b, a %% b)\n}\n\nlcm <- function (a, b) {\n  (a * b) %\/% gcd(a, b)\n}\n\nreduce <- function (a, b) {\n  i <- gcd(a, b)\n  c(a %\/% i, b %\/% i)\n}\n\nnorm <- function (a, b, cd) {\n  c(a * cd %\/% b, cd)\n}\n\nconvert_frac <- function(ls) {\n  xss <- list()\n  yss <- list()\n  cd <- 1\n  i <- 1\n  for (xs in ls) {\n    print(xs[1])\n    print(xs[2])\n    xss[[i]] <- reduce(xs[1], xs[2])\n    i <- i + 1\n  }\n  for (xs in xss) {\n    cd <- lcm(xs[2], cd)\n  }\n  i <- 1\n  for (xs in xss) {\n    print(xs[1])\n    print(xs[2])\n    yss[[i]] <- norm(xs[1], xs[2], cd)\n    i <- i + 1\n  }\n  yss\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54da539698b8a2ad76000228":[{"id":286484,"user_id":null,"body":"is_valid_walk <- function(walk){\n  length(walk)==10 &(sum(walk==\"n\") ==sum(walk ==\"s\")) &(sum(walk==\"w\") ==sum(walk ==\"e\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286485,"user_id":null,"body":"is_valid_walk <- function(walk){\n  #Your code here\n  correct_length <- length(walk) == 10\n  east_west_ok <- sum(walk == \"e\") == sum(walk == \"w\")\n  north_south_ok <- sum(walk == \"n\") == sum(walk == \"s\")\n  return(all(correct_length, east_west_ok, north_south_ok))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286486,"user_id":null,"body":"is_valid_walk <- function(walk){\n  s = length(walk[walk==\"s\"])\n  w = length(walk[walk==\"w\"])\n  e = length(walk[walk==\"e\"])\n  n = length(walk[walk==\"n\"])\n  \n  if((s==n)&&(e==w)&&length(walk)==10) return(TRUE);\n  return(FALSE);\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286487,"user_id":null,"body":"is_valid_walk <- function(walk){\n  length(walk) == 10 &\n  length(grep(\"s\",walk)) == length(grep(\"n\",walk)) &\n  length(grep(\"e\",walk)) == length(grep(\"w\",walk))\n  }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286488,"user_id":421,"body":"is_valid_walk <- function(walk){\n  if(length(walk) != 10) return(FALSE)\n  t <- 0\n  for(x in walk){\n    t <- switch(x, \"n\" = t + 1, \"s\" = t - 1, \"e\" = t + 2, \"w\" = t - 2)\n  }\n  t == 0\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286489,"user_id":null,"body":"is_valid_walk <- function(walk){\n  all(grepl(\"ew|we|ns|sn\", paste0(sort(walk), sort(walk)[10:1])))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286490,"user_id":null,"body":"is_valid_walk <- function(walk){\n\tdirs=list(\"w\"=complex(re=-1,im=0),\"n\"=complex(re=0,im=1),\"s\"=complex(re=0,im=-1),\"e\"=complex(re=1,im=0))\n\ttranslate <- function(x){\n\t\tdirs[[x]]\n\t}\n\t\n\tlength(walk)==10 && sum(sapply(walk,translate))==complex(0,0)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286491,"user_id":null,"body":"is_valid_walk <- function(walk){\n  \n  n <- sum(walk == \"n\")\n  e <- sum(walk == \"e\")\n  w <- sum(walk == \"w\")\n  s <- sum(walk == \"s\")\n  \n  if (n != s | e != w | sum(n, e) != 5) {\n    FALSE\n  } else {\n    TRUE\n  }\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286492,"user_id":null,"body":"is_valid_walk <- function(walk){\n  sum(1i^(1:4)[factor(walk, c(\"n\", \"e\", \"s\", \"w\"))], seq(walk)) == 55\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286493,"user_id":null,"body":"is_valid_walk <- function(walk){\n if(length(walk)==10){ #Check that the walk will take 10 min\n  x=0 #Set coordinate to 0\n  y=0\n  for(j in 1:length(walk)){ #loop through direction vector and add or substract to position\n    i=walk[j]\n    if(i==\"n\") x=x+1\n    else if(i==\"s\") x=x-1\n    else if(i==\"e\") y=y-1\n    else if(i==\"w\") y=y+1\n    }\n    if(x==0&y==0) return(TRUE) #check you are back to 0\n      else return(FALSE)\n  }\n   else return(FALSE)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54db15b003e88a6a480000b9":[{"id":286494,"user_id":53,"body":"gcd <- function(a, b) ifelse(b, Recall(b, a %% b), a)\n\nfromNb2Str <- function(n, sys) {\n  p <- Reduce(function(acc, e) {acc * e}, sys, 1)\n  q <- Reduce(function(acc, e) {(acc * e) %\/% gcd(acc, e)}, sys, 1)\n  ifelse(p < n || p !=q, \"Not applicable\", Reduce(function(acc, e) {paste(acc, sprintf(\"-%d-\", n %% e), sep=\"\")}, sys, \"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286495,"user_id":null,"body":"prime <- function(n){\n  i <- 2\n  prime <- c()\n  max <- floor( sqrt(n))\n  repeat{\n    if (n %% i == 0){\n      n <- n \/ i\n      prime <- c(prime, i)\n    } else {\n      i <- i+1 \n    }\n    if (n == 1) break\n    if (i > n) break\n  }\n  return(unique(prime))\n}\n\n\n\nfromNb2Str <- function(n, sys) {\n  product <- prod(sys)\n  if (product <= n) return(\"Not applicable\")\n  z <- unlist(sapply(sys, function(x) prime(x)))  \n  if(any(duplicated(z))) return(\"Not applicable\")\n  \n  pp <- {}\n  for (i in 1:length(sys)){\n    res <- n %% sys[i]\n    pp <- paste(pp,\"-\",res,\"-\",sep=\"\")\n  }\n  return(pp)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286496,"user_id":492,"body":"fromNb2Str <- function(n, sys) {\n  gcdi <- function (a, b) {\n    x = abs(a); y = abs(b);\n    while (y != 0) {\n      t <- x; x <- y; y <- t %% y;\n    }\n    x\n  }\n  lcmu <- function (a, b) {\n    abs(a * b) \/ gcdi(a, b)\n  }\n  prod <- Reduce(prod, sys)\n  lc <- Reduce(lcmu, sys)\n  if (prod < n || prod != lc) return(\"Not applicable\")\n  res <- \"\"\n  for (i in 1:length(sys)) {\n    res <- paste0(res, \"-\", toString(n %% sys[i]), \"-\")\n  }\n  res\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286497,"user_id":null,"body":"fromNb2Str <- function(n, sys) {\n  if(prod(sys)<=n)return('Not applicable')\n  for(i in 2:max(sys))if(sum(sys%%i==0)>1)return('Not applicable')\n  paste0(paste0('-',n%%sys,'-'),collapse='')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286498,"user_id":null,"body":"fromNb2Str <- function(n, sys) {\n  mods <- n %% sys\n  if ((prod(sys) < n) || hcf(sys)) {\n    \"Not applicable\"\n  } else {\n    paste0(\"-\", paste0(mods,  collapse = \"--\"), \"-\")\n  }\n}\n\nhcf <- function(sys) {\n  pairs <- t(combn(sys,2))\n  for (i in 1:nrow(pairs)) {\n    x <- pairs[i,]\n    while(x[2]) {\n      tmp = x[2]\n      x[2] = x[1] %% x[2]\n      x[1] = tmp\n    }\n    if (x[1] != 1) {\n      return(TRUE)\n    }\n  }\n  return(FALSE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286499,"user_id":421,"body":"gcd <- function(m, n){\n  ifelse(n == 0, m, gcd(n, m %% n))\n}\n\ncoprime <- function(arr){\n  for(i in 1:(length(arr) - 1)){\n    for(j in (i + 1):length(arr)){\n      if(gcd(arr[i], arr[j]) != 1){return(FALSE)}\n    }\n  }\n  TRUE\n}\n\nfromNb2Str <- function(n, sys) {\n  if(prod(sys) <= n || !coprime(sys)){return(\"Not applicable\")}  \n  paste0(\"-\", paste0(n %% sys, collapse = \"--\"), \"-\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286500,"user_id":null,"body":"fromNb2Str <- function(n, sys) {\n  if (prod(sys) <= n || not_pairwise_co_prime(sys)) return(\"Not applicable\")\n  \n  paste0(\"-\", paste(n %% sys, collapse = \"--\"), \"-\")\n}\n\nnot_pairwise_co_prime <- function(sys) {\n  result <- FALSE\n  combinations <- combn(sys, 2)\n\n  for ( c in split(combinations, col(combinations)) ) {\n    test <- find_mcm(c[1], c[2]) != 1\n    \n    if (test) {\n      result <- TRUE\n      break\n    }\n  }\n  \n  return(result)\n}\n\n\nfind_mcm <- function(a, b) {\n  # Euclid's algorithm\n  if (b == 0) {\n    mcm <- a\n  } else {\n    mcm <- find_mcm(b, a %% b)\n  }\n  \n  return(mcm)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286501,"user_id":null,"body":"fromNb2Str <- function(n, sys) {\n fac<-vector(\"list\",length = length(sys))\n  if (n > prod(sys))\n {\"Not applicable\"}\n  else {\n  for (i in 1:length(sys)) {\n  for (j in 2:sys[i]){\n    if ((sys[i] %% j) == 0){\n      fac[[i]]<-c(fac[[i]],j)\n    }\n  }\n  }\n if (sum(duplicated(unlist(fac))) > 0) \n {\"Not applicable\"}\n  else {remainder<-n%%sys\n  paste(\"-\",remainder,\"-\",sep=\"\",collapse = \"\")\n }\n}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286502,"user_id":null,"body":"fromNb2Str <- function(n, sys) {\n  a<-1\n  l=length(sys)\n  i<-1\n  k=c()\n  while (i<=l){\n    a<-a*sys[i]\n    d<-min(sys[-i]%%sys[i])\n    if (d==0 ){\n      return (\"Not applicable\")\n    }\n    if(sys[i]%%2==0){\n      if(sys[i+1]%%2==0 &i+1<=l){\n        return (\"Not applicable\")\n      }\n    }\n    k[i]<-n%%sys[i]\n    i<-i+1\n  }\n\n  if (n>a){\n    return (\"Not applicable\")\n  }\n  m<-paste(paste(\"-\",k,\"-\",sep=\"\"),collapse=\"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286503,"user_id":null,"body":"fromNb2Str <- function(n, sys) {\n  a<-1\n  l=length(sys)\n  i<-1\n  k=c()\n  while (i<=l){\n    print(n)\n    print(sys)\n    a<-a*sys[i]\n    d<-min(sys[-i]%%sys[i])\n    if (d==0 ){\n      return (\"Not applicable\")\n    }\n    if(sys[i]%%2==0){\n      if(sys[i+1]%%2==0 &i+1<=l){\n        return (\"Not applicable\")\n      }\n    }\n    k[i]<-n%%sys[i]\n    i<-i+1\n  }\n\n  if (n>a){\n    return (\"Not applicable\")\n  }\n  m<-paste(paste(\"-\",k,\"-\",sep=\"\"),collapse=\"\")\n  print(m)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54dc6f5a224c26032800005c":[{"id":286504,"user_id":492,"body":"stock_list <- function(listOfArt, listOfCat) {\n  if ((length(listOfArt) == 0) || (length(listOfCat) == 0)) return(\"\")\n  res <- list()\n  for (i in 1:length(listOfCat)) {res[listOfCat[i]] <- 0}\n  for (i in 1:length(listOfArt)) {\n    art <- listOfArt[i]\n    cat <- substring(art, 1, 1)\n    c <- unlist(strsplit(art, split = \" \"))\n    count <- as.numeric(c[2])\n    if (length(res[[cat]]) != 0)\n      res[cat] <- res[[cat]] + count\n  }\n  s=\"\"\n  for (i in names(res)) {s <- paste0(s, \"(\", i, \" : \", res[[i]], \") - \")}\n  substring(s, 1, nchar(s) - 3)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286505,"user_id":null,"body":"stock_list <- function(listOfArt, listOfCat) {\n  if(is.null(listOfArt)||is.null(listOfCat)) return(\"\")\n  cats <- substr(listOfArt,1,1)\n  vals <- as.numeric(sapply(strsplit(listOfArt,\" \"),`[[`,2))\n  sums <- tapply(vals,cats,sum)[listOfCat]\n  sums[is.na(sums)] <- 0\n  paste0(\"(\",listOfCat,\" : \",sums,\")\",collapse=\" - \")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286506,"user_id":null,"body":"stock_list <- function(listOfArt, listOfCat) {\n\n  print(listOfArt)\n  print(listOfCat)\n\n  if (length(listOfArt) == 0 | length(listOfCat) == 0){\n    return(\"\")\n    }\n    \n  df <- data.frame(listOfArt, stringsAsFactors = F)\n  df$quantity <- as.numeric(gsub(\"[A-z0-9]*\\\\s\", \"\", df$listOfArt))\n  df$category <- substr(df$listOfArt, 1, 1)\n\n  df <- aggregate(quantity ~ category, data = df, sum)\n\n  res <- \"\"\n\n  for (i in 1:length(listOfCat)) {\n    res <-\n      paste0(res, \"(\", listOfCat[i], \" : \", ifelse(length(df$quantity[df$category == listOfCat[i]]) == 0, 0, df$quantity[df$category == listOfCat[i]]), \") - \")\n  }\n\n  res <- substr(res, 1, nchar(res) - 3)\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286507,"user_id":421,"body":"stock_list <- function(listOfArt, listOfCat) {\n  print(c(listOfArt, listOfCat))\n  if(!length(listOfArt) || !length(listOfCat)) return(\"\")\n  arr <- c()\n  for(x in listOfCat){\n    t <- sum(as.numeric(gsub(\"\\\\D\", \"\", Filter(function(y){substr(y, 1, 1) == x}, listOfArt))))   \n    s <- paste0(\"(\", x, \" : \", t, \")\")\n    arr <- c(arr, s)\n  }\n  paste(arr, collapse = \" - \")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286508,"user_id":null,"body":"stock_list <- function(listOfArt, listOfCat) {\n  if (!length(listOfArt) || !length(listOfCat)) return(\"\")\n  \n  # split, convert to numeric, sum totals by category\n  L <- rbind(Reduce(rbind, strsplit(listOfArt, \" \")), cbind(LETTERS, \"0\"))\n  L <- data.frame(cat = substr(L[, 1], 0, 1), quant = as.numeric(L[, 2]))\n  L <- aggregate(quant ~ cat, L, FUN = sum)\n  \n  # subset relevant entries\n  M <- L[L$cat %in% listOfCat, ]\n  \n  # re-order according to input\n  row.names(M) <- M$cat\n  M <- M[listOfCat, ]\n      \n  paste0(\"(\", M$cat, \" : \", M$quant, \")\", collapse = \" - \")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286509,"user_id":null,"body":"stock_list <- function(a, b) {\n  if(!length(a)|!length(b))return('')\n  d <- c()\n  for(i in b)d <- c(d,base::sum(as.numeric(substr(a,regexpr(' ',a)+1,nchar(a))[grepl(paste0('^',i),a)])))\n  paste0(paste0('(',b,' : ',d,')'),collapse= ' - ')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286510,"user_id":null,"body":"stock_list <- function(listOfArt, listOfCat) {\n  if(length(listOfArt) == 0 | length(listOfCat) == 0) return(\"\")\n  result.split <- sapply(listOfArt, function(bookcode){return(list(name=unlist(strsplit(bookcode, split=\"\"))[1],num=as.integer(gsub('[^0-9]',\"\", bookcode))))})\n  paste0(sapply(listOfCat, function(cat){paste0(c(\"(\",cat,\" : \",sum(unlist(result.split[2,grep(cat,result.split[1,])])),\")\"),collapse = \"\")}),collapse = \" - \")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286511,"user_id":492,"body":"stock_list <- function(listOfArt, listOfCat) {\n  if ((length(listOfArt) == 0) || (length(listOfCat) == 0)) return(\"\")\n  res <- list()\n  for (i in 1:length(listOfCat)) {res[listOfCat[i]] <- 0}\n  for (i in 1:length(listOfArt)) {\n    art <- listOfArt[i]\n    cat <- substring(art, 1, 1)\n    c <- unlist(strsplit(art, split = \" \"))\n    count <- as.numeric(c[2])\n    if (length(res[[cat]]) != 0)\n      res[cat] <- res[[cat]] + count\n  }\n  s=\"\"\n  for (i in names(res)) {s <- paste0(s, \"(\", i, \" : \", res[[i]], \") - \")}\n  substring(s, 1, nchar(s) - 3)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286512,"user_id":null,"body":"stock_list <- function(listOfArt, listOfCat) {\n  if(listOfCat == \"\" || is.null(listOfCat) || is.null(listOfArt)) return(\"\")\n  # your code\n  r2 = numeric(length(listOfCat))\n  names(r2) <- listOfCat\n  \n  b <- strsplit(listOfArt, \" \")\n  g <- sapply(b, function(x){\n    strsplit(x[1], '')[[1]][1]\n  })\n  r <- sapply(b, function(x) {\n    as.numeric(x[2])\n  })\n  r <- sapply(split(r, g), sum)\n \n  \n  for (i in listOfCat) {\n    r2[[i]] <- r2[[i]] + r[i]\n  }\n  r2[is.na(r2)] <- 0\n  paste0(\"(\", paste(paste(names(r2), \":\",r2), collapse= \") - (\"), \")\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286513,"user_id":null,"body":"stock_list <- function(listOfArt, listOfCat) {\n  cat(listOfArt)\n  cat(listOfCat)\n  b = listOfArt\n  c = listOfCat\n  d = LETTERS\n  if(length(listOfArt)==0){\n    cat('123333')\n    return('')\n  }\n  if(length(listOfCat)==0){\n    cat('123333')\n    return('')\n  }\n  for (i  in 1:length(strsplit(b,''))) {\n    if (strsplit(b,'')[[i]][1]%in%c) {\n      d1 = rep(strsplit(b,'')[[i]][1],strsplit(b,' ')[[i]][2])\n      d = append(d,d1)\n    }\n  }\n  a = c()\n  for (i in 1:length(c)) {\n    a = paste(a,c[i],' : ',table(d)[names(table(d))==c[i]]-1,') - (',sep = '')\n    }\n  a = substr(a,1,nchar(a)-4)\n  a = paste('(',a,sep = '')\n  return(a)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54de3257f565801d96001200":[{"id":286514,"user_id":null,"body":"balanceStatements <- function(lst) {\n  lst <- unlist(strsplit(lst,', *'))\n  l <- strsplit(lst,' ')\n  bad <- c()\n  buy <- sell <- 0\n  for(i in seq_along(l)){\n    if(length(l[[i]])!=4){\n      bad <- c(bad,lst[i])\n      } else if(grepl('[^0-9]',l[[i]][2]) | grepl('[^0-9.]',l[[i]][3]) |\n                !grepl('\\\\.',l[[i]][3]) | grepl('[^BS]',l[[i]][4])){\n      bad <- c(bad,lst[i])\n    } else if(l[[i]][4]=='B'){\n      buy <- buy+prod(as.numeric(l[[i]][2:3]))\n    } else if(l[[i]][4]=='S')sell <- sell+prod(as.numeric(l[[i]][2:3]))\n  }\n  sprintf('Buy: %.0f Sell: %.0f%s',buy,sell,ifelse(length(bad),sprintf('; Badly formed %i: %s ;',length(bad),paste0(bad,collapse=' ;')),''))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286515,"user_id":492,"body":"balanceStatements <- function(lst) {\n  examItem <- function(item) {\n    rg <- regexpr(\"^[^\\\\s]+\\\\s\\\\d+\\\\s\\\\d*\\\\.\\\\d+\\\\s(B|S)\", item, perl=TRUE)\n    MM <- regmatches(item, rg)\n    if (length(MM) == 0) return(c(-1, -1))\n    a <- unlist(strsplit(item, split = \" \"))\n    if (a[length(a)] == \"B\") b <- 1\n    else b <- 0\n    c(b, as.numeric(a[2]) * as.numeric(a[3]))\n  }\n  if (nchar(lst) == 0) return(\"Buy: 0 Sell: 0\")\n  bought <- 0; sold <- 0; bad <- c(); ls <- unlist(strsplit(lst, split = \", \"))\n  for (i in 1:length(ls)) {\n    item <- ls[i]\n    form <- examItem(item)\n    if ((form[1] == -1) && (nchar(item) != 0)) {\n      bad <- c(bad, paste0(item, \" ;\"))\n    }\n    else if (form[1] !=  0) bought <- bought + form[2]\n         else\n          sold <- sold + form[2];\n  }\n  s <- paste0(sprintf(\"Buy: %.0f Sell: %.0f\", bought, sold))\n  if (length(bad) != 0) {\n    t <- paste(bad, collapse = '')\n    s <- paste0(s, \"; Badly formed \", toString(length(bad)), \": \", t)\n  }\n  s\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286516,"user_id":669,"body":"balanceStatements <- function(lst) {\n  if (lst == \"\") {\n    return(\"Buy: 0 Sell: 0\")\n  }\n  quotes <- stringr::str_split(lst, \", \", simplify = TRUE)\n  parts <- stringr::str_split(quotes, \" \", simplify = TRUE)\n\n  well_formed <- grepl(\"^\\\\d+$\", parts[,2]) &\n    grepl(\"^(\\\\d+)?\\\\.\\\\d+$\", parts[,3]) &\n    parts[,4] %in% c(\"B\", \"S\")\n  \n  parts <- parts[well_formed,, drop = FALSE]\n  \n  amt <- as.numeric(parts[,2])\n  prc <- as.numeric(parts[,3])\n\n  b <- sum(amt[parts[,4] == \"B\"] * prc[parts[,4] == \"B\"])\n  s <- sum(amt[parts[,4] == \"S\"] * prc[parts[,4] == \"S\"])\n  \n  if (any(!well_formed)) {\n    bad_msg <- paste0(\n      \"; Badly formed \", sum(!well_formed), \": \",\n      paste(quotes[!well_formed], collapse = \" ;\"), \" ;\")\n  } else {\n    bad_msg <- \"\"\n  }\n  paste0(sprintf(\"Buy: %.0f Sell: %.0f\", b, s), bad_msg)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286517,"user_id":null,"body":"balanceStatements <- function(lst) {\n  if (length(lst) == 0) return (\"Buy: 0 Sell: 0\")\n  buy <- 0; sell <- 0\n  bad_orders <- c()\n  for (order in unlist(strsplit(lst, \",\\\\s*\"))) {\n    if (! grepl(\"\\\\S+\\\\s+\\\\d+\\\\s+(\\\\d*\\\\.\\\\d+)\\\\s+(B|S)\", order)) {\n      bad_orders <- c(bad_orders, order)\n      next\n    }\n    a <- unlist(strsplit(order, \" \"))\n    val <- round(as.integer(a[2]) * as.numeric(a[3]))\n    if (a[4] == \"B\") buy <- buy + val else sell <- sell + val\n  }\n  ret <- paste(\"Buy: \", buy, \" Sell: \", sell, sep=\"\")\n  if (length(bad_orders) > 0) {\n    ret <- paste(ret, sprintf(\"; Badly formed %d: \", length(bad_orders)), sep=\"\")\n    for (b in bad_orders)\n      ret <- paste(ret, paste(b, \";\"), sep=\"\")\n  }\n  ret\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286518,"user_id":null,"body":"\nbalanceStatements <- function(lst) {\n  statement <- trimws(strsplit(lst, split=\",\")[[1]])\n  error <- grepl(\"^.*\\\\s[0-9]*\\\\s[-+]?[0-9]*([.][0-9]+)\\\\s[A-z]{1}$\", statement)\n  \n  df <- data.frame(\n    statement,\n    error,\n    stringsAsFactors = FALSE\n  )\n  \n  bad_fmt <- paste(paste(df[df$error==FALSE,1],\" ;\",sep=\"\"), collapse=\"\")\n  n_bad <- nrow(df[df$error==FALSE,])\n\n  \n  good_fmt <- df[df$error==TRUE,]\n  good_fmt$type <- regmatches(good_fmt$statement,regexpr(\"[A-Z]$\",good_fmt$statement))\n  good_fmt$quant <- as.numeric(regmatches(good_fmt$statement, regexpr(\"\\\\s[0-9]*\\\\s\", good_fmt$statement)))\n  good_fmt$price <- as.numeric(regmatches(good_fmt$statement, regexpr(\"[-+]?[0-9]*([.][0-9]+)\", good_fmt$statement)))\n  good_fmt$total <- good_fmt$quant*good_fmt$price\n  \n  buy <- round(sum(good_fmt[good_fmt$type==\"B\",\"total\"]),0)\n  sell <- round(sum(good_fmt[good_fmt$type==\"S\",\"total\"]),0)\n  \n  if (n_bad==0){\n    result <- paste(\"Buy: \", buy, \" Sell: \",sell,sep=\"\")\n    return(result)\n  } else {\n    result <- paste(\"Buy: \", buy, \" Sell: \",sell,\"; \",\"Badly formed \",n_bad,\": \",bad_fmt,sep=\"\")\n    return(result)\n  }\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286519,"user_id":null,"body":"balanceStatements <- function(lst) {\n  if(nchar(lst)==0) { return(\"Buy: 0 Sell: 0\")}\n  init <- unlist(strsplit(lst, \", \"))\n  errorString <- c()\n  okS <- c()\n  okB <- c()\n  sumS <- 0\n  sumB <- 0\n  returnMe <- \"\"\n  \n  for(i in 1:length(init)){\n    if(substr(init[i], nchar(init[i]), nchar(init[i])) != \"B\" && substr(init[i], nchar(init[i]), nchar(init[i])) != \"S\"){\n      print(substr(init[i], nchar(init[i]), nchar(init[i]))==\"B\")\n      errorString <- c(errorString, init[i])\n    }\n    else if (substr(init[i], nchar(init[i]), nchar(init[i])) == \"S\") {\n      checkS <- unlist(strsplit(init[i], \" \"))\n      if(grepl(\".\", checkS[2], fixed=TRUE) == TRUE || grepl(\".\", checkS[3], fixed=TRUE) == FALSE){\n        errorString <- c(errorString, init[i])\n      }\n      else {\n        okS <- c(okS, init[i])\n      }\n    }\n    else {\n      checkB <- unlist(strsplit(init[i], \" \"))\n      if(grepl(\".\", checkB[2], fixed=TRUE) == TRUE || grepl(\".\", checkB[3], fixed=TRUE) == FALSE){\n        errorString <- c(errorString, init[i])\n      }\n      else {\n        okB <- c(okB, init[i])\n      }\n    }\n  }\n  \n  for(i in 1:length(okS)){\n    print(length(okS))\n    print(1)\n    if(length(okS)==0){\n      print(2)\n      next\n    }\n    nthsumS <- unlist(strsplit(okS[i], \" \"))\n    sumS <- sumS + (as.numeric(nthsumS[2])*as.numeric(nthsumS[3]))\n  }\n  for(i in 1:length(okB)){\n    if(length(okB)==0){\n      next\n    }\n    nthsumB <- unlist(strsplit(okB[i], \" \"))\n    sumB <- sumB + (as.numeric(nthsumB[2])*as.numeric(nthsumB[3]))\n  }\n  returnMe <- paste(\"Buy: \", as.character(sumB), \" Sell: \", as.character(sumS), sep = \"\")\n  print(nchar(returnMe))\n  for(k in 1:length(errorString)){\n    if(length(errorString)==0){ next }\n    if(k==1) { returnMe <- paste(returnMe, \"; Badly formed \", length(errorString), \": \", sep = \"\") }\n    returnMe <- paste(returnMe, errorString[k], \" ;\" ,sep=\"\")\n  }\n  return(returnMe)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286520,"user_id":null,"body":"library(stringr)\nlibrary(magrittr)\nlibrary(dplyr)\n\nbalanceStatements <- function(lst) {\n\n  if(nchar(lst) < 1){return(\"Buy: 0 Sell: 0\")}\n  \n  orders <- lst %>%\n    str_split(pattern = \",\\\\s+\") %>%\n    unlist() %>%\n    as_tibble() \n  \n  tib <- orders$value %>%\n    str_split(pattern = \"\\\\s+\", simplify = TRUE) %>%\n    as_tibble() %>%\n    mutate(stock = V1, \n           quant = as.integer(V2), \n           price = ifelse(str_detect(V3, pattern = \"\\\\.\"), as.double(V3), NA),\n           action = V4, \n           total = quant * price) %>%\n    select(-(V1:V4)) %>%\n    mutate(badorder = ifelse(is.na(quant) | quant == \"\" | is.na(price) | price == \"\" | is.na(action) | action == \"\" , row_number(), \"OK\"))\n  \n  good_orders <- tib %>%\n    filter(badorder == \"OK\") %>%\n    group_by(action) %>%\n    summarize(tot = sum(total, na.rm = TRUE))\n  \n  bad_orders <- tib %>%\n    filter(badorder != \"OK\") %>%\n    mutate(badorder = as.numeric(badorder), \n           orig = orders$value[badorder]) %>%\n    select(badorder, orig)\n  \n  bad_vec <- paste0(\"; Badly formed \", nrow(bad_orders), \": \")\n  \n  if (nrow(bad_orders) > 0) {\n    \n    for (i in 1:nrow(bad_orders)) {\n      bad_vec <- str_c(bad_vec, paste0((bad_orders$orig[i])),  \" ;\")\n    }\n    \n  } else {\n    bad_vec <- \"\"\n  }\n\nresult <- paste0(\"Buy: \", \n       max(good_orders[good_orders$action == \"B\",]$tot, 0),\n       \" Sell: \", \n       max(good_orders[good_orders$action == \"S\",]$tot, 0),\n       bad_vec)\n  result\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286521,"user_id":null,"body":"library(stringr)\nlibrary(magrittr)\nlibrary(dplyr)\n\n\nbalanceStatements <- function(lst) {\n\n  print(lst)\n  if(nchar(lst) < 1){return(\"Buy: 0 Sell: 0\")}\n\n  \n  orders <- lst %>%\n    str_split(pattern = \",\\\\s+\") %>%\n    unlist() %>%\n    as_tibble() \n  \n  tib <- orders$value %>%\n    str_split(pattern = \"\\\\s+\", simplify = TRUE) %>%\n    as_tibble() %>%\n    mutate(stock = V1, \n           quant = as.integer(V2), \n           price = ifelse(str_detect(V3, pattern = \"\\\\.\"), as.double(V3), NA),\n           action = V4, \n           total = quant * price) %>%\n    select(-(V1:V4)) %>%\n    mutate(badorder = ifelse(is.na(quant) | quant == \"\" | is.na(price) | price == \"\" | is.na(action) | action == \"\" , row_number(), \"OK\"))\n    \n    \n  \n  good_orders <- tib %>%\n    filter(badorder == \"OK\") %>%\n    group_by(action) %>%\n    summarize(tot = sum(total, na.rm = TRUE))\n  \n  bad_orders <- tib %>%\n    filter(badorder != \"OK\") %>%\n    mutate(badorder = as.numeric(badorder), \n           orig = orders$value[badorder]) %>%\n    select(badorder, orig)\n  \n  bad_vec <- paste0(\"; Badly formed \", nrow(bad_orders), \": \")\n  \n  if (nrow(bad_orders) > 0) {\n    \n    for (i in 1:nrow(bad_orders)) {\n      bad_vec <- str_c(bad_vec, paste0((bad_orders$orig[i])),  \" ;\")\n    }\n    \n  } else {\n    bad_vec <- \"\"\n  }\n\nresult <- paste0(\"Buy: \", \n       max(good_orders[good_orders$action == \"B\",]$tot, 0),\n       \" Sell: \", \n       max(good_orders[good_orders$action == \"S\",]$tot, 0),\n       bad_vec)\n  result\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286522,"user_id":null,"body":"balanceStatements <- function(s) {\n  # Returns a character string of the buy and sell amounts and invalid input\n  #\n  # Args:\n  #  s: a character string of individual orders separated by commas\n  \n  # Split the input into a vector of orders, then into a list of chr vectors\n  o.chrvec <- strsplit(s, \", \")[[1]]\n  o.lstchr <- strsplit(o.chrvec, \" \")\n  \n  # Create a function to test if an individual order is valid\n  isValid <- function(x) {\n    if(length(x) != 4) return(FALSE)\n    if(grepl(\"\\\\.\", x[2])) return(FALSE)\n    if(!grepl(\"\\\\.\", x[3])) return(FALSE)\n    TRUE\n  }\n  \n  # Test if each order is valid, and create a list of only valid orders\n  valid.vec <- vapply(o.lstchr, isValid, logical(1))\n  oval.lst <- o.lstchr[valid.vec]\n  \n  # Create a function to get the amounts from an order, and apply it\n  getAmount <- function(x) as.numeric(x[2]) * as.numeric(x[3])\n  amt.vec <- vapply(oval.lst, getAmount, numeric(1))\n  \n  # Create a logical vector for buy orders, calculate buy and sell amounts\n  buy.lgl <- vapply(oval.lst, function(x) x[4] == \"B\", logical(1))\n  buy.amt <- sum(amt.vec[buy.lgl])\n  sell.amt <- sum(amt.vec[!buy.lgl])\n  \n  # Assemble the first portion of the character output, return it if all valid\n  first <- paste0(\"Buy: \", buy.amt, \" Sell: \", sell.amt)\n  bf.count <- sum(!valid.vec)  \n  if(bf.count == 0L) return(first)\n  \n  # If some orders are bad, assemble them and add them to the output string\n  bf.vec <- o.chrvec[!valid.vec]\n  second <- paste0(bf.vec, \" ;\", collapse = \"\")\n  paste0(first, \"; Badly formed \", bf.count, \": \", second)\n\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286523,"user_id":null,"body":"wellformed <- function(v) {\n  if (length(v)!=4) return(FALSE)\n  Qot <- regexpr(\" \",v[1])==-1\n  Qty <- regexpr(\"\\\\.\",v[2])==-1\n  Prx <- regexpr(\"\\\\.\",v[3])> 0\n  Sts <- v[4] %in% c(\"B\",\"S\")\n  return(Qot && Qty && Prx && Sts)\n}\n\nbalanceStatements <- function(lst) {\n  v <- unlist(strsplit(lst,split = \", \"))\n  err <- c()\n  buy <- 0\n  sell <- 0\n  for (x in v) {\n    q <- unlist(strsplit(x,split = \" \"))\n    if (!wellformed(q)) {\n      err <- c(err, sprintf(\"%s ;\",x))\n    } else {\n      switch (q[4],\n        \"B\" = (buy <- buy + prod(as.numeric(q[2:3]))),\n        \"S\" = (sell <- sell + prod(as.numeric(q[2:3]))),\n      )\n    }\n  }\n  ifelse(length(err)==0,sprintf(\"Buy: %s Sell: %s\", buy, sell),sprintf(\"Buy: %s Sell: %s; Badly formed %d: %s\", buy, sell, length(err), paste0(err,collapse = \"\")))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286524,"user_id":null,"body":"balanceStatements <- function(lst) {\n  orders <- strsplit(lst, \", *\")[[1]]\n  badordercount <- 0\n  badorder <- \"\"\n  buytotal <- 0\n  selltotal <- 0\n  pattern <- \"^(\\\\S+) (\\\\d+) (\\\\d+\\\\.\\\\d*|\\\\d*\\\\.\\\\d+) ([BS])$\"\n  for(ord in orders) {\n    if(grepl(pattern, ord)) {\n      amount <- as.integer(sub(pattern, \"\\\\2\", ord)) * as.numeric(sub(pattern, \"\\\\3\", ord))\n      action <- sub(pattern, \"\\\\4\", ord)\n      if(action == \"B\") buytotal <- buytotal + amount\n      if(action == \"S\") selltotal <- selltotal + amount\n    } else {\n      badordercount <- badordercount + 1\n      badorder <- paste0(badorder, ord, \" ;\")\n    }\n  }\n  output <- paste0(\"Buy: \", buytotal, \" Sell: \", selltotal)\n  if(badordercount > 0) {\n    output <- paste0(output, \"; Badly formed \", badordercount, \": \", badorder)\n  }\n  return(output)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286525,"user_id":null,"body":"balanceStatements <- function(lst) {\n  if(nchar(lst)==0) return (\"Buy: 0 Sell: 0\")\n  v <- strsplit(lst, \", \")[[1]]\n  l <- strsplit(v, \" \")\n  correct <- sapply(l, function(x){\n    length(x)==4 && gregexpr(\"\\\\D\", x[2])==(-1) && gregexpr(\"[.]\", x[3])>(-1)\n  })\n  l <- l[correct]\n  trade_sums <- sapply(l, function(x) {\n    if (toupper(x[4])==\"B\") return(c(prod(as.numeric(x[2:3])),0))\n    else if (toupper(x[4])==\"S\") return(c(0, prod(as.numeric(x[2:3]))))\n  })\n  b <- sum(trade_sums[1,])\n  s <- sum(trade_sums[2,])\n  res <- paste(\"Buy:\", b, \"Sell:\", s, sep=\" \")\n  no_mistakes <- sum(!(correct))\n  if (no_mistakes>0){\n    badly_formed =paste(\"; Badly formed \", no_mistakes, \": \", sep=\"\")\n    mistakes <- sapply(which(!(correct)), function(x) paste(v[x], \";\", sep=\" \"))\n    mistakes <- paste(mistakes, collapse=\"\")\n    badly_formed <- paste(badly_formed, mistakes, sep=\"\")\n    res <- paste(res, badly_formed, sep=\"\")\n  }\n  print (res)\n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286526,"user_id":null,"body":"balanceStatements <- function(lst) {\n  \n  fullOrderPattern <- paste0(\"^[^[:blank:]]+[[:blank:]]+[[:digit:]]+[[:blank:]]+[[:digit:]]*\\\\.{1}[[:digit:]]+[[:blank:]]+[BS]{1}$\")\n  \n  allOrders <- trimws(unlist(strsplit(lst,\",\")))\n  correctOrderslist <- strsplit(allOrders[grepl(fullOrderPattern,allOrders)],\" \")\n  WrongOrders <- allOrders[!grepl(fullOrderPattern,allOrders)]\n  \n  quote <- sapply(correctOrderslist, \"[\", 1)\n  quantity <- as.integer(sapply(correctOrderslist, \"[\", 2))\n  price <- as.double(sapply(correctOrderslist, \"[\", 3))\n  status <- sapply(correctOrderslist, \"[\", 4)\n  orders <- data.frame(quote, quantity, price, totalPrice = quantity * price, status, stringsAsFactors = FALSE)\n  \n  output <- paste0(\"Buy: \",sum(subset(orders$totalPrice,status==\"B\")), \" Sell: \", sum(subset(orders$totalPrice,status==\"S\")))\n  \n  if(length(WrongOrders)>0)\n    output <- paste0(output,\"; Badly formed \",length(WrongOrders), \": \")\n  \n  output <- paste0(output,paste0(WrongOrders,collapse =  \" ;\"  ), (if(length(WrongOrders)>0) \" ;\"))\n  \n  return(output)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"54e320dcebe1e583250008fd":[{"id":286527,"user_id":492,"body":"alphabet <- unlist(strsplit('0123456789ABCDEFGHIGKLMNOPQRSTUWXYZ', split =\"\"))\ndec_2_fact_string <- function(nb) {\n  res <- ''; base = 1\n  while(nb > 0) {\n    res <- paste0(alphabet[nb %% base + 1], res)\n    nb <- floor(nb \/ base)\n    base <- base + 1\n  }\n  res\n}\nfact_string_2_dec <- function(str) {\n  str <- unlist(strsplit(str, split =\"\")); res <- 0; fact <- 1\n  for (i in (length(str) - 1):1) {\n    a <- which(alphabet == str[i])\n    fact <- fact * (length(str) - i)\n    res <- res + (a - 1) * fact\n  }\n  res\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 21:23:33"},{"id":286528,"user_id":null,"body":"dec_2_fact_string <- function(val) {\n  res <- c(); i <- 1\n  while (val >= 1) {\n    code <- val %% i\n    res <- c(res, ifelse(code >= 10, LETTERS[code - 9], as.character(code)))\n    val <- val %\/% i\n    i <- i + 1\n  }\n  paste0(rev(res), collapse = '')\n}\n\n\n\nall_letter <- as.character(10:35)\nnames(all_letter) <- LETTERS\n\nfact_string_2_dec <- function(str) {  \n  x <- strsplit(str, split = '')[[1]]\n  x <- as.numeric(stringr::str_replace_all(x, all_letter))\n  sum(x * factorial(length(x):1 - 1))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 21:23:31"},{"id":286529,"user_id":null,"body":"library(stringr)\n\nnumToL <- function(num){\n  if (num <= 9) return(toString(num))\n  else return(intToUtf8(num -10L + utf8ToInt(\"A\")))\n}\n\ndec_2_fact_string <- function(nb) {\n  i <- 0\n  facs <- c()\n  while(factorial(i) <= nb){\n    i = i+1\n  }\n  for (f in factorial(seq(i-1,0))){\n    facs <- c(facs,nb %\/% f)\n    nb <- nb %% f\n  }\n  str <- sapply(facs,numToL)\n  str <- paste(str, collapse = '')\n  return(str)\n}\n\nlToNum <- function(l){\n  utf8ToInt(l) - utf8ToInt(\"A\") + 10L\n}\n\nfact_string_2_dec <- function(str) {\n  x <- strsplit(str,'')[[1]]\n  x <- strtoi(str_replace_all(x,'[A-Z]',lToNum))\n  fac <- factorial(seq(length(x)-1,0))\n  return(sum(x*fac))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 20:49:34"},{"id":286530,"user_id":null,"body":"dec_2_fact_string <- function(nb) {\n  res <- c()\n  i <- 1\n  val <- nb\n  while (val >= 1) {\n    code <- val %% i\n    res <- c(res, ifelse(code >= 10, LETTERS[code - 9], as.character(code)))\n    val <- val %\/% i\n    print(paste(val, \" \", val %% i))\n    i <- i + 1\n  }\n  paste0(rev(res), collapse = '')\n}\n\n\n\nall_letter <- as.character(10:35)\nnames(all_letter) <- LETTERS\n\nfact_string_2_dec <- function(str) {  \n  x <- strsplit(str, split = '')[[1]]\n  x <- as.numeric(stringr::str_replace_all(x, all_letter))\n  sum(x * factorial(length(x):1 - 1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 20:49:34"},{"id":286531,"user_id":null,"body":"dec_2_fact_string <- function(nb) {\n  sm <- c()\n  i <- 0\n  while (factorial(i) < nb) {\n    i <- i + 1\n  }\n  mx <- i\n  while (nb > 0) {\n    x <- nb %\/% factorial(i-1)\n    if (x < 10) {\n      sm <- c(sm, x) \n    } else {\n      sm <- c(sm, LETTERS[x-9])\n    }\n    nb <- nb %% factorial(i-1)\n    i <- i - 1\n  }\n  sm <- c(sm, rep(\"0\", mx - length(sm)))\n  return(paste(sm, collapse = \"\"))\n}\n\nfact_string_2_dec <- function(str) {\n  str <- rev(unlist(strsplit(str, \"\")))\n  dec <- 0\n  for (i in 1:length(str)) {\n    if (any(str[i] %in% LETTERS)) {\n      dec <- dec + factorial(i-1) * (which(str[i] == LETTERS) + 9)\n    } else {\n      dec <- dec + factorial(i-1) * as.integer(str[i])\n    }\n  }\n  return(dec)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 20:49:34"},{"id":286532,"user_id":null,"body":"## Decimal-to-Factorial-and-Back.R\n# \u5c06 0:35 \u7684\u9636\u4e58\u89c6\u4e3a\u4e00\u7ec4\u57fa\n# dec_2_fact_string() \u662f\u5bf9\u53c2\u6570\u5411\u7279\u5b9a\u4e00\u7ec4\u57fa\u5206\u89e3\u51fa\u5750\u6807\u7684\u8fc7\u7a0b\n# fact_string_2_dec() \u662f\u5df2\u77e5\u5750\u6807\u548c\u57fa\u6c42\u548c\u7684\u8fc7\u7a0b\n\n\nlibrary(tidyverse)\n\nhash <- \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\" %>%\n  str_split(\"\") %>%\n  unlist()\n\n\ndec_2_fact_string <- function(nb) {\n  # \u5750\u6807\n  x <- character(0)\n\n  # \u6700\u5927\u7684\u57fa\n  base_max <- 1\n  while (factorial(base_max + 1) <= nb) {\n    base_max <- base_max + 1\n  }\n\n  # \u904d\u5386\u57fa\n  i <- base_max\n  while (i >= 0) {\n    x[length(x) + 1] <- hash[nb %\/% factorial(i) + 1]\n    nb <- nb %% factorial(i)\n    i <- i - 1\n  }\n\n  x %>%\n    str_c(collapse = \"\")\n}\n\n\nfact_string_2_dec <- function(str) {\n  # \u5750\u6807\n  x <- str %>%\n    str_split(\"\") %>%\n    unlist() %>%\n    rev() %>%\n    map_dbl(function(char) {\n      which(hash == char) - 1 \n    })\n\n  # \u57fa\n  base <- factorial(seq_along(x) - 1)\n\n  sum(x * base)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 20:49:34"},{"id":286533,"user_id":null,"body":"library(tidyverse)\nhash <- \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\" %>% str_split('') %>% unlist()\n\n\ndec_2_fact_string <- function(nb){\n  # \u5750\u6807\n  x <- character(0)\n  \n  # \u6700\u5927\u7684\u57fa\u5411\u91cf\n  base_max <- 1\n  while(factorial(base_max + 1) <= nb){\n    base_max <- base_max + 1\n  }\n  \n  # \u4ece\u5927\u5230\u5c0f\uff0c\u904d\u5386\u57fa\u5411\u91cf\n  i <- base_max\n  while(i>=0){\n    x[length(x)+1] <- hash[nb %\/% factorial(i) + 1]\n    nb <- nb %% factorial(i)\n    i <- i-1\n  }\n  \n  x %>% str_c(collapse = '')\n}\n\n\nfact_string_2_dec <- function(str) {\n  x <- str %>%\n    str_split(\"\") %>%\n    unlist() %>%\n    rev() %>% map_dbl(function(ch){\n      which(hash == ch) - 1 \n    })\n  \n  base <- factorial(0:(length(x)-1))\n    \n  sum(x * base)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 20:49:34"},{"id":286534,"user_id":null,"body":"dec_2_fact_string <- function(nb){\n    d <- c(13:1)\n    ans <- \"0\"\n    for( i in d){\n        check = nb\/factorial(i)\n        if( check > 1){\n            d = c(2:(i+1))\n            break\n        }\n    }\n    for( i in d){\n        num = nb%%i\n        if(num >= 10){\n            num = gsub(num, LETTERS[num - 9], num)\n        }\n        ans = paste(c(num,ans), collapse = \"\")\n        nb = floor(nb\/i)\n    }\n    ans\n}\n\nfact_string_2_dec <- function(str) {\n    l = 1\n    m = 1\n    factorials = 0\n    rep = NULL\n    str = unlist(strsplit(str,split = \"\"))\n    if(NA %in% as.numeric(str)){\n    x = LETTERS[ LETTERS %in% str]\n    for(i in x){\n    rep = c(rep,which(LETTERS == i) + 9)\n        }\n      for(i in x){\n      str = gsub( i, replacement = rep[l] , str)\n      l = l + 1\n          }\n      }\n    x2 = as.numeric(str)\n    len = length(x2)\n    int = matrix(x2, nrow = len)\n    while(m < len){\n        factorials = c(factorial(m),factorials)\n        m = m + 1\n    }\n    factorials = matrix(factorials, nrow = length(factorials))\n    sum(int * factorials)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 20:49:34"},{"id":286535,"user_id":null,"body":"dec_2_fact_string <- function(nb){\n    print(nb)\n    d <- c(13:1)\n    ans <- \"0\"\n    for( i in d){\n        check = nb\/factorial(i)\n        if( check > 1){\n            d = c(2:(i+1))\n            break\n        }\n    }\n    print(d)\n    for( i in d){\n        num = nb%%i\n        print(num)\n        if(num >= 10){\n            num = gsub(num, LETTERS[num - 9], num)\n        }\n        ans = paste(c(num,ans), collapse = \"\")\n        nb = floor(nb\/i)\n    }\n    print(ans)\n}\n\nfact_string_2_dec <- function(str) {\n    print(str)\n    l = 1\n    m = 1\n    factorials = 0\n    rep = NULL\n    str = unlist(strsplit(str,split = \"\"))\n    if(NA %in% as.numeric(str)){\n    x = LETTERS[ LETTERS %in% str]\n    for(i in x){\n    rep = c(rep,which(LETTERS == i) + 9)\n        }\n      for(i in x){\n      str = gsub( i, replacement = rep[l] , str)\n      l = l + 1\n          }\n      }\n    x2 = as.numeric(str)\n    len = length(x2)\n    int = matrix(x2, nrow = len)\n    while(m < len){\n        factorials = c(factorial(m),factorials)\n        m = m + 1\n    }\n    factorials = matrix(factorials, nrow = length(factorials))\n    print(int)\n    print(factorials)\n    print(sum(int * factorials))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 20:49:34"},{"id":286536,"user_id":null,"body":"dec_2_fact_string <- function(nb) {\n  \n    result <- \"0\"\n\n    number <- 2\n\n    while (nb > 0){\n        digit <- (nb %% number)\n\n        if ( digit > 9 )\n            digit <- rawToChar(as.raw(55 + digit))\n\n        result <- paste(digit, result, sep='')\n        nb <- nb %\/% number\n        number <- number + 1\n    }\n    \n    return (result)\n}\nfact_string_2_dec <- function(str) {\n    numbers <- unlist(strsplit(str, split = ''))\n\n    result <- 0\n    len <- length(numbers)\n    for (index in 0:(len-1))\n    {\n        if ( !is.na(as.integer(numbers[index + 1])))\n            number <- as.integer(numbers[index + 1])\n        else\n            number <- as.integer(charToRaw(numbers[index + 1])) - 55\n\n        result <- result * len + number\n        len <- len -1\n    }\n\n    return(result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 20:49:34"}],"54f8693ea58bce689100065f":[{"id":286537,"user_id":null,"body":"decompose <- function(n) {\n  x <- eval(parse(text = format(n, digits = 22)))\n  a <- integer(0)\n  b <- if (x >= 1) x %\/% 1\n  x <- x %% 1\n  while (x > .Machine$double.eps) {\n    a <- c(a, ceiling(1 \/ x - sqrt(.Machine$double.eps)))\n    x <- x - 1 \/ tail(a, 1)\n  }\n  a <- if(length(a)) paste0(\"1\/\", a)\n  paste0(c(b, a), collapse = \",\")\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 21:58:29"},{"id":286538,"user_id":492,"body":"library(MASS)\ndecompose <- function(n) {\n  num <- MASS:::.rat(n)$rat[1]; den <-MASS:::.rat(n)$rat[2]\n  arr <- c()\n  if (num >= den) {\n    arr <- c(arr, toString(as.integer(num \/ den)))\n    num <- num %% den\n  }\n  i <- 2\n  while (TRUE) {\n    if (den <= i * num) {\n      arr <- c(arr, paste0(\"1\/\", toString(i)))\n      num <- num * i - den\n      den <- den * i\n    }\n    if (num == 0) {\n      break\n    }\n    i <- i + 1\n  }\n  paste(arr, collapse=\",\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 21:58:29"},{"id":286539,"user_id":null,"body":"decompose <- function(n) {\n  error <- 1e-8\n\n  int <- floor(n)\n  n <- n - int\n  denoms <- c()\n  \n  while (n > error) {\n    d <- ceiling(1\/n - error)\n    n <- n - 1\/d\n    denoms <- c(d, denoms)\n  }\n  \n  denoms <- sort(denoms)\n  \n  answer <- \"\"\n  if(int) answer <- paste0(as.character(int))\n  if(int & length(denoms)) answer <- paste0(answer, \",\")\n  if(length(denoms)) answer <- paste0(answer, \"1\/\", paste(denoms, collapse=\",1\/\"))\n  return(answer)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 21:58:29"},{"id":286540,"user_id":null,"body":"decompose <- function(n) {\n\n  x <- n\n  listaNumeros <- integer(0)\n  entero <- if (x >= 1) x %\/% 1\n  x <- x %% 1\n  while (x > .Machine$double.eps) {\n    listaNumeros <- c(listaNumeros, ceiling(1 \/ x - sqrt(.Machine$double.eps)))\n    x <- x - 1 \/ tail(listaNumeros, 1)\n  }\n  listaNumeros <- if(length(listaNumeros)) paste0(\"1\/\", listaNumeros)\n  paste0(c(entero, listaNumeros), collapse = \",\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 21:58:29"},{"id":286541,"user_id":null,"body":"decompose <- function(n) {\n  output = c()\n  while (n > 0.0000001) {\n    i = ceiling(round(1\/n,7))\n    frac = max(1,floor(n * i))\n    n = n - (frac\/i)\n    if (i > 1) {\n      frac = paste0(frac, \"\/\", i)\n    }\n    output = c(output, frac)\n  }\n  paste(output, collapse=\",\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 21:58:29"},{"id":286542,"user_id":null,"body":"decompose <- function(n) {\n  rationals <- list()\n  \n  if (n>=1) {\n    rationals <- c(rationals, trunc(n))\n    n <- n - trunc(n)\n  }\n  \n  denom <- 1\n  \n  while (round(n,13) > 0) {\n    if (round(n-1\/denom,13) >= 0 & round(n-1\/denom,13) <= n) {\n      n <- n-1\/denom\n      rationals <- c(rationals, paste0(\"1\/\", denom))\n    }\n    denom <- denom + 1\n  }\n  \n  return(paste0(unlist(rationals), collapse = \",\"))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 21:58:29"},{"id":286543,"user_id":null,"body":"decompose <- function(n){\n  out <- floor(n)\n  nd <- as.numeric( strsplit(attr(MASS::as.fractions(n-out), \"fracs\"), \"\/\")[[1]] )\n  while(nd[1] != 0) {\n    out <- paste0(out, \",1\/\", ceiling(nd[2]\/nd[1]))\n    nd <- c(-nd[2] %% nd[1], nd[2]*ceiling(nd[2]\/nd[1]))\n  }\n  stringr::str_remove(out, \"0,?\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 21:58:29"},{"id":286544,"user_id":null,"body":"decompose <- function(n) {\n  denoms <- \"\"\n  if(n >= 1){denoms <- as.character(floor(n)); n <- n - floor(n)}\n  x <- max(2,floor(1\/n))\n  n <- n + 1e-14\n  while(n>0 & x < 10000000){\n    if(n >= 1\/x){denoms <- paste0(denoms,ifelse(nchar(denoms),\",\",\"\"),\"1\/\",x); n <- n - 1\/x}\n    x <-  max(x+1,floor(1\/n))\n  }\n  denoms\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 21:58:29"},{"id":286545,"user_id":669,"body":"decompose <- function(n) {\n  gcd <- function(f) {\n    while (abs(f[2]) > 1e-9) f <- c(f[2], f[1] %% f[2])\n    f[1]\n  }\n  make_frac <- function(f) f \/ gcd(f)\n  \n  f <- as.numeric(unlist(strsplit(toString(n), \"\/\")))\n  f <- round(make_frac(c(f[1], if (is.na(f[2])) 1 else f[2])))\n\n  whole <- f[1] %\/% f[2] # extract whole part\n  f[1]  <- f[1] %%  f[2]\n  \n  den <- c() # denominators\n  \n  while (f[1] != 0) {\n    nxt <- ceiling(f[2] \/ f[1])\n    den <- c(den, nxt)\n    f <- make_frac(c(f[1] * nxt - f[2], f[2] * nxt))\n  }\n  paste(na.omit(c(if (whole != 0) whole else NA,\n                  paste(rep(1, length(den)), den, sep = \"\/\"))),\n        collapse = \",\")  \n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 21:58:29"},{"id":286546,"user_id":null,"body":"library(MASS)\ndecompose <- function(n) {\n  \n  gcd <- function(x, y) {\n    r <- x %% y\n    ifelse(r == 0L, y, gcd(y, r))\n  }\n  \n  get_denoms <- function(a, b) {\n    d1 <- as.integer(ceiling(b \/ a))\n    n2 <- (-b) %% a\n    if(n2 == 0L) return(d1)\n    d2 <- b * d1\n    gcd_n2d2 <- gcd(n2, d2)\n    n2 <- n2 %\/% gcd_n2d2\n    d2 <- d2 %\/% gcd_n2d2\n    if(n2 == 1L) return(c(d1, d2))\n    c(d1, get_denoms(n2, d2))\n  }\n  \n  frac_chr <- attr(fractions(n), \"fracs\")\n  if(frac_chr == \"0\") return(\"\")\n  x_y <- as.integer(strsplit(frac_chr, \"\/\")[[1]])\n  if(length(x_y) == 1L) return(as.character(x_y[1]))\n  whole <- integer(0)\n  \n  if(x_y[1] > x_y[2]) {\n    whole <- x_y[1] %\/% x_y[2]\n    x_y[1] <- x_y[1] - whole * x_y[2]\n  }\n  \n  denoms <- get_denoms(x_y[1], x_y[2])\n  final_fracs <- paste(1, denoms, sep = \"\/\")\n  paste0(c(whole, final_fracs), collapse = \",\")\n  \n}\n\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 21:58:29"}],"54ff3102c1bad923760001f3":[{"id":286547,"user_id":null,"body":"get_count <- function(input_str){\n  # Your code\n  nchar(gsub(\"[^aeiou]\", \"\", input_str))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286548,"user_id":2334,"body":"get_count <- function(input_str){\n  s <- unlist(strsplit(input_str, \"\"))\n  sum(s %in% c('a', 'e', 'i', 'o', 'u'))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286549,"user_id":null,"body":"get_count <- function(input_str){\n  stringr::str_count(input_str, \"[aeiou]\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286550,"user_id":564,"body":"get_count <- function(str) {\n  nchar(gsub(\"[^aeiou]\", \"\", str))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286551,"user_id":53,"body":"get_count <- function(input_str){\n  nchar(gsub(\"[^aeiou]\",\"\",input_str, ignore.case = TRUE))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286552,"user_id":null,"body":"get_count <- function(input_str){\n  x<-unlist(strsplit(input_str,\"\"))\n  sum(x %in%  c(\"a\",\"e\",\"i\",\"o\",\"u\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286553,"user_id":null,"body":"get_count <- function(input_str){\n  return(sum(lapply(strsplit(input_str,\"\"), function(x) x %in% c(\"a\", \"e\", \"i\", \"o\", \"u\"))[[1]]))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286554,"user_id":null,"body":"get_count <- function(input_str){\n    vowels <- strsplit('aeiou','')[[1]]\n    chars <- strsplit(input_str, '')[[1]]\n    result <- 0\n    for (ch in chars) {\n      if(ch %in% vowels){\n        result <- result+1\n      }\n    }\n    result\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286555,"user_id":null,"body":"get_count <- function(input_str){\n  split_str <- strsplit(input_str, \"\")[[1]]\n  vowellist <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  charcount <- 0\n  for (character in split_str){\n    if (character %in% vowellist){\n      charcount <- charcount + 1\n    }\n  }\n  print(charcount)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286556,"user_id":null,"body":"get_count <- function(input_str){\n  a = lengths(regmatches(input_str, gregexpr(\"a\", input_str)))\n  e = lengths(regmatches(input_str, gregexpr(\"e\", input_str)))\n  i = lengths(regmatches(input_str, gregexpr(\"i\", input_str)))\n  o = lengths(regmatches(input_str, gregexpr(\"o\", input_str)))\n  u = lengths(regmatches(input_str, gregexpr(\"u\", input_str)))\n  result = a+e+i+o+u\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55031bba8cba40ada90011c4":[{"id":286557,"user_id":669,"body":"isSumOfCubes <- function(str) {\n  n <- as.numeric(unlist(stringr::str_extract_all(str, \"\\\\d{1,3}\")))\n  \n  s <- function(n) sum(as.numeric(unlist(strsplit(paste(n), \"\")))^3)\n  n <- n[n == sapply(n, s)]\n\n  if (length(n) == 0) {\n    return(\"Unlucky\")\n  }\n  paste(c(n, sum(n), \"Lucky\"), collapse = \" \")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286558,"user_id":null,"body":"isSumOfCubes <- function(s) {\n  found <- FALSE\n  lst <- c()\n  while(s != \"\") {\n    if(!grepl(\"^\\\\D*(\\\\d{1,3}).*$\", s)) break\n    s1 <- sub(\"^\\\\D*(\\\\d{1,3}).*$\", \"\\\\1\", s)\n    t1 <- as.integer(s1)\n    if(t1 %in% c(0, 1, 153, 370, 371, 407)) {\n      found <- TRUE\n      lst <- c(lst, t1)\n    }\n    s <- sub(\"^\\\\D*\\\\d{1,3}\", \"\", s)\n  }\n  if(found) return(paste(c(lst, sum(lst), \"Lucky\"), collapse = \" \")) else return(\"Unlucky\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286559,"user_id":492,"body":"isSumOfCubes <- function(s) {\n  isCubic <- function(n) {\n    a <- (function(x) (floor(x \/ 10^(0:(nchar(x) - 1))) %% 10))(n)^3\n    sum(a) == n\n  }\n  x <- unlist(regmatches(s, gregexpr('\\\\d\\\\d?\\\\d?', s)))\n  y <- Filter(isCubic, as.integer(x))\n  if (length(y) != 0) {\n    s <- sum(y)\n    paste(c(y, s, \"Lucky\"), collapse = \" \")\n  }\n  else \"Unlucky\"\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286560,"user_id":null,"body":"library(stringr)\nlibrary(stringi)\n\nisCubic <- function(x){\n  y <- str_split(x, \"\", simplify = T)\n  y <- as.numeric(y)\n  y <- y**3\n  if (sum(y) == x){\n    return(T)\n  }\n  else {\n    return(F)\n  }\n}\n\nisSumOfCubes <- function(s) {\n  print(s)\n  s <- str_extract_all(s,\"[0-9]{1,3}\" )\n  s <- unlist(s)\n  s <- as.numeric(s)\n  s2 <- sapply(s, isCubic)\n  if (all(s2 == F)){\n    return(\"Unlucky\")\n  } else {\n  stot <- s[s2]\n    print(stot)\n    su <- sum(stot)\n    stot <- paste0(unlist(stot), collapse = \" \")\n    print(stot)\n    return(paste(stot,su, \"Lucky\"))\n  \n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286561,"user_id":null,"body":"isSumOfCubes <- function(s) {\n  x <- as.numeric(unlist(stringr::str_extract_all(s, \"\\\\d{1,3}\")))\n  y <- function(x) sum(as.numeric(unlist(strsplit(paste(x), \"\")))^3)\n  x<- x[x == sapply(x,y)]\n  if(length(x) == 0){\n    return(\"Unlucky\")\n  }\n  paste(c(x, sum(x), \"Lucky\"), collapse = \" \")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286562,"user_id":null,"body":"isSumOfCubes <- function(s) {\nlibrary(stringr)\n s<-unlist(str_extract_all(s,\"\\\\d{3}|\\\\d\\\\d|\\\\d\"))\n\nout1<-vector()\nfor(i in 1:length(s)){\n  out1[i]<-ifelse(sum(as.numeric(unlist(str_split(s[i],\"\")))^3) == as.numeric(s[i]), as.numeric(s[i]),NA)\n  \n  }\n\nout1<- na.omit(out1)\nout2<-sum(na.omit(as.numeric(out1)))\n\nif(length(out1) == 0){ return(\"Unlucky\")\n} else{\n  \n  return(  capture.output(cat(out1,out2, \"Lucky\")))\n}\n \n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286563,"user_id":null,"body":"isSumOfCubes <- function(s) {\nNew_n <- gsub(\"[^0-9 ]\",\"\",s)\nNew_n_list <- strsplit(New_n , split = \" \")[[1]]\nNew <- lapply(New_n_list, function(x){\n  Fin <- c()\n  while(nchar(x) > 3){\n    Fin <- append(Fin , strtrim(x,3))\n    x_list <- strsplit(x , split = \"\")[[1]]\n    x_list <- x_list[-(1:3)]\n    x <- paste(x_list , collapse = \"\")\n  }\n  Fin <- append(Fin , x)\n  return(Fin)\n})\nNew_NN <- unlist(New)\nNew_NN <- New_NN[which(New_NN != \"\")]\n\nNew_New_list <- unlist(lapply(New_NN , function(x){\n  x_list <- strsplit(x , split = \"\")[[1]]\n  return(sum((as.numeric(x_list))^3))\n}))\nNew_NN <- as.numeric(New_NN)\nwoyaode <- c()\nfor (i in 1:length(New_NN)) {\n  if(New_New_list[i] == New_NN[i]){\n    woyaode <- append(woyaode , New_NN[i])\n  }\n}\nif(length(woyaode) >= 1){\n  woyaode <- append(woyaode , sum(woyaode))\n  return(paste(paste(woyaode , collapse = \" \") , \"Lucky\" , collapse = \" \"))\n}else{\n  return(\"Unlucky\")\n}\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286564,"user_id":null,"body":"library(stringr)\n\nisSumOfCubes <- function(s) {\n  get_numbers_from_str <- function(input_string) {\n    numbers <- unlist(\n      regmatches(input_string, gregexpr(\"[[:digit:]]+\", input_string))\n    )\n  }\n  \n  split_long_numbers_to_three_digits <- function(num_str) {\n    splitted_long_number <- unlist(\n      regmatches(num_str, gregexpr(\".{3}\", num_str))\n    )\n    num_str_len <- nchar(num_str)\n    num_str_len_remainder <- num_str_len %% 3\n    if (num_str_len_remainder > 0) {\n      splitted_long_number <- c(\n        splitted_long_number,\n        str_sub(num_str, num_str_len - num_str_len_remainder + 1, num_str_len)\n      )\n    }\n    splitted_long_number\n  }\n  \n  is_cubic <- function(number) {\n    if (number == 0) {\n      return(TRUE)\n    } else {\n      sum_digits <- 0\n      for (i in 1:(floor(log10(number)) + 1)) {\n        sum_digits <- sum_digits +\n          as.numeric(str_sub(as.character(number), i, i))^3\n      }\n      if (sum_digits == number) {\n        return(TRUE)\n      } else {\n        return(FALSE)\n      }\n    }\n  }\n  \n  numbers <- get_numbers_from_str(s)\n  numbers <- as.numeric(\n    unlist(\n      lapply(\n        numbers,\n        function(x) if (nchar(x) > 3) \n          split_long_numbers_to_three_digits(x) else x\n      )\n    )\n  )\n  cubic_numbers <- if (length(numbers) == 0) numbers else\n    numbers[sapply(numbers, is_cubic)]\n  \n  if (length(cubic_numbers) == 0) {\n    return(\"Unlucky\")\n  } else {\n    paste(paste(cubic_numbers, collapse = \" \"), sum(cubic_numbers), \"Lucky\")\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286565,"user_id":null,"body":"isSumOfCubes <- function(s) {\n  cubic_nums <- c()\n  for(i in 0:999)if(i == sum(as.numeric(unlist(strsplit(as.character(i),'')))^3))cubic_nums <- c(cubic_nums,i)\n  t <- gregexpr('[0-9]{1,3}',s)[[1]]\n  u <- sapply(t,function(x)substr(s,x,min(c(nchar(s),x+2))))\n  if(any(!grepl('[0-9]{3}',u)))u[!grepl('[0-9]{3}',u)] <- substr(u[!grepl('[0-9]{3}',u)],1,2)\n  if(any(!grepl('[0-9]{2}',u)))u[!grepl('[0-9]{2}',u)] <- substr(u[!grepl('[0-9]{2}',u)],1,1)\n  nums <- c()\n  for(i in u)if(as.numeric(i) %in% cubic_nums)nums <- c(nums,as.numeric(i))\n  if(length(nums) == 0)return('Unlucky')\n  return(paste(paste(nums,collapse=' '),sum(nums),'Lucky'))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286566,"user_id":null,"body":"isSumOfCubes <- function(s) {\n  library(tidyverse)\n\n  splitNumbers <- function(x) {\n    x <- map(seq(from=1, to=nchar(x), by=3), function(i) substr(x, i, i+2))\n    return(unlist(x))\n    print(unlist(x))\n  }\n\n  checkCubic <- function(x) {\n    digits <- str_split(x, \"\") %>%\n      unlist(.) %>%\n      as.numeric(.) %>%\n      map_dbl(., function(x) x^3) %>%\n      sum(.)\n    \n    if (as.character(digits) == as.character(x)) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n    }\n  }\n  \n  words <- s %>%\n    str_split(., \"[^0-9]\") %>%\n    unlist(.) %>%\n    keep(., ~ . != \"\")\n  \n  words_to_split <- unique(words[nchar(words) > 3])\n                       \n  for (word in words_to_split) {\n    for (occurance in 1:sum(words == word)) {\n      index <- (which(words == word))[1]\n      words <- words[-index]\n      \n      if (index <= length(words)) {\n        words <- prepend(words, splitNumbers(word), index)\n      } else {\n        words <- append(words, splitNumbers(word), after = length(words))\n      }\n    }\n  }\n  \n  words <- as.numeric(words)            \n  \n  if (some(words, checkCubic)) {\n    nums <- paste(words[map_lgl(words, checkCubic)], collapse = \" \")\n    sum <- sum(words[map_lgl(words, checkCubic)])\n    return(paste(nums, sum, \"Lucky\", sep = \" \"))\n  } else {\n    return(\"Unlucky\")\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"550498447451fbbd7600041c":[{"id":286567,"user_id":492,"body":"comp_same <- function(a1, a2) {\n  identical(sort(a1^2), sort(a2))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286568,"user_id":null,"body":"comp_same <- function(a1, a2) {\n  if (is.null(a1) || is.null(a2) || length(a1) != length(a2)) {\n    FALSE\n  } else {\n    all(sort(a1^2) == sort(a2))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286569,"user_id":null,"body":"#' Finds whether two vectors are equal based on\n#' square values in the other vector.\n#'\n#' @param a1 double\n#' A numeric vector.\n#' @param a2 double\n#' A numeric vector that may include square values of vector \"a1\".\n#'\n#' @return logical\n#' The result if all elements in \"a1\" have squares in \"a2\".\n#' @export\n#'\n#' @examples\ncomp_same <- function(a1, a2) {\n  if (any(is.na(c(a1, a2)))) {\n    return(FALSE)\n  } else if (length(a1) != length(a2)) {\n    return(FALSE)\n  }\n\n  # Negative numbers have positive squares.\n  a1 = abs(a1)\n\n  # Sum is 0, if there is an equal square value in the other array.\n  calc_val = sum(sqrt(a2) - a1)\n  test = ifelse(\n    test = calc_val == 0,\n    yes = TRUE,\n    no = FALSE\n  )\n\n  return(test)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286570,"user_id":null,"body":"comp_same <- function(a1, a2) {\n  return(all(sort(a1^2) == sort(a2)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286571,"user_id":null,"body":"comp_same <- function(a1, a2) {\n  all(!(sort(a1*a1) - sort(a2)))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286572,"user_id":null,"body":"comp_same <- function(a, b) {\n  all(sort(a * a) == sort(b))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286573,"user_id":null,"body":"comp_same <- function(a1, a2) {\n    all(sort(a2) == sort(a1^2))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286574,"user_id":null,"body":"comp_same <- function(a, b) {\n  return( identical(sort(a**2), sort(b)) )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286575,"user_id":null,"body":"comp_same <- function(a1, a2) {\n  a1 <- sort(abs(a1))\n  a2 <- sqrt(sort(a2))\n  all(a1 == a2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286576,"user_id":null,"body":"comp_same <- function(a1, a2) {\n  \n  a1 <- sort(abs(a1))^2\n  a2 <- sort(a2)\n  \n  if (all(a1 == a2)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"550527b108b86f700000073f":[{"id":286577,"user_id":492,"body":"iter_pi <- function(epsilon) {\n  value <- 0; cnt <- 0; factor <- 1; divider <- 1\n  while (abs(pi - (value * 4)) >= epsilon) {\n    value <- value + factor \/ divider\n    factor <- -factor\n    divider <- divider + 2\n    cnt <- cnt + 1\n  }\n  c(cnt, round(value * 4, 10))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286578,"user_id":null,"body":"#' Calculates decimals of PI using Leibniz formula.\n#'\n#' @param epsilon double\n#' Precision value for calculation.\n#'\n#' @return double; vector\n#' Result in form: iterations, PI approximation.\n#' @export\n#'\n#' @examples\niter_pi <- function(epsilon) {\n  n = 1\n  estim = 4\n  while (abs(estim - pi) > epsilon) {\n    n = n + 1\n    estim = estim + c(-4, 4)[(n %% 2) + 1] \/ (2 * n - 1)\n  }\n\n  res = c(n, estim)\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286579,"user_id":null,"body":"iter_pi <- function(eps) {\n  s <- 4\n  i <- 1\n  my_pi <- 4\n  while (abs(my_pi - pi) > eps) {\n    my_pi <- my_pi - s \/ (2 * i + 1)\n    i <- i + 1\n    s <- -s\n  }\n  c(i, my_pi)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286580,"user_id":null,"body":"# iter_pi(epsilon) must return an array :\n# c(numberOfIterations, approximationOfPi)\niter_pi <- function(epsilon) {\n  n <- 1\n  pi_a <- 0\n  repeat{\n    pi_a <- pi_a + (-1)^(n+1)*(1\/(2*n-1))*4\n    residual <- abs(pi - pi_a) \n    if (residual < epsilon) break\n    n <- n+1\n  }   \n  return(c(n,pi_a))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286581,"user_id":null,"body":"##' Calculate the amount of turns to reach pi with a given epsilon according \n##' to Leibniz formula (PI\/4 = 1-1\/3+1\/5-1\/7+...)\n##' @title iter_pi\n##' @param epsilon the epsilon value (desired precision)\n##' @return a vector with the number of iterations and the result of pi\n##' @author Krisselack\niter_pi <- function(epsilon) {\n\npimin <- pi - epsilon\npimax <- pi + epsilon\nres <- 0\niter <- 1\ncounter <- 0\npi4 <- 1\n\n  while(res < pimin | res > pimax){\n    iter <- abs(iter)+2\n    if(counter %% 2 == 0){\n      iter = iter*(-1)\n    }\n    pi4 <- pi4+(1\/iter)\n    res <- pi4*4\n    counter = counter +1\n  }\n  return((c(counter+1, res)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286582,"user_id":null,"body":"# iter_pi(epsilon) must return an array :\n# c(numberOfIterations, approximationOfPi)\niter_pi <- function(epsilon) {\n  estpi4 = 1\n  n = 1\n  repeat{\n    estpi4 = estpi4 + (-1)^n\/(2*n+1)\n    n = n + 1\n    if(abs(estpi4*4-pi)<epsilon){\n      break\n    }\n  }\n  return(c(n, estpi4*4))\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286583,"user_id":2334,"body":"iter_pi <- function(epsilon) {\n  p = 0\n  n = 1\n  count = 0\n  while (abs(4*p - pi) > epsilon){\n    p = p + (1\/n)*(-1)**count\n    n = n + 2\n    count = count + 1\n  }\n  c(count, 4*p)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286584,"user_id":null,"body":"# iter_pi(epsilon) must return an array :\n# c(numberOfIterations, approximationOfPi)\niter_pi <- function(epsilon) {\n  res <- 0\n  new <- 0\n  while ( abs(pi - res*4) >= epsilon ){\n    new <- new + 1\n    res <- res + (1\/(new*2-1))*(-1)^(new+1) \n  }\n  return(c(new,res*4))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286585,"user_id":null,"body":"iter_pi <- function(epsilon) {\n  r = 0.0\n  for (n in 0:100000000){\n    r = r + (-1.0)**n\/(2.0*n+1.0)\n    if ((abs(pi - 4*r)) <= epsilon){\n      res = c(n+1, 4*r)\n      return(res)\n      break\n    }\n    }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286586,"user_id":null,"body":"# iter_pi(epsilon) must return an array :\n# c(numberOfIterations, approximationOfPi)\niter_pi <- function(epsilon) {\n  x <- 0\n  y <- 1\n  count <- 0\n  while(abs(4*x - pi) > epsilon){\n    x <- x + (1\/y)*(-1)**count\n    y <- y + 2\n    count <- count + 1\n  }\n  c(count, 4*x)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"550554fd08b86f84fe000a58":[{"id":286587,"user_id":null,"body":"inArray <- function(a1, a2) {\n  res <- unique(sort(a1[vapply(a1, function(s) any(grepl(s, a2)), USE.NAMES = FALSE, FUN.VALUE = logical(1))]))\n  if (length(res) == 0) NULL\n  else res\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286588,"user_id":492,"body":"inArray <- function(a1, a2) {\n  res <- c()\n  for (el in a1) {\n    if (length(grep(el, a2)) > 0) res <- c(res, el)\n  }\n  if (length(res) > 0) sort(unique(res)) else res\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286589,"user_id":null,"body":"inArray <- function(a1, a2) {\n  # your code\n  if (length(a1) == 0) return(NULL)\n  m <- unique(sort(a1[unlist(lapply(a1, function(a1) any(grepl(a1, a2))))]))\n  if (length(m) == 0) return(NULL)\n  return(m)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286590,"user_id":669,"body":"inArray <- function(a1, a2) {\n  r <- purrr::keep(sort(unique(a1)), ~ any(grepl(., a2)))\n  \n  if (length(r) > 0) r\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286591,"user_id":null,"body":"inArray <- function(a1, a2) {\n  # your code\n  sel<-sapply(a1,function(x){length(grep(x,a2))>0})\n  output<-unique(sort(a1[sel]))\n  if (length(output)>0) return(output)\n  else return(NULL)\n}\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286592,"user_id":null,"body":"inArray <- function(a1, a2) {\n  # The test for correctness on this problem is flawed.\n  # In R it is more appropriate to return character(0) than NULL when there are no matches.\n  # This keeps the return type consistent between well-behaved and degenerate cases.\n  a <- sort(unique(a1[vapply(lapply(a1, grepl, a2),\n                any,\n                logical(1))]))\n  if (length(a) == 0) {\n    NULL\n  } else {\n    a\n  }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286593,"user_id":null,"body":"#' Finds if any string in a vector\n#' is a substring in other vector.\n#'\n#' @param a1 character vector\n#' @param a2 character vector\n#'\n#' @return character; NULL\n#' NULL if no substrings were found.\n#' Sorted by \"a1\", unique vector.\n#' @export\n#'\n#' @examples\ninArray <- function(a1, a2) {\n  # Combines \"a2\" into single character string.\n  a2_str = paste(a2, collapse = \" \")\n\n  # Named logical with locations on matches on \"a1\".\n  loc = sapply(a1, function(i) {grepl(i, a2_str, fixed = TRUE)})\n\n  if (sum(loc) == 0) {\n    return(NULL)\n  } else {\n    res = sort(unique(a1[loc]))\n\n    return(res)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286594,"user_id":null,"body":"inArray <- function(a1, a2) {\n  t <- sapply(unique(a1),function(x) length(grep(x,a2)))\n  out<-sort(names(t)[t>0])\n  if(length(out)==0) return(c())\n  out            \n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286595,"user_id":null,"body":"inArray <- function(a1, a2) {\n  \n  string1 <- sort(a1)\n  string2 <- paste(a2, collapse = \" \")\n  check   <- sapply(1:length(string1), function(x) {grepl(string1[x], string2)})\n\n  if (sum(check) ==0){\n    return(NULL)\n  }\n  else{\n    return(unique(string1[check == TRUE])) \n  }\n\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286596,"user_id":null,"body":"inArray <- function(a1, a2) {\n  \n  # Create a list of logical vectors which test for a1 in a2\n  det.lglst <- lapply(a1, grepl, x = a2)\n\n  # Condense to logical vector indicating if each a1 is found at least once\n  any.lgvec <- sapply(det.lglst, any)\n  \n  # If no matches are found return NULL\n  if(!any(any.lgvec)) return(NULL)\n  \n  # Otherwise subset a1 to the matches, eliminate duplicates, and sort\n  a1.mat <- a1[any.lgvec]\n  sort(unique(a1.mat))\n  \n}\n\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5506b230a11c0aeab3000c1f":[{"id":286597,"user_id":492,"body":"evaporator <- function(content, evap_per_day, threshold) {\n  ceiling(log(threshold \/ 100.0) \/ log(1.0 - evap_per_day \/ 100.0))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286598,"user_id":527,"body":"evaporator <- function(content, evap_per_day, threshold) {\n  ceiling(log(threshold \/ 100, 1 - evap_per_day \/ 100))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286599,"user_id":null,"body":"evaporator <- function(content, evap_per_day, threshold) {\n  days = 0\n  evap_percent = evap_per_day\/100\n  thresh = content * (threshold\/100)\n  while (content > thresh){\n    content = (content * (1-evap_percent))\n    days = days +1\n  }\n  return(days)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286600,"user_id":527,"body":"evaporator <- function(content, evap_per_day, threshold) {\n  floor(log(threshold \/ 100, 1 - evap_per_day \/ 100) + 1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286601,"user_id":null,"body":"evaporator <- function(content, evap_per_day, threshold) {\n# Solve the equation (1 + r)^d = t\n# using logarithms.\n# where r is the rate of change per day\n# d is days and t is threshold\n# if it reduces by 10% per day, then r is -0.1\n# If it turns out t = 3.9 then on the 3rd day it is good, but \n# on the 4th day it is expired.\n  evap_log <- log((100 - evap_per_day)\/100) \n  ceiling(log(threshold\/100)\/evap_log )\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286602,"user_id":null,"body":"evaporator <- function(content, evap_per_day, threshold) {\n  current_level <- 1\n  counter <- 0\n  while (current_level > threshold \/ 100) {\n    current_level <- current_level * (100 - evap_per_day)\/100\n    counter <- counter + 1\n  }\n  return(counter)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286603,"user_id":null,"body":"evaporator <- function(content, evap_per_day, threshold) {\n  \n  PercentTotal <- 1\n  Remaining <- content\n  Day <- 0\n  \n  while (PercentTotal > threshold\/100) {\n    Remaining <- Remaining*(1-(evap_per_day\/100))\n    PercentTotal <- Remaining\/content\n    Day <- Day + 1\n    \n  }\n  \n  print(Day)\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286604,"user_id":null,"body":"evaporator <- function(content, evap_per_day, threshold) {\n  ceiling(( log(threshold \/ 100.0) \/ log((100 - evap_per_day)\/100.0) ))\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286605,"user_id":null,"body":"evaporator <- function(content, evap_per_day, threshold) {\n  -floor(log(1\/(0.01*threshold), base = 1-0.01*evap_per_day))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286606,"user_id":null,"body":"evaporator <- function(content, evap_per_day, threshold) {\n    ceiling(log((threshold\/100 * content)\/content)\/log(1 - evap_per_day\/100))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5508249a98b3234f420000fb":[{"id":286607,"user_id":null,"body":"moving_shift <- function(s, shift) {\n# your code\n  chars <- unlist(strsplit(s,\"\"))\n  for(i in 1:length(chars)) {\n    if (chars[i] %in% letters) {\n      chars[i] <- letters[((which(chars[i] == letters) + i + shift - 2) %% 26) + 1]\n    } else if (chars[i] %in% LETTERS) {\n      chars[i] <- LETTERS[((which(chars[i] == LETTERS) + i + shift - 2) %% 26) + 1]\n    }\n  }\n  chars <- c(chars, rep(\"\", ceiling(length(chars)\/5)*5 - length(chars)))\n  message <- apply(matrix(chars, nrow=5, byrow=T), 1, paste, collapse=\"\")\n  return(message)\n}\n\ndemoving_shift <- function(arr, shift) {\n# your code\n  chars <- unlist(strsplit(arr,\"\"))\n  for(i in 1:length(chars)) {\n    if (chars[i] %in% letters) {\n      chars[i] <- letters[((which(chars[i] == letters) - i - shift) %% 26) + 1]\n    } else if (chars[i] %in% LETTERS) {\n      chars[i] <- LETTERS[((which(chars[i] == LETTERS) - i - shift) %% 26) + 1]\n    }\n  }\n  return(paste(chars, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286608,"user_id":492,"body":"moving_shift <- function(s, shift, sgn) {\n  modu <- function(dividend, divisor) {\n    modulo = dividend %% divisor\n    ifelse(modulo < 0, modulo + divisor, modulo)\n  }\n  A = utf8ToInt('A'); a = utf8ToInt('a'); Z = utf8ToInt('Z'); z = utf8ToInt('z');\n  res <- \"\"; sSplit <- strsplit(s, \"\")[[1]]\n  for (i in 1:length(sSplit)) {\n    sVal <- modu(sgn * (shift + i - 1), 26)\n    d <- utf8ToInt(sSplit[i])\n    if ((d >= A) && (d <= Z)) {\n      c <- intToUtf8( (d - A + sVal) %% 26 + A)\n    } else {\n      if ((d >= a) && (d <= z)) {\n        c <- intToUtf8( (d - a + sVal) %% 26 + a)\n      }\n      else c <- sSplit[i]\n    } \n    res <- paste0(res, c)\n  }\n  res\n}\nmoving_shift <- function(s, shift) {\n  v <- moving_shift(s, shift, 1)\n  c <- ceiling(nchar(v) \/ 5)\n  a <- strsplit(v, paste0(\"(?<=.{\",c,\"})\"), perl=TRUE)[[1]]\n  if (length(a) < 5) a <- c(a, \"\")\n  a\n}\ndemoving_shift <- function(arr, shift) {\n  s <- paste(arr, collapse=\"\")\n  moving_shift(s, shift, -1)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286609,"user_id":null,"body":"base_alphabet <- paste(letters, LETTERS, collapse = \"\", sep = \"\")\n\ncipher <- function(shift) {\n  # Adjust shift for max +-26\n  if(shift > 25) shift <- shift - (floor(shift \/26) * 26)\n  if(shift < -25) shift <- shift + (floor(shift \/-26) * 26) \n  \n  #Create cipher\n  adjust1 <- if(1 + (shift * 2) < 1) 1 + (shift * 2) + 52 else 1 + (shift * 2)\n  adjust2 <- if(0 + (shift * 2) < 0) 52 + (shift * 2) else 0 + (shift * 2)\n  paste(substr(base_alphabet, adjust1, 52), substr(base_alphabet, 1, adjust2), sep = \"\")\n}\n\nmoving_shift <- function(s, shift) {\n  charlist <- strsplit(s, \"\")[[1]]\n  coded <- c()\n  for(i in 0:(length(charlist) - 1)) {\n    coded <- c(coded, chartr(base_alphabet, cipher((shift + i)), charlist[(i + 1)]))\n  }\n  coded <- paste0(coded, collapse = \"\")\n  \n  charlength <- nchar(coded)\n  if(charlength %% 5 == 0) return(substring(coded, seq(1, charlength, (charlength \/5)), seq((charlength \/5), charlength, (charlength \/5))))\n  if(charlength %% 4 == 0 & charlength %% 5 != 0 & charlength != 48) { #I must not be fully understanding the challenge, thought messages with 48 characters would be split between 4 runners and one stays home (therefore 5 array element is \"\"). Problematic test was : \"O CAPTAIN! my Captain! our fearful trip is done;\" \n    return(c(substring(coded, seq(1, charlength, (charlength \/4)), seq((charlength \/4), charlength, (charlength \/4))), \"\"))\n    }\n  else {\n    messagelength <- floor(charlength \/ 5) + 1\n    return(substring(coded, seq(1, charlength, messagelength), c(seq(messagelength, charlength, messagelength), charlength)))\n  }\n}\n\ndemoving_shift <- function(arr, shift) {\n  print(arr)\n  charlist <- strsplit(paste0(arr, collapse = \"\"), \"\")[[1]]\n  decoded <- c()\n  for(i in 0:(length(charlist) - 1)) {\n    decoded <- c(decoded, chartr(base_alphabet, cipher((-shift - i)), charlist[(i + 1)]))\n  }\n  return(paste0(decoded, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286610,"user_id":null,"body":"base_alphabet <- paste(letters, LETTERS, collapse = \"\", sep = \"\")\n\ncipher <- function(shift) {\n  # Adjust shift for max +-26\n  if(shift > 25) shift <- shift - (floor(shift \/26) * 26)\n  if(shift < -25) shift <- shift + (floor(shift \/-26) * 26) \n  \n  #Create cipher\n  adjust1 <- if(1 + (shift * 2) < 1) 1 + (shift * 2) + 52 else 1 + (shift * 2)\n  adjust2 <- if(0 + (shift * 2) < 0) 52 + (shift * 2) else 0 + (shift * 2)\n  paste(substr(base_alphabet, adjust1, 52), substr(base_alphabet, 1, adjust2), sep = \"\")\n}\n\nmoving_shift <- function(s, shift) {\n  print(s)\n  charlist <- strsplit(s, \"\")[[1]]\n  coded <- c()\n  for(i in 0:(length(charlist) - 1)) {\n    coded <- c(coded, chartr(base_alphabet, cipher((shift + i)), charlist[(i + 1)]))\n  }\n  coded <- paste0(coded, collapse = \"\")\n  \n  charlength <- nchar(coded)\n  print(charlength)\n  if(charlength %% 5 == 0) return(substring(coded, seq(1, charlength, (charlength \/5)), seq((charlength \/5), charlength, (charlength \/5))))\n  if(charlength %% 4 == 0 & charlength %% 5 != 0 & charlength != 48) {\n    return(c(substring(coded, seq(1, charlength, (charlength \/4)), seq((charlength \/4), charlength, (charlength \/4))), \"\"))\n    }\n  else {\n    messagelength <- floor(charlength \/ 5) + 1\n    return(substring(coded, seq(1, charlength, messagelength), c(seq(messagelength, charlength, messagelength), charlength)))\n  }\n}\n\ndemoving_shift <- function(arr, shift) {\n  print(arr)\n  charlist <- strsplit(paste0(arr, collapse = \"\"), \"\")[[1]]\n  decoded <- c()\n  for(i in 0:(length(charlist) - 1)) {\n    decoded <- c(decoded, chartr(base_alphabet, cipher((-shift - i)), charlist[(i + 1)]))\n  }\n  return(paste0(decoded, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286611,"user_id":null,"body":"moving_shift <- function(s, shift) {\n  ## split string into a vector\n  split_s<-unlist(strsplit(s,\"\"))\n  ## length of vector\n  len<-length(split_s)\n  ## loop over each character\n  for(i in 1:len){\n    ## shift upper case characters\n    if(split_s[i] %in% LETTERS){\n      LET_index<-which(LETTERS==split_s[i])+shift+i-1\n      while(LET_index>26){\n        LET_index<-LET_index-26\n      }\n      split_s[i]<-LETTERS[LET_index]\n    ## shift lower case characters\n    } else if(split_s[i] %in% letters){\n      let_index<-which(letters==split_s[i])+shift+i-1\n      while(let_index>26){\n        let_index<-let_index-26\n      }\n      split_s[i]<-letters[let_index]\n    }\n  }\n  ## calculate the message lengths for each runner\n  message_lengths<-rep(0,5)\n  temp_sum<-len\n  i<-1\n  while(temp_sum>0){\n    if (temp_sum>=ceiling(len\/5)){\n      message_lengths[i]<-ceiling(len\/5)\n    } else {\n      message_lengths[i]<-temp_sum\n    }\n    temp_sum<-temp_sum-message_lengths[i]\n    i<-i+1\n  }\n  \n  ## extract message for each runner\n  final_message<-paste0(split_s[1:message_lengths[1]],collapse = \"\")\n  for (i in 2:5){\n    if(message_lengths[i]==0){\n      final_message<-c(final_message,\"\")\n    } else {\n      final_message<-c(final_message,paste0(split_s[(cumsum(message_lengths)[i-1]+1):cumsum(message_lengths)[i]],collapse = \"\"))\n    }\n  }\n  ## return final vector\n  return(final_message)\n}\n\ndemoving_shift <- function(arr, shift) {\n  ## collapse messages into a single string\n  strg<-paste0(arr,collapse = \"\")\n  ## split string into a vector\n  split_s<-unlist(strsplit(strg,\"\"))\n  ## length of vector\n  len<-length(split_s)\n  ## loop over each character in message\n  for(i in 1:len){\n    ## unshift upper case characters\n    if(split_s[i] %in% LETTERS){\n      LET_index<-which(LETTERS==split_s[i])-shift-i+1\n      while(LET_index<1){\n        LET_index<-LET_index+26\n      }\n      split_s[i]<-LETTERS[LET_index]\n    ## unshift lower case characters\n    } else if(split_s[i] %in% letters){\n      let_index<-which(letters==split_s[i])-shift-i+1\n      while(let_index<1){\n        let_index<-let_index+26\n      }\n      split_s[i]<-letters[let_index]\n    }\n  }\n  ## collapse vector into a single string for the final message\n  return(paste0(split_s,collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286612,"user_id":null,"body":"\nmoving_shift <- function(string, base_shift) {\n  shift <- function(string_vector) {\n    purrr::imap(string_vector, ~ rep(letters, ((length(string_vector) + base_shift) %\/% 26 + 1) + 1)[(which(letters == .x) + base_shift + .y - 1)])\n  }\n\n  string_vector <- strsplit(string, \"\")[[1]]\n  index <- string_vector %in% c(letters, LETTERS)\n  caps <- string_vector %in% LETTERS\n\n  shifted <- as.character(shift(tolower(string_vector)))\n  string_vector[index] <- shifted[index]\n  string_vector[caps] <- toupper(string_vector[caps])\n\n  parts <- pmin(ifelse(length(string_vector) %% 5 == 0, length(string_vector) %\/% 5, (length(string_vector) %\/% 5) + 1) * (0:5), length(string_vector))\n\n  output <- \"\"\n  for (i in 1:5) {\n    if (1 + parts[i] <= length(string_vector)) {\n      output[i] <- paste(string_vector[(1 + parts[i]):parts[1 + i]], collapse = \"\")\n    } else {\n      output[i] <- \"\"\n    }\n  }\n \n  return(output)\n}\n\n\ndemoving_shift <- function(arr, base_shift) {\n  shift <- function(string_vector) {\n    purrr::imap(string_vector, ~ letters[\n      ifelse((which(letters == .x) - (base_shift + .y - 1)) %% length(letters) == 0,\n        length(letters),\n        (which(letters == .x) - (base_shift + .y - 1)) %% length(letters)\n      )\n    ])\n  }\n\n  string_vector <- unlist(strsplit(arr, \"\"))\n  index <- string_vector %in% c(letters, LETTERS)\n  caps <- string_vector %in% LETTERS\n\n  shifted <- as.character(shift(tolower(string_vector)))\n  string_vector[index] <- shifted[index]\n  string_vector[caps] <- toupper(string_vector[caps])\n\n  return(paste0(string_vector, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286613,"user_id":null,"body":"\nencode.char <- function(chr, shift) {\n  wl <- which(chr == letters)\n  wL <- which(chr == LETTERS)\n  if (length(wl) > 0) {\n    indx <- (wl + shift) %% 26\n    chr <- letters[if (indx == 0) 26 else indx]\n  } else if (length(wL) > 0) {\n    indx <- (wL + shift) %% 26\n    chr <- LETTERS[if (indx == 0) 26 else indx]\n  }\n  chr\n}\n\nencode <- function(s, shift) {\n  ss <- unlist(strsplit(s, split=\"\"))\n  mapply(ss, shift-1+seq_along(ss), FUN=encode.char)\n}\n                   \ndecode <- function(s, shift) {\n  ss <- unlist(strsplit(s, split=\"\"))\n  mapply(ss, -shift+1-seq_along(ss), FUN=encode.char)\n}\n                   \nsplitstring <- function(ss) {\n  if (length(ss) > 1)\n    ss <- paste0(unlist(ss), collapse=\"\")\n  ans <- rep(ceiling(nchar(ss)\/5), 5)\n  while(sum(ans) > nchar(ss)) {\n    if (ans[5] > 0) \n      ans[5] <- ans[5] - 1\n    else \n      ans[4] <- ans[4] - 1\n  }\n  print(ans)\n  starts <- c(1, cumsum(ans)[-5]+1)\n  stops  <- cumsum(ans)\n  sapply(1:5, function(i) substr(ss, start=starts[i], stop=stops[i]))\n}\n                   \n                   \nmoving_shift <- function(s, shift) {\n  ss <- encode(s, shift)\n  splitstring(ss)\n}\n                   \ndemoving_shift <- function(arr, shift) {\n  ss <- paste0(arr, collapse=\"\")\n  paste0(decode(ss, shift), collapse=\"\")\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286614,"user_id":null,"body":"moving_shift <- function(s, shift) {\n  if(!nchar(s))return(rep('',5))\n  shift <- shift%%length(letters)\n  s <- unlist(strsplit(s,''))\n  for(i in seq_along(s)){\n    if(s[i] %in% letters)s[i] <- rep(letters,2)[which(letters==s[i])[1]+shift]\n    if(s[i] %in% LETTERS)s[i] <- rep(LETTERS,2)[which(LETTERS==s[i])[1]+shift]\n    shift <- (shift+1)%%length(letters)\n  }\n  part <- ceiling(length(s)\/5)\n  if(length(s) \/ part == 5)split <- rep(part,5) else split <- c(rep(part,length(s) %\/% part),length(s) %% part,rep(0,4-length(s) %\/% part))\n  sapply(seq_along(split),function(x)if(split[x])paste0(s[1:split[x]+sum(split[1:x])-split[x]],collapse='') else '')\n}\n\ndemoving_shift <- function(arr, shift) {\n  if(!nchar(arr[1]))return('')\n  shift <- shift%%length(letters)\n  arr <- unlist(strsplit(arr,''))\n  for(i in seq_along(arr)){\n    if(arr[i] %in% letters)arr[i] <- rep(rev(letters),2)[which(rev(letters)==arr[i])[1]+shift]\n    if(arr[i] %in% LETTERS)arr[i] <- rep(rev(LETTERS),2)[which(rev(LETTERS)==arr[i])[1]+shift]\n    shift <- (shift+1)%%length(letters)\n    }\n    paste0(arr,collapse='')\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286615,"user_id":null,"body":"moving_shift <- function(s, shift){\n  if(nchar(s)==0){\n    return(NULL)\n  }\n  al <- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\",\"j\", \"k\", \"l\", \"m\", \"n\", \n          \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\")\n  au <- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\",\"J\", \"K\", \"L\", \"M\", \"N\", \n          \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\")\n  al2 <- rep(al, 50)\n  au2 <- rep(au, 50)\n  u3 <- unlist(strsplit(s, \"\"))\n  new_u <- u3\n  counter <- shift-1\n  for(num in 1:length(u3)){\n    char <- u3[num]\n    counter <- counter + 1\n    if(!is.na(al2[match(char, al2)])){\n      new_u[num] <- al2[match(char, al2)+counter] #Need to pick between au2 and al2\n    }\n    if(!is.na(au2[match(char, au2)])){\n      new_u[num] <- au2[match(char, au2)+counter] #Need to pick between au2 and al2\n    }\n  }\n  new_u <- unlist(lapply(split(new_u, ceiling(seq_along(new_u)\/ceiling(length(new_u)\/5))), paste, collapse=\"\"), use.names=FALSE)\n  if(length(new_u)==4){\n    new_u <- append(new_u, \"\")\n  }\n  return(new_u)\n  #return(unlist(lapply(split(new_u, ceiling(seq_along(new_u)\/ceiling(length(new_u)\/5))), paste, collapse=\"\"), use.names=FALSE))\n  #return(lapply(split(new_u, ceiling(seq_along(new_u)\/ceiling(length(new_u)\/5))), paste, collapse=\"\"))\n}\n\n\n\ndemoving_shift <- function(s, shift){\n  if(length(s)==0){\n    return(NULL)\n  }\n  al <- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\",\"j\", \"k\", \"l\", \"m\", \"n\", \n          \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\")\n  au <- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\",\"J\", \"K\", \"L\", \"M\", \"N\", \n          \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\")\n  al2 <- rep(al, 50)\n  au2 <- rep(au, 50)\n  u3 <- paste(unlist(s, use.names=FALSE), collapse=\"\")\n  u3 <- unlist(strsplit(u3, \"\"))\n  new_u <- u3\n  counter <- shift-1\n  for(num in 1:length(u3)){\n    char <- u3[num]\n    counter <- counter + 1\n    if(!is.na(al2[match(char, al2)])){\n      new_u[num] <- al2[match(char, al2)+(1170-counter)] #Need to pick between au2 and al2\n    }\n    if(!is.na(au2[match(char, au2)])){\n      new_u[num] <- au2[match(char, au2)+(1170-counter)] #Need to pick between au2 and al2\n    }\n  }\n  return(paste(new_u, collapse=\"\"))\n  #return(lapply(split(new_u, ceiling(seq_along(new_u)\/ceiling(length(new_u)\/5))), paste, collapse=\"\")) your code\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286616,"user_id":669,"body":"shift_impl <- function(s, shift) {\n  x <- as.numeric(charToRaw(s))\n  \n  x <- ifelse(x >= 97 & x <= 122, 97 + ((x - 97 + shift) %% 26), x) # a-z\n  x <- ifelse(x >= 65 & x <= 90,  65 + ((x - 65 + shift) %% 26), x) # A-Z\n  \n  rawToChar(as.raw(x))\n}\n\nmoving_shift <- function(s, shift) {\n  txt <- strsplit(shift_impl(s, (1:nchar(s)) + shift - 1), \"\")[[1]]\n  \n  msg_len <- ceiling(length(txt) \/ 5)\n  \n  messages <- split(txt, ceiling(seq_along(txt) \/ msg_len))\n  \n  out <- setNames(sapply(messages, paste, collapse = \"\"), NULL)\n  \n  if (length(out) == 4) c(out, \"\") else out\n}\n\ndemoving_shift <- function(arr, shift) {\n  txt <- paste(arr, collapse = \"\")\n  \n  shift_impl(txt, -((1:nchar(txt)) + shift - 1))\n}\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55084d3898b323f0aa000546":[{"id":286617,"user_id":492,"body":"encodeAux <- function(s, shift) {\n  A = utf8ToInt('A'); a = utf8ToInt('a'); Z = utf8ToInt('Z'); z = utf8ToInt('z'); res <- \"\"\n  c <- tolower(substr(s, 1, 1))\n  cc <- intToUtf8( (utf8ToInt(c) - a + shift) %% 26 + a)\n  res <- paste0(res, c , cc)\n  sSplit <- strsplit(s, \"\")[[1]]\n  for (i in 1:length(sSplit)) {\n    d <- utf8ToInt(sSplit[i])\n    if ((d >= A) && (d <= Z)) {\n      c <- intToUtf8( (d - A + shift) %% 26 + A)\n    } else {\n      if ((d >= a) && (d <= z)) {\n        c <- intToUtf8( (d - a + shift) %% 26 + a)\n      }\n      else c <- sSplit[i]\n    } \n    res <- paste0(res, c)\n  }\n  res\n}\nencodeStr <- function(s, shift) {\n  v <- encodeAux(s, shift)\n  c <- ceiling(nchar(v) \/ 5)\n  a <- strsplit(v, paste0(\"(?<=.{\",c,\"})\"), perl=TRUE)[[1]]\n  a\n}\ndecode <- function(arr) {\n  s <- paste(arr, collapse=\"\")\n  shift <- utf8ToInt(substr(s, 2, 2)) - utf8ToInt(substr(s, 1, 1))\n  res <- encodeAux(substr(s, 3, nchar(s)), -shift)\n  substr(res, 3, nchar(res))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286618,"user_id":null,"body":"encodeStr <- function(s, shift) {\nu_list <- strsplit(s,split = \"\")[[1]]\n\nASSCII <- as.numeric(sapply(u_list,charToRaw))\nFirst <- rawToChar(as.raw(ASSCII[1]))\nFirst <- tolower(First)\n\nNew_code <- unlist(lapply(ASSCII , function(x,shift){\n  if(x >= 65 && x <= 90-shift || x >= 97 && x <= 122-shift){\n    x <- x + shift\n  }else if(x > 90 - shift && x <=90){\n    x <- x  + shift - 26\n  }else if(x > 122 - shift && x <= 122){\n    x <- x - 32 + shift + 6\n  }\n  return(x)\n},shift))\n\nu_list_shift <- rawToChar(as.raw(New_code))\n\nU_list_shift_F_F <- strsplit(u_list_shift,split = \"\")[[1]]\nSecond <- tolower(U_list_shift_F_F[1])\nU_list_shift_F_F <- c(First , Second , U_list_shift_F_F)\nC_length <- ceiling((length(ASSCII)+2)\/5)\nCCCC <- ceiling((length(ASSCII)+2)\/C_length)\nFinish <- c()\nitem <- 1\nOne <- c()\nwhile (item != (length(ASSCII)+3)) {\n  One <- paste(One, U_list_shift_F_F[item], sep = \"\")\n  if(item %% C_length == 0){\n    Finish <- append(Finish,c(One))\n    One <- c()\n  }\n  item <- item + 1\n}\nFinish <- append(Finish,c(One))\nreturn(Finish)\n  # your code\n}\n\ndecode <- function(arr) {\n    ARR <- paste(arr,sep = \"\",collapse = \"\")\n  ARR_list <- matrix(strsplit(ARR,split = \"\")[[1]])\n  ASSCII <- as.numeric(apply(ARR_list,1,charToRaw))\n  shift <- ASSCII[2] - ASSCII[1]\n  for (i in 1:length(ASSCII)) {\n    if(ASSCII[i] >= 65 + shift && ASSCII[i] <= 90 || ASSCII[i] >= 97 + shift && ASSCII[i] <= 122){\n      ASSCII[i] <- ASSCII[i] - shift\n    }else if(ASSCII[i] >= 65 && ASSCII[i] < 65 + shift){\n      ASSCII[i] <- ASSCII[i] + 26 - shift\n    }else if(ASSCII[i] >= 97 && ASSCII[i] < 97 + shift ){\n      ASSCII[i] <- ASSCII[i] + 26 - shift\n    }else{\n      \n    }\n  }\n  ASSCII <- ASSCII[-(1:2)]\n  u_list_shift <- rawToChar(as.raw(ASSCII))\n  return(u_list_shift)# your code\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286619,"user_id":null,"body":"\nencodeStr <- function(s, shift) {\n  df_lower = data.frame(seq(length(letters)),letters)\n  df_upper = data.frame(seq(length(LETTERS)),LETTERS)\n  \n  shift_letters = 2\n  base_letters = nchar(s)\n  total_letters = base_letters + shift_letters \n  \n  s_split = strsplit(s, \"\")[[1]]\n  first_letter_lower = tolower(s_split[1])\n  first_letter_lower_count = df_lower[df_lower[2] == first_letter_lower, 1]\n  second_letter = letters[(first_letter_lower_count + shift) %% length(letters)] \n  prefix = paste0(first_letter_lower, second_letter)\n  \n  s_split_shifted = c()\n  for(letter in s_split){\n    if(letter %in% letters){\n      old_number = df_lower[df_lower[2] == letter, 1]\n      new_number = ifelse((old_number + shift) <= length(letters), (old_number + shift), (old_number + shift) %% length(letters))\n      new_letter = letters[new_number]\n      s_split_shifted = c(s_split_shifted, new_letter)\n    } else if (letter %in% LETTERS){\n      old_number = df_upper[df_upper[2] == letter, 1]\n      new_number = ifelse((old_number + shift) <= length(LETTERS), (old_number + shift), (old_number + shift) %% length(LETTERS))\n      new_letter = LETTERS[new_number]\n      s_split_shifted = c(s_split_shifted, new_letter)      \n    } else {\n      s_split_shifted = c(s_split_shifted, letter)\n    }\n  }\n    \n    \n  new_s = paste0(s_split_shifted, collapse = \"\")\n  new_text = paste0(prefix, new_s, collapse = \"\")\n  \n  \n  output = NULL\n  counter = 1\n  if(total_letters %% 5 == 0){\n    element_characters = total_letters \/ 5\n    for(i in 1:5){\n      output[i] = paste0(strsplit(new_text, \"\")[[1]][counter:(counter + element_characters - 1)], collapse = \"\")\n      counter = counter + element_characters\n    }\n    return(output)\n    \n  } else {\n    elements_chars_one_thru_four = (total_letters %\/% 5) + 1\n    elements_chars_five = total_letters - (elements_chars_one_thru_four * 4)\n    \n    for(i in 1:5){\n      if(i < 5){\n        output[i] = paste0(strsplit(new_text, \"\")[[1]][counter:(counter + elements_chars_one_thru_four - 1)], collapse = \"\")\n        counter = counter + elements_chars_one_thru_four\n      } else if(elements_chars_five > 0){\n        output[i] = paste0(strsplit(new_text, \"\")[[1]][counter:(counter + elements_chars_five - 1)], collapse = \"\")\n      } else {\n        invisible()\n      }\n    }\n    return(output)\n  }\n}\n\n\n\ndecode <- function(arr) {\n  text = paste0(arr, collapse = \"\") \n  text_split = strsplit(text, \"\")[[1]]\n  shift = which(tolower(text_split[3]) == letters) - which(text_split[1] == letters)\n  new_text = text_split[-(1:2)]\n  \n  \n  new_text_shifted = c()\n  for(letter in new_text){\n    if(letter %in% letters){\n      old_number = which(letter == letters)\n      new_number = (old_number + (length(letters) - shift)) %% length(letters) \n      new_letter = letters[new_number]\n      new_text_shifted = c(new_text_shifted, new_letter)\n    } else if(letter %in% LETTERS){\n      old_number = which(letter == LETTERS)\n      new_number = (old_number + (length(LETTERS) - shift)) %% length(LETTERS)\n      new_letter = LETTERS[new_number]\n      new_text_shifted = c(new_text_shifted, new_letter)\n    } else {\n      new_text_shifted = c(new_text_shifted, letter)\n    }\n  }\n  \n  return(paste0(new_text_shifted, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286620,"user_id":null,"body":"az <- function(l, s) { purrr::map_chr(tolower(l), ~letters[ c((which(letters == .) + s) %% 26, 26) ][1]) }\n\nencodeStr <- function(string, s) {\n  string <- c(tolower( stringr::str_extract(string, \"[a-z|A-Z]\")[c(1,1)] ), strsplit(string, \"\")[[1]]) \n  \n  caps <- string %in% LETTERS\n  index <- c(F, string[-1] %in% c(letters, LETTERS))\n  string[index] <- az(string[index], s)\n  string[caps] <- toupper(string[caps])\n  \n  sep <- pmin( ifelse(length(string)%%5 == 0, length(string)%\/%5, (length(string)%\/%5) + 1) *(0:5), length(string) )\n  out <- \"\"\n  for(i in 1:5) {\n    if(1+sep[i] <= length(string)) out[i] <- paste(string[ (1+sep[i]) : sep[1+i] ], collapse = \"\")\n  }\n  out\n}\n\ndecode <- function(arr) {\n  arr <- strsplit( paste(arr, collapse = \"\"), split = \"\")[[1]]\n  s <- which(letters == arr[2]) - which(letters == arr[1])\n  \n  caps <- arr %in% LETTERS\n  index <- arr %in% c(letters, LETTERS)\n  arr[index] <- az(arr[index], -s)\n  arr[caps] <- toupper(arr[caps])\n  \n  paste(arr[-1:-2], collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286621,"user_id":null,"body":"encodeStr <- function(s, shift) {\ntext <- tolower(substr(s,regexpr('[[:alpha:]]',s),regexpr('[[:alpha:]]',s)))\ntext <- paste0(text,rep(letters,2)[which(letters==text)+shift%%length(letters)])\nfor(i in 1:nchar(s)){\n  if(substr(s,i,i) %in% letters){\n    text <- paste0(text,rep(letters,2)[which(letters==substr(s,i,i))+shift%%length(letters)])\n  } else if(substr(s,i,i) %in% LETTERS){\n    text <- paste0(text,rep(LETTERS,2)[which(LETTERS==substr(s,i,i))+shift%%length(letters)])\n  } else text <- paste0(text,substr(s,i,i))\n}\nunlist(sapply(1:5, function(x){\n    if(nchar(text) > (x-1)*ceiling(nchar(text)\/5))substr(text,1+(x-1)*ceiling(nchar(text)\/5),min(nchar(text),x*ceiling(nchar(text)\/5)))\n  }))\n}\n\ndecode <- function(arr) {\n  s <- paste0(arr,collapse='')\n  shift <- which(letters==substr(s,2,2)) - which(letters==substr(s,1,1))\n  if(shift < 0)shift <- shift + length(letters)\n  shift <- length(letters) - shift\n  text <- \"\"\n  for(i in 3:nchar(s)){\n  if(substr(s,i,i) %in% letters){\n    text <- paste0(text,rep(letters,2)[which(letters==substr(s,i,i))+shift%%length(letters)])\n  } else if(substr(s,i,i) %in% LETTERS){\n    text <- paste0(text,rep(LETTERS,2)[which(LETTERS==substr(s,i,i))+shift%%length(letters)])\n  } else text <- paste0(text,substr(s,i,i))\n}\n  text\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286622,"user_id":669,"body":"shift_impl <- function(s, shift) {\n  x <- utf8ToInt(s)\n  x <- ifelse(x >= 97 & x <= 122, 97 + ((x - 97 + shift) %% 26), x) # a-z\n  x <- ifelse(x >= 65 & x <= 90,  65 + ((x - 65 + shift) %% 26), x) # A-Z\n  intToUtf8(x)\n}\n\nencodeStr <- function(s, shift) {\n  f <- tolower(substr(s, 1, 1))\n  t <- paste0(f, shift_impl(paste0(f, s), shift))\n\n  n <- nchar(t)\n  l <- ceiling(n \/ 5)\n  \n  stringr::str_sub(t, seq(1, n, by = l), l - 1 + seq(1, n, by = l))\n}\n\ndecode <- function(arr) {\n  t <- paste(arr, collapse = \"\")\n  shift <- diff(utf8ToInt(substr(t, 1, 2)))\n  \n  shift_impl(substring(t, 3), -shift)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286623,"user_id":null,"body":"get_new_chars <- function(s, i0, sign1) {\n  \n  chars <- strsplit(s, \"\")[[1]]\n  let_ind <- match(tolower(chars), letters)\n  non_let <- gsub(\"[[:alpha:]]\", \"\", chars)\n  nl_test <- !grepl(\"[[:alpha:]]\", chars)\n  upr_test <- chars %in% LETTERS\n  unwrapped_ind <- let_ind + (sign1 * i0)\n  new_ind <- ((unwrapped_ind - 1L) %% 26L) + 1L\n  new_chars <- letters[new_ind]\n  new_chars[nl_test] <- non_let[nl_test]\n  new_chars[upr_test] <- toupper(new_chars[upr_test])\n  new_chars\n  \n}\n\nencodeStr <- function(s, i0) {\n  \n  coded_message <- get_new_chars(s, i0, 1L)\n  pref1 <- tolower(strsplit(s, \"\")[[1]][1])\n  pref2 <- get_new_chars(pref1, i0, 1L)\n  new_chars <- c(pref1, pref2, coded_message)\n  \n  n <- length(new_chars)\n  m <- n %\/% 5L\n  b <- sum(n %% 5L != 0L)\n  a <- (0:4) * (m + b) + 1L\n  \n  chunks_wNA <- lapply(a, function(x) new_chars[x:(x + m + b - 1L)])\n  chunks <- lapply(chunks_wNA, function(x) x[!is.na(x)])\n  if(length(chunks[[5]]) == 0L) chunks <- chunks[-5]\n  sapply(chunks, paste0, collapse = \"\")\n  \n}\n\ndecode <- function(str) {\n  \n  s <- paste0(str, collapse = \"\")\n  prefix <- strsplit(s, \"\")[[1]][1:2]\n  i0 <- diff(match(prefix, letters))\n  new_chars <- get_new_chars(s, i0, -1L)[-(1:2)]\n  paste0(new_chars, collapse = \"\")\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286624,"user_id":null,"body":"partition <- function(s) {\n  z <- ceiling(nchar(s)\/5)\n  r <- sapply(1:ceiling(nchar(s)\/z), function(k) substr(s,(k-1)*z+1,k*z))\n}\n\nencodeStr <- function(s, shift) {\n  w <- utf8ToInt(s)\n  pos <- gregexpr(\"[A-Za-z]\",s)[[1]]\n  for (k in pos) {\n    ref <- ifelse(w[k]<=utf8ToInt(\"Z\"), utf8ToInt(\"A\"), utf8ToInt(\"a\"))\n    w[k] <- (w[k] + shift - ref)%%26  + ref\n  }\n  prefix <- c(utf8ToInt(tolower(substr(s,1,1))), utf8ToInt(tolower(intToUtf8(w[1]))))\n  return(partition(intToUtf8(c(prefix,w))))\n}\n\ndecode <- function(arr) {\n  s <- paste0(arr,collapse = \"\")\n  shift <- -diff(utf8ToInt(substr(s,1,2)))\n  substr(paste0(encodeStr(s,shift),collapse = \"\"),5,nchar(s)+2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286625,"user_id":null,"body":"partition <- function(s) {\n  lst <- unlist(strsplit(s,split = \"\"))\n  r <- c()\n  z <- ceiling(length(lst)\/5)\n  for (k in 1:(length(lst)%\/%z)) {\n    r[k] <- paste0(lst[z*(k-1)+(1:z)],collapse = \"\")\n  }\n  if (length(lst)%%z != 0) r <- c(r,paste0(lst[-(1:(z*length(lst)%\/%z))],collapse = \"\"))\n  return(r)\n}\n\n\nencodeStr <- function(s, shift) {\n  w <- utf8ToInt(s)\n  pos <- gregexpr(\"[A-Za-z]\",s)[[1]]\n  for (k in pos) {\n    if (w[k]<= utf8ToInt(\"Z\")) {\n      w[k] <- (w[k] + shift - utf8ToInt(\"A\"))%%26  + utf8ToInt(\"A\")\n    } else {\n      w[k] <- (w[k] + shift - utf8ToInt(\"a\"))%%26  + utf8ToInt(\"a\")\n    }\n  }\n  header <- gsub(\"(\\\\w)(.*)\",\"\\\\L\\\\1\",s,perl = T)\n  prefix <- c(utf8ToInt(header), (utf8ToInt(header) + shift - utf8ToInt(\"a\"))%%26  + utf8ToInt(\"a\"))\n  w <- c(prefix,w)\n  return(partition(intToUtf8(w)))\n}\n\ndecode <- function(arr) {\n  s <- paste0(arr,collapse = \"\")\n  prefix <- substr(s,1,2)\n  shift <- diff(utf8ToInt(prefix))\n  w <- utf8ToInt(substr(s,3,nchar(s)))\n  pos <- gregexpr(\"[A-Za-z]\",substr(s,3,nchar(s)))[[1]]\n  for (k in pos) {\n    if (w[k]<= utf8ToInt(\"Z\")) {\n      w[k] <- (w[k] - shift - utf8ToInt(\"A\"))%%26  + utf8ToInt(\"A\")\n    } else {\n      w[k] <- (w[k] - shift - utf8ToInt(\"a\"))%%26  + utf8ToInt(\"a\")\n    }\n  }\n  return(paste0(intToUtf8(w),collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286626,"user_id":null,"body":"firstletter <- TRUE\nfirstletters <- character()\n\nshiftletter <- function(shift, letter){\n    #65 90 97 122 \n    num_letter <- strtoi(charToRaw(letter),16L)\n    shiftl <- num_letter + shift\n    if ((num_letter>= 65 && num_letter <= 90)){\n        if (shiftl > 90){\n            shiftl <- shiftl - 90 + 65 -1 \n        } \n        if (shiftl < 65) shiftl <- shiftl + 26\n        if (firstletter==TRUE){\n            firstletter <<- FALSE\n            firstletters <<- append(firstletters, tolower(letter))\n            firstletters <<- append(firstletters, shiftletter(shift, tolower(letter)))\n        }\n        return(rawToChar(as.raw(shiftl)) )\n    } else if (num_letter >= 97 && num_letter <=122){\n        \n        if (shiftl > 122){\n            shiftl <- shiftl - 122 + 97 -1\n        }\n        if (shiftl < 97) shiftl <- shiftl + 26\n        \n        if (firstletter==TRUE){\n            firstletter <<- FALSE\n            firstletters <<- append(firstletters, tolower(letter))\n            firstletters <<- append(firstletters, shiftletter(shift, tolower(letter)))\n        }\n        return(rawToChar(as.raw(shiftl)) )\n    } else return(letter)\n}\n\n\nencodeStr <- function(s, shift) {\n    firstletter <<- TRUE\n    firstletters <<- character()\n    ss <- unlist(strsplit(s,\"\"))\n    counter <- 1\n    temp<- character()\n    \n    while (counter <= length(ss)){\n        temp <- append(temp, shiftletter(shift, ss[counter]))\n        counter <- counter + 1\n    }\n    \n    temp <- append(firstletters, temp)\n    myarra <- character()\n    longrunners <- (length(unlist(temp))+4) %\/% 5\n    myarra <- append(myarra, paste(temp[1:longrunners],sep = \"\", collapse = \"\"))\n    myarra <- append(myarra, paste(temp[(longrunners+1):(2*longrunners)],sep = \"\", collapse = \"\"))\n    myarra <- append(myarra, paste(temp[(2*longrunners+1):(3*longrunners)],sep = \"\", collapse = \"\"))\n    myarra <- append(myarra, paste(temp[(3*longrunners+1):(4*longrunners)],sep = \"\", collapse = \"\"))\n    if (4*longrunners+1 < length(unlist(temp))){\n        myarra <- append(myarra, paste(temp[(4*longrunners+1):length(unlist(temp))],sep = \"\", collapse = \"\"))\n    }\n    myarra\n    \n    # [\"ijJ tipvme ibw\", \"f lopxo uibu z\", \"pv xpvme ibwf \", \"b qfsgfdu botx\", \"fs gps nf!!!\"]    \n}\ndecode <- function(arr) {\n    allstr <- paste(arr,sep = \"\", collapse = \"\")\n    allstr <- unlist(strsplit(allstr,\"\"))\n    shift <- -1 *(strtoi(charToRaw(allstr[2]),16L) - strtoi(charToRaw(allstr[1]),16L))\n    counter <- 3\n    temp<- character()\n    while (counter <= length(allstr)){\n        temp <- append(temp, shiftletter(shift, allstr[counter]))\n        counter <- counter + 1\n    }\n    paste(temp,sep = \"\", collapse = \"\")\n    \n    \n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"550f22f4d758534c1100025a":[{"id":286627,"user_id":null,"body":"dir_reduc <- function(arr) {\n  s <- paste0(sapply(arr, function(e) substr(e, 1, 1)), collapse = '')\n  while (grepl(\"(WE|EW|NS|SN)\", s)) {s <- sub(\"(WE|EW|NS|SN)\", \"\", s)}\n  if (s == '') return(NULL)\n  to_word <- c(W = \"WEST\", E = \"EAST\", N = \"NORTH\", S = \"SOUTH\")\n  unname(to_word[unlist(strsplit(s, \"\"))])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286628,"user_id":null,"body":"dir_reduc <- function(arr) {\n    u <- paste0(gsub('^(\\\\w).+', '\\\\1', arr), collapse = '')\n    v <- gsub('NS|SN|EW|WE', '', u)\n    while (u != v) { u <- v; v <- gsub('NS|SN|EW|WE', '', v) }\n    directions <- c(N = 'NORTH', S = 'SOUTH', W = 'WEST', E = 'EAST')\n    d <- unname(directions[unlist(strsplit(u, ''))])\n    if (length(d) > 0) return(d)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286629,"user_id":null,"body":"dir_reduc <- function(arr) {\n  # your code\n  pattern <- \"NORTH;SOUTH|SOUTH;NORTH|EAST;WEST|WEST;EAST\"\n  path <- gsub(\"(^;|:$)\", \"\", gsub(\";;\", \";\", gsub(pattern, \"\", paste(arr, collapse=\";\"))))\n  \n  while(T){\n    simpler <- gsub(\"(^;|:$)\", \"\", gsub(\";;\", \";\", gsub(pattern, \"\", path)))\n    ifelse(simpler==path, break, path <- simpler)\n  }\n  \n  ifelse(simpler==\"\", return(c()), return(unlist(strsplit(simpler, \";\"))))\n  \n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286630,"user_id":null,"body":"dir_reduc <- function(arr) {\n  arr[arr == \"NORTH\"] <- 1\n  arr[arr == \"SOUTH\"] <- -1\n  arr[arr == \"EAST\"] <- 2\n  arr[arr == \"WEST\"] <- -2\n  arr <- as.numeric(arr) \n  repeat {\n    n <- length (arr)\n    if (n <= 1) break\n    iter <- arr[-n]+arr[-1]\n    if (all (iter != 0) ) break\n    n0 <- which(iter == 0)   \n    iter[n0+1] <- iter[n0+1] + 10\n    n0real <- which(iter == 0)\n    arr <- arr[-1 * c(n0real,n0real+1)]\n  }\n  if (n == 0) return(c())\n  arr[arr == 1] <- \"NORTH\"\n  arr[arr == -1] <- \"SOUTH\"\n  arr[arr == 2] <- \"EAST\"\n  arr[arr == -2] <- \"WEST\"\n  return(arr)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286631,"user_id":null,"body":"library(tidyverse)\nlibrary(magrittr)\ndir_reduc <- function(arr) {\n  opposite_dir <- c(\"NORTH\", \"SOUTH\", \"EAST\", \"WEST\") %>%\n    set_names(c(\"SOUTH\", \"NORTH\", \"WEST\", \"EAST\"))\n\n  stack <- character(0)\n\n  for (step in arr) {\n    n <- length(stack)\n    if (n > 0 && opposite_dir[step] == stack[n]) {\n      stack <- stack[-n]\n    } else {\n      stack[n + 1] <- step\n    }\n  }\n\n  if(length(stack)==0){\n    return(c())\n  }else{\n    return(stack) \n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286632,"user_id":null,"body":"dir_reduc <- function(arr) {\n  if (is.null(arr)) return (NULL)\n  if (length(arr)==0) return (c())\n  \n  reduce <- function(x, stack) {\n    if (length(x)==0) {\n      return (list(x, if (length(stack)>0) stack else c()))\n    }\n    \n    head <- x[1]\n    tail <- if (length(x)>1) x[2:length(x)] else c()\n    \n    if (length(stack)==0) {\n      stack[1] <- head\n      return (reduce(tail, stack))\n    }\n    \n    NS <- c(\"NORTH\", \"SOUTH\")\n    EW <- c(\"EAST\", \"WEST\")\n    last_on_stack = stack[length(stack)]\n\n    if (all(sort(c(last_on_stack, head))==sort(NS)) ||\n        all(sort(c(last_on_stack, head))==sort(EW))\n    ) {\n      length(stack) <- length(stack) - 1\n    } else {\n      stack[length(stack)+1] <- head\n    }\n    \n    return (reduce(tail, stack))\n  }\n  \n  return (reduce(arr, c())[[2]])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286633,"user_id":null,"body":"dir_reduc <- function(arr) {\n  # your code\n  if(is.null(arr) | length(arr) < 2)\n    return(arr)\n  arr = toupper(arr)\n  reverse_ns = c(\"NORTH\", \"SOUTH\")\n  reverse_ew = c(\"EAST\", \"WEST\")\n  \n  arr.res = arr[1]\n  for(i in 2:length(arr)){\n    if(length(arr.res) < 1){\n      arr.res = arr[i]\n      next\n    }\n      \n    arr.start = tail(arr.res, 1)\n    arr.next = arr[i]\n    if(all(reverse_ns %in% c(arr.start, arr.next)) || \n       all(reverse_ew %in% c(arr.start, arr.next))){\n      arr.res = arr.res[-(length(arr.res))]\n         next\n    }\n    arr.res = c(arr.res, arr.next)\n  }\n  if(length(arr.res) < 1)\n    return(NULL)\n  return(arr.res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286634,"user_id":null,"body":"dir_reduc <- function(arr) {\n  i <- 1\n  while (i < length(arr)) {\n    pair <- tolower(c(arr[i], arr[i+1]))\n    ns <- tolower(c(\"north\", \"south\"))\n    ew <- tolower(c(\"east\", \"west\"))\n    if (all(ns %in% pair) || all(ew %in% pair)) {\n      arr <- arr[-c(i, (i+1))]\n      i <- 0\n    }\n    i <- i + 1\n  }\n  ifelse(identical(arr, character(0)) == TRUE, return(c()), return(arr))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286635,"user_id":null,"body":"dir_reduc <- function(arr) {\n  lookup <- c('NORTH' = 1, 'SOUTH' = -1, 'EAST' = 2, 'WEST' = -2)\n  i <- 1\nwhile(i != length(arr)) {\n  if(lookup[arr[i]] + lookup[arr[(i+1)]] == 0) {\n    arr <-arr[-(i+1)]\n    arr <- arr[-i]\n    if(i>1) i <- i - 1\n  } else {i <- i + 1}\n}\n  if(length(arr) == 0) return(c())\n  return(arr)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286636,"user_id":null,"body":"dir_reduc <- function(arr) {\n  \n  StepReduc <- function(my_arr) {  \n    res <- list()\n    remove_next = 0\n    \n    for (i in 1:(length(my_arr))) {\n      if (remove_next == 1) {\n        remove_next = 0\n        next\n      }\n     if (all(c(\"NORTH\", \"SOUTH\") %in% my_arr[i:(i+1)]) | all(c(\"EAST\", \"WEST\") %in% my_arr[i:(i+1)])) {\n       remove_next = 1\n       next\n     }\n      res <- append(res, list(my_arr[i]))\n    }\n    return(unlist(res))\n  }\n  \n  my_arr <- arr\n  count = 1\n  \n  while (count < length(arr)) {\n    my_arr <- StepReduc(my_arr)\n    count = count + 1\n  }\n  \n  return(my_arr)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5511b2f550906349a70004e1":[{"id":286637,"user_id":53,"body":"str_mod <- function(n1, n2) {\n  ans <- 0\n  digits <- as.numeric(unlist(strsplit(as.character(n2), \"\")))\n  for (i in 1:length(digits)) {\n    digit <- digits[i]\n    ans <- (ans * 10 + digit) %% n1\n  }\n  return(ans)\n}\n\nlast_digit <- function(s1, s2) {\n  a <- as.numeric(unlist(strsplit(as.character(s1), \"\")))\n  b <- as.numeric(unlist(strsplit(as.character(s2), \"\")))\n  n <- length(a)\n  m <- length(b)\n  if (m == 1 && b[1] == 0) { return(1) }\n  if (n == 1 && a[1] == 0) { return(0) }\n  exp <- if (str_mod(4, b) == 0) 4 else str_mod(4, b)\n  ans <- a[n] ^ exp\n  return(ans %% 10)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286638,"user_id":null,"body":"last_digit <- function(a, b) {\n  if (b == 0) {\n    1\n  } else {\n    x <- outer(0:9, 4:7, `^`) %% 10\n    x[as.integer(substr(a, nchar(a), nchar(a))) + 1,\n      as.integer(substr(b, nchar(b) - 1, nchar(b)))  %% 4 + 1]\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286639,"user_id":null,"body":"last_digit <- function(s1, s2){\n  if(s2>0)(as.numeric(substr(s1,nchar(s1),nchar(s1)))%%10)**(as.numeric(substr(s2,nchar(s2)-2,nchar(s2)))%%4+4)%%10 else 1\n  }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286640,"user_id":null,"body":"last_digit <- function(s1, s2) {\n if (s2 == 0) return(1)\n if (s1 == 0) return(0)\n\n s1<-as.numeric(substr(s1,nchar(s1),nchar(s1)))\n s2<-as.numeric(substr(s2,nchar(s2)-1,nchar(s2))) \n if (s1 %in% c(0,1,5,6)) return(s1)\n\n  if (s1 == 4) return(c(6,4)[s2 %% 2 +1])\n  if (s1 == 9) return(c(1,9)[s2 %% 2 +1])\n\n  if (s1 == 2) return(c(6,2,4,8)[s2 %% 4 +1])\n  if (s1 == 3) return(c(1,3,9,7)[s2 %% 4 +1])\n  if (s1 == 7) return(c(1,7,9,3)[s2 %% 4 +1])\n  if (s1 == 8) return(c(6,8,4,2)[s2 %% 4 +1])\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286641,"user_id":null,"body":"last_digit <- function(s1, s2) {\n  n_x = nchar(s1);\n  n_y = nchar(s2);\n  \n  x_last_digit = substr (s1,n_x,n_x);\n  y_last_digits = substr (s2,n_y - 2, n_y);\n  x = as.integer(x_last_digit);\n  y = as.integer(y_last_digits);\n  \n  out = x ^ (y%%4 + 4*(y >= 4 || n_y >= 3))\n  \n  return (out%%10)\n             \n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286642,"user_id":null,"body":"last_digit <- function(s1, s2) {\n  mod_table <- list(c(0, 0, 0, 0), c(1, 1, 1, 1), c(6, 2, 4, 8),\n                    c(1, 3, 9, 7), c(6, 4, 6, 4), c(5, 5, 5, 5),\n                    c(6, 6, 6, 6), c(1, 7, 9, 3), c(6, 8, 4, 2),\n                    c(1, 9, 1, 9))\n  if (s2 == \"0\") {\n    return(ifelse(s1 == \"0\", 0, 1))\n  }\n  # only need the last digit of s1 and last 2 digits of s2\n  n1 <- as.integer(substr(s1, nchar(s1), nchar(s1)))\n  n2 <- as.integer(substr(s2, nchar(s2)-1, nchar(s2)))\n  return(mod_table[[n1 %% 10 + 1]][n2 %% 4 + 1])\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286643,"user_id":null,"body":"last_digit <- function(s1, s2) {\n  if (s2 == \"0\") return(1)\n  (find_s1(s1) ^ find_s2(s2)) %% 10\n}\n\nfind_s1 <- function(x) {\n  as.numeric(tail(unlist(strsplit(x, split = \"\")),1))\n}\n\nfind_s2 <- function(x) {\n  x <- paste0(tail(unlist(strsplit(x, split = \"\")),2), collapse = \"\")\n  ifelse((x == \"00\" || as.numeric(x)%%4==0), 4, as.numeric(x)%%4)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286644,"user_id":null,"body":"last_digit <- function(s1, s2) {return(((as.numeric(substr(s1,nchar(s1),nchar(s1)))%%10)^(as.numeric(substr(s2,nchar(s2)-2,nchar(s2)))%%4+4*(as.numeric(s2)!=0)))%%10)}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286645,"user_id":null,"body":"last_digit <- function(s1, s2) {\n\tlen_s1 <- nchar(s1)\n\tlen_s2 <- nchar(s2)\n\tres <- modulo(4,s2)\n\tif(len_s2 == 1 && strtoi(substr(s2, 1, 1)) == 0){\n\t\treturn(1)\n\t}\n\tif (res == 0){ exp <- 4 } \n\telse { exp <- res }\n\t\n\treturn((strtoi(substr(s1, len_s1, len_s1))**exp) %% 10)\n}\n\nmodulo <- function(a,b){\n\tmod <- 0\n\tfor (i in 1:nchar(b)){\n\t\tdigit <- strtoi(substr(b, i, i))\n\t\tmod   <- (mod * 10 + digit) %% a\n\t}\n\treturn(mod)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286646,"user_id":null,"body":"last_digit <- function(s1, s2) {\n  \n  getLastD <- function(s,n){ #helper to get last n digits of string-represented number\n      len <- nchar(s)\n      return(as.integer(substr(s,len-n+1,len)))\n      }\n  \n  modMod <- function(n.s, m){ #number to get mod 4 of very large string-represented number. Return 0 only if n is 0.\n      if (as.numeric(n.s)==0) {return(0)}\n      else {\n          n <- getLastD(n.s,4)\n          mod <- n%%m\n          if(mod==0){\n              return(m)\n              }\n          else {\n              return(mod)\n              }      \n        }\n      }\n  \n  d1 <- getLastD(s1,1)\n  e1 <- modMod(s2,4)\n\n  return(getLastD(d1^e1,1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5517fcb0236c8826940003c9":[{"id":286647,"user_id":null,"body":"gcd <- function(a,b)ifelse(b,Recall(b,a%%b),a)\n\nsum_fracts <- function(ls) { \n  if(length(ls)==0) return(NULL)\n   ls <- matrix(unlist(ls),nrow=2)\n   common_denom <- 1\n   for(i in ls[2,])common_denom <- common_denom*i\/gcd(common_denom,i)\n   res <- c(sum(ls[1,]*common_denom\/ls[2,]),common_denom)\n   res <- res\/gcd(res[1],res[2])\n   if(res[2]==1)res[1] else res\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286648,"user_id":null,"body":"sum_fracts <- function(ls) {\n  if (length(ls) == 0) {\n    return(NULL)\n  }\n  denominator <- ls[[1]][2]\n  numerator <- ls[[1]][1]\n  for (pair in ls[2:length(ls)]) {\n    numerator <- denominator * pair[1] + numerator * pair[2]\n    denominator <- denominator * pair[2]\n  }\n  if (numerator %% denominator == 0) {\n    return(numerator \/ denominator)\n  }\n  max.com.div <- getCd(numerator, denominator)\n  c(numerator \/ max.com.div, denominator \/ max.com.div)\n}\n\ngetCd <- function(a, b) {\n  if (a == 0 || b == 0) return(0)\n  if (a * b < 0) return(1)\n  if (a %% b == 0) {\n    return(b)\n  } else {\n    return(getCd(b, a %% b))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286649,"user_id":null,"body":"sum_fracts <- function(ls) {\nif(length(ls) == 0){\n  return(NULL)\n}else{\n  n <- 1\n  for (i in 1:length(t(as.data.frame(ls))[,2])) {\n    n <- lcm.bigz(n,t(as.data.frame(ls))[i,2])\n  }\n  \n  New_ls <- t(as.data.frame(ls))\n  fenzi <- sum(n\/New_ls[,2]*New_ls[,1])\n  fenmu <- n\n  if(fenzi %% fenmu == 0){\n    return(fenzi\/fenmu)\n  }else{\n    if(gcd(fenzi , fenmu) > 1 ){\n      return(c(fenzi\/gcd(fenzi , fenmu) , fenmu\/gcd(fenzi , fenmu)))\n    }else{\n      return(c(fenzi , fenmu))\n    }\n  }\n}\n}\n\nlcm.bigz <- function(a,b){\n  k <- max(a,b) - 1\n  repeat{\n    k <- k+1\n    if(k%%a == 0 && k%%b == 0){\n      c <- k\n      break\n    }\n  }\n  return(c)\n}\n\ngcd <- function(a,b) {\n  if (b == 0) return(a)\n  else return(gcd(b, a %% b))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286650,"user_id":53,"body":"gcd <- function (a, b) {\n  if (b == 0) a else gcd(b, a %% b)\n}\n\nlcm <- function (a, b) {\n  (a * b) %\/% gcd(a, b)\n}\n\nreduce <- function (a, b) {\n  i <- gcd(a, b)\n  c(a %\/% i, b %\/% i)\n}\n\nnorm <- function (a, b, cd) {\n  c(a * cd %\/% b, cd)\n}\n\nsum_fracts <- function(ls) {\n  if (length(ls) == 0) {\n    return(NULL)\n  }\n  xss <- list()\n  yss <- list()\n  cd <- 1\n  i <- 1\n  for (xs in ls) {\n    xss[[i]] <- reduce(xs[1], xs[2])\n    i <- i + 1\n  }\n  for (xs in xss) {\n    cd <- lcm(xs[2], cd)\n  }\n  i <- 1\n  n <- 0\n  for (xs in xss) {\n    n <- n + xs[1] * cd %\/% xs[2]\n    i <- i + 1\n  }\n  g <- gcd(n, cd)\n  if (g == cd) {\n    return(n %\/% cd)\n  } else {\n    return(c(n %\/% g, cd %\/% g))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286651,"user_id":null,"body":"short <- function(n, d){\n  div_n <- (2:n)[n %% (2:n) == 0]\n  div_d <- (2:d)[d %% (2:d) == 0]\n  divider <- max(div_n[div_n %in% div_d])\n  if (divider == -Inf) return(c(n,d))\n  if (d\/divider == 1) return(n\/divider)\n  c(n\/divider, d\/divider)\n  }\n\nsum_fracts <- function(ls) {\n  if(length(ls)==0) return(NULL)\n  m <- do.call(rbind, ls)\n  p <- prod(m[,2])\n  n <- sum(m[,1] * (p \/ m[,2]))\n  short(n=n, d=p)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286652,"user_id":null,"body":"sum_fracts <- function(ls){\n  print(ls)\n  if(length(ls)==0) return(NULL)\n  f <- MASS::fractions(sum(sapply(ls,function(frac) frac[1]\/frac[2])),cycles=Inf)\n  \n  final <- c()\n  for(i in strsplit(attr(f,\"fracs\"),\"\/\")[[1]]){\n    final <- c(final,i)\n  }\n  as.numeric(final)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286653,"user_id":null,"body":"primeFac <- function(n){\n  out <- c()\n  k <- 2\n  while(k < n+1){\n    while(n%%k == 0){\n      out <- c(out,k)\n      n <- n%\/%k\n    }\n    k=ifelse(k==2,3,k+2)\n  }\n  out\n}\n\nsum_fracts <- function(ls) {\n  if(length(ls)==0) return(NULL)\n  den_t <<- table(primeFac(prod(sapply(ls,`[`,2))))\n  num_t <<- table(primeFac(sum(sapply(ls,`[`,1)*prod(sapply(ls,`[`,2))\/sapply(ls,`[`,2))))\n  is <- intersect(names(den_t),names(num_t))\n  min_t <- pmin(den_t[is],num_t[is])\n  den_t[is] <- den_t[is]-min_t\n  num_t[is] <- num_t[is]-min_t\n  den <- prod(as.integer(names(den_t))^den_t)\n  out <- prod(as.integer(names(num_t))^num_t)\n  if(den>1)out <- c(out,den)\n  out\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286654,"user_id":null,"body":"library(purrr)\n\ngcd <- function(a,b) {\n  if (b == 0) {\n    return(abs(a))\n  } else {\n    return(gcd(b, (a %% b)))\n  }\n}\n\nlcm <- function(a, b) {\n  (a * b)\/gcd(a,b)\n}\n\nsum_fracts <- function(ls) {\n  print(ls)\n  if (length(ls) == 0) {\n    return(NULL)\n  }\n  lcd <- reduce(lapply(ls, function(x) x[2]), function(y,z) lcm(y,z))\n  num <- reduce(lapply(ls, function(x) x[1] * (lcd\/x[2])), function(y,z) y + z)\n  \n                       \n  print(c(num, lcd))\n  \n  if (num %% lcd == 0) {\n    return(num\/lcd)\n  } else {\n    tmp <- gcd(num, lcd)\n    return(c(num\/tmp, lcd\/tmp))\n  }\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286655,"user_id":null,"body":"sum_fracts <- function(ls) {\n  if(length(ls)>0){\n  sf <- sum(unlist(lapply(ls, function(x) x[1]\/x[2])))\n  if(sf-floor(sf) ==0){print(sf)}else{\n    dem <- unlist(lapply(ls,function(x) x[2]))\n    dm <- 1\n    for(i in 1:length(dem)){dm <- dm*(dem[i])}\n    num <- sum(unlist(lapply(ls,function(x) x[1]*dm\/x[2])))\n    m <-max(c(dm,num))\n    n <-min(c(dm,num))\n    while(m%%n!=0){\n      r <- m%%n\n      m <- n\n      n <- r\n    }\n    print(c(num\/n,dm\/n))\n  }}\n  else{NULL}\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286656,"user_id":null,"body":"sum_fracts <- function(x) {\n  gcd <- function(a, b) {\n    if (a %% b == 0) {\n      b\n    } else {\n      gcd(b, a %% b)\n    }\n  }\n  get_lowest <- function(x) {\n    g <- gcd(x[[1]], x[[2]])\n    x %\/% g\n  }\n  add2 <- function(x, y) {\n    g <- gcd(x[[2]], y[[2]])\n    get_lowest(c((x[[1]] * y[[2]] + y[[1]] * x[[2]]) \/ g, abs(x[[2]] * y[[2]]) \/ g ))\n  }\n  if (length(x) > 0) {\n    out <- get_lowest(Reduce(add2, x))\n    if (any(out < 1:2)) {\n      out[1]\n    } else {\n      out\n    }\n  }\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"551b4501ac0447318f0009cd":[{"id":286657,"user_id":421,"body":" boolean_to_string <- toString","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286658,"user_id":null,"body":" boolean_to_string <- function(b){\n   tolower(toString(b))\n }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286659,"user_id":53,"body":" boolean_to_string <- function(b) {\n   ifelse(b,\"true\",\"false\")\n }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286660,"user_id":null,"body":" boolean_to_string <- function(b){\n   if (b) {\n     'true'\n   } else {'false'}\n }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286661,"user_id":null,"body":" boolean_to_string <- function(b){\n  lawrencehon <- as.character(b)\n   print(lawrencehon)\n }","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286662,"user_id":null,"body":" boolean_to_string <- function(b){\n   if (b==1){\n     return (\"true\")\n   }\n   else return (\"false\")\n }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286663,"user_id":null,"body":" boolean_to_string <- function(b){\n   if (b == 1){\n     return (\"true\")\n   }\n   else {\"false\"}\n }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286664,"user_id":null,"body":" boolean_to_string <- function(b){\n   ifelse(b==1, 'true', 'false')\n   }\n   \n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286665,"user_id":null,"body":" boolean_to_string <- function(b){\n   if(b==true | b==false){\n   i <- as.character(b)\n     }\n   return(i)\n }","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286666,"user_id":null,"body":" boolean_to_string <- function(b){\n   if (b == true){\n     return (\"true\")\n   }\n   return (\"false\")\n }","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"551dd1f424b7a4cdae0001f0":[{"id":286667,"user_id":null,"body":"who_is_next <- function(names, r) {\n    l <- length(names)\n    m <- floor(log2(1 + r \/ l))\n    s <- r - l * (2 ** m - 1)\n    names[ceiling(s \/ 2 ** m)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286668,"user_id":null,"body":"who_is_next <- function(names, r) {\n  names[(which.min(cumsum(rep(2^seq(0, ceiling(log2(r \/ length(names)))),\n                              each = length(names))) < r) - 1) %% length(names) + 1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286669,"user_id":null,"body":"who_is_next <- function(names, r) {\n    while (r > length(names)) r <- as.integer((r - length(names) + 1) \/ 2)\n    names[r]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286670,"user_id":53,"body":"who_is_next <- function(names, r) {\n  n <- length(names)\n  k <- floor(log2(as.double(r + n - 1) \/ n))\n  t <- 2 ** k\n  i <- floor(as.double(r + n - 1 - n * t) \/ t)\n  names[i + 1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286671,"user_id":null,"body":"who_is_next <- function(s, i) {\n  n <- length(s)\n  x <- log2(1 + i \/ n)\n  a <- 2 ^ floor(x)\n  b <- ceiling(((i + n) \/ a) - n)\n  s[b]\n}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286672,"user_id":null,"body":"who_is_next <- function(names, r) {\n  l = length(names)\n  while (r >= l) {\n    r <- r-l\n    l <- l*2\n  }\n  names[ceiling(length(names)*r\/l)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286673,"user_id":null,"body":"who_is_next <- function(names, r){\n  result <- c()\n  pos <- c()\n  i1 <- c()\n  \n  array <- c()\n  array[1] <- 0\n  for(i in 1:1000){\n    array[i+1] <- array[i]*2+length(names)\n  }\n  \n  if(r %in% array){\n    result <- names[length(names)]\n  }\n  else{\n    i <- c(1:1000)\n    i1 <- i[which(r > array[i] & r < array[i+1])]\n    pos <- ceiling((r - array[i1])\/(2^(i1-1)))\n    result <- names[pos]\n  }\n  print(result)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286674,"user_id":null,"body":"who_is_next <- function(names, r) {\n  while(r > length(names)) {\n    r <- (r - length(names)) \/ 2\n  }\n  names[ceiling(r)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286675,"user_id":null,"body":"who_is_next <- function(names, r) {\n  n <- length(names)\n  c <- 0\n  i <- 1\n  while(c < r) {\n    c <- c + n\n    n <- n * 2\n    i <- i * 2\n  }\n  i <- i \/ 2\n  names[ceiling((r - (c - n \/ 2)) \/ i)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286676,"user_id":132,"body":"who_is_next <- function(names, r) {\na <-  length(names)\nfor(i in 1:100) if(a*(2^i-1)>=r) break\nr <- r-a*(2^(i-1)-1)\nreturn(names[ceiling(r\/(2^(i-1)))])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55217af7ecb43366f8000f76":[{"id":286677,"user_id":null,"body":"get_num <- function(n){\n  n <- strsplit(as.character(n), \"\")[[1]]\n  sum(n==\"0\" | n==\"6\" | n==\"9\") + 2*sum(n==\"8\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286678,"user_id":null,"body":"get_num <- function(n){\n  chars <- strsplit(toString(n),\"\")[[1]]\n  holes <- c('0'=1, '6'=1, '8'=2, '9'=1)\n  sum(holes[chars], na.rm=TRUE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286679,"user_id":421,"body":"get_num <- function(n){\n  sum(as.integer(strsplit(chartr(\"0123456789\", \"1000001021\", toString(n)), \"\")[[1]]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286680,"user_id":null,"body":"get_num <- function(n){\n  x <- strsplit(as.character(n), \"\")[[1]]\n  return(sum(x == 0, x == 6, x == 9, 2 * (x == 8)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286681,"user_id":null,"body":"get_num <- function(n){\n  x <- table(as.numeric(unlist(strsplit(as.character(n), split = \"\"))))\n  sum(x[\"0\"], x[\"6\"], x[\"8\"] * 2, x[\"9\"], na.rm = TRUE)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286682,"user_id":null,"body":"library(stringi)\nlibrary(stringr)\n\nget_num <- function(n){\n  n <- as.numeric(str_split(n, \"\", simplify = T))\n  return(sum(n == 0) + sum(n == 6) + sum(n == 9) + 2*sum(n == 8))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286683,"user_id":null,"body":"get_num <- function(n){\n  hole_nos <- setNames(c(1,2,1,1), c(6, 8, 9, 0))\n  n %>% as.character(.) %>% strsplit(., \"\") %>% unlist(.) %>% hole_nos[.] %>% na.omit(.) %>% sum(.)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286684,"user_id":null,"body":"get_num <- function(n){\n  n_list <- as.numeric(strsplit(as.character(n),split = \"\")[[1]])\nlength(which(n_list %in% 8))*2 + length(which(n_list %in% c(0,6,9)))\n  # Your code here\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286685,"user_id":53,"body":"get_num <- function(n) {\n  if (n == 0) {\n    return(1) \n  }\n  m = 0\n  while (n > 0) {\n    d = n %% 10\n    if (d == 0 || d == 6 || d == 9) {\n      m <- m + 1\n    } else if (d == 8) {\n      m <- m + 2\n    }\n    n <- n %\/% 10\n  }\n  m\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286686,"user_id":53,"body":"get_num <- function(n) {\n  m = 0\n  while (n > 0) {\n    d = n %% 10\n    if (d == 0 || d == 6 || d == 9) {\n      m <- m + 1\n    } else if (d == 8) {\n      m <- m + 2\n    }\n    n <- n %\/% 10\n  }\n  m\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5539fecef69c483c5a000015":[{"id":286687,"user_id":669,"body":"backwards_prime <- function(start, stop) {\n  prime  <- function(n) n == 2 || all(n %% seq(2, ceiling(sqrt(n))) > 0)\n  digits <- function(n) as.numeric(unlist(strsplit(paste(n), \"\")))\n  revn   <- function(n) as.numeric(paste(rev(digits(n)), collapse = \"\"))\n\n  out <- purrr::keep(start:stop, ~prime(.) && . != revn(.) && prime(revn(.)))\n  if (length(out) > 0) out else NULL\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 15:14:25"},{"id":286688,"user_id":null,"body":"#' Tests if a given number is a prime.\n#'\n#' @param n double\n#'\n#' @return logical\n#' TRUE or FALSE.\n#' @export\n#'\n#' @examples\nis_prime <- function(n) {\n  n == 2L || all(n %% 2L:max(2, floor(sqrt(n))) != 0)\n}\n\n\n#' Checks if a prime number is also\n#' a prime backwards (digits switched).\n#'\n#' @include\n#' is_prime\n#'\n#' @param start double\n#' Sequence start.\n#' @param stop double\n#' Sequence end.\n#'\n#' @return NULL; double (vector).\n#' NULL if primes are not found.\n#' The numbers that are also primes backwards\n#' in a given range in form (start...end).\n#' Excludes palindromes.\n#'\n#' @export\n#'\n#' @examples\nbackwards_prime <- function(start, stop) {\n  num_vec = seq.int(from = start, to = stop)\n  num_bin = numeric()\n  res = sapply(num_vec, function(x) {\n    # Base number.\n    num = x\n    # Switches number digits.\n    num_rev = as.numeric(\n      paste(\n        rev(\n          strsplit(\n            as.character(num),\n            split = \"\")[[1]]\n        ),\n        collapse = \"\"\n      )\n    )\n\n    # TRUE, if number and reverse are primes.\n    check_prime = ifelse(\n      test = is_prime(num) & is_prime(num_rev),\n      yes = TRUE,\n      no = FALSE)\n\n    # TRUE, if not palindrome.\n    check_pal = ifelse(\n      test = num != num_rev,\n      yes = TRUE,\n      no = FALSE)\n\n    if (check_prime & check_pal) {\n      num_bin = c(num_bin, num)\n    }\n  })\n\n  res = unlist(res)\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 15:14:32"},{"id":286689,"user_id":null,"body":"is.prime <- function(num){\n  if (num == 2){\n    TRUE\n  } else if (any(num %% 2:ceiling(sqrt(num-1)) == 0)){\n    FALSE\n  } else {\n    TRUE\n  }\n}\n\nrev.number <- function(num){\n  new = rev(unlist(strsplit(toString(num), '')))\n  return(as.numeric(paste(new,collapse='')))\n}\n\n\nbackwards_prime <- function(start, stop) {  \n  r = c()\n  for (number in start:stop){\n    if (is.prime(number)){\n      rev = rev.number(number)\n      if (rev != number){\n        if (is.prime(rev)){\n          r=c(r,number)\n        }\n      }\n    }\n  }\n  return(r)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 15:14:35"},{"id":286690,"user_id":null,"body":"backwards_prime <- function(a, b) {\n  reverse_digits <- function(x) {\n    sapply(strsplit(as.character(x), \"\"),\n           function(y) {\n             as.numeric(paste(rev(y), collapse = \"\"))\n           })\n  } \n  is_prime <- function(n) {\n    if (n == 2 || n == 3) {\n      TRUE\n    } else if (n > 3 && (n %% 2 && n %% 3)) {\n      p <- 3\n      while (p <= sqrt(n)) {\n        p <- p + 2\n        if (!(n %% p)) {\n          return(FALSE)\n        }\n      }\n      TRUE\n    } else {\n      FALSE\n    }\n  }\n  candidates <- seq(a, b)\n  primes <- candidates[sapply(candidates, is_prime)]\n  out <- primes[sapply(reverse_digits(primes), is_prime) & primes != reverse_digits(primes)]\n  if (length(out) > 1) {\n    out\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 15:01:40"},{"id":286691,"user_id":null,"body":"isprime <- function(n) n == 2L || all(n %% 2L:ceiling(sqrt(n)) != 0)\nbackwards_prime <- function(start, stop) {\n  d <- NULL\n  for (e in seq(start, stop))\n   if (isprime(e)){\n     r <- as.numeric(paste(rev(strsplit(as.character(e),\"\")[[1]]), collapse = \"\"))\n     if(isprime(r) & e != r)\n     d <- c(d, e)\n  }\n  return (d)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 15:01:40"},{"id":286692,"user_id":null,"body":"is_prime <- function(n){\n  n == 2 || all(n %% 2:max(2,floor(sqrt(n))) != 0)\n}\n\nrevInt <- function(n) {\n  as.numeric(paste(rev(strsplit(as.character(n),\"\")[[1]]),collapse=\"\"))\n}\n\nbackwards_prime <- function(start, stop) {\n  p <- unlist(lapply(start:stop, function(x) if (is_prime(x) && x >= 10 && x != revInt(x)) x))\n  unlist(lapply(p, function(x) if (is_prime(revInt(x))) x))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 15:01:40"},{"id":286693,"user_id":null,"body":"reverse <- function(n){\n  nn <- as.numeric(paste0(rev(strsplit(toString(n),\"\")[[1]]),collapse=\"\"))\n  if (nn == n) return(0) else return(nn)\n}\n\n\n\nprime <- function(n){\n  if (n <= 3) return(1 * (n == 2 | n ==3))\n  if (n %% 2 == 0) return(0)\n  for(i in seq(3,ceiling(sqrt(n)),2) ){\n    if(n %% i == 0) return(0)\n  }\n  return(1) \n}\n\n\n\nbackwards_prime <- function(start, stop) {\n  res <- c()\n  for(i in start:stop){\n    if (prime(i)) if (prime(reverse(i))) res <- c(res, i)\n  }\n  print(res) \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 15:01:40"},{"id":286694,"user_id":null,"body":"backwards_prime <- function(start, stop){\n  is.prime <- function(n) n == 2L || all(n %% 2L:max(2,floor(sqrt(n))) != 0)\n  forward_prime <- c(start:stop)[sapply(start:stop, is.prime)]\n  backward <- as.numeric(unlist(lapply(lapply(strsplit(as.character(forward_prime), \"\"), rev), paste0, collapse = \"\")))\n  pos <- sapply(backward, is.prime) & forward_prime != backward\n  if(any(pos)){\n    return(forward_prime[pos])\n  }else{\n    return(c())\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 15:01:40"},{"id":286695,"user_id":null,"body":"isPrime <- function(n){\n  if (n==2) return (TRUE)\n  all(n %% 2:ceiling(sqrt(n)) != 0)\n}\n\nrev_numb <- function(n){\n n <- strsplit(as.character(n), \"\")[[1]]\n as.numeric(paste(rev(n), collapse=\"\"))\n}\n\nbackwards_prime <- function(start, stop) {\n  v <- start:stop\n  v <- v[sapply(start:stop, isPrime)]\n  res <- c()\n  for (i in v) if (i!=rev_numb(i) && isPrime(rev_numb(i))) res <- c(res, i)\n  sort(res)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 15:01:40"},{"id":286696,"user_id":null,"body":"isPrime = function(n){\n    if (n < 2) return(FALSE)\n    if (n < 4) return(TRUE)\n    all(n %% (2:trunc(sqrt(n))) > 0)\n}\n\nreverseNum = function(x){as.numeric(paste0(rev(unlist(strsplit(as.character(x), \"\"))), collapse = \"\"))}\n\nbackwards_prime <- function(start, stop) {\n  print(start)\n  print(stop)\n  numvec1 = start:stop\n  numvec2 = sapply(numvec1, reverseNum)\n  index = mapply(function(x,y){isPrime(x) & isPrime(y) & x != y}, numvec1, numvec2)\n  if (sum(index) > 0) numvec1[index] else NULL\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 15:01:40"}],"5541f58a944b85ce6d00006a":[{"id":286697,"user_id":492,"body":"product_fib <- function(prod) {\n    a <- 1; b <- 1\n    while (a * b < prod) {\n        nxt <- a + b\n        a <- b\n        b <- nxt\n    }\n    c(a, b, a * b == prod)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286698,"user_id":null,"body":"ff=function(x)\n{\n  res=c(0,1)\n  i=3\n  while(i<x)\n  {\n  res=c(res,sum(res[i-2],res[i-1]))\n  i=i+1\n  }\n  return(res)\n}\n\nfibonacci=ff(1000)\n\n\nproduct_fib <- function(prod) {\n    fibonacci.1=c(fibonacci[-1],0)\nres=fibonacci*fibonacci.1\nif(any(prod==res)) \n{\n  pos=which(prod==res)\n  return(oup=c(fibonacci[pos],fibonacci[pos+1],1))\n}else{\n  pos=which(res>prod)[1]\n  return(oup=c(fibonacci[pos],fibonacci[pos+1],0))\n}\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286699,"user_id":null,"body":"product_fib <- function(prod) {\n    a <- 1\n    b <- 1\n    while ( a * b <= prod){   \n    if (a * b == prod) return(c(a, b, TRUE))\n    b <- a + b\n    a <- b - a\n    }\n    return(c(a, b, FALSE))   \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286700,"user_id":null,"body":"product_fib <- function(prod) {\n  f1 = 0\n  f2 = 1\n  while (f1*f2 < prod) {\n    f2 = f1 + f2\n    f1 = f2 - f1\n  }\n  c(f1, f2, f1*f2 == prod)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286701,"user_id":null,"body":"product_fib <- function(prod) {\n  f1 <- 0\n  f2 <- 1\n  while (TRUE) {\n    fn <- f1 + f2\n    if (f2 * fn == prod) { return(c(f2, fn, TRUE)) }\n    if (f2 * fn > prod) { return(c(f2, fn, FALSE)) }\n    f1 <- f2\n    f2 <- fn\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286702,"user_id":null,"body":"product_fib <- function(prod) {\n  fib1 <- 0\n  fib2 <- 1\n  while (fib1 * fib2 < prod) {\n    tmp <- fib1\n    fib1 <- fib2\n    fib2 <- tmp + fib2\n  }\n  if (fib1 * fib2 == prod) {\n    c(fib1, fib2, TRUE)\n  } else {\n    c(fib1, fib2, FALSE)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286703,"user_id":null,"body":"fib <- function(a,b){\n  return(a+b)\n}\n\nproduct_fib <- function(prod) {\n    a0 <- 0 \n    a1 <- 1\n    while((a0 * a1) < prod){\n      a2 <- fib(a0, a1)\n      a0 <- a1\n      a1 <- a2\n    }\n  print(a0)\n  print(a1)\n  if (a0*a1 == prod){\n    return(c(a0, a1, TRUE))\n  } else {\n    return(c(a0, a1, FALSE))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286704,"user_id":null,"body":"product_fib <- function(prod) {\nn <- 1\nwhile (fn(n) * fn(n+1) < prod) {\n  n <- n+1\n}\n\nifelse(fn(n) * fn(n+1) == prod ,return(c(fn(n) , fn(n+1) , TRUE)) , return(c(fn(n) , fn(n+1) , FALSE)) )\n}\n\n\nfn <- function(n){\n  f1 <- 1\n  f2 <- 1\n  if(n == 1|n == 2)\n  {\n    return(f2)\n  }\n  else\n  {\n    for(i in 3:n)\n    {\n      temp1 <- f2\n      f2 <- f1 + f2\n      f1 <- temp1\n    }\n    return(f2)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286705,"user_id":null,"body":"product_fib <- function(prod){\n  ls <- c(0, 1)\n  n <- 2\n  \n  while(ls[n] < prod){\n    ls[n+1] <- ls[n - 1] + ls[n]\n    n <- n + 1\n  }\n  \n  check <- function(n){\n    ls[n - 1] * ls[n] >= prod\n  }\n  \n  y <- 2\n  while(check(y) %>% identical(FALSE)){\n    y <- y + 1\n  }\n  \n  check.bool <- prod - (ls[y-1] * ls[y]) == 0\n  \n  \n  return(c(ls[y-1], ls[y], check.bool))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286706,"user_id":null,"body":"product_fib <- function(prod) {\n    fib(0, 1, prod)\n}\n\nfib <- function(x, y, target) {\n  if (x*y == target) {\n    c(x, y, T)\n  } else if (x*y > target) {\n    c(x, y, F)\n  } else {\n    fib(y, x+y, target)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5544c7a5cb454edb3c000047":[{"id":286707,"user_id":492,"body":"bouncing_ball <- function(h, bounce, window) {\n    if ((h <= 0.0) || (window >= h) || (bounce <= 0.0) || (bounce >= 1.0)) -1\n    else 2 + bouncing_ball(h * bounce, bounce, window)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286708,"user_id":null,"body":"bouncing_ball <- function(h, bounce, window) {\n    \n    if (h<=0 ||bounce <= 0 || 1 <= bounce || h <= window) return(-1)\n    \n    fall = h*bounce\n    glympse = 1;\n    \n    while(fall > window) {\n      fall = fall * bounce\n      glympse = glympse + 2\n    }\n    \n    return(glympse)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286709,"user_id":null,"body":"bouncing_ball <- function(h, bounce, window) {\n  if (h <= 0 | window <= 0 | window >= h | bounce <= 0 | bounce >= 1) return(-1)\n  lg <- log(window\/h, bounce)\n  1 + 2*(floor(lg) - (lg %% 1 == 0))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286710,"user_id":null,"body":"   bouncing_ball <- function(h, bounce, window) {\n    if ((h <= 0.0) || (window >= h) || (bounce <= 0.0) \n        || (bounce >= 1.0)) -1\n     # if conditions satisfy, call itself recursively\n    else 2 + bouncing_ball(h * bounce, bounce, window)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286711,"user_id":null,"body":"bouncing_ball <- function(h, bounce, window) {\n    # your code\n  if ((h < 0) | (bounce <= 0) | (bounce >= 1) | (window > h)) {\n    return(-1)\n  }\n  passes = -1\n# Solve equation for f(x) = window, using logarithms\n  bounces = log(window \/ h, bounce)\n    # Get actual number of bounces that still puts \n    # the ball above window height\n  exactBounces = floor(bounces)\n    # If last bounce is not strictly higher than window \n    # height, it can't be seen\n  if (bounces == exactBounces){\n    \n        exactBounces = exactBounces-1\n  } \n    # The ball will pass the window two times for each bounce, \n    # plus one for the initial drop past window\n  passes = exactBounces * 2 + 1\n  return(passes)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286712,"user_id":null,"body":"bouncing_ball <- function(h, bounce, window) {\n    if (h > 0 && bounce > 0 && bounce < 1 && window < h){\n      ans <- (floor(log(window\/h)\/log(bounce)))*2+1\n      return(if ((window\/h) == bounce) ans - 2 else ans)\n    } else {\n      return(-1)\n    }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286713,"user_id":null,"body":"bouncing_ball <- function(h, bounce, window) {\n    # your code\n  if (h>0 && bounce<1 && bounce>0 && window<h){\n    i=1\n    while (h*bounce>window){\n      h=h*bounce\n      i=i+2\n    }\n      return(i)\n  }\n  else{return(-1)}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286714,"user_id":null,"body":"bouncing_ball <- function(h,bounce,window){\n  if(h<=window ||bounce<=0||bounce >=1||h<=0) return(-1)\n  n <- 1\n  hb <- h*bounce\n  while (hb>window){\n    n <- n+2\n    hb <- hb*bounce\n  }\n  n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286715,"user_id":null,"body":"bouncing_ball <- function(h, bounce, window) {\n    # your code\n  if (h>0 && 0<bounce && bounce<1 && window<h){\n    times_seen <- 1\n    new_height <- bounce*h\n    while(new_height>window){\n      times_seen <- times_seen + 2\n      new_height <- bounce*new_height\n    }\n    return (times_seen)\n  }\n  else{\n    return (-1)\n  }\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286716,"user_id":null,"body":"bouncing_ball <- function(h, bounce, window) {\n  count<-0\n  if(h<=0|bounce>=1|bounce<=0|window>=h){\n    return(-1)\n  }\n  else{\n    while(window<h){\n      count<-count+2\n      h<-h*bounce\n    }\n    return(count-1)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5545f109004975ea66000086":[{"id":286717,"user_id":null,"body":"is_divisible <- function(n, x, y) {\n  all(n %% x == 0, n %% y == 0)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286718,"user_id":null,"body":"is_divisible <- function(n, x, y) {\n  n %% x == 0 & n %% y == 0\n}\nis_divisible(10,2,4)\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286719,"user_id":null,"body":"is_divisible <- function(n, x, y) {\n  return <- n %% x == 0 & n %% y == 0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286720,"user_id":null,"body":"is_divisible <- function(n, x, y) {\n  return(n%%x==0 & n%%y==0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286721,"user_id":null,"body":"is_divisible <- function(n, x, y) {\n  round(n\/x) == (n\/x) & round(n\/y) == (n\/y)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286722,"user_id":null,"body":"is_divisible <- function(n, x, y) {\n  !(n %% x) & !(n %% y)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286723,"user_id":null,"body":"is_divisible <- function(n, x, y) {\n  divis = F\n  \n  if (n %% x == 0 & n %% y == 0){\n    return(T)\n  }\n  \n  return(divis)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286724,"user_id":null,"body":"is_divisible <- function(n, x, y) {\n  if (n %% x == 0) {\n    if (n %% y == 0){\n      return (TRUE)\n    }\n  }\n  return (FALSE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286725,"user_id":null,"body":"is_divisible <- function(n, x, y) {\n  return (!((n%%x)+(n%%y)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286726,"user_id":null,"body":"is_divisible <- function(n, x, y) {\n  if(n==0 | x==0 | y==0){\n    print(FALSE)\n  }else if(n>0 & x>0 & y>0){\n    if(n%%x ==0 & n%%y==0){\n      print(TRUE)\n    }else{\n      print(FALSE)\n    }\n    \n  }else{\n    print(FALSE)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55466989aeecab5aac00003e":[{"id":286727,"user_id":492,"body":"sq_in_rect <- function(lng, wd) {\n    sq <- function(l, w) {\n        if (l == w) c(w)\n        else if (l > w) c(w, sq(w, l -w))\n        else c(l, sq(l, w - l))\n    }\n    if (lng == wd) NULL else sq(lng, wd)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286728,"user_id":null,"body":"sq_in_rect <- function(lng, wd,START=T) {\n    if (START &lng==wd) return (NULL)\n    if (lng==wd) return (lng)\n    else{ \n     m<-min(c(lng, wd))\n     return (c(m, sq_in_rect(max(c(lng, wd))-m,m,F)))\n    }            \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286729,"user_id":null,"body":"sq_in_rect <- function(lng, wd, first = TRUE) {\n  if (lng == wd) {\n    if (first == TRUE) {\n      return(NULL)\n    } else {\n      return(lng)\n    }\n  }  \n  min <- min(lng, wd)\n  c(min, sq_in_rect(min, max(lng, wd) - min(lng, wd), first = FALSE))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286730,"user_id":null,"body":"sq_in_rect <- function(lng, wd) {\n      if(lng==wd) return(NULL)\n  \n  sqs = numeric()\n  \n  long = max(lng, wd)\n  short = min(lng, wd)\n  \n  while (short != 0 && long != 0){\n    \n    sqs = c(sqs, short)\n    short = min(long - short, short)\n    long = max(long - short, short)\n\n  }\n  \n  return(sqs)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286731,"user_id":null,"body":"sq_in_rect <- function(lng, wd) {\n  if (lng == wd) { # return NULL if square is provided\n    return(NULL)\n  } else {\n    rect_area <- lng * wd # get total rectangle area\n    all_sqr <- c() # initialize empty vector to store results\n    while (sum(all_sqr^2) != rect_area) { # repeat until entire area is occupied by squares\n      # Biggest square possible has the same side as wd of the rectangle and can be fitted\n      # as many times as lng \/ wd (wihtout remainder)\n      all_sqr <- c(all_sqr, rep(wd, floor(lng \/ wd)))\n      # \"New\" lng and wd after \"cutting\" the calculated squares, new lng is equal to the side\n      # of the square (so current wd), while new wd is the remainder of the lng \/ wd division\n      new_lng <- wd\n      new_wd <- lng %% wd\n      lng <- new_lng\n      wd <- new_wd\n    }\n    return(all_sqr)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286732,"user_id":null,"body":"sq_in_rect <- function(lng, wd) {\n        if (lng == wd) return(NULL)\n    \n    longer_side <- max(lng, wd)\n    shorter_side <- min(lng, wd)\n    square_sizes <- list()\n    \n    while ((longer_side > 0) && (shorter_side > 0)) {\n        square_sizes <- c(square_sizes, shorter_side)\n        s <- pmin(shorter_side, longer_side - shorter_side)\n        longer_side <- pmax(shorter_side, longer_side - shorter_side)\n        shorter_side <- s\n    }\n    \n    unlist(square_sizes)\n    \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286733,"user_id":null,"body":"sq_in_rect <- function(lng, wd) {\n  if (lng == wd){\n    return(NULL)\n  }\n  \n  lngths <- c()\n  while (lng != 0 || wd != 0){\n    if (lng > wd){\n      lngths <- c(lngths,wd)\n      lng <- lng - wd\n    }\n    else if (wd > lng){\n      lngths <- c(lngths,lng)\n      wd <- wd - lng\n    }\n    else{\n      lngths <- c(lngths,lng)\n      lng <- 0\n      wd <- 0\n    }\n  }\n  return(lngths)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286734,"user_id":null,"body":"sq_in_rect <- function(lng, wd) {\n  remaining <- lng*wd\n  squares <- c()\n  \n  if (lng == wd) {\n    print(squares)\n  } else {\n    while (remaining != 0) {\n      if (lng < wd) {\n        squares <- append(squares,lng)\n        remaining <- remaining - (lng*lng)\n        wd <- wd - lng\n      } else if (wd < lng){\n        squares <- append(squares,wd)\n        remaining <- remaining - (wd*wd)\n        lng <- lng - wd\n      } else {\n        squares <- append(squares,wd)\n        remaining <- remaining - (wd*wd)\n        lng <- lng - wd\n      }\n    }\n    print(squares)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286735,"user_id":null,"body":"sq_in_rect <- function(lng, wd) {\n  new = sort(c(lng, wd))\n  sq = numeric(0)\n  while(TRUE){\n    if(new[1]==new[2])break\n    new[2] = new[2] - new[1]\n    sq = c(sq, new[1])\n    new = sort(new)\n  }\n  if(length(sq)){\n    sq = c(sq, new[1])\n  }else{\n    return(NULL)\n  }\n  return(sq)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286736,"user_id":null,"body":"sq_in_rect <- function(lng, wd) {\n    res <- NULL\n  \n  if (lng == wd){\n    return(res)\n  }\n  \n  while ( min(lng, wd) >0){\n    m <- min(lng, wd)\n    res <- c(res, m)\n    if (lng == max(lng, wd)){\n      lng <- lng - m\n    } else {\n      wd <- wd - m \n    }\n  }\n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5547cc7dcad755e480000004":[{"id":286737,"user_id":null,"body":"remove_nb <- function(n) {\n    a <- 1:n\n    b <- (sum(as.numeric(1:n))-a)\/(a+1)\n    lapply(which(round(b) == b & b <= n),function(x)c(a[x],b[x]))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286738,"user_id":null,"body":"f = function(x,total){ (total -x)\/(x+1)}\nremove_nb <- function(n) {\n    total = sum(as.numeric(1:n))\n    res = f(1:n,total)\n    wh = which(res < n & res %% 1 == 0)\n    if(length(wh)>0){\n      lapply(wh,function(i)c(i,res[i]))\n    }else{list()}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286739,"user_id":null,"body":"remove_nb <- function(n) {\n  min <- ceiling(n\/2)\n  # max <- floor((n*(n+1)\/2+1)\/min)\n  max <- floor(sqrt(n*(n+1)\/2+1))\n  if (max > n) max <- n\n  res <- list()\n  t <- 0\n  prod <- n*(n+1)\/2+1\n  for (a in min:max){\n    b <- prod \/a\n    if (a == b) next\n    if (b == as.integer(b)){\n      if (t == 0){\n      res[1] <- list(c(a-1,b-1))\n      res[2] <- list(c(b-1,a-1))\n      } else {\n      res[(t\/2+3):(t+2)]<-res[(t\/2+1):t]\n      res[t\/2+1] <- list(c(a-1,b-1))\n      res[t\/2+2] <- list(c(b-1,a-1))\n      }\n      t <- t+2\n    } \n  }\n  print(n)\n  return(res)\n}\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286740,"user_id":null,"body":"remove_nb <- function(n) {\n  n1 <- n * (n + 1) \/ 2 + 1\n  a1 <- c()\n  \n  a <- n %\/% 2 + 1\n  while(a * a < n1) {\n    if(n1 %% a == 0) {\n      a1 <- c(a1, a)\n    }\n    a <- a + 1\n  }\n  \n  len <- length(a1)\n  if(len == 0) return(list())\n  b1 <- n1 %\/% a1 - 1\n  a1 <- a1 - 1\n  l <- vector(\"list\", 2 * len)\n  for(i in 1:len) l[[i]] <- c(a1[i], b1[i])\n  for(i in (len + 1):(2 * len)) l[[i]] <- c(b1[2 * len + 1 - i], a1[2 * len + 1 - i])\n  \n  return(l)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286741,"user_id":492,"body":"# remove_nb return a list of vectors\nremove_nb <- function(n) {\n    sum <- n * (n+1) \/ 2\n    i <- 1\n    result <- list()\n    for (a in 1:n-1) {\n        if ( (sum - a) %% (a + 1) == 0) {\n            b <- (sum - a) \/ (a + 1)\n            if (b < n) {\n                result[[i]] <- c(a, b)\n                i <- i + 1\n            }\n        }\n    }\n    result\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286742,"user_id":492,"body":"# remove_nb return a list of vectors\nremove_nb <- function(n) {\n    sum <- n * (n+1) \/ 2\n    i <- 1\n    result <- list()\n    for (a in 1:n-1) {\n        if ( (sum - a) %% (a + 1) == 0) {\n            b <- (sum - a) \/ (a + 1)\n            if (b < n) {\n                result[[i]] <- c(a, b)\n                i <- i + 1\n            }\n        }\n    }\n    result\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286743,"user_id":null,"body":"remove_nb <- function(n) {\n  # your code\n  rst = list()\n  num = n:1\n  ttl = n*(n+1)\/2\n  for (i in num){\n    j = (ttl-i)\/(i+1)\n    if (j > i) break\n    if (floor(j) == j){\n      if (j %in% num[-i]){\n        rst = append(rst,list(c(j,i)))\n      } \n    }\n    \n  }\n  if (length(rst)==0) return(list())\n  rstr = list()\n  for (z in 1:length(rst)){\n    rstr = append(rstr,list(rev(rst[[z]])))\n  }\n  rstr = rev(rstr)\n  rst = append(rst,rstr)\n  return(rst)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286744,"user_id":null,"body":"is.wholenumber <-\n  function(x, tol = .Machine$double.eps^0.5)  abs(x - round(x)) < tol\n\nremove_nb <- function(n){\n  n1 <- seq_len(n)\n  s <- sum(as.numeric(n1))\n  \n  n2 <- (s-n1)\/(1+n1)\n  matches <- is.wholenumber(n2) & n2 < n\n  \n  lapply(which(matches), function(x) c(n1[x],n2[x]))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286745,"user_id":null,"body":"remove_nb <- function(n){\n  z<- c(1:n)\n  y <- (sum(as.numeric(1:n))-z)\/(z+1)\n  lapply(which(round(y)== y & y <= n),function(x)c(z[x],y[x]))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286746,"user_id":null,"body":"# remove_nb return a list of vectors\nremove_nb <- function(n) {\n  x <- n * (n+1) \/ 2\n  lst <- list()\n  for (i in 1:n) {\n    if (((x - i) %% (i+1) == 0) && ((x-i)\/(i+1) <= n)) {\n      lst <- c(lst, list(c(i, (x-i)\/(i+1))))\n    }\n  }\n  return(lst)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"554a44516729e4d80b000012":[{"id":286747,"user_id":492,"body":"nb_months <- function(priceOld, priceNew, saving, loss) {\n    saved <- 0; months <- 0\n    while (priceOld+saved < priceNew) {\n        priceOld <- priceOld - priceOld * loss \/ 100.0\n        priceNew <- priceNew - priceNew * loss \/ 100.0\n        saved  <- saved + saving\n        months <- months + 1\n        if (months %% 2 > 0) loss <- loss + 0.5\n    }\n    c(months, round((priceOld + saved - priceNew), 0))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286748,"user_id":421,"body":"nb_months <- function(spo, spn, svpm, plbm) {\n  if(spo >= spn) return(c(0, spo - spn))\n  month <- 1\n  diff <- spn - spo\n  while(diff > 0){\n    if(month %% 2 == 0) plbm <- plbm + 0.5\n    diff <- diff - svpm - spn * plbm \/ 100 + spo * plbm \/ 100\n    spn <- spn - spn * plbm \/ 100\n    spo <- spo - spo * plbm \/ 100\n    month <- month + 1\n  }\n  c(month - 1, round(abs(diff)))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286749,"user_id":null,"body":"nb_months <- function(priceOld, priceNew, saving, loss) {\n    i <- 0\n    savingT <- 0\n    repeat{\n    if (priceOld + savingT >= priceNew) break\n    priceOld <- priceOld * (1-loss\/100)\n    priceNew <- priceNew * (1-loss\/100)\n    saving\n    i <- i+1\n    if (i %% 2 == 1) loss <- loss + 0.5\n    savingT <- savingT + saving\n    }\n    return(c(i,round (priceOld + savingT - priceNew)))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286750,"user_id":53,"body":"nb_months <- function(p0, p1, s, r, m = 0, t = 0) {\n  if (p1 <= p0 + t) {\n    return(c(m, round(p0 - p1 + t)))\n  }\n  p0 = p0 - p0 * .01 * r\n  p1 = p1 - p1 * .01 * r\n  t = t + s\n  m = m + 1\n  if (m %% 2 == 1) {\n    r = r + .5\n  }\n  return(nb_months(p0, p1, s, r, m, t))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286751,"user_id":null,"body":"nb_months <- function(priceOld, priceNew, saving, loss) {\n    months = 0:ceiling(priceNew\/saving)\n    deval = loss + floor(months[2:length(months)]\/2)*.5\n    deval = cumprod( 1 - c(0, deval)\/100 )\n    savings = months * saving\n    priceOld = priceOld * deval\n    priceNew = priceNew * deval\n    total = savings + priceOld\n    month = which( total >= priceNew)[1] - 1\n    return(c(month, round(  total[month+1] - priceNew[month+1] ) ) )\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286752,"user_id":null,"body":"nb_months <- function(priceOld, priceNew, saving, loss) {\n    # your code\n  cat(priceOld, priceNew, saving, loss)\n  if(priceOld>=priceNew){\n    return(c(0,round(priceOld-priceNew)))\n  }\n  a=  rep(loss,1)\n  for (i in 1:1000) {\n    a = c(a,rep(loss+0.5,2))\n    loss = loss+0.5\n  }\n  a\n  cz = 1\n  for (i in 1:10000) {\n    i1 = a[i]\n    cz = cz*(1-i1*0.01)\n    if (cz*(priceNew-priceOld)<=saving*i) {\n      return(c(i,round(saving*i-cz*(priceNew-priceOld))))\n    }\n  }\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286753,"user_id":null,"body":"nb_months <- function(priceOld, priceNew, saving, loss) {\n  savings = saving\n  count =  0\n  money = priceOld\n  while (money < priceNew ){\n    count = count + 1\n    savings = saving * count\n    a = ifelse (count %% 2 == 0, 0.5, 0)\n    loss = loss + a\n    priceOld = priceOld * (1-(loss\/100))\n    priceNew = priceNew * (1-(loss\/100))\n    money = priceOld + savings\n  }\n  return(c(count, round(money-priceNew)))\n}   ","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286754,"user_id":null,"body":"nb_months <- function(priceOld, priceNew, saving, loss) {\n  tot_saving <- 0\n  real_priceOld <- priceOld\n  real_priceNew <- priceNew\n  n <- 1\n  while (priceNew > priceOld + tot_saving){\n    real_loss <- loss+0.5*floor(n\/2)\n    tot_saving <- tot_saving+saving\n    priceOld <- priceOld * ((100-real_loss)\/100)\n    priceNew <- priceNew * ((100-real_loss)\/100)\n    n <- n+1\n  }\n  n <- n-1\n  return(c(n,round(abs(priceNew - (priceOld + tot_saving)))))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286755,"user_id":null,"body":"nb_months <- function(priceOld, priceNew, saving, loss){\n    dep = (1 - loss\/100)\n    month = 0\n    counter = 1\n    saving_1 = 0\n    defecit = saving_1 - priceNew + priceOld\n    while(defecit < 0 ){\n    saving_1 = saving_1 + saving\n    priceOld = priceOld * dep \n    priceNew = priceNew * dep\n    defecit = (priceOld - priceNew) + saving_1\n    month = month + 1\n    counter = counter + 1\n    if(counter == 2){\n        counter = 0\n        dep = dep - .005\n    }\n    }\n    return(c(month,round(priceOld - (priceNew - saving_1))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286756,"user_id":null,"body":"nb_months <- function(priceOld, priceNew, saving, loss){\n    if(priceOld >= priceNew){\n        return(c(0,(priceOld- priceNew)))\n    }else{\n    defecit = -1\n    dep = (1 - loss\/100)\n    month = 0\n    saving_1 = 0\n    while(defecit <= 0 ){\n    saving_1 = saving_1 + saving\n    priceOld = priceOld * dep \n    priceNew = priceNew * dep\n    defecit = (priceOld - priceNew) + saving_1\n    month = month + 1\n    if(month %%2 > 0){\n        dep = dep - .005\n    }\n    }\n    return(c(month,round(priceOld - (priceNew - saving_1))))\n    }\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"554b4ac871d6813a03000035":[{"id":286757,"user_id":null,"body":"high_and_low <- function(numbers){\n  integers <- as.integer(strsplit(numbers, \" \")[[1]])\n  paste(max(integers), min(integers))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286758,"user_id":null,"body":"high_and_low <- function(numbers){\n  x <- as.integer(unlist(strsplit(numbers, \" \")))\n  print(paste(max(x), min(x)))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286759,"user_id":null,"body":"high_and_low <- function(numbers){\n  elements <- unlist(strsplit(numbers, \" \"))\n  numeric_result <- rev(range(as.numeric(elements)))\n  paste(numeric_result, collapse = \" \")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286760,"user_id":null,"body":"high_and_low <- function(numbers){\n  numbers<-as.numeric(unlist(strsplit(numbers,\" \")))\n paste(max(numbers),  min(numbers))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286761,"user_id":null,"body":"high_and_low <- function(numbers){\n    # Convert 'numbers' (str) to a list of integers\n    numbers_split = strsplit(numbers, split = \" \")\n    numbers       = sapply(numbers_split, function(x) as.integer(x))\n                           \n    return(paste(max(numbers), min(numbers)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286762,"user_id":null,"body":"high_and_low <- function(numbers){\n  \n  str1 <- strsplit(numbers, \" \")\n  mx <- as.integer(str1[[1]][1])\n  mn <- as.integer(str1[[1]][1])\n  cont <- 2          \n  \n  while (cont <= length(str1[[1]])) {\n    c = as.integer(str1[[1]][cont])\n    if (c < mn)  { mn = c} \n    if (c > mx)  { mx = c}\n    cont <- cont + 1\n  }    \n  \n  mxC <- as.character(mx)\n  mnC <- as.character(mn)\n  \n  new <- c(mxC, mnC)\n  new <- paste(new, collapse=\" \" )\n  return(new)\n}\n  ","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286763,"user_id":null,"body":"high_and_low <- function(numbers){\n  numbers = strsplit(numbers,\" \")\n  \n  print(numbers)\n  \n  numbers = as.numeric(numbers[[1]])\n  numbers = as.character(c(max(numbers), min(numbers)))\n  print(paste0(numbers,collapse=\" \"))\n  return(paste0(numbers,collapse=\" \"))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286764,"user_id":null,"body":"high_and_low <- function(numbers){\n  paste0(rev(range(scan(text = numbers, what = 0))),collapse = \" \")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286765,"user_id":null,"body":"high_and_low <- function(numbers){\n  numbers <- strsplit(numbers, \" \")[[1]]\n  numbers <- unlist(numbers)\n  numbers <- as.numeric(numbers)\n  paste(c(max(numbers), min(numbers)), collapse = \" \") \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286766,"user_id":null,"body":"high_and_low <- function(numbers){\n  nums <- unlist( strsplit( numbers , \" \" ) )\n  mx <- max( as.integer(nums) )\n  mn <- min( as.integer(nums) )\n  return( paste( mx , mn ) )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"554e4a2f232cdd87d9000038":[{"id":286767,"user_id":421,"body":"dna_strand <- function(dna){\n  chartr(\"ACGT\", \"TGCA\", dna)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286768,"user_id":null,"body":"dna_strand <- function(DNA){\n  DNA_out <- character()\n  for(i in 1:nchar(DNA)){\n    if(substr(DNA,i,i) == \"A\"){\n      DNA_out[i] <- \"T\"\n    } else if(substr(DNA,i,i) == \"T\"){\n      DNA_out[i] <- \"A\"\n    } else if(substr(DNA,i,i) == \"G\"){\n      DNA_out[i] <- \"C\"\n    } else if(substr(DNA,i,i) == \"C\"){\n      DNA_out[i] <- \"G\"\n    }\n  }\n         return(paste(DNA_out, collapse = \"\"))}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286769,"user_id":null,"body":"dna_strand <- function(dna){\n  dict <- vector(mode = 'list', length = 4)\n  names(dict) <- c(\"A\", \"G\", \"C\", \"T\")\n  dict[\"A\"] <- \"T\"\n  dict[\"T\"] <- \"A\"\n  dict[\"G\"] <- \"C\"\n  dict[\"C\"] <- \"G\"\n  paste(dict[unlist(strsplit(dna, ''))], collapse = '')\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286770,"user_id":null,"body":"#Using library is allowed right?\ndna_strand <- function(dna){\n  library(stringr)\n  str_replace_all(dna,c(\"A\"=\"U\",\"T\"=\"A\",\"U\"=\"T\",\"C\"=\"U\",\"G\"=\"C\",\"U\"=\"G\"))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286771,"user_id":null,"body":"dna_strand <- function(dna){\n  \n  side_1 = c(\"A\",\"C\",\"T\",\"G\")\n  side_2 = c(\"T\",\"G\",\"A\",\"C\")\n  \n  x = \"\"\n  dna_split = strsplit(dna, \"\")[[1]]\n  \n  for (symbol in dna_split) {\n    index_1 = which(side_1 == symbol)\n    x = paste0(x, side_2[index_1])\n  }\n  \n  x\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286772,"user_id":null,"body":"dna_strand <- function(dna){\n  dna_split <- strsplit(dna, split = '')[[1]]\n  dna_controversy <- c()\n  print(dna_split[1])\nfor (i in dna_split) \n{ \n      if (i == 'A') { \n        dna_controversy <- c(dna_controversy, 'T') \n      } else if (i == 'T') { \n        dna_controversy <- c(dna_controversy, 'A') \n      } else if (i == 'G') { \n        dna_controversy <- c(dna_controversy, 'C') \n      } else {\n        dna_controversy <- c(dna_controversy, 'G') \n      }\n}\n  print(paste(dna_controversy, collapse = ''))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286773,"user_id":null,"body":"dna_strand <- function(dna){\n  alleles = c(\"A\", \"T\", \"G\", \"C\")\n  names(alleles) = c(\"T\", \"A\", \"C\", \"G\")\n#   dna = unlist(strsplit(dna, \"\"))\n#   dna.new = paste0(alleles[dna], collapse = \"\")\n  \n  return(paste0(alleles[unlist(strsplit(dna, \"\"))], collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286774,"user_id":null,"body":"library(stringi)\n\ndna_strand <- function(dna){\n  stri_replace_all_fixed(tolower(dna), pattern = c(\"a\",\"t\",\"c\",\"g\"), replacement = c(\"T\",\"A\",\"G\",\"C\"), vectorize_all = FALSE)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286775,"user_id":null,"body":"dna_strand <- function(dna){\n  library(stringr)\n  d1 = str_split(dna,'')[[1]]\n  d2 = d1\n  d2[d1=='A']='T'\n  d2[d1=='T']='A'               \n  d2[d1=='C']='G'\n  d2[d1=='G']='C'\n  as.character(d2)\n  d3=NULL\n  for (i in 1:length(d2)) {\n    d3 = paste0(d3,d2[i])\n  }\n  return(d3)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286776,"user_id":null,"body":"library(stringr)\nlibrary(stringi)\n\ndna_strand <- function(dna){\n  dna <- str_replace_all(dna, \"A\", \"0\")\n  dna <- str_replace_all(dna, \"T\", \"1\")\n  dna <- str_replace_all(dna, \"C\", \"2\")\n  dna <- str_replace_all(dna, \"G\", \"3\")\n  dna <- str_replace_all(dna, \"0\", \"T\")\n  dna <- str_replace_all(dna, \"1\", \"A\")\n  dna <- str_replace_all(dna, \"2\", \"G\")\n  dna <- str_replace_all(dna, \"3\", \"C\")\n  return(dna)\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"554f76dca89983cc400000bb":[{"id":286777,"user_id":null,"body":"sol_equa <- function(n) {\n  # find factor pairs:\n  s <- 1:floor( sqrt(n) )\n  a <- s[which((n \/ s) %% 1 == 0)]\n  b <- n \/ a\n  \n  # get x and y:\n  x <- a + (b-a)\/2\n  y <- (b-a)\/4\n  \n  # arrange integer xy pairs into string:\n  purrr::map_chr(which(x%%1 == 0 & y%%1 == 0), ~{\n    x <- as.integer(x[.]); y <- as.integer(y[.])\n    stringr::str_c(\"(\", x, \", \", y, \")\")\n  }) %>%\n    stringr::str_c(collapse = \", \") %>%\n    stringr::str_c(\"[\", ., \"]\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 19:32:48"},{"id":286778,"user_id":669,"body":"sol_equa <- function(n) {\n  # generate all n = i * j such that i <= j\n  i <- 1:ceiling(sqrt(n))                 \n  i <- i[n %% i == 0]\n  j <- n \/ i\n\n  # gnerate integer solutions of x - 2y = i, x + 2y = j\n  k <- (i + j) %% 2 == 0 & (j - i) %% 4 == 0\n  x <- (i + j)[k] \/ 2                        \n  y <- (j - i)[k] \/ 4  # >= 0 since i <= j\n  \n  sprintf(\"[%s]\", paste(sprintf(\"(%d, %d)\", x, y), collapse = \", \"))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 19:32:47"},{"id":286779,"user_id":null,"body":"unknown <- function(m,n){\n  #n is larger\n  big <- (m+n)\/2\n  small <- (n - big)\/2\n  if (big != floor(big) | small != floor(small)) return(NULL)\n  return(c(big,small))\n}\n\nprime <- function(n){\n  i <- 2\n  prime <- c()\n  max <- floor( sqrt(n))\n  repeat{\n    if (n %% i == 0){\n      n <- n \/ i\n      prime <- c(prime, i)\n    } else {\n      i <- i+1 \n    }\n    if (n == 1) break\n    if (i > max) {prime <- c(prime, n);break}\n    if (i > n) break\n  }\n  prime\n}\n\nsol_equa <- function(n) {\n    tab <- table(prime(n))\n    # build a list including all the possible combinations\n    num <- length(tab)\n    ls <- list()\n    for (i in 1:num) ls[[i]] <- as.numeric(names(tab)[i])^seq(tab[i],0,-1)\n    exls <- expand.grid(ls)\n    str <- sapply(1:dim(exls)[1], function(x) prod(exls[x,]))\n    res <- sort(str[str >= sqrt(n)], decreasing = TRUE)\n    num_res <- length(res)\n    resL <- sapply(1:num_res,function(x) unknown(n\/res[x] , res[x] )[1])\n    resS <- sapply(1:num_res,function(x) unknown(n\/res[x] , res[x] )[2])\n    resL <- unlist(resL[res != \"NULL\"])\n    resS <- unlist(resS[res != \"NULL\"])\n    t <- paste0(sprintf(\"(%d, %d)\", resL , resS),collapse=\", \")\n    paste0(c(\"[\",t,\"]\"),collapse=\"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286780,"user_id":null,"body":"sol_equa <- function(n){\n  options(scipen = 999)\n  print_factor <- function(n){\n    outcome <- c()\n    t <- 1\n    for(i in 1:ceiling(sqrt(n))){\n      if(n %% i == 0){\n        outcome[t] <- i\n        t <- t+1\n      }\n    }\n    return(outcome)\n  }\n  \n  outcome <- print_factor(n)\n  x <- c()\n  y <- c()\n  outcome_final <- c()\n  t1 <- 1\n  for (j in 1:length(outcome)){\n    if((outcome[j] + n\/outcome[j]) %% 2 == 0 & (n\/outcome[j] - outcome[j]) %% 4 == 0){\n      x[t1] <- (outcome[j] + n\/outcome[j])\/2\n      y[t1] <- (n\/outcome[j] - outcome[j])\/4\n      outcome_final[t1] <- paste(\"(\",x[t1],\", \",y[t1],\")\", sep = \"\")\n      t1 <- t1 + 1\n    }\n  }\n  if(is.null(outcome_final)){\n    outcome_final <- \"[]\"\n  }\n  else{\n    outcome_final <- paste(outcome_final, collapse = \", \")\n    outcome_final <- paste(\"[\",outcome_final,\"]\", sep = \"\")\n  }\n  print(outcome_final)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286781,"user_id":53,"body":"sol_equa <- function(n) {\n  fs <- \"\"\n  cnt <- 0\n  for (i in 1:(sqrt(n))) {\n    d <- n \/ i\n    x <- (d + i) \/ 2\n    y <- (d - i) \/ 4\n    if (d %% 1 == 0 && x %% 1 == 0 && y %% 1 == 0) {\n      if (cnt > 0) {\n        fs <- paste(fs, \", \", sep=\"\")\n      }\n      fs <- paste(fs, sprintf(\"(%d, %d)\", as.integer(x), as.integer(y)), sep=\"\")\n      cnt <- cnt + 1\n    }\n  }\n  if (nchar(fs) == 0) {\n    \"[]\"\n  } else {\n    ans <- \"[\"\n    ans <- paste(ans, fs, sep=\"\")\n    ans <- paste(ans, \"]\", sep=\"\")\n    ans\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286782,"user_id":null,"body":"sol_equa <- function(n) {\n\t# I have observed that found solutions always obey the formula:\n\t#\t\tx, y == ((n + i ^ 2) \/ (2 * i)), ((n - i ^ 2) \/ (4 * i))\n\t# for integer `i`.\n\t\n\ti_max <- floor(sqrt(n))\n\tsolutions <- list()\n\t\n\tfor (i in 1:i_max) {\n\t\ti_sq <- as.numeric(i) * as.numeric(i)\n\t\tx <- (n + i_sq) \/ (2 * i)\n\t\tif (ceiling(x) == x) { # Check for float-as-integer.\n\t\t\ty <- (n - i_sq) \/ (4 * i)\n\t\t\tif (ceiling(y) == y) {\n\t\t\t\t# Check if this is a solution.\n\t\t\t\tif ((x + 2 * y) * (x - 2 * y) == n) { # Use this form to avoid loss of precision for large `x`, `y`.\n\t\t\t\t\t# Solution found.\n\t\t\t\t\tsolutions <- c(solutions, list(c(x, y)))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (length(solutions) == 0) {\n\t\treturn('[]')\n\t}\n\t\n\treturn(\n\t\tpaste0(\n\t\t\t'[',\n\t\t\tpaste0(\n\t\t\t\t'(',\n\t\t\t\tsapply(\n\t\t\t\t\tlapply(solutions, format, scientific=FALSE, trim=TRUE),\n\t\t\t\t\t#solutions,\n\t\t\t\t\tpaste0,\n\t\t\t\t\tcollapse=', '\n\t\t\t\t),\n\t\t\t\t')',\n\t\t\t\tcollapse=', '\n\t\t\t),\n\t\t\t']'\n\t\t)\n\t)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286783,"user_id":null,"body":"sol_equa <- function(n) {\n  # your code\n  solutions = character(0)\n  i <- 1\n  while(i <= n^0.5) {\n    if((n %% i == 0) && ((i + n\/i) %% 2 == 0)) {\n      x <- (i + n\/i) \/ 2\n      if((x-i) %% 2==0){\n        y <- (x-i)\/2\n        solutions <- c(solutions,paste(format(x,scientific=F),format(y,scientific=F),sep=', '))\n      }\n      \n    }\n    i=i+1\n  }\n  if(length(solutions) == 0) {return('[]')}\n  else{return(paste0('[(',paste(solutions,collapse='), ('),')]'))}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286784,"user_id":null,"body":"sol_equa <- function(n) {\n  diph <- c()\n  for (i in seq(1:sqrt(n))){\n    options(scipen=999)\n    d <- n\/i\n    x <- (d+i)\/2\n    y <- (d-i)\/4\n    if(d%%1==0 && x%%1==0 && y%%1==0){\n      diph <- paste(diph,\"(\",x,\", \",y,\"), \", sep=\"\")\n    }\n  }\n  r <- paste(\"[\",substr(diph,1,nchar(diph)-2),\"]\",sep=\"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286785,"user_id":132,"body":"sol_equa <- function(n) {\n  s <- list()\n  for(i in seq(1:ceiling(sqrt(n)))) if(n%%i==0) if((i+n\/i)%%2==0) if((i-n\/i)%%4==0) s[length(s)+1] <- list(paste0('(',as.character((i+n\/i)\/2),', ',as.character((n\/i-i)\/4),')'))\n  return(gsub('7.5e\\\\+07','75000000',paste0('[',paste(s, collapse=', '),']')))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286786,"user_id":null,"body":"options(scipen=999)\n\nsol_equa <- function(n) {\n  total = c()\n  for (a in 1:floor(sqrt(n))) {\n    b = n \/ a\n    if (b %% 1 == 0) {\n      x = (a+b)\/2\n      y = (b-a)\/4\n      if (x %% 1 == 0 && y %% 1 == 0) total = c(total,paste0(\"(\",x,\", \",y,\")\"))\n    }\n  }\n  paste0(\"[\",paste0(total,collapse=\", \"),\"]\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"555086d53eac039a2a000083":[{"id":286787,"user_id":null,"body":"lovefunc <- function(flower1, flower2){\n    sum(flower1, flower2) %% 2 != 0\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286788,"user_id":null,"body":"lovefunc <- function(flower1, flower2){\n  return(flower1%%2 != flower2%%2)  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286789,"user_id":null,"body":"lovefunc <- function(flower1, flower2){\n  \n  # Define conditions\n  condition1 <- (flower1 %% 2 == 0) & (flower2 %% 2 != 0)\n  condition2 <- (flower1 %% 2 != 0) & (flower2 %% 2 == 0)\n  \n  # Return desired output\n  if (condition1 == TRUE | condition2 == TRUE) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n    \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286790,"user_id":null,"body":"lovefunc <- function(flower1, flower2){\n   as.logical((flower1+flower2)%%2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286791,"user_id":null,"body":"lovefunc <- function(flower1, flower2){\n  if((flower1-flower2)%%2==1) {TRUE}\n  \n  else {FALSE}\n    \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286792,"user_id":null,"body":"lovefunc <- function(flower1, flower2){\n    # As long as flower1's remainder after being divided by 2\n    #        and flower2's remainder after being divided by 2\n    #        are not the same, returns TRUE, otherwise FALSE.\n    return(flower1 %% 2 != flower2 %%2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286793,"user_id":null,"body":"lovefunc <- function(flower1, flower2){\n    return(as.logical((flower1 + flower2) %% 2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286794,"user_id":null,"body":"lovefunc <- function(flower1, flower2){\n    return((flower1 %% 2 == 0 && flower2 %% 2 != 0) || (flower1 %% 2 != 0 && flower2 %% 2 == 0))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286795,"user_id":null,"body":"lovefunc <- function(flower1, flower2){\n  flower1 %% 2 == 0 & flower2 %% 2 != 0 | flower1 %% 2 != 0 & flower2 %% 2 == 0\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286796,"user_id":null,"body":"lovefunc <- function(flower1, flower2){\n    xor(flower1 %% 2 == 0, flower2 %% 2 == 0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5552101f47fc5178b1000050":[{"id":286797,"user_id":null,"body":"dig_pow <- function(n, p) {\n  str <- strsplit(toString(n),\"\")[[1]]\n  res <- sum(as.numeric(str)^seq(p,p+length(str)-1,1))\/n\n  if ( res == floor(res)) res else -1\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286798,"user_id":null,"body":"#' Finds positive integer \"k\", so that\n#' sum of powers \"p\" is equal to \"k * n\".\n#'\n#' @param n double\n#' Positive integer.\n#' @param p double\n#' Positive integer.\n#'\n#' @return double\n#' -1 if integer is not found,\n#' result integer otherwise.\n#' @export\n#'\n#' @examples\ndig_pow <- function(n, p) {\n  # Converts number to single digits.\n  num_vec = as.numeric(unlist(strsplit(as.character(n), split = \"\")))\n  # Powers begin from p and increase by one for each digit.\n  pow_vec = seq(0, length(num_vec) - 1) + p\n  pow_sum = sum(num_vec ^ pow_vec)\n  modulus = pow_sum %% n\n\n  res = ifelse(\n    test = modulus == 0,\n    yes = pow_sum \/ n,\n    no = -1\n  )\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286799,"user_id":null,"body":"dig_pow <- function(n, p) {\n  d <- as.integer(unlist(strsplit(as.character(n), \"\")))\n  r <- sum(d^(seq(p, length.out = length(d)))) \/ n\n  ifelse(r %% 1, -1, r)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286800,"user_id":null,"body":"dig_pow <- function(n, p) {\n  s<-sum(as.numeric(strsplit(as.character(n),\"\")[[1]])^c(p:(p+nchar(as.character(n))-1)))\n  if (s %% n == 0) return(s\/n)\n  else return(-1)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286801,"user_id":421,"body":"dig_pow <- function(n, p) {\n  arr <- as.numeric(unlist(strsplit(toString(n), \"\")))\n  t <- 0\n  for(i in 1:length(arr)){\n    t <- t + arr[i] ^ (i + p - 1)\n  }\n  ifelse(t %% n != 0, -1, t \/ n)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286802,"user_id":null,"body":"dig_pow <- function(n, p) {\n  c <- as.integer(strsplit(as.character(n),\"\")[[1]])\n  res <- sum(c^(p:(p+length(c)-1)))\n  ifelse(res%%n==0,return(res%\/%n),return(-1))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286803,"user_id":null,"body":"dig_pow <- function(n, p) {\n  digits <- as.integer(substring(n, seq(nchar(n)), seq(nchar(n))))\n  sum_digits <- sum(digits^seq(p, p + nchar(n) - 1))\n  k <- sum_digits \/ n\n  if (isTRUE(all.equal(k, as.integer(k)))) {\n    return(k)\n  } else {\n    return(-1)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286804,"user_id":null,"body":"dig_pow <- function(n, p) {\n  d <- strsplit(as.character(n), \"\")[[1]]\n  N <- sum( as.numeric(d)^(p+(seq_along(d)-1)) )\n  if((N\/n) %% 1 == 0) {return(N\/n)} else {-1}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286805,"user_id":null,"body":"dig_pow <- function(n, p) {\n  m <- as.numeric(unlist(strsplit(as.character(n),'')))\n  m <- sum(m**(1:length(m)-1+p))\n  ifelse(m%%n,-1,m\/n)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286806,"user_id":null,"body":"dig_pow <- function(n, p) {\n  # your code\n  dig <- as.integer(unlist(strsplit(as.character(n), \"\")))\n  p <- p + seq(0, length(dig)-1, 1)  \n  res <- sum(dig^p)\n  k <- res\/n\n  ifelse(k%%1 == 0, return(k), return(-1))\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"555624b601231dc7a400017a":[{"id":286807,"user_id":645,"body":"josephus_survivor <- function(n, k) {\n  res <- 1\n  for (i in 1:n)\n    res <- (res + k - 1) %% i + 1\n  res\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 15:49:45"},{"id":286808,"user_id":null,"body":"josephus_survivor <- function(n, k) {\n  if(k == 1) return(n)\n  if(n == 1) return(n)\n  v <- 1:n\n  lv <- n\n  remainder <- 0\n  repeat{\n    if (lv < k - remainder){\n      v2 <- rep(v, ceiling((k - remainder)\/length(v)))\n      del_value <- v2[k - remainder]\n      del_seq <- which(v == del_value)\n    }else{\n      del_seq <- seq(k - remainder, lv, by=k) \n    } \n    remainder <- lv - tail(del_seq, 1)\n    v <- v[-del_seq]\n    lv <- length(v)\n    if(lv==1) break\n  }\nreturn(v)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-06 15:49:48"},{"id":286809,"user_id":null,"body":"josephus_survivor <- function(n, k) {\n  queue <- 1:n\n  begin <- 0\n  length <- n\n  while (length(queue) > 1) {\n    end <- (begin + k) %% length\n    if (end == 0) end <- length\n    queue <- queue[-end]\n    length <- length - 1\n    begin <- (end - 1) %% length\n  }\n  return(queue)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286810,"user_id":null,"body":"josephus_survivor <- function(n, k) {\n  x <- 1:n\n  \n  if(n == 1){\n    return(x[n])\n  } else {\n    while(n > 1) {\n      x <- c(x[-1:-((k-1)%%n + 1)], x[1:((k - 1)%%n + 1)-1])\n      n <- n - 1\n    }\n    \n    return(x)\n  }\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286811,"user_id":null,"body":"josephus_survivor <- function(n, k) {\n  vector <- 1:n\n  count <- ((k-1)%%n) + 1\n  while (length(vector) > 1){\n    vector <- vector[-count]\n    count <- ((count + k - 2)%%length(vector)) + 1\n  }\n  return(vector)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286812,"user_id":null,"body":"josephus_survivor <- function(n, k) {\n  x <- c(1:n)\n  i <- 0\n  while(length(x)>1) {\n    i <- (i+k)%%length(x)\n    if(i==0) i <- length(x)\n    x <- x[-i]\n    i <- i-1\n  }\n  return(x)\n#   print(x)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286813,"user_id":null,"body":"#first attempt\njosephus_survivor <- function(n, k) {\n  lst <- 1:n\n  indx <- 0\n  while(length(lst)>1){\n    indx <- (indx + k) %% length(lst)\n    indx <- ifelse(indx == 0, length(lst), indx)\n    \n    lst <- lst[-indx]\n    indx <- indx - 1\n  }\n  \n  lst\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286814,"user_id":null,"body":"josephus_survivor <- function(n, k) {\n  v <- 0\n  for (i in 1:n) {\n    v <- (v + k) %% i\n  }\n  v + 1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286815,"user_id":null,"body":"josephus_survivor <- function(n, k) {\n  circle <- c(1:n)\n  jump <- k - 1\n  \n  while (length(circle) > 1) {\n    while (jump >= length(circle)) {\n      jump <- jump - length(circle)  \n    }\n    \n    circle <- circle[-((jump %% n) + 1)]\n    jump <- jump + k - 1\n  }\n  \n  circle[1]\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286816,"user_id":53,"body":"josephus_survivor <- function(n, k) {\n  i <- 1\n  res <- 1\n  while (i <= n) {\n    res <- (res + k - 1) %% i + 1\n    i <- i + 1\n  }\n  res\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5556282156230d0e5e000089":[{"id":286817,"user_id":421,"body":"dna_to_rna <- function(dna){\n  gsub(\"T\", \"U\", dna)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286818,"user_id":null,"body":"dna_to_rna <- function(dna){\n  stringr::str_replace_all(dna, \"T\", \"U\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286819,"user_id":null,"body":"dna_to_rna <- function(dna){\n  gsub(\"T\", \"U\", dna) # Replace Thymine (T) with Uracil (U)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286820,"user_id":null,"body":"library(stringr)\n\ndna_to_rna <- function(dna){\n  str_replace_all(dna, 'T', 'U')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286821,"user_id":null,"body":"dna_to_rna <- function(dna){\n    \n  vet <- unlist(strsplit(dna,\"\"))\n  \n  if (length(vet) < 1) return (\"\")\n  \n  rna <- \"\"\n  \n  for (i in 1:length(vet)) {\n    if (vet[i] == \"T\") vet[i] <- \"U\"\n    rna <- paste(rna,vet[i],sep = \"\")\n  }\n  \n  return (rna)\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286822,"user_id":null,"body":"dna_to_rna <- function(dna){\n  gsub(pattern = \"T\", replacement = \"U\", x=dna)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286823,"user_id":null,"body":"library(tidyverse)\n\ndna_to_rna <- function(dna){\n  str_replace_all(dna, pattern = \"T\", \"U\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286824,"user_id":null,"body":"dna_to_rna <- function(dna){\n  dna <- strsplit(dna,\"\")[[1]]\n  dna[dna==\"T\"] <- \"U\"\n  dna <- paste(dna,sep=\"\",collapse=\"\")\n  dna\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286825,"user_id":null,"body":"dna_to_rna <- function(dna){\n  if (nchar(dna)==0) rna <- dna else {\n   rna <- gsub(\"T\",\"U\", dna)\n  }\n  return(rna)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286826,"user_id":null,"body":"dna_to_rna <- function(dna){\n    strand= strsplit(dna,\"\")[[1]];\n    strand[which(\"T\" == strand )]=\"U\"\n    paste(strand,collapse='')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55685cd7ad70877c23000102":[{"id":286827,"user_id":527,"body":"make_negative <- function(num) -abs(num)","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286828,"user_id":null,"body":"make_negative <- function(num){\n  ifelse(num>0, -num, num)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286829,"user_id":null,"body":"make_negative <- function(num){\n  if(num <= 0){\n    return(num)\n  }\n  \n  else{\n    return(-num)\n  }\n    \n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286830,"user_id":null,"body":"make_negative <- function(num){\n  if(num <= 0){\n    return(num)\n  }else if(num > 0){\n    return(-num)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286831,"user_id":null,"body":"make_negative <- function(num){\n  if(num < 0){\n    return(num)\n  }\n  return(-num)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286832,"user_id":null,"body":"make_negative <- function(num){\n  if(num <= 0){\n    num\n  }else { num <- num * -1}\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286833,"user_id":null,"body":"make_negative <- function(num){\n  if (num >= 0) {\n    nnum <- num * -1\n    nnum\n  } else {\n    num\n  }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286834,"user_id":null,"body":"make_negative <- function(num){\n  if (num<0){\n    print(num)\n  }\n  else {\n    print(num*-1)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286835,"user_id":null,"body":"make_negative <- function(num){\n  num <- -abs(num) \n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286836,"user_id":1024,"body":"make_negative <- function(num){\n  if(num > 0){\n    return (-num)\n  } else {\n    return (num)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"556cebcf7c58da564a000045":[{"id":286837,"user_id":null,"body":"number_of_rectangles <- function(m, n){\n temp_R <- m*(m+1)*n*(n+1)\/4\n return(temp_R)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286838,"user_id":713,"body":"number_of_rectangles <- function(m, n){\n (m * m + m) * (n * n + n) \/ 4\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286839,"user_id":null,"body":"number_of_rectangles <- function(m, n){\n  sum(outer(1:m, 1:n))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286840,"user_id":null,"body":"number_of_rectangles <- function(m, n){\n  return(m*(m+1)*n*(n+1)\/4)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286841,"user_id":50,"body":"number_of_rectangles <- function(m, n){\n  (m * n * (n + 1) * (m + 1)) \/ 4\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286842,"user_id":null,"body":"number_of_rectangles <- function(m, n) {\n  (m ^ 2 + m) * (n ^ 2 + n) \/ 4\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286843,"user_id":53,"body":"number_of_rectangles <- function(m, n){\n m * n * (m + 1) * (n + 1) \/ 4\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286844,"user_id":421,"body":"number_of_rectangles <- function(m, n){\n  m * (m + 1) * n * (n + 1) \/ 4\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"556deca17c58da83c00002db":[{"id":286845,"user_id":null,"body":"multibonacci <- function(sig, n, k) {\n  if (n == 0){\n    return(c())\n  } else if (n <= 3){\n    return(sig[1:n])\n  } else {\n    tri <- tribonacci(sig, n - 1)\n    return(c(tri, sum(tri[(n-3):(n-1)])))\n  }\n}\n\ntribonacci <- function(sig, n) {\n  multibonacci(sig, n, k = 3)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286846,"user_id":null,"body":"tribonacci <- function(sig, n) {\n  if (n == 0) sig <- c()\n  else if (n <= 3) sig <- sig[1:n]\n  else for (i in 4:n) sig[i] <- sum(sig[(i-3):(i-1)])\n  sig\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286847,"user_id":421,"body":"tribonacci <- function(sig, n) {  \n  if(n == 0){c()}\n  else if(n <= 3){head(sig, n)}\n  else{\n    for(i in 1:(n-3)){\n      sig = c(sig, sig[i] + sig[i + 1] + sig[i + 2])\n    }\n    sig\n  }    \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286848,"user_id":null,"body":"tribonacci <- function(sig, n) {\n  if(n == 0){\n    c()\n  }\n  else if(n <= 3){\n    sig[1:n]\n  }\n  else\n  {\n    c(sig[1], tribonacci(c(sig[2:3], c(sum(sig))),n-1))  \n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286849,"user_id":null,"body":"tribonacci <- function(sig, n) {\n  if (n == 0) {\n    output <- c()\n  } else if (n == 1) {\n    output <- head(sig, 1)\n  } else if (n == 2) {\n    output <- head(sig, 2)\n  } else if (n == 3) {\n    output <- head(sig, 3)\n  } else {\n    output <- sig\n    for(i in 1:(n-3)){\n      output <- c(output, sum(tail(output, 3)))\n    }\n  }\n  return(output)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286850,"user_id":null,"body":"tribonacci <- function(sig, n) {\n  \n  if (n == 0){\n    \n    return(c())\n  }\n  \n  if (n < 3){\n    \n    return(sig[1:n])\n  \n  }\n  \n  i <- 3\n  while(i < n){\n    \n    sig[i+1] <- sum(sig[(i-2):i])\n    \n    i <- i + 1\n  }\n  \n  sig\n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286851,"user_id":null,"body":"tribonacci <- function(sig, n) {\n  if (n == 0) {\n    return(c())\n  }\n  if (n <= 3) {\n    return(sig[1:n])\n  }\n  if (n > 3) {\n    for (i in 1:(n - 3)) {\n      sig[length(sig) + 1] <- sig[i] + sig[i + 1] + sig[i + 2]\n    }\n    return(sig)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286852,"user_id":null,"body":"tribonacci <- function(sig, n) {\n  if (n == 0) {\n    return(c())\n  }\n  for (i in 1:n) {\n    if(i > 3) {\n      sig[i] <- sig[i-3] + sig[i-2] + sig[i-1]\n    }\n  }\n  sig[1:n]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286853,"user_id":null,"body":"tribonacci <- function(sig, n) {\n  # your code here\n  if(n==0){\n    return(NULL)\n  }\n  if(n<3){\n    return(sig[1:n])\n  }\n  n1 = c(1:n)\n  n1[1:3] = sig\n  for (i in 4:n) {\n    n1[i] = sum(n1[i-1],n1[i-2],n1[i-3])\n  }\n  return(n1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286854,"user_id":null,"body":"tribonacci <- function(sig, n) {\n  \n  if(n==0){\n    return(NULL)\n  }else if(n<=3){\n    return(sig[1:n])\n  }else{\n    out=rep(NA,n)\n    out[1:3]=sig\n    for (i in 4:n){\n      out[i]=out[i-1]+out[i-2]+out[i-3]\n    }\n    out\n  }\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5574835e3e404a0bed00001b":[{"id":286855,"user_id":null,"body":"get_participants <- function(h){#x**2 - x - 2 * h = 0\n  if (h == 0) {return(0)}\n  ceiling((1 + (sqrt(1 + 8 * h))) \/ 2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286856,"user_id":null,"body":"get_participants <- function(handshakes){\n  i <- 0\n  repeat {\n    if ((i*(i-1)\/2) >= handshakes) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286857,"user_id":null,"body":"get_participants <- function(h){\n  n <- 0 \n  s <- 0\n  while (s < h){\n    n <- n+1\n    s <- ((n-1)*n)\/2\n  }\n  return(n)\n  }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286858,"user_id":null,"body":"get_participants <- function(handshakes){\n n<-2\n  if (handshakes==0){\n    return(0)\n  }\n  while (choose(n,2) < handshakes){\n    n=n+1\n  }\n  n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286859,"user_id":421,"body":"get_participants <- function(handshakes){\n  ifelse(handshakes == 0, 0, ceiling((1 + (1 + 8 * handshakes) ^ 0.5) \/ 2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286860,"user_id":null,"body":"get_participants <- function(handshakes) {\n  ceiling(((sqrt(8*handshakes + 1)) + 1) \/ 2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286861,"user_id":null,"body":"get_participants <- function(handshakes)\n{\n  if(handshakes==0) return(1)\n  \n  people = 0\n  shakes = 0\n  \n  while(handshakes > shakes)\n  {\n    shakes = people * (people + 1) \/ 2\n    people = people + 1\n  }\n  return(people)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286862,"user_id":null,"body":"get_participants <- function(handshakes){\n  if(handshakes == 0){\n      x <- 1\n    }\n  else{\n    if(handshakes == 1){\n        x <- 2\n      }  \n    else{\n        x <- ceiling((1 + sqrt(1 + 8 * handshakes))\/2)\n    }\n  }\nreturn(x)  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286863,"user_id":null,"body":"get_participants <- function(handshakes){\n  x <- c(1:handshakes)\n  if (1 == handshakes) return(2)\n  y <- choose(x,2)\n  min(which(y >= handshakes))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286864,"user_id":null,"body":"get_participants <- function(handshakes){\n  farmer <- 0\n  i <- 0\n  while (i < handshakes) {\n    farmer <- farmer + 1\n    i <- i + farmer\n  }\n  farmer + 1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286865,"user_id":null,"body":"quadratic <- function(a,b,c){\n    discriminant <- b^2 - 4*a*c\n    if(discriminant > 0){\n      participants <- (b^2+sqrt(discriminant))\/(2*a)\n      ceiling(participants)\n    }\n    else{\n      return(FALSE)\n    }\n}\n\n\n\n\n\nget_participants <- function(handshakes){\n if(handshakes == 0){\n   return(1)\n }\n  else{\n    print(\"test\")\n   participants <- quadratic(1,1,(-handshakes*2))\n   print(participants)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286866,"user_id":null,"body":"quadratic <- function(a,b,c){\n    discriminant <- b^2 - 4*a*c\n    if(discriminant > 0){\n      participants <- (b^2+sqrt(discriminant))\/(2*a)\n      ceiling(participants)\n    }\n    else{\n      return(FALSE)\n    }\n}\n\n\n\n\n\nget_participants <- function(handshakes){\n if(handshakes == 0){\n   return(1)\n }\n  else{\n    print(\"test\")\n   participants <- quadratic(1,1,(-handshakes*2))\n   print(participants)\n  }\n}\nget_participants(0)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286867,"user_id":null,"body":"get_participants <- function(handshakes) {\n  people <- 1\n  while (handshakes > 0) {\n        handshakes <- handshakes - people\n        people <- people + 1\n  }\n  people\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286868,"user_id":null,"body":"get_participants <- function(handshakes){\n  # n * (n - 1) \/ 2 is the number of edges in simple graph\n  ceiling((1 + sqrt(1 + 8 * handshakes)) \/ 2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286869,"user_id":null,"body":"get_participants <- function(handshakes){\n  if(handshakes == 0){return(1)}\n  #This is essentially finding the n for the combination formula!\n  else{\n    n = 2\n    while (factorial(n)\/(factorial(2)*factorial(n-2)) < handshakes){\n      n = n + 1\n    }\n    return(n)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286870,"user_id":null,"body":"get_participants <- function(handshakes){\n  if (handshakes == 0) {\n    return(1)\n  }\n  farmers <- unlist(sapply(1:50, function(x) rep(x + 1, x)))\n  return(farmers[handshakes])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286871,"user_id":53,"body":"get_participants <- function(handshakes){\n floor((1 + sqrt(1 + 8 * handshakes)) \/ 2.0 + 0.9999999)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286872,"user_id":50,"body":"get_participants <- function(h){\n  floor(sqrt(2*h+0.25)+1.4999999999)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5583090cbe83f4fd8c000051":[{"id":286873,"user_id":null,"body":"digitize <- function(n) {\n  out = strsplit(as.character(n), split = \"\")[[1]]\n  return(as.numeric(rev(out)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286874,"user_id":null,"body":"digitize <- function(n){\n x <- rev(as.numeric(strsplit(as.character(n), \"\")[[1]]))\n  return(x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286875,"user_id":null,"body":"digitize <- function(n){\n  #convert to characters\n array <- strsplit(as.character(n), NULL)[[1]]\n #convert back to numeric and reverse order\n return(rev(as.numeric(array)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286876,"user_id":null,"body":"digitize <- function(num){\n as.numeric(rev(unlist(strsplit(as.character(num), \"\"))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286877,"user_id":null,"body":"digitize <- function(n){\n  c <- as.character(n)\n  l <- unlist(strsplit(c, \"\"))\n  lista <- as.numeric(l)\n  lista <- rev(lista)\n  print(lista)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286878,"user_id":null,"body":"library(tidyverse)\ndigitize <- function(n) {\n  n %>%\n    as.character() %>%\n    str_split(\"\") %>%\n    unlist() %>%\n    rev() %>%\n    as.integer()\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286879,"user_id":null,"body":"digitize <- function(n){\n    a <- as.numeric(strsplit(as.character(n), \"\")[[1]])\n    rev(a)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286880,"user_id":null,"body":"library(stringr)\ndigitize <- function(n){\n  str_split(n, \"\") %>% \n  unlist() %>% \n  rev() %>% \n  as.numeric()\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286881,"user_id":null,"body":"digitize <- function(n){\n  result <- rev(as.numeric(strsplit(as.character(n), \"\")[[1]]))\n  return (result)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286882,"user_id":null,"body":"library(stringr)\ndigitize <- function(n){\n  vec <- unlist(str_split(as.character(n), pattern = \"\"))\n  as.numeric(vec[length(vec):1])\n\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"558dd9a1b3f79dc88e000001":[{"id":286883,"user_id":null,"body":"find_dup <- function(arr){\n  unique(arr[duplicated(arr)==TRUE])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286884,"user_id":null,"body":"find_dup <- function(arr){\n k<-table(arr)\n result=as.integer(names(k[k==2]))\n return(result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286885,"user_id":null,"body":"find_dup <- function(arr){\n  arr[which(duplicated(arr))]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286886,"user_id":null,"body":"find_dup <- function(arr){\n  arr[anyDuplicated(arr)]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286887,"user_id":null,"body":"find_dup <- function(arr){\n  l <- length(arr) - 1\n  return(sum(arr) - l * (l + 1) \/ 2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286888,"user_id":null,"body":"find_dup <- function(arr) {\n  count <- table(arr)\n  as.numeric(names(count[(count == 2)]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286889,"user_id":421,"body":"find_dup <- function(arr){\n  as.numeric(names(which(table(arr) != 1)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286890,"user_id":null,"body":"find_dup <- function(arr) {\n    arr = sort(arr)\n    for (i in 2:length(arr)) {\n        if (arr[i-1] == arr[i]) {\n            return(arr[i])\n        }\n    }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286891,"user_id":null,"body":"find_dup <- function(arr){\n  nums <- c()\n  for (x in arr) {\n    if (is.element(x, nums)) { return (x) }\n    nums <- append(nums, x)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286892,"user_id":null,"body":"find_dup <- function(arr){\n  tab = arr %>% table\n  tab[tab == 2] %>% names %>% as.numeric\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"558f0553803bc3c4720000af":[{"id":286893,"user_id":2334,"body":"find_dup <- function(arr){\n  n <- length(arr)\n  sum(arr) - n*(n-1)\/2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"558fc85d8fd1938afb000014":[{"id":286894,"user_id":null,"body":"sum_two_smallest_numbers <- function(numbers){\n   sum(sort(numbers)[1:2])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286895,"user_id":null,"body":"sum_two_smallest_numbers <- function(numbers){\n  sorted_nums <- sort(numbers)\n  sum(sorted_nums[1:2])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286896,"user_id":null,"body":"sum_two_smallest_numbers <- function(numbers){\n  nums = sort(numbers, decreasing=F)\n  nums[1] + nums[2]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286897,"user_id":null,"body":"sum_two_smallest_numbers <- function(n){\n   #your code here\n  sum(head(sort(n),2))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286898,"user_id":null,"body":"sum_two_smallest_numbers <- function(numbers){\n   min.1 <- min( numbers )\n   numbers <- numbers[ numbers != min.1]\n   min.2 <- min( numbers )\n   return( min.1 + min.2 )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286899,"user_id":null,"body":"sum_two_smallest_numbers <- function(numbers){\n   #your code here\n  smallest <- min(numbers)\n  small <- max(numbers)\n  for(i in numbers){\n    if(i!=smallest)\n      if(i<small)\n        small<-i\n  }\n  return(smallest+small)\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286900,"user_id":null,"body":"sum_two_smallest_numbers <- function(numbers){\n   sum(sort(numbers[numbers>0])[0:2])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286901,"user_id":null,"body":"sum_two_smallest_numbers <- function(numbers){\n   numbers <- sort(numbers)\n   sum <- numbers[1] + numbers[2]\n   return(sum)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286902,"user_id":null,"body":"\nlibrary(tidyverse)\nsum_two_smallest_numbers <- function(numbers){\n     numbers %>%\n    sort() %>%\n    `[`(1:2) %>%\n    sum()\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286903,"user_id":null,"body":"sum_two_smallest_numbers <- function(num){\n   return(sum(min(num), min(num[-match(min(num),num)])))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55908aad6620c066bc00002a":[{"id":286904,"user_id":2334,"body":"xo <- function(s){\n  s <- unlist(strsplit(casefold(s), \"\"))\n  sum(s == \"o\") == sum(s == \"x\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286905,"user_id":527,"body":"xo <- function(s) {\n  chars <- strsplit(tolower(s), \"\")[[1]]\n  sum(chars == \"x\") == sum(chars == \"o\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286906,"user_id":null,"body":"xo <- function(s) {\n  s <- unlist(strsplit(s, \"\"))\n  x <- length(grep(\"x\", s, ignore.case = T))\n  o <- length(grep(\"o\", s, ignore.case = T))\n  if (identical(x, o)) {\n    return(TRUE)\n  } else return(FALSE)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286907,"user_id":null,"body":"xo <- function(s){\n  string <- s\n  x <- ifelse(unlist(strsplit(string, \"\")) %in% c(\"x\",\"X\"), TRUE, FALSE) %>% sum()\n  o <- ifelse(unlist(strsplit(string, \"\")) %in% c(\"o\",\"O\"), TRUE, FALSE) %>% sum()\n  \n  if (x == o) {\n    return(TRUE)\n    }\n  return(FALSE)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286908,"user_id":null,"body":"library(stringr)\nxo <- function(s) { \n  y = tolower(s) \n  if(str_count(y,'[xo]') != 0) {\n    str_count(y,'o') == str_count(y,'x') }\n  else{return(TRUE)}\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286909,"user_id":null,"body":"library(stringr)\nxo <- function(s){\n  s <- tolower(s)\n  x_count <- str_count(s, \"x\")\n  o_count <- str_count(s, \"o\")\n  if (o_count == x_count){\n    return(TRUE)\n  }else{\n    return(FALSE)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286910,"user_id":null,"body":"xo <- function(s){\n  nchar(gsub(\"X\",\"\", toupper(s))) == (nchar(gsub(\"O\",\"\", toupper(s))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286911,"user_id":null,"body":"xo <- function(s){\n  \n  s_split <- strsplit(tolower(s), \"\")[[1]]\n  x_sum <- 0\n  o_sum <- 0\n  \n  for (i in s_split){\n    if (identical(i, \"x\")){\n      x_sum <- x_sum + 1\n    }\n    else if(identical(i, \"o\")){\n      o_sum <- o_sum + 1\n    }\n    else{\n      x_sum <- x_sum\n      o_sum <- o_sum\n    }\n  }\n  \n  \n  if(x_sum == o_sum){\n    return(TRUE)\n  } \n  else {\n    return(FALSE)\n  }\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286912,"user_id":null,"body":"xo <- function(s){\n  xcount <- lengths(regmatches(s, gregexpr(\"x\", tolower(s))))\n  ocount <- lengths(regmatches(s, gregexpr(\"o\", tolower(s))))\n  if(xcount == ocount){\n    TRUE\n  }\n  else{\n    FALSE\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286913,"user_id":null,"body":"library(tidyverse)\nxo <- function(s){\n  if(str_count(s, \"x|X\") == str_count(s, \"o|O\")){\n    TRUE\n  } else {\n    FALSE\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5592e3bd57b64d00f3000047":[{"id":286914,"user_id":null,"body":"find_nb <- function(n) {\n    # your code\n    num = 0\n    checkSum = 0\n    while(checkSum < n){\n        num = num + 1\n        checkSum = checkSum + num**3\n    }\n    if(checkSum==n) return(num) else return(-1)\n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286915,"user_id":null,"body":"find_nb <- function(n) {\n    # Achieved by inverting the Faulhaber polynomial\n    x <- round(1\/2*(-1 + round(sqrt(1 + round(8*sqrt(n))))))\n    isValidSolution <- (x*(x+1)\/2)^2 == n  # Faulhaber polynomial\n    if (isValidSolution) { \n        return(x)\n    }\n    else {\n        return(-1)\n    }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286916,"user_id":null,"body":"find_nb <- function(n){\n  d <- sqrt(1+8*sqrt(n))\n  ifelse(d==trunc(d), (d - 1)\/2, -1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286917,"user_id":null,"body":"find_nb <- function(n) {\n  i <- 0\n  while (n > 0){\n    n <- n - (i^3)\n    i <- i + 1\n  }\n  if (n == 0){\n  return (i-1)\n  } else {\n  return(-1)\n  }\n    \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286918,"user_id":null,"body":"find_nb <- function(n) {\n  m = 0\n    while (n > 0){\n      m <- m + 1\n      n <- n - (m^3)\n    }\n  if (n < 0){\n    m <- -1\n    }\n   \n  return(m)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286919,"user_id":null,"body":"find_nb <- function(m) {\n  \n  # Nicomachus's theorem gives sum of cubes from 0:n, set equal to m and solve\n  roots <- polyroot(c(-4 * m, 0, 1, 2, 1))\n  \n  # Get the positive real root of the solution and round to an integer value\n  n <- round(Re(roots)[4])\n  \n  # Test if the root found truly meets the condition, return accordingly\n  test <- n * n * (n + 1) * (n + 1) == 4 * m\n  ifelse(test, n, -1)\n  \n}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286920,"user_id":null,"body":"find_nb <- function(n) {\noptions(digits = 22)\n  valmax <- (-1 + (1+8*(n)^(0.5))^(0.5))\/2\nif(as.integer(valmax) != valmax){return(-1)}\nelse return(valmax)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286921,"user_id":null,"body":"find_nb <- function(n) {\n  a = (-1 + sqrt(4 * (sqrt(n) * 2) + 1))\/2\n  return(ifelse(round(a) == a, a, -1))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286922,"user_id":492,"body":"find_nb <- function(n) {\n    kk = floor(sqrt(sqrt(4.0 * n)))\n    if (4 * n == kk * kk * (kk + 1) * (kk + 1)) kk else -1\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286923,"user_id":421,"body":"find_nb <- function(m) {\n  n <- 0\n  vol <- 0\n  while(vol < m){\n    n <- n + 1\n    vol <- vol + n ^ 3\n  }\n  ifelse(vol != m, -1, n)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"559536379512a64472000053":[{"id":286924,"user_id":492,"body":"play_pass <- function(s, n) {\n  revString <- function(text){\n    paste(rev(unlist(strsplit(text,NULL))),collapse=\"\")\n  }\n  dig=c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\")\n  A = utf8ToInt('A'); Z = utf8ToInt('Z')\n  chars <- unlist(strsplit(s,\"\"))\n  for(i in 1:length(chars)) {\n    c <- chars[i]\n    d <- utf8ToInt(c)\n    if ((d >= A) && (d <= Z)) {\n      c <- intToUtf8((d - A + n) %% 26 + A)\n    } else if (c %in% dig) {\n      c <- intToUtf8(105 - utf8ToInt(c))\n    }\n    if (i %% 2 == 0) chars[i] <- tolower(c)\n    else chars[i] <- toupper(c)\n  }\n  revString(paste(chars))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286925,"user_id":null,"body":"play_pass <- function(s, n) {\n  split <- tolower(unlist(strsplit(s, \"\")))\n  shifted <- vapply(split, letter_shift, n, FUN.VALUE = character(1L))\n  complemented <- vapply(shifted, complement_digit, FUN.VALUE = character(1L))\n  upper_idx <- seq(1L, length(complemented), by = 2L)\n  complemented[upper_idx] <- toupper(complemented[upper_idx])\n  paste0(rev(complemented), collapse = \"\")\n}\n\nletter_shift <- function(l, n) {\n  pos <- which(letters == l) + n\n  if (length(pos) == 0L) return(l)\n  if (pos > length(letters)) pos <- pos - length(letters)\n  letters[pos]\n}\n\ncomplement_digit <- function(d) {\n  if (d == \" \") return(d)\n  d_trans <- tryCatch(as.integer(d), warning = function(x) NULL)\n  if (is.null(d_trans)) return(d)\n  as.character(9 - d_trans)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286926,"user_id":669,"body":"play_pass=function(s,n,e=123:256,x=c(1:47,57:48,58:96,97+(0:25+n)%%26,e)[utf8ToInt(tolower(s))])intToUtf8(rev(x+(c(1:96,65:90,e)[x]-x)*1:0))","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286927,"user_id":null,"body":"play_pass <- function(s, n) {\n  x <- c()\n  Word <- c()\n  letter <- c()\n    WordList <- tolower(unlist(strsplit(s, \"\"))) \n    for (i in c(1:length(WordList))){\n      if (WordList[i] %in% letters){\n      pos <- c(1:length(letters))[letters == WordList[i]]  \n      x <- (pos+n)%%26\n      letter <- letters[ifelse(x == 0, 26, x)]\n      Word[i] <- ifelse(i%%2,toupper(letter), letter)\n      }\n      else if (!is.na(as.numeric(WordList[i]))){\n          Word[i] <- (9-as.numeric(WordList[i]))\n      }\n      else {\n        Word[i] <- WordList[i]\n      }\n      \n    }\n    return(paste0(rev(Word), collapse=\"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286928,"user_id":null,"body":"play_pass <- function(s, n) {\n  s_split <- unlist(strsplit(tolower(s), \"\"))\n  passphrase <- c()\n  pos <- 0\n  for (char in s_split) {\n    flipped_char <- char\n    if (grepl(\"[0-9]\", char)) {\n      flipped_char <- c(0:9)[which(c(9:0) == as.numeric(char))]\n    }\n    if (grepl(\"[a-z]\", char)) {\n      flipped_char <- c(letters[(n+1):26], letters[1:n])[which(letters == char)]\n      if (pos %% 2 == 0) {\n        flipped_char <- toupper(flipped_char)\n      }\n    }\n    passphrase <- c(passphrase, flipped_char)\n    pos <- pos + 1\n  }\n  return(paste0(rev(passphrase), collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286929,"user_id":null,"body":"play_pass <- function(s, n) {\n  \n  x <- tolower(unlist(strsplit(s, \"\")))\n  \n  # Rules 1-3\n  for (i in seq_along(x)) {\n    if (x[i] %in% letters) {\n      old_idx <- which(letters == x[i])\n      if (old_idx + n > 26) {\n        new_idx <- (old_idx + n) - 26\n        x[i] <- letters[new_idx]\n      }  else {\n        x[i] <- letters[old_idx + n]\n        }\n    } else if (x[i] %in% 0:9) {\n      x[i] <- 9 - as.numeric(x[i])\n    } else {\n      next\n    }\n  }\n  \n  # Rule 4\n  names(x) <- 0:(length(x) - 1)\n  y <- as.numeric(names(x))\n  \n  for (i in seq_along(y)) {\n    if (y[i] %% 2 == 0 & x[i] %in% letters) {\n      x[i] <- toupper(x[i])\n    } else {\n      next\n    }\n  }\n  \n  # Flip it and reverse it\n  out <- paste0(rev(x), collapse = \"\")\n  return(out)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286930,"user_id":null,"body":"play_pass <- function(s, n) {\n  ## split passcode into a vector\n  split_s<-unlist(strsplit(s,\"\"))\n  ## loop over each character in the passcode\n  for(i in 1:length(split_s)){\n    if(split_s[i] %in% LETTERS){\n      ## if it is a letter then rotate by n\n      LET_index<-which(LETTERS==split_s[i])+n\n      ## if index goes over 26 then cycle around\n      while(LET_index>26){\n        LET_index<-LET_index-26\n      }\n      ## if index goes under 1 then cycle around\n      while(LET_index<1){\n        LET_index<-LET_index+26\n      }\n      ## Make odd indexes upper case and even indexes lower case\n      if(i %% 2==0){\n        split_s[i]<-letters[LET_index]\n      } else {\n        split_s[i]<-LETTERS[LET_index]\n      }\n    } else if(split_s[i] %in% 0:9){\n      ## if it is a number take it away from 9\n      split_s[i]<-9-as.numeric(split_s[i])\n    }\n  }\n  ## reverse the vector and join togther into a single string\n  return(paste0(split_s[length(split_s):1],collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286931,"user_id":null,"body":"play_pass <- function(s, n) {\n  v <- c(1:nchar(s))\n  x <- unlist(strsplit(s,''))\n  y <- match(x, LETTERS)\n  # Do shift by n\n  alph <- grepl(\"[A-Z]\", x)\n  w <- y[alph]+n\n  w[w>26] <- w[w>26]-26\n  x[alph] <- LETTERS[w]\n  # Replace digits by complement\n  dgt <- grepl(\"\\\\d\", x)\n  z <- rep_len(9, length.out=sum(dgt)) - as.numeric(x[dgt])\n  x[dgt] <- as.character(z)\n  # Downcase each in odd pos\n  x[v%%2==0] <- tolower(x[v%%2==0])\n  # Reverse\n  paste(rev(x), collapse='')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286932,"user_id":null,"body":"play_pass <- function(s, n) {\n  s = s %>% tolower %>% strsplit(\"\") %>% unlist\n  digit.lst = grep('\\\\d',s)\n  for(i in digit.lst){\n    s[i] = as.character(9 - as.integer(s[i]))\n  }\n  letterss = c(letters,letters)\n  s = lapply(s,function(x){if(x %in% letters){letterss[match(x,letters)+n]}else{x}}) %>% unlist\n  count = 0\n  ans = character(0)\n  for(i in s){\n    if(count %% 2 == 0){\n      ans = append(ans,toupper(i))\n    }\n    else{\n      ans = append(ans,tolower(i))\n    }\n    count = count + 1\n  }\n  rev(ans) %>% paste0(collapse=\"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286933,"user_id":null,"body":"play_pass <- function(s, n) {\n  #\u2193 your code\nentrada <- unlist(strsplit(s, c()))\ndefault <- append(LETTERS, as.character(c(0:9)))\n  if(n != 0){\n   default_mod <- append(append(LETTERS[0:-n], LETTERS[0:n]), as.character(9-c(0:9)))\n  }else{default_mod <- append(LETTERS, as.character(9-c(0:9)))\n  }\n    \nidx <- match(entrada, default)\ncount <- 1\n\nwhile(count < length(entrada)+1){\n  if (is.na(idx[count])){\n  }\n  else {entrada[count] = default_mod[idx[count]]\n  }\n  if ((count %% 2) == 0){\n    entrada[count] = tolower(entrada[count])\n  }\n  count = count +1\n}\n\nreturn((paste(rev(entrada), collapse = \"\")))\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"559a28007caad2ac4e000083":[{"id":286934,"user_id":null,"body":"# Get the Fibonacci-sequence from 0 - n\nfib_seq <- function(n) {\n    \n    # Check edge-cases with n in [0;1]\n    if (n == 0) return(c(1))\n    if (n == 1) return(c(1, 1))\n    \n    # Initalize fib_seq\n    fib_seq <- c(1,1)\n    for(i in 3:n) fib_seq[i] = fib_seq[i-1] + fib_seq[i-2]\n    return(fib_seq)\n}\nperimeter <- function (n) {\n    # Create Fibonacci-Seq. from 1 to n+1\n    fib_seq <- fib_seq(n + 1)\n                      \n    # return 4 * sum(fib_seq)\n    return(4 * sum(fib_seq))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286935,"user_id":null,"body":"fibnoci <- function(n)\n{\n  if(n == 0)return(1)\n  if(n == 1)return(c(1,1))\n  n1 <- 0\n  n2 = 1\n  res <- c(1)\n  while(length(res) <= n)\n  {\n    temp = n1 + n2\n    n1 = n2\n    n2 = temp\n    res <- c(res,n2)\n  }\n  return(res)\n}\n\nperimeter <- function (n) {\n    return(4 * sum(fibnoci(n)))  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286936,"user_id":492,"body":"perimeter <- function (n) {\n    fib <- function (n) {\n        a <- 1; b <- 1\n        while (n > 0) {\n            tmp <- a\n            a <- b\n            b <- b + tmp\n            n <- n -1\n        }\n        a\n    }\n    4 * (fib(n + 2) -1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286937,"user_id":null,"body":"perimeter <- function (n) {\n    p <- 0\n    a <- 0\n    b <- 1\n    while (n >= 0) {\n        tmp <- a\n        a <- b\n        b <- a + tmp\n        p <- p + a * 4\n        n <- n - 1\n    }\n    p\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286938,"user_id":null,"body":"perimeter <- function (n) {\n\tsq <- c(1,1)\n\tfor (i in 2:(n)) {\n  \t\tsq <- c(sq, (sq[i] + sq[i - 1]))\n\t}\n\treturn(4 * sum(sq))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286939,"user_id":492,"body":"perimeter <- function (n) {\n    fib <- function (n) {\n        a <- 1; b <- 1\n        while (n > 0) {\n            tmp <- a\n            a <- b\n            b <- b + tmp\n            n <- n -1\n        }\n        a\n    }\n    4 * (fib(n + 2) -1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286940,"user_id":null,"body":"perimeter <- function (n) {\n  n1 <- 0\n  n2 <- 1\n  count <- 0\n  tot <- 1\n  while(count < n) {\n    nth <- n1 + n2\n    tot <- sum(tot, nth)\n    n1 <- n2\n    n2 <- nth\n    count <- count + 1\n  }\n  tot * 4\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286941,"user_id":null,"body":"perimeter <- function (n) {\n  a0 <- 1\n  a1 <- 1\n  i = 2 \n  r <- c(a0, a1)\n  for (i in 3:(n+1)){\n    a2 = a0 + a1 \n    r <- c(r, a2)\n    a0 <- a1 \n    a1 <- a2\n  }\n  print(4*sum(r))\n}\n\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286942,"user_id":null,"body":"perimeter <- function (n) {\nS_list <- matrix()\nS_list[1] <- 1\nS_list[2] <- 2\nfor (i in 3:n) {\n  S_list[i] <- S_list[(i-1)] + S_list[(i-2)]\n}\nS <- sum(S_list[1:n])+1\nreturn(S*4)# your code\n}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286943,"user_id":null,"body":"perimeter <- function (n) {\n  ps <- c(1, 1)\n  for(i in 3:(n+1)){\n    ps[i] <- ps[i-1] + ps[i-2]\n  }\n  sum(ps)*4\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"559b8e46fa060b2c6a0000bf":[{"id":286944,"user_id":527,"body":"diagonal <- function(n, p) {\n  choose (n + 1, p + 1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286945,"user_id":null,"body":"diagonal <- function(n, p) {\n  # Generates Pascal's triangle in list form\n  pascalTriangle <- function(h) {\n    lapply(0:h, function(i) choose(i, 0:i))\n  }\n  triangle.lst = pascalTriangle(n)\n  \n  # Collects evert (p + 1) element from triangle.lst sub element\n  res.vec = sapply(triangle.lst, function(x) {\n    num.val = ifelse(test = is.na(x[p + 1]),\n                     yes = 0,\n                     no = x[p + 1])\n  })\n  \n  res.sum = sum(res.vec)\n  return(res.sum)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286946,"user_id":2334,"body":"diagonal <- function(n, p) {\n  sum(choose(p:n, p))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286947,"user_id":492,"body":"choose <- function (n, k){\n  res <- 1\n  for (i in 1:k) {\n    res <- res * (n - i + 1) \/ i\n  }\n  res\n}\ndiagonal <- function(n, p) {\n  choose(n + 1, p + 1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286948,"user_id":492,"body":"choose <- function (n, k){\n  res <- 1\n  for (i in 1:k) {\n    res <- res * (n - i + 1) \/ i\n  }\n  res\n}\ndiagonal <- function(n, p) {\n  choose(n + 1, p + 1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286949,"user_id":null,"body":"diagonal <- function(n, p) {\n  if (p==0){\n    return(n+1)\n  }\n  return(sum(choose(1:n,p)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286950,"user_id":null,"body":"diagonal <- function(n, p)\n{\n  diagonal = numeric(n+1) + 1\n\n  if (p > 0)\n    for (i in 1:p)\n      diagonal = cumsum(diagonal[1:(length(diagonal)-1)])\n\n  return(sum(diagonal))\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286951,"user_id":null,"body":"diag_seq <- function(n, p) {\n  if(p < 1){\n    out <- rep(1, n)\n  } else {\n    out <- cumsum(diag_seq(n,p-1))\n  }\n  return(out)\n}\ndiagonal <- function(n, p) {\n  if(p < 1){\n    return(n + 1)\n  }\n  print(c(n,p))\n  S <- diag_seq(n, p)\n  sum(S[1:(n - p + 1)])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286952,"user_id":null,"body":"diagonal <- function(n, p) {\n  mat = data.frame(matrix(ncol = n+1, nrow=n+1))\nmat[,] = 0\nmat[1,1] = 1\nmat[,1] = 1\nfor ( i in 2:(n+1)) {\n  v = unlist(mat[i-1,])\n  mat[i,2:(n+1)] = sapply(1:(length(v)-2+1),function(x){sum(v[x:(x+2-1)])})\n}\n\nsum(mat[p+1])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286953,"user_id":null,"body":"diagonal <- function(n, p) {\n  fac <- function(n){ifelse(n == 0,1,n * fac(n - 1))}\n  return(round(fac(n + 1) \/ (fac(n - p) * fac(p + 1))));\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"559ce00b70041bc7b600013d":[{"id":286954,"user_id":null,"body":"finance <- function(n) {\n  sum=0\n  for (i in 0:n){\n    sum_i=((i+1)*3*i)\/2\n    sum=sum+sum_i\n  }\n  return(sum)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286955,"user_id":527,"body":"finance <- function(n) {\n  n * (n + 1) * (n + 2) \/ 2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286956,"user_id":null,"body":"finance <- function(n) {\n  # your code\n  ((n+1)^3-n-1)\/2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286957,"user_id":null,"body":"finance <- function(n)sum(1:(n+1))*n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286958,"user_id":null,"body":"finance <- function(n) {\n  (1 \/ 2) * n ** 3 + (3 \/ 2) * n ** 2 + n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286959,"user_id":null,"body":"f <- function(x,y) as.numeric(sum(x:y))\nvf <- Vectorize(f)\n\nfinance <- function(n) { \n  print(n)\n  sum(vf(seq(0,2*n,2), n:(2*n)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286960,"user_id":null,"body":"finance <- function(n) {\n  lapply(c(0:n), function(i,k=n-i+1) (i*k) + ((i+n)*k\/2)) %>% unlist %>% sum\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286961,"user_id":null,"body":"finance <- function(n) {\n  out <- numeric()\n  for(i in 0:n){\n    out <- c(out,sum(rbind(seq(0+i*2,n+i))))\n    days_money <- out\n    }\n  return(sum(days_money))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286962,"user_id":null,"body":"finance <- function(n) {\n  result <- 0\n  for (i in 0:n) {\n    result <- result + (4 * i + (n - i)) * (n + 1 - i) \/ 2\n  }\n  result\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286963,"user_id":null,"body":"finance <- function(n){\n n\/2*(n^2+3*n+2)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"559e3224324a2b6e66000046":[{"id":286964,"user_id":null,"body":"sumin <- function(n) {\n  # your code\n  return(sum(as.numeric(outer(1:n, 1:n, \"pmin\"))))\n}\n\nsumax <- function(n) {\n  # your code\n  return(sum(as.numeric(outer(1:n, 1:n, \"pmax\"))))\n}\n\nsumsum <- function(n) {\n  # your code\n  return(sum(as.numeric(outer(1:n, 1:n, \"+\"))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286965,"user_id":null,"body":"sumin <- function(n) {\n  sum(as.numeric(outer(1:n,1:n,pmin)))\n}\n\nsumax <- function(n) {\n  sum(as.numeric(outer(1:n,1:n,pmax)))\n}\n\nsumsum <- function(n) {\n n^3+n^2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286966,"user_id":null,"body":"sumin <- function(n) {\n  n * (n+1) * (2*n+1) \/ 6\n}\n\nsumax <- function(n) {\n  n^3 - sumin(n-1)\n}\n\nsumsum <- function(n) {\n  sumin(n) + sumax(n)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286967,"user_id":null,"body":"sumin <- function(n) {\n  return (n * n*(n+1)\/2 - (n+1)*n*(n-1)\/6)\n}\n\nsumax <- function(n) {\n  return (n * (n+1) * (4*n-1)\/6)\n}\n\nsumsum <- function(n) {\n  return (sumin(n)+sumax(n))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286968,"user_id":null,"body":"sumin <- function(n) {\nx <- n\nsum <- 0\nstart <- 1\nfor(number in 1:n){\n    sum <- sum + start * (2*x-1)\n    x <- x-1\n    start <- start +1\n}\n  return(sum)# your code\n}\n\n\nsumax <- function(n) {\n x <- n\nsum <- 0\nstart <- n\nfor(number in 1:n){\n    sum <- sum + start * (2*x-1)\n    x <- x-1\n    start <- start -1\n    }\n  return(sum)\n}\n\nsumsum <- function(n) {\n x <- n\nsum <- 0\nstart <- n\nfor(number in 1:n){\n    sum <- sum + start * (3*x-1) \n    x <- x-1\n    start <- start -1\n    }\n  return(sum)  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286969,"user_id":null,"body":"sumin <- function(n) {\ns <- 0\nf <- 0\nfor (i in 1:n){\n    f <- f+(n-i+1)\n    s=s+f\n   }\n  print(s)\n}\n\nsumax <- function(n) {\n  s <- n*n\n  f<- n*n\n  for (i in 2:n){\n    f <- f-(n-i+1)\n    s <- s+f\n  }\n  print(s)\n}\n\n\nsumsum <- function(n) {\n n*n*(n+1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286970,"user_id":53,"body":"sumin <- function(n) {\n  n * (n+1) * (2 * n + 1) \/ 6\n}\n\nsumax <- function(n) {\n  n * (n+1) * (4 * n - 1) \/ 6\n}\n\nsumsum <- function(n) {\n  (n+1) * n * n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286971,"user_id":null,"body":"sumin <- function(n) {\n  s <- 0\n  for (i in 1:n) { s <- s + sum(pmin(c(1:n),i)) }\n  s\n}\n\nsumax <- function(n) {\n  s <- 0\n  for (i in 1:n) { s <- s + sum(pmax(c(1:n),i)) }\n  s\n}\n\nsumsum <- function(n) {\n  sumin(n) + sumax(n)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286972,"user_id":null,"body":"sumin <- function(n) {\n  sum = 0\n  num = 1\n  while (n != 0){\n    sum = sum + n * num\n    num = num + 2\n    n = n - 1\n  }\n  sum\n}\n\nsumax <- function(n) {\n  sum = 0\n  num = 1\n  for (i in 1:n){\n    sum = sum + i * num\n    num = num + 2\n  }\n  sum\n}\n\nsumsum <- function(n) {\n sumin(n) + sumax(n)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286973,"user_id":null,"body":"sumin <- function(n) {\n  sum(c(1:n)*n-c(1:n)*(c(1:n)-1)\/2)\n}\n\nsumax <- function(n) {\n  sum(unlist(Map(sum, Map(function(i) seq(0,i), 0:(n-1))))+n*(n+1)\/2)\n}\n\nsumsum <- function(n) {\n sum((c(1:n)-1)*n+n*(n+1)\/2+n)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55a29405bc7d2efaff00007c":[{"id":286974,"user_id":null,"body":"going <- function (n) {\n    trunc(sum(1, 1 \/ cumprod(seq(n, 2, -1L))) * 1e6) \/ 1e6\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286975,"user_id":492,"body":"going <- function (n) {\n    result <- 1; acc <- 1\n    while (n > 1) {\n        acc <- acc * (1 \/ n)\n        result <- result + acc\n        n <- n - 1\n    }\n    floor(result * 1e6) \/ 1e6\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286976,"user_id":669,"body":"going <- function(n) {\n  y <- 1 + Reduce(function(y, k) (y + 1) \/ k, 2:n, 0)\n\n  round(floor(y * 1e6) \/ 1e6, 6)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286977,"user_id":421,"body":"going <- function (n) {\n  i <- 1\n  ans <- 1\n  while(n > 1){\n    i = i \/ n\n    ans = ans + i\n    n = n - 1\n  }\n  floor(ans * 1e6) \/ 1e6\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286978,"user_id":null,"body":"#' Calculates (1\/n!) * (1! + 2! + 3! + ... + n!).\n#'\n#' @param n double\n#' A single digit for factorials, n >= 1.\n#'\n#' @return double\n#' The division result truncated to 6 decimal places.\n#' Uses base \"lfactorial\" to find the ratio.\n#' @export\n#'\n#' @examples\ngoing <- function(n) {\n  # Logarithms convert multiplication into addition\n  # and division into subtraction.\n  calc <- sum(exp(lfactorial(1:n) - lfactorial(n)))\n  res <- trunc(calc * 1e6) \/ 1e6\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286979,"user_id":null,"body":"going <- function (n) {\n  out <- 1 + sum(1\/cumprod(n:2))*(n > 1)\n  trunc(out * 10^6)\/10^6\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286980,"user_id":null,"body":"going <- function(n) {\n  p <- 1\n  x <- 1\n  for(i in seq_len(n - 1)) {\n    p <- p * (n - i + 1L)\n    x <- x + 1 \/ p\n  }\n  floor(x * 1e6) \/ 1e6\n}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286981,"user_id":null,"body":"going <- function (n) {\n    # your code  \n  u <- 1\n  for (k in 2:n) {\n    u <- 1 + u\/k\n  }\n  \n  return(floor(u*10**6)\/10**6)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286982,"user_id":null,"body":"going <- function (n) {\n  sol <- 1\n  d <- 1\n  i <- n\n  while (d > 10 ** -7 && i > 1) {\n    d <- d \/ i\n    sol <- sol + d\n    i <- i - 1\n  }\n  (floor(sol * 10**6)) \/ 10**6\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286983,"user_id":null,"body":"going <- function (n) {\n  y<-0\n  for (i in 2:n){\n  x<-1\n  for (j in i:n){\n    x=x*j\n  }\n  y=y+(1\/x)\n}\n  trunc((y+1)*1000000)\/1000000                   \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55a2d7ebe362935a210000b2":[{"id":286984,"user_id":527,"body":"find_smallest_int <- min","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286985,"user_id":null,"body":"find_smallest_int <- function(arr) {\n  min <- arr[1]\n\n  for (x in arr) {\n    if (x < min) {\n      min = x\n    }\n  }\n  \n  return(min)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286986,"user_id":null,"body":"find_smallest_int <- function(arr){\nx<-min(arr)\nreturn(x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286987,"user_id":null,"body":"find_smallest_int <- function(arr){\n  min(arr)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286988,"user_id":null,"body":"find_smallest_int <- function(A){\n  # Your code here \n  min(A)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286989,"user_id":null,"body":"find_smallest_int <- function(arr){\n  arr[arr==min(arr)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286990,"user_id":null,"body":"find_smallest_int <- function(arr){\n  arr <- sort(arr,decreasing=FALSE) \n  x <- arr[1]\n  returnValue(x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286991,"user_id":null,"body":"find_smallest_int <- function(arr){\n  small <- min(arr)\n  return(small)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286992,"user_id":null,"body":"find_smallest_int <- function(arr){\n  # Your code here \n  return(arr[order(arr)][1])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286993,"user_id":null,"body":"find_smallest_int <- function(arr){\n  min(arr)# Your code here \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55a70521798b14d4750000a4":[{"id":286994,"user_id":null,"body":"greet <- function(name) {\n    library(stringr)\n    s <- \"Hello, name how are you doing today?\"\n    s <- str_replace(s, 'name', name)\n    print(s)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286995,"user_id":null,"body":"greet <- function(name) {\n    # TODO: \n  paste(\"Hello,\", name, \"how are you doing today?\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286996,"user_id":null,"body":"greet <- function(name) {\n    return(paste0(\"Hello, \", name, \" how are you doing today?\")) \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286997,"user_id":527,"body":"greet <- function(name) paste('Hello,', name, 'how are you doing today?')","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286998,"user_id":null,"body":"greet <- function(name) {\n    # TODO: \n  sprintf(\"Hello, %s how are you doing today?\",name)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":286999,"user_id":null,"body":"greet <- function(name) {\n  str_interp(\"Hello, ${name} how are you doing today?\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287000,"user_id":null,"body":"greet <- function(name) {\n  name<- as.character(name)\n  hello<-c(\"Hello,\")\n  how<- c(\"how are you doing today?\")\n  paste(hello,name,how, sep = \" \" )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287001,"user_id":null,"body":"greet <- function(name) {\n    greeting <- paste(paste(\"Hello, \", toString(name), sep = \"\"), \" how are you doing today?\", sep = \"\")\n    return(greeting)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287002,"user_id":null,"body":"greet <- function(name) { print(paste0('Hello, ',name,' how are you doing today?'))\n    # TODO: \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287003,"user_id":null,"body":"greet <- function(name) {\n    # TODO: \n  str <- paste(\"Hello,\",name,\"how are you doing today?\")\n  return(str)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55aa075506463dac6600010d":[{"id":287004,"user_id":null,"body":"list_squared <- function (m, n) {\n  output <- list()\n  for (i in m:n) {\n    divis <- which((i %% (1:i)) == 0)\n    sum_squares <- sum(divis * divis)\n    if ((sqrt(sum_squares) %% 1) == 0) { output[[length(output) + 1]] <- c(i, sum_squares) }\n  }\n  output\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287005,"user_id":492,"body":"list_squared <- function (m, n) {\n  res <- list()\n  j <- 1\n  for (i in seq.int(from = m, to = n)) {\n    divs <- c(seq_len(i %\/% 2), i)\n    divs <- divs[i %% divs == 0]\n    ss <- sum(divs ** 2)\n    sqss <- ss ** 0.5\n    if (as.integer(sqss) == sqss) {\n      res[[j]] <- c(i, ss); j <- j + 1\n    }\n  }\n  res\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287006,"user_id":null,"body":"get_divisors <- function(number) {\n  div <- c()\n  for (d in 1:as.integer(sqrt(number))) {\n    if (number %% d == 0) {\n      div <- c(div, d, number \/ d)\n    }\n  }\n  return(unique(div))\n}\n\nlist_squared <- function(m, n) {\n  result = list()\n  for (i in m:n) {\n    x = sum(get_divisors(i) ** 2)\n    if (sqrt(x) %% 1 == 0) {\n      result <- c(result, list(c(i, x)))\n    }\n  }\n  return(result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287007,"user_id":null,"body":"list_squared <- function (m, n) {\n  all <- list()\n  for (i in m:n) {\n    divisors <- c()\n    for (j in 1:round(sqrt(i))) {\n      if (i %% j == 0) {\n        divisors <- c(divisors, j, i\/j)\n      }\n    }\n    tot <- sum(unique(divisors)^2)\n    if (sqrt(tot) %% 1 == 0) {\n      all[[length(all)+1]] <- c(i, tot)\n    }\n  }\n  return(all)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287008,"user_id":null,"body":"list_squared <- function (m, n) {\n   \n    result <- list()\n    posicion<-1\n\n    for(index in m:n){\n        if ( index == 1 )\n            divisors <- c(1)\n        else if (index == 2 )\n            divisors <- c(1, 2)\n        else {\n            divisors <- c(1, index)\n\n            for(divisor in 2:sqrt(index)){\n                if ( index %% divisor == 0)\n                  divisors <- c(divisors, divisor, index\/divisor)\n            }\n        }\n\n        pow2 <- function(x) x**2       \n        suma <- sum(unlist(lapply(as.list(unique(divisors)), pow2)))\n        number <- sqrt(suma)\n\n        if ( number == floor(number)){\n            result[[posicion]] <- c(index, suma)\n            posicion <- posicion + 1\n        }\n\n    }\n\n    return(result)\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287009,"user_id":null,"body":"list_squared <- function (m, n) {\nfinish_list <- list()\n\nfor (i in m:n) {\n  Test_list <- c()\n  for(j in 1:ceiling(sqrt(i))){\n    if(i %% j ==0){\n      Test_list <- append(Test_list,j)\n      Finisher <- i\/j\n      Test_list <- append(Test_list,Finisher)\n    }else{\n\n    }\n  }\n  Test_list <- unique(Test_list)\n  double_sum <- sum(Test_list**2)\n  if(sqrt(double_sum) %% 1 == 0){\n    finish_one <- list(c(i,double_sum))\n    finish_list <- append(finish_list , finish_one)\n  }\n}\nreturn(finish_list)\n\n\n  #% your code\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287010,"user_id":null,"body":"factors <- function(p){\n  x<-c()\n  v<-c()\n  o<- c()\n  for(i in 1:floor(sqrt(p))){\n    if(p%%i == 0){\n      k<- p\/i\n      x <- append(x, values =c(i**2, k**2))\n    }  \n  }\n  x <- unique(x)\n  v <- sum(as.numeric(x))\n  if(sqrt(v) %% 1 == 0){\n    o<-c(p,v)\n  }\n}\n\nlist_squared <- function (m, n){\n  g<-list()\n  w<-1\n     if(m >= 1 && n > m){\n      for(i in m:n){\n        if(!is.null(factors(i))){\n          h<- factors(i)\n          g[[w]] <- h\n          w<-w+ 1\n        }\n      }\n     }\n  print(g)\n  }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287011,"user_id":null,"body":"list_squared <- function(m, n){\n  factor_sum <- function(n){\n    result <- c()\n    for(i in 1:ceiling(sqrt(n))){\n      if(n %% i == 0){\n        result <- c(result, i, n\/i)\n      }\n    }\n    result <- ifelse(duplicated(result) == TRUE, 0, result)\n    result <- sum(result^2)\n    return(result)\n  }\n\n  c1 <- c(m:n)\n  outcome <- list()\n  t <- 0\n  \n  outcome <- list()\n  t <- 1\n  for(i in c1){\n    if(isTRUE(sqrt(factor_sum(i)) == round(sqrt(factor_sum(i))))){\n      outcome[[t]] <- c(i, factor_sum(i))\n      t <- t+1\n    }\n  }\n  \n  return(outcome)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287012,"user_id":null,"body":"list_squared <- function (m, n) {\n    ls <- list()\n    l <- 1\n    invisible(\n        lapply(m:n, function(x) {\n            a <- seq(1, floor(sqrt(x)))\n            a <- a[x %% a == 0]\n            a <- c(a, x \/ a) %>% unique()\n            b <<- sum(a ^ 2)\n            \n            if(sqrt(b) %% 1 == 0) {\n                ls[[l]] <<- c(max(a), b)\n                l <<- l + 1\n            }\n        })\n    )\n    ls\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287013,"user_id":null,"body":"list_squared <- function (m, n) {\n  output <- list()\n  for (i in m:n) {\n    divisors <- vector()\n    x <- 1:i\n    y <- i %% x == 0\n    divisors <- append(divisors, x[y])\n    sum_squared_divisors <- sum(divisors ^ 2)\n    if (sqrt(sum_squared_divisors) %% 1 == 0) {\n      output <- append(output, list(c(i, sum_squared_divisors)))\n    }\n  }\n  return(output)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55ab4f980f2d576c070000f4":[{"id":287014,"user_id":null,"body":"game <- function(n) { if ((n*n)%%2 == 0){ c((n*n)\/2) } else { c(n*n, 2) }}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287015,"user_id":null,"body":"game <- function(n) {\n  even.test <- n %% 2L == 0L\n  if(even.test) return(n * n \/ 2)\n  c(n * n, 2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287016,"user_id":null,"body":"game <- function(n) {\n  ifelse(n %%2 == 1,return(c(n**2,2)),return(n**2\/2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287017,"user_id":null,"body":"game <- function(n) {\n  res <- (1\/2+ (n - 1)\/2)*(n-1)+ n\/2\n  if (res == floor(res)) return(res) else return(c(res*2, 2))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287018,"user_id":null,"body":"game <- function(n) {\n  sum <- n^2\n  if (n%%2 == 0) {\n    c(sum \/ 2)\n  } else {\n    c(sum, 2)\n  }\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287019,"user_id":null,"body":"game <- function(n) {\n  if(n == 1){\n    return(c(1,2))\n  }else{\n      SUM <- 0\n  for (i in 1:(n-1)) {\n    SUM <- SUM + i*(1\/2)\n  }\n  SUM <- 2*SUM + n*(1\/2)\n  ifelse(floor(SUM) != SUM , return(c(SUM*2,2)) , return(SUM))\n  }\n\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287020,"user_id":null,"body":"game <- function(n) {\n  out <- n * n \/ 2\n  \n  if (out == trunc(out)) {\n    return(out)\n  } else {\n    my_dec <- out - trunc(out)\n    return(c(out \/ my_dec, 1 \/ my_dec))\n  }\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287021,"user_id":53,"body":"game <- function(n) {\n  if (n %% 2 == 0) {\n    c(n * n \/ 2)\n  } else {\n    c(n * n, 2)\n  }\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287022,"user_id":421,"body":"game <- function(n) {\n  n <- n * (n * 0.5)\n  if(n %% 1 == 0.5){\n    c(n * 2, 2)\n  } else{\n    c(n)\n  }\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287023,"user_id":null,"body":"game <- function(n) {\n  if(! n %% 2){\n    return((n%\/%2) * n)\n  }else{\n    return(c(n^2, 2))\n  }\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55ad04714f0b468e8200001c":[{"id":287024,"user_id":null,"body":"get_char<- function(asc)\n{\n  intToUtf8(asc)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287025,"user_id":527,"body":"get_char <- intToUtf8","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287026,"user_id":null,"body":"get_char<- function(asc)\n{\nab<-c('\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07', '\\x08', '\\t', '\n', '\\x0b', '\\x0c', '\\r', '\\x0e', '\\x0f', '\\x10', '\\x11', '\\x12', '\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1a', '\\x1b', '\\x1c', '\\x1d', '\\x1e', '\\x1f', ' ', '!', '\"', '#', '$', '%', '&', \"'\", '(', ')', '*', '+', ',', '-', '.', '\/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '\\x7f')\nreturn(ab[asc])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287027,"user_id":null,"body":"get_char<- function(asc)\n{\n  value <- intToUtf8(asc)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287028,"user_id":null,"body":"get_char<- function(asc)\n{\n  rawToChar(as.raw(asc))\n#   Best of Luck :)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287029,"user_id":null,"body":"get_char<- function(asc)\n{\n#   Best of Luck :)\n  x <- rawToChar(as.raw(asc))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287030,"user_id":null,"body":"get_char<- function(asc)\n{\n#   Best of Luck :)\n  intToUtf8(asc)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287031,"user_id":null,"body":"get_char<- function(asc)\n{\n  asc_char <- intToUtf8(asc)\n  return(asc_char)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287032,"user_id":null,"body":"get_char<- function(asc){\n  result <- intToUtf8(asc)\n  return (result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287033,"user_id":null,"body":"get_char<- function(n){\n  rawToChar(as.raw(n))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55b3425df71c1201a800009c":[{"id":287034,"user_id":null,"body":"stat_assoc <- function (strg) {\n  x <- trimws(unlist(strsplit(strg, split = \",\")))\n  times <- as.POSIXct(x, format = \"%H|%M|%S\")\n  dtime <- difftime(max(times), min(times), unit = \"sec\")\n  paste(\"Range:\", format(as.POSIXlt(as.numeric(dtime), origin = \"1960-01-01 00:00:00\"), format = \"%H|%M|%S\"), \n        \"Average:\", format(mean(times), format = \"%H|%M|%S\"), \n        \"Median:\", format(median(times), format = \"%H|%M|%S\"))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287035,"user_id":null,"body":"stat_assoc <- function (strg) {\n\nnumbers <- as.numeric(strsplit(strg, \"[,|]\")[[1]])\n\nindex <- (0:(length(numbers)\/3-1))*3+1\n\ntimes <- numbers[index] * 3600 + numbers[index+1] * 60 + numbers[index+2]\n\nformatTime <- function(sec)\n{\n  h <- floor(sec \/ 3600)\n  m <- floor((sec - h*3600) \/ 60)\n  s <- sec - h * 3600 - m * 60\n  \n  return(sprintf(\"%02d|%02d|%02d\", h, m, s))\n}\n\nreturn(paste(\"Range: \", formatTime(max(times) - min(times)), \n      \" Average: \", formatTime(floor(mean(times))),\n      \" Median: \", formatTime(floor(median(times))), sep=\"\"))\n      \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287036,"user_id":492,"body":"time2snd <- function (s) {\n    arr <- as.numeric(unlist(strsplit(s, split = \"[|]\")))\n    3600 * arr[1] + 60 * arr[2] + arr[3]\n}\nsnd2time <- function(n) {\n    h <- floor(n \/ 3600)\n    re <- floor(n %% 3600)\n    mn <- floor(re \/ 60)\n    s <- re %% 60\n    sprintf(\"%02d|%02d|%02d\", h, mn, s)\n}\nstat_assoc <- function (strg) {\n    if (strg == \"\") return(\"\")\n    r <- sapply(unlist(strsplit(strg, split = \"[,]\")), FUN = time2snd)\n    avg <- mean(r)\n    md <- median(r)\n    rg <- max(r) - min(r)\n    sprintf(\"Range: %s Average: %s Median: %s\", snd2time(rg), snd2time(avg), snd2time(md))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287037,"user_id":null,"body":"stat_assoc <- function (strg) {\n    strtoken <- trimws(unlist(strsplit(strg, split = \",\")))\n    my_data <- strptime(strtoken, format=\"%H|%M|%S\")\n    range_data <- as.numeric(difftime(max(my_data),min(my_data), unit = \"sec\"))\n    range_data <- as.POSIXlt(range_data, origin = '2018-01-01 00:00:00')\n    mean_data <- mean(my_data)\n    median_data <- median(my_data)\n    paste( strftime(range_data, \"Range: %H|%M|%S\"),\n           strftime(mean_data, \"Average: %H|%M|%S\"),\n          strftime(median_data, \"Median: %H|%M|%S\"))\n    \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287038,"user_id":null,"body":"stat_assoc <- function (strg) {\n    library(stringr)\n  \n    times_split <- stringr::str_split(strg, \" | \", simplify = T)\n    times_split <- gsub(\",\", \" \", times_split)\n    times_split <- gsub(\"\\\\|\", \" \", times_split)\n    times_individual <- data.frame(as.numeric(unlist(str_split(times_split, \" \"))))\n    times_individual <- times_individual[complete.cases(times_individual),]\n    times_numeric <- as.numeric(unlist(times_individual))\n    times_m_in_s <- times_numeric[seq(2, length(times_numeric), 3)] * 60 \n    times_h_in_s <- times_numeric[seq(1, length(times_numeric), 3)] * 60 * 60\n    times_s <- times_numeric[seq(3, length(times_numeric), 3)]\n    all_times_s <- times_m_in_s + times_h_in_s + times_s\n    range_s <- max(all_times_s) - min(all_times_s)\n    average_s <- mean(all_times_s)\n    median_s <- median(all_times_s)\n        \n    range_h <- range_s \/ 3600\n    range_m <- ((range_h - floor(range_h)) * 60) \n    range_s <- ((range_m - floor(range_m)) * 60) \n    range_h <- sprintf(\"%02d\", floor(range_h))\n    range_m <- sprintf(\"%02d\", floor(range_m))\n    range_s <- sprintf(\"%02d\", round(range_s))\n    \n    average_h <- average_s \/ 3600\n    average_m <- ((average_h - floor(average_h)) * 60) \n    average_s <- ((average_m - floor(average_m)) * 60) \n    average_h <- sprintf(\"%02d\", floor(average_h))\n    average_m <- sprintf(\"%02d\", floor(average_m))\n    average_s <- sprintf(\"%02d\", floor(average_s))\n    \n    median_h <- median_s \/ 3600\n    median_m <- ((median_h - floor(median_h)) * 60) \n    median_s <- ((median_m - floor(median_m)) * 60) \n    median_h <- sprintf(\"%02d\", floor(median_h))\n    median_m <- sprintf(\"%02d\", floor(median_m))\n    median_s <- sprintf(\"%02d\", round(median_s))\n    \n    \n    output <- paste0(\"Range: \", range_h, \"|\", range_m, \"|\", range_s, \" \",\n                    \"Average: \", average_h, \"|\", average_m, \"|\", average_s, \" \",\n                    \"Median: \", median_h, \"|\", median_m, \"|\", median_s)\n    \n    print(strg)\n    print(output)\n    \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287039,"user_id":null,"body":"require(tidyverse)\nrequire(lubridate)\n\nformat_secs <- function(x) {\n  x<- x %>% seconds_to_period(.) %>% str_remove_all(., \"[HMS]\") %>% strsplit(., \" \") %>% unlist(.) %>% \n    str_pad(., 2, pad=\"0\") %>% paste0(., collapse = \"|\")\n  if(nchar(x) == 5) paste0(\"00|\", x) else x\n}\n\nstat_assoc <- function (strg) {\n  print(strg)\nx <- str_match_all(strg, \"(\\\\d{1,2})\\\\|(\\\\d{1,2})\\\\|(\\\\d{1,2})\")[[1]][,-1] %>% as_tibble(.) %>% \n  mutate(., V1=as.numeric(V1), V2 = as.numeric(V2), V3= as.numeric(V3)) %>% \n  mutate(., total = (V1 * 3600) + (V2 * 60) + V3)\n  range <- range(x$total)[2] - range(x$total)[1] \n  \n  \n  paste0(\"Range: \", format_secs(range), \" Average: \", format_secs(floor(mean(x$total))), \" Median: \", format_secs(floor(median(x$total))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287040,"user_id":null,"body":"library(stringr)\n\nstat_assoc <- function (strg) {\n  if (strg==\"\") {paste(\"\")} else {\n  strg <- str_remove_all(unlist(strsplit(strg,split = \",\")), \" \")\n  \n  a <- as.integer(\n    str_remove_all(\n      unlist(str_extract_all(strg, \"^..\")),\"\\\\|\"))\n  \n  c <- as.integer(\n    str_remove_all(\n      unlist(str_extract_all(strg, \"..$\")),\"\\\\|\"))\n  \n  b <- as.integer(\n    str_remove_all(\n      unlist(str_extract_all(strg, \"\\\\|.+\\\\|\")),\"\\\\|\"))\n  \n  s <- (a*60 + b)*60 + c\n  \n  dif <- diff(range(s))\n  mn <- mean(s)\n  med <- median(s)\n  \n  hd <- (dif\/60)%\/%60\n  md <- (dif-hd*3600)%\/%60\n  ssd <- (dif-hd*3600-md*60)%\/% 1\n  \n  hmn <- (mn\/60)%\/%60\n  mmn <- (mn-hmn*3600)%\/%60\n  ssmn <- (mn-hmn*3600-mmn*60)%\/% 1\n  \n  hmd <- (med\/60)%\/%60\n  mmd <- (med-hmd*3600)%\/%60\n  ssmd <- (med-hmd*3600-mmd*60)%\/% 1\n  \npaste(sep=\"\", \"Range: \", sprintf(\"%02d\",hd),\"|\", sprintf(\"%02d\",md),\"|\", sprintf(\"%02d\",ssd),\n      \" Average: \", sprintf(\"%02d\",hmn),\"|\", sprintf(\"%02d\",mmn),\"|\", sprintf(\"%02d\",ssmn),\n      \" Median: \", sprintf(\"%02d\",hmd),\"|\", sprintf(\"%02d\",mmd),\"|\", sprintf(\"%02d\",ssmd)\n      )\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287041,"user_id":null,"body":"stat_assoc <- function (strg) {\n   library(stringr)\n\n\nstrg <- str_replace_all(strg,\"\\\\|\",\":\")\n\n\nstrg <- as.vector(str_split_fixed(strg, \",\", n = str_count(strg, \",\") +1)) \nstrg <- paste(strg)\nstrg <- strptime(strg, \"%H:%M:%S\")\n\nx<-mean(strg)\n\nz<-median(strg)\n\nr_max<-as.numeric(str_split_fixed(str_remove(as.character( max(strg)),\"2022-04-07 \"), \":\",n=3))\nr_min<-as.numeric(str_split_fixed(str_remove(as.character( min(strg)),\"2022-04-07 \"), \":\",n=3))\n  \n  \nif(all(r_max > r_min)) {y<- r_max-r_min\n}else if(r_max[3] < r_min[3]) { r_max[3] <- r_max[3]+60 ; r_max[2]<-r_max[2]-1 ; y<- r_max-r_min\n} else if(r_max[2] < r_min[2]) {  r_max[2] <- r_max[2]+60 ; r_max[1]<-r_max[1]-1 ; y<- r_max-r_min \n} else if( r_max[2] < r_min[2] &  r_max[3] <  r_min[3]) { r_max[3] <- r_max[3]+60 ; r_max[2]<-r_max[2]-1\n                                              r_max[2]+60 ; r_max[1]<-r_max[1]-1 ; y<- r_max-r_min    \n} else { y <- r_max - r_min}\n\n\n\nif (y[1] < 10 & y[2] < 10 & y[3] < 10) {  \n  r<- unlist(str_split(y, \"  \")) \n  r[3] <- paste(\"0\",r[3])\n  r[3] <- str_remove_all(r[3], \" \")\n  r[2] <- paste(\"0\",r[2])\n  r[2] <- str_remove_all(r[2], \" \")\n  r <- paste(as.character(r),collapse=\" \")\n  r <- str_replace(r,\"^\", \"0\")\n  r <- str_replace_all(r, \" \", \"|\") \n  \n} else if(y[1] < 10 & y[2] < 10) { r <- paste(as.character(y),collapse=\" \")  \nr <-str_replace(r,\"\\\\s\", \" 0\" )\nr <- str_replace(r,\"^\", \"0\")\nr <- str_replace_all(r, \" \", \"|\") \n\n\n} else if(y[2] < 10 & y[3] < 10) {  r<- unlist(str_split(y, \"  \")) \nr[2] <- paste(\"0\",r[2])\nr[2] <- str_remove_all(r[2], \" \")\nr[3] <- paste(\"0\",r[3])\nr[3] <- str_remove_all(r[3], \" \")\nr <- paste(as.character(r),collapse=\" \")\nr <- str_replace_all(r, \" \", \"|\")\n\n\n} else if (y[3] < 10){  r<- unlist(str_split(y, \"  \")) \nr[3] <- paste(\"0\",r[3])\nr[3]<- str_remove_all(r[3], \" \")\nr <- paste(as.character(r),collapse=\" \")\nr <- str_replace_all(r, \" \", \"|\") \n     \n} else if (y[2] < 10){ r <- unlist(str_split(y, \"  \"))\n                       r <- paste(as.character(r),collapse=\" \")\n                       r <- str_replace(r,\"\\\\s\", \" 0\" )\n                       r <- str_replace_all(r, \" \", \"|\")   \n\n                \n} else if (y[1] < 10) { r <- paste(as.character(y),collapse=\" \") \nr <- str_replace(r,\"^\", \"0\")\nr <- str_replace_all(r, \" \", \"|\") \n                   } else {   r <- paste(as.character(y),collapse=\" \")\n                              r <- str_replace_all(r, \" \", \"|\") }  \n  \n  \na<-as.character(x)\na<-str_remove(a,\"2022-04-07 \")\na<-str_replace_all(a,\":\",\"|\")\n\n\nc <-as.character(z)\nc <-str_remove(c,\"2022-04-07 \")\nc<-str_replace_all(c,\":\",\"|\")\n\npaste(\"Range:\",r, \"Average:\", a ,\"Median:\",c)\n \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287042,"user_id":null,"body":"stat_assoc <- function (strg) {\n  library(stringr)\n  \nstrg <- str_replace_all(strg,\"\\\\|\",\":\")\n\nstrg <- as.vector(str_split_fixed(strg, \",\", n = str_count(strg, \",\") +1)) \nstrg <- paste(strg)\nstrg <- strptime(strg, \"%H:%M:%S\")\nx<-mean(strg)\n\n#range\nr_max<-as.numeric(str_split_fixed(str_remove(as.character( max(strg)),\"2022-04-07 \"), \":\",n=3))\nr_min<-as.numeric(str_split_fixed(str_remove(as.character( min(strg)),\"2022-04-07 \"), \":\",n=3))\n\nif(all(r_max > r_min)) {y<- r_max-r_min\n}else if(r_max[3] < r_min[3]) { r_max[3] <- r_max[3]+60 ; r_max[2]<-r_max[2]-1 ; y<- r_max-r_min\n} else if(r_max[2] < r_min[2]) {  r_max[2] <- r_max[2]+60 ; r_max[1]<-r_max[1]-1 ; y<- r_max-r_min \n} else if( r_max[2] < r_min[2] &  r_max[3] <  r_min[3]) { r_max[3] <- r_max[3]+60 ; r_max[2]<-r_max[2]-1\n                                              r_max[2]+60 ; r_max[1]<-r_max[1]-1 ;  y<- r_max-r_min    \n} else { y <- r_max - r_min}\n\n\nif (y[1] < 10 & y[2] < 10 & y[3] < 10) {  \n  r<- unlist(str_split(y, \"  \")) \n  r[3] <- paste(\"0\",r[3])\n  r[3] <- str_remove_all(r[3], \" \")\n  r[2] <- paste(\"0\",r[2])\n  r[2] <- str_remove_all(r[2], \" \")\n  r <- paste(as.character(r),collapse=\" \")\n  r <- str_replace(r,\"^\", \"0\")\n  r <- str_replace_all(r, \" \", \"|\") \n  \n} else if(y[1] < 10 & y[2] < 10) { r <- paste(as.character(y),collapse=\" \")  \nr <-str_replace(r,\"\\\\s\", \" 0\" )\nr <- str_replace(r,\"^\", \"0\")\nr <- str_replace_all(r, \" \", \"|\") \n\n\n} else if(y[2] < 10 & y[3] < 10) {  r<- unlist(str_split(y, \"  \")) \nr[2] <- paste(\"0\",r[2])\nr[2] <- str_remove_all(r[2], \" \")\nr[3] <- paste(\"0\",r[3])\nr[3] <- str_remove_all(r[3], \" \")\nr <- paste(as.character(r),collapse=\" \")\nr <- str_replace_all(r, \" \", \"|\")\n\n\n} else if (y[3] < 10){  r<- unlist(str_split(y, \"  \")) \nr[3] <- paste(\"0\",r[3])\nr[3]<- str_remove_all(r[3], \" \")\nr <- paste(as.character(r),collapse=\" \")\nr <- str_replace_all(r, \" \", \"|\") \n     \n} else if (y[2] < 10){ r <- unlist(str_split(y, \"  \"))\n                       r <- paste(as.character(r),collapse=\" \")\n                       r <- str_replace(r,\"\\\\s\", \" 0\" )\n                       r <- str_replace_all(r, \" \", \"|\")   \n\n                \n} else if (y[1] < 10) { r <- paste(as.character(y),collapse=\" \") \nr <- str_replace(r,\"^\", \"0\")\nr <- str_replace_all(r, \" \", \"|\") \n                   } else {   r <- paste(as.character(y),collapse=\" \")\n                              r <- str_replace_all(r, \" \", \"|\") }  \n    \nr\n\n\nz<-median(strg)\n\na<-as.character(x)\na<-str_remove(a,\"2022-04-07 \")\na<-str_replace_all(a,\":\",\"|\")\n\n\n\nc <-as.character(z)\nc <-str_remove(c,\"2022-04-07 \")\nc<-str_replace_all(c,\":\",\"|\")\n\npaste(\"Range:\",r, \"Average:\", a ,\"Median:\",c)\n\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287043,"user_id":null,"body":"stat_assoc <- function (strg) {\n  ## if strg is empty then return \"\"\n  if (strg==\"\"){\n    return(\"\")\n  }\n  ## split strg into a vector\n  split_strg<-unlist(strsplit(strg,\",\"))\n  ## initialise vector for converted entries\n  decimal_time<-vector(\"numeric\",length(split_strg))\n  ## convert each entry into a decimal time (number of seconds)\n  for(i in 1:length(split_strg)){\n    temp_split<-as.numeric(unlist(strsplit(split_strg[i],\"\\\\|\")))\n    decimal_time[i]<-temp_split[3]+temp_split[2]*60+temp_split[1]*60*60\n  }\n  ## calculate average, range, and median\n  decimal_average<-mean(decimal_time)\n  decimal_range<-max(decimal_time)-min(decimal_time)\n  decimal_median<-median(decimal_time)\n  ## function to convert to hh|mm|ss format\n  convertToStrg<-function(dec){\n    new_strg<-vector(\"numeric\",3)\n    new_strg[1]<-floor(dec\/(60*60))\n    dec<-dec-new_strg[1]*60*60\n    new_strg[2]<-floor(dec\/60)\n    dec<-dec-new_strg[2]*60\n    new_strg[3]<-floor(dec)\n    new_strg<-ifelse(as.numeric(new_strg)<10,paste0(\"0\",new_strg),new_strg)\n    paste0(new_strg[1],\"|\",new_strg[2],\"|\",new_strg[3])\n  }\n  ## return results in final format\n  return(paste0(\"Range: \",convertToStrg(decimal_range),\" Average: \",convertToStrg(decimal_average),\" Median: \",convertToStrg(decimal_median)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55b4d87a3766d9873a0000d4":[{"id":287044,"user_id":669,"body":"howmuch <- function(m, n) {\n  f <- m:n\n  f <- f[f %% 7 == 2 & f %% 9 == 1]\n\n  txt <- sprintf(\"[M: %d B: %d C: %d]\", f, (f - 2) \/ 7, (f - 1) \/ 9)\n  sprintf(\"[%s]\", paste(txt, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287045,"user_id":492,"body":"# howmuch returns a string (see Sample Tests)\nhowmuch <- function(m, n) {\n    i <- min(m, n)\n    j <- max(m, n)\n    text <- \"[\"\n    while (i <= j) {\n        if ((i %% 9 == 1) && (i %% 7 == 2)) {\n            text <- paste0(text, sprintf(\"[M: %d B: %d C: %d]\", i, as.integer(i \/ 7), as.integer(i \/ 9)))\n        }\n        i <- i + 1\n    }\n    paste0(text, \"]\")\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287046,"user_id":421,"body":"howmuch <- function(m, n) {\n  a <- min(m, n)\n  b <- max(m, n)\n  arr <- c()\n  for(i in a:b){\n    if(i %% 9 == 1 && i %% 7 == 2){\n      s <- paste0(\"[M: \", i, \" B: \", (i - 2) \/ 7, \" C: \", (i - 1) \/ 9,  \"]\")\n      arr <- c(arr, s)\n    }\n  }\n paste0(\"[\", paste0(arr, collapse = \"\"), \"]\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287047,"user_id":null,"body":"howmuch <- function(m, n) {\n  x <- m:n\n  f <- x [((x %% 7) == 2) & ((x %% 9) == 1)]\n  b <- (f-2)\/7\n  c <- (f-1)\/9\n  \n  if (length(f) == 0) {return(\"[]\")}\n  \n  paste0(\"[\", paste0(\"[M: \", f, \" B: \", b, \" C: \", c, \"]\", collapse = \"\"), \"]\", collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287048,"user_id":null,"body":"howmuch <- function(m, n) {\n  if(n < m) return(howmuch(n, m))\n  sols <- NULL\n  m0 <- m + (37 - m) %% 63 # hardcoded solution; chinese remainder theorem for a more general solution\n  while(m0 <= n) {\n    sols <- c(sols, paste0(\"[M: \", m0, \" B: \", m0 %\/% 7, \" C: \", m0 %\/% 9, \"]\"))\n    m0 <- m0 + 63\n  }\n  return(paste0(c(\"[\", sols, \"]\"), collapse = \"\"))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287049,"user_id":null,"body":"howmuch <- function(m, n) {\n  str <- \"[\"\n  for (i in m:n) {\n    if ((i %% 9 == 1) && (i %% 7 == 2)) {\n      str <- paste0(str, \"[M: \", i, \" B: \", i %\/% 7, \" C: \", i %\/% 9, \"]\")\n    }\n  }\n  paste0(str, \"]\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287050,"user_id":null,"body":"howmuch <- function(m, n) {\n  result <- sapply(seq(m,n), function(x) {if(((x-1)\/9) %% 1 == 0 & ((x-2)\/7) %% 1 == 0) return(paste0('[M: ',x,' B: ', ((x-2)\/7), ' C: ', ((x-1)\/9), ']'))}) %>% unlist(.) \n  paste0('[', paste0(result, collapse=\"\"), ']')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287051,"user_id":null,"body":"howmuch <- function(m, n) {\n  a <- seq(min(m,n), max(m,n))\n    \n  u <- sapply(a[a%%9==1 & a%%7==2], function(x){c(x, (x-2)\/7, (x-1)\/9)})\n  \n  if (length(u)==0) {return (\"[]\")}\n  \n  df <- data.frame(t(u))\n  colnames(df) <- c(\"M\", \"b\", \"c\")\n  df$case <- paste(\"[M: \", df$M, \" B: \", df$b, \" C: \", df$c, \"]\", sep=\"\")\n\n  ifelse(length(df$case)>0, paste(c(\"[\", df$case, \"]\"), collapse=\"\"), \"[]\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287052,"user_id":null,"body":"howmuch <- function(m, n) {\nx_list <- c(m:n)\nwoyaode <- unlist(sapply(x_list , function(x){\n  if((x-1) %% 9 == 0 && (x-2) %% 7 == 0){\n    return(x)\n  }else{\n    \n  }\n}))\nif(length(woyaode) == 0){\n  return(\"[]\")\n}else{\n  left <- \"[[\"\n  right <- \"]]\"\n  mid <- c()\n  for (i in 1:length(woyaode)) {\n    mid <- append(mid,paste(\"M: \" , woyaode[i] , \" B: \",((woyaode[i]-2)\/7),\" C: \" , ((woyaode[i]-1)\/9),collapse = \"\",sep = \"\"))\n  }\n  MID <- paste(mid , collapse = \"][\")\n  return(paste(left,MID,right,collapse = \"\",sep = \"\"))\n}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287053,"user_id":null,"body":"howmuch <- function(m, n) {\n  upper = floor(max(m:n)\/63+(26\/63))\n  lower = floor(min(m:n)\/63+(26\/63))\n  if(min(m:n)\/63+(26\/63) == lower){\n    range = c(lower:upper)\n    }else{\n    range = c(lower:upper)[c(-1)]\n  }\n  Money <- function(range){\n    37 + (range-1)*63}\n  Car <- function(range){\n    4 + (range-1)*7}\n  Boat <- function(range){\n    5 + (range-1)*9}\n  M = Money(range)\n  B = Boat(range)\n  C = Car(range)\n  \n  if(length(range) > 0){\n  ans = paste(\"[M: \", M,\" B: \", B,\" C: \", C,\"]\", sep =\"\",collapse = \"\")\n  paste(\"[\",ans, \"]\", sep = \"\")\n  }else{\n  print(\"[]\")  \n  }  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55be10de92aad5ef28000023":[{"id":287054,"user_id":53,"body":"checkChoose <- function(m, n) {\n  res <- 1\n  i <- 0\n  while (i <= n) {\n    if (res == m) {\n      return(i)\n    }\n    res <- res * (n - i) \/ (i + 1)\n    i <- i + 1\n  }\n  return(-1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287055,"user_id":492,"body":"checkChoose <- function(m, n) {\n    for(i in 0:n) {\n        if(m == choose(n, i))\n            return(i)\n    } \n    return(-1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287056,"user_id":null,"body":"#' Finds suitable \"x\" in a formula m = n! \/ (x! * (n - x)!).\n#'\n#' @param m double; integer\n#' The number of posters to design.\n#' @param n double; integer\n#' The total number of available colours.\n#'\n#' @return double; integer\n#' 0 or -1 if choices are not possible;\n#' >= 0 otherwise.\n#' @export\n#'\n#' @examples\ncheckChoose <- function(m, n) {\n  if (m == 1 & m != n) {\n    return(0)\n  }\n  # Precision value for epsilon.\n  pow = 1\n  if (log1p(m) >= 30) {\n    pow = 0.4\n  }\n  x = 1\n  res = -1\n\n  # Finds solution by trying out combinations. Haha!\n  while (x <= n) {\n    calc = factorial(n) \/ (factorial(x) * factorial(n - x))\n    check = all.equal.numeric(\n      calc, m,\n      tolerance = .Machine$double.eps^pow)\n    # Converts \"check\" to logical TRUE \/ FALSE.\n    check = ifelse(test = check == TRUE, yes = TRUE, no = FALSE)\n    if (check) {\n      res = x\n      break\n    }\n    x = x + 1\n  }\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287057,"user_id":null,"body":"checkChoose <- function(m, n) {\n  # Returns integer value of the smallest k that satisfies: n choose k = m\n  #\n  # Args:\n  #  m: a numeric value, the number of combinations needed\n  #  n: a numeric value, the number of choices available\n  \n  # Create a vector of possible k values, test if the satisfy the equation\n  k <- 0:(n %\/% 2L)\n  m.test <- choose(n, k) == m\n  \n  # Extract and return the k that satisfies, if none return -1\n  x <- k[m.test]\n  ifelse(length(x) == 0L, -1L, x)\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287058,"user_id":null,"body":"checkChoose <- function(m, n) {\n  # Returns integer value of the smallest k that satisfies: n choose k = m\n  #\n  # Args:\n  #  m: a numeric value, the number of combinations needed\n  #  n: a numeric value, the number of choices available\n  \n  # Create a vector of possible k values, test if the satisfy the equation\n  k <- 0:(n %\/% 2L)\n  m.test <- choose(n, k) == m\n  \n  # If none do then return -1, otherwise return the k that does\n  if(sum(m.test) == 0L) return(-1L)\n  k[which(m.test)]\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287059,"user_id":null,"body":"checkChoose <- function(m, n)if(!m %in% choose(n,1:n))return(-1) else return(which(choose(n,1:n)==m)[1])","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287060,"user_id":669,"body":"checkChoose <- function(m, n) {\n  x <- which(choose(n, 1:n) == m)\n  if (length(x) > 0) x[1] else -1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287061,"user_id":null,"body":"checkChoose <- function(m, n) {\n  bottom <- 0:ceiling(n\/2)\n  top <- rep(n, ceiling(n\/2))\n  seq <- choose(top, bottom)\n  if (is.element(m, seq))\n    which(m==seq)[1]-1\n  else\n    -1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287062,"user_id":null,"body":"checkChoose <- function(m, n) {\n    x = 0\n    while(x < n){\n      mtemp = choose(n,x)\n      if(mtemp == m){return(x)}\n      x = x+1\n    }\n    return(-1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287063,"user_id":null,"body":"checkChoose <- function(m, n) {\n    check=choose(n,1:ceiling(n\/2)) ==  m\n    if(n==0){return(0)}\n    if(any(check)){return((1:n)[which(check)[1]])}else{return(-1)}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55c04b4cc56a697bb0000048":[{"id":287064,"user_id":null,"body":"scramble <- function(s1, s2){\n  all(table(factor(unlist(strsplit(s2,\"\")), levels = letters)) <= table(factor(unlist(strsplit(s1,\"\")), levels = letters)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287065,"user_id":null,"body":"scramble <- function(s1, s2){\n  l1 <- table(unlist(strsplit(s1, \"\")))\n  l2 <- table(unlist(strsplit(s2, \"\")))\n  isTRUE(all(l1[names(l2)] >= l2))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287066,"user_id":null,"body":"#' Returns TRUE if characters in \"s1\" can be\n#' rearranged to match \"s2\", FALSE otherwise.\n#'\n#' @param s1 character; string\n#' @param s2 character; string\n#'\n#' @return logical\n#' TRUE or FALSE\n#' @export\n#'\n#' @examples\nscramble <- function(s1, s2){\n  # Character frequency tables.\n  df1 = data.frame(table(strsplit(s1, split = \"\")))\n  df2 = data.frame(table(strsplit(s2, split = \"\")))\n  # Selects characters in \"s1\" that are also in \"s2\".\n  test_df = df1[df1$Var1 %in% df2$Var1, ]\n\n  if (nrow(test_df) != nrow(df2)) {\n    return(FALSE)\n  }\n  res = all(test_df$Freq >= df2$Freq)\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287067,"user_id":null,"body":"scramble <- function(s1, s2) {\n  if(length(s1 > 1)) s1 <- stringr::str_c(s1, collapse = \"\")\n  if(length(s2 > 1)) s2 <- stringr::str_c(s2, collapse = \"\")\n  all(stringr::str_count(s1, letters) >= stringr::str_count(s2, letters))\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287068,"user_id":null,"body":"scramble <- function(s1, s2) {\n  c1 <- table(factor(unlist(strsplit(s2, \"\")), levels = letters))\n  c2 <- table(factor(unlist(strsplit(s1, \"\")), levels = letters))\n  all(c1 <= c2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287069,"user_id":null,"body":"scramble <- function(s1, s2){\n  a1 <- table(factor(unlist(strsplit(s1, \"\"))))\n  a2 <- table(factor(unlist(strsplit(s2, \"\"))))\n  isTRUE(all(a1[names(a2)] - a2 >= 0))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287070,"user_id":null,"body":"scramble <- function(s1, s2){\n  s1 <- table(unlist(strsplit(s1, split = \"\")))\n  s2 <- table(unlist(strsplit(s2, split = \"\")))\n  ifelse(is.na(all(s1[names(s2)] >= s2)), FALSE, all(s1[names(s2)] >= s2))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287071,"user_id":null,"body":"scramble <- function(s1, s2){\n  astr =unlist(strsplit(s1,\"\"))\n  bstr = unlist(strsplit(s2,\"\"))\n  allchar = unique(c(astr,bstr))\n  check=table(factor(astr,levels=allchar)) - table(factor(bstr,levels=allchar))\n  all(check >= 0)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287072,"user_id":null,"body":"scramble <- function(s1, s2){\n  t1 <- table(strsplit(s1, \"\")[[1]])\n  t2 <- table(strsplit(s2, \"\")[[1]])\n  res <- all(t2<=t1[names(t2)])\n  if(is.na(res)) res <- FALSE\n  res\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287073,"user_id":null,"body":"scramble <- function(s1, s2){\nchars <- function(s) unlist(strsplit(s, \"\"))\nall(unique(chars(s2)) %in% unique(chars(s1))) && all(table(chars(s1))[names(table(chars(s2)))] - table(chars(s2)) >= 0)}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55c45be3b2079eccff00010f":[{"id":287074,"user_id":null,"body":"order <- function(s){\n  l <- unlist(strsplit(s, \" \"))\n  names(l) <- as.numeric(gsub(\"[[:alpha:]]\", \"\", l))\n  paste(l[order(names(l))], collapse = \" \")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287075,"user_id":null,"body":"order <- function(sentence){\n  w <- unlist(strsplit(sentence, \" \"))\n  paste(w[order(gsub(\"\\\\D\", \"\", w))], collapse = \" \")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287076,"user_id":null,"body":"library(stringr)\norder <- function(sentence){\n  paste(str_split(sentence, \" \")[[1]][order(as.numeric(str_extract_all(\n    sentence, \"\\\\d\")[[1]]))], collapse = \" \")\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287077,"user_id":null,"body":"order <- function(sentence){\n  c = utf8ToInt(sentence)\n  indeces = order(c[(c >= 48) & (c <= 57)])\n  \n  sentence_split = strsplit(sentence, \" \")\n  \n  result = c()\n\n  for(index in indeces) {\n    result = append(result, sentence_split[[1]][index])\n  }\n  \n  return(paste(result, collapse=\" \"))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287078,"user_id":null,"body":"order <- function(sentence){\n  sentence_to_words <- strsplit(sentence, \" \")[[1]]\n  numbers_in_words <- as.numeric(gsub(\"[A-Za-z]\", \"\", sentence_to_words))\n  names(numbers_in_words) <- sentence_to_words\n  sorted_words <- names(sort(numbers_in_words))\n  paste(sorted_words, collapse = \" \")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287079,"user_id":null,"body":"order <- function(sentence){\n  if (sentence != \"\"){\n    words.new <- c()\n    words.new[as.integer(grep(\"[0-9]\", strsplit(sentence, split = \"\")[[1]], value=T))] <- strsplit(sentence, split = \" \")[[1]]\n    paste0(words.new, collapse = \" \")\n  }else{\n    return(\"\")\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287080,"user_id":null,"body":"order <- function(sentence){\n  words <- strsplit(sentence, \" \")[[1]] %>%\n    setNames(., stringr::str_extract(., \"[0-9]\"))\n  paste(words[order(names(words))], collapse = \" \")\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287081,"user_id":null,"body":"order <- function(sentence){\n  sentence = unlist(strsplit(sentence, \" \"))\n  ord = as.numeric(unlist(gsub(\"[^ 0-9]\", \"\", sentence)))\n  return(paste(sentence[order(ord)], collapse = ' '))\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287082,"user_id":null,"body":"library(stringr)\nlibrary(stringi)\n\norder <- function(s){\n  if (s ==\"\"){\n    return(\"\")\n  } else {\n    s <- str_split(s, \" \", simplify = T)\n    s <- s[order(as.numeric(unlist(str_extract_all(s, \"[0-9]\"))))]\n    return(paste0(s, collapse = \" \"))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287083,"user_id":null,"body":"## Your order, please\n\nlibrary(tidyverse)\nlibrary(testthat)\n\n\n#' @title \u5355\u8bcd\u91cd\u6392\u5e8f\n#' @description \u53e5\u5b50\u5404\u5355\u8bcd\u4e2d\u542b\u6570\u5b57\uff0c\u6309\u7167\u6570\u5b57\u7684\u987a\u5e8f\u5bf9\u5355\u8bcd\u91cd\u6392\u5e8f\n#' @param sentence \u5b57\u7b26\u4e32\n#' @return \u5b57\u7b26\u4e32\norder <- function(sentence) {\n  words <- sentence %>%\n    str_split(\" \") %>%\n    unlist()\n\n  numbers <- words %>%\n    map_dbl(readr::parse_number)\n\n  words[order(numbers)] %>% str_c(collapse = \" \")\n}\n\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55c6126177c9441a570000cc":[{"id":287084,"user_id":null,"body":"order_weight <- function(st) {\n  s <- as.character(sort(unlist(strsplit(st, ' '))))\n  w <- sapply(s, function(x) sum(sapply(unlist(strsplit(x, '')), as.double)))\n  paste0(s[order(w, s)], collapse = ' ')\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287085,"user_id":492,"body":"order_weight <- function(st) {\n  digitSum <- function(n) {\n    sum((function(x) (floor(x \/ 10^(0:(nchar(x) - 1))) %% 10))(n))\n  }\n  if (nchar(st) == 0) return(\"\")\n  fs <- strsplit(st, \" \")[[1]]\n  f <- as.numeric(fs)\n  res <- mapply(digitSum, f)\n  c <- data.frame(we = res, value = fs)\n  u <- c[with(c, order(we, value)), ]\n  paste(u$value, collapse=\" \")\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287086,"user_id":null,"body":"#' Returns a string of numbers ordered by\n#' their weight (sum of digits).\n#'\n#' @param st character; string\n#' String that includes numbers.\n#'\n#' @return character; string\n#' String of numbers that is ordered by\n#' their weight and then by number character value.\n#' @export\n#'\n#' @examples\norder_weight <- function(st) {\n  # Detects digits locations.\n  str_matches = gregexpr(\"[[:digit:]]+\", st)\n  str_vec = regmatches(st, str_matches)[[1]]\n  num_weights = sapply(str_vec, function(x) {\n    sum(as.numeric(strsplit(x, split = \"\")[[1]]))\n  })\n  # Orders by rank and then by alphabetic value.\n  num_ordered = names(num_weights[order(num_weights, str_vec)])\n  res = paste(num_ordered, collapse = \" \")\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287087,"user_id":null,"body":"order_weight <- function(st) {\n  \n  if(st == \"\") {return(st)} #check for null string\n  \n  s <- strsplit(st, \" \")\n  s1 <- strsplit(s[[1]], \"\") #get all digits separated\n  s2 <- lapply(s1, as.numeric) #turn digits into numeric\n  s3 <- unlist(lapply(s2, sum)) #add all the digits and return as a vector\n  \n  df <- data.frame(unlist(s), s3)\n  newDf <- df[order(df$unlist.s.), ] #put 'alphabetically' in case duplicate weights\n  newNewDf <- newDf[order(newDf$s3), ] #sort by weights\n  newOrder <- newNewDf$unlist.s. #put the sorted original numbers in a vector\n  \n  ans <- paste(newOrder, collapse = \" \") #collapse to one string\n  return(ans)\n  \n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287088,"user_id":null,"body":"order_weight <- function(w) {\n  ws <- unlist(strsplit(w, \" +\"))\nscore <- vapply(strsplit(ws, \"\"),\n       function(x) sum(as.integer(x)),\n       integer(1))\npaste(ws[order(score, ws)], collapse = \" \")\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287089,"user_id":669,"body":"order_weight <- function(st) {\n  nu <- strsplit(as.character(st), \" \")[[1]]\n  \n  wg <- sapply(strsplit(nu, \"\"), function(x) sum(as.numeric(x)))\n  \n  paste(nu[order(wg, nu)], collapse = \" \")\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287090,"user_id":null,"body":"order_weight <- function(str) {\n  \n  s <- strsplit(str, \" \")[[1]]\n  chr_lst <- strsplit(s, \"\")\n  scores <- sapply(chr_lst, function(x) sum(as.integer(x)))\n  res <- s[order(scores, s)]\n  paste0(res, collapse = \" \") \n  \n}\n\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287091,"user_id":null,"body":"order_weight <- function(st) {\nb=sort(unlist(strsplit(st, \"\\\\s+\")))\nif(length(b)==0){return(st)}\nelse{\nc=sapply(b,function(x)strsplit(x,\"\"))\nd=unlist(lapply(c,function(x)sum(as.numeric(x))))\ne=names(d)[order(d)]\nf=paste(e, collapse = ' ')\nreturn(f)\n}}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287092,"user_id":785,"body":"order_weight <- function(s) {\n   numbers <- strsplit(trimws(s),\" \")[[1]]\n   numbers <- numbers[order(numbers)]\n   mod_weight <- sapply(sapply(strsplit(numbers,\"\"),  as.numeric), sum)\n   paste(numbers[order(mod_weight)], collapse = \" \")\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287093,"user_id":null,"body":"order_weight <- function(st) {\n  x <- find_numbers(st)\n  a <- order(sapply(x, find_weights))\n  paste0(x[a], collapse = \" \")\n}\n\nfind_numbers <- function (n) as.numeric(sort(unlist(strsplit(n, split = \" \"))))\nfind_weights <- function (n) sum(as.numeric(unlist(strsplit(as.character(n), split = \"\"))))\n  ","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55cb632c1a5d7b3ad0000145":[{"id":287094,"user_id":421,"body":"hoop_count <- function(n){\n  ifelse(n >= 10, \"Great, now move on to tricks\", \"Keep at it until you get it\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287095,"user_id":50,"body":"hoop_count <- function(n){\n  ifelse(n<10,\"Keep at it until you get it\",\"Great, now move on to tricks\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287096,"user_id":null,"body":"hoop_count <- function(n){\n c(\"Keep at it until you get it\",\"Great, now move on to tricks\")[1+(n>=10)]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287097,"user_id":null,"body":"hoop_count <- function(n){\n  if (n<10){\n    print(\"Keep at it until you get it\")\n  } else{\n    print(\"Great, now move on to tricks\")\n  } \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287098,"user_id":null,"body":"hoop_count <- function(n){\n g <- \"Keep at it until you get it\"\n  b <- \"Great, now move on to tricks\"\nif (n < 9){\nprint(g)\n}else{\nprint(b)\n}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287099,"user_id":null,"body":"hoop_count <- function(n){\n  if (n<10) {\n    return( \"Keep at it until you get it\" )\n  } else {\n    return( \"Great, now move on to tricks\" )\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287100,"user_id":null,"body":"hoop_count <- function(n){\n  library(dplyr)\n  case_when(n >= 10 ~ \"Great, now move on to tricks\",\n           TRUE ~ \"Keep at it until you get it\")\n \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287101,"user_id":null,"body":"hoop_count <- function(n){\n if (n>=10)\n   print(\"Great, now move on to tricks\")\n else if (n<10)\n   print(\"Keep at it until you get it\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287102,"user_id":null,"body":"hoop_count <- function(n){\n \n  return(ifelse(n<10,\"Keep at it until you get it\", \"Great, now move on to tricks\"))\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287103,"user_id":null,"body":"hoop_count <- function(n){\n  if(n>=10){\n    res=\"Great, now move on to tricks\"\n  }else{\n    res=\"Keep at it until you get it\"\n  }\n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55cbc3586671f6aa070000fb":[{"id":287104,"user_id":645,"body":"check_for_factor <- function(base, factor) base %% factor == 0","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287105,"user_id":null,"body":"check_for_factor <- function(base, factor) {\n  0 == base %% factor\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287106,"user_id":null,"body":"check_for_factor <- function(base, factor) {\n  return(ifelse(factor %% base == 0 || base %% factor == 0, TRUE, FALSE))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287107,"user_id":null,"body":"\n\ncheck_for_factor <- function(base, factor) {\n  x <- base%%factor\n  if (x>0){\n    return(FALSE)\n  }\n  else return(TRUE)\n}\ncheck_for_factor(10,2)\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287108,"user_id":null,"body":"check_for_factor <- function(base, factor) {\n  result <- if(get_remainder(base,factor)==0) TRUE else FALSE\n}\nget_remainder <- function(base,factor){\n  result <- if(is_positive(base)) base %% factor else 0\n  return(result)\n  \n}\nis_positive <- function(number){\n  result <- if(number >= 0) TRUE else FALSE\n  return(result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287109,"user_id":null,"body":"check_for_factor <- function(base, factor) {\n  remainder <- base%%factor\n  if (remainder >0){\n    FALSE\n  } \n  else {\n    TRUE\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287110,"user_id":null,"body":"check_for_factor <- function(base, factor) {\n  # your code here\n  if(base%%factor==0){\n    return(TRUE)\n  }else{\n    return(FALSE)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287111,"user_id":null,"body":"check_for_factor <- function(base, factor) {\n  # your code here\n  base %% factor == 0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287112,"user_id":null,"body":"check_for_factor <- function(base, factor) {\n  return(ifelse(base%%factor == 0,TRUE,FALSE))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287113,"user_id":null,"body":"check_for_factor <- function(base, factor) {\n  if (base%%factor) {\n    return(FALSE)\n  }\n  return(TRUE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55cbd4ba903825f7970000f5":[{"id":287114,"user_id":null,"body":"get_grade <- function(a, b, c) {\n  grade <- mean(c(a, b, c))\n  if (grade >= 90) { 'A' }\n  else if (grade < 90 & grade >= 80) { 'B' }\n  else if (grade < 80 & grade >= 70) { 'C' }\n  else if (grade < 70 & grade >= 60) { 'D' }\n  else if (grade < 60) { 'F' }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287115,"user_id":null,"body":"library(tidyverse)\n\nget_grade <- function(a, b, c) {\navg_score <- mean(c(a, b, c))\ncase_when(\n   avg_score >= 90 ~ 'A',\n   avg_score >= 80 ~ 'B',\n   avg_score >= 70 ~ 'C',\n   avg_score >= 60 ~ 'D',\n   avg_score <  60 ~ 'F'\n )\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287116,"user_id":null,"body":"get_grade <- function(a, b, c) {\n  score <- mean(as.c.numeric(a, b, c))\n  position <- as.integer(score \/ 10) + 1\n  grade <- substr(\"FFFFFFDCBAA\", position, position)\n  grade\n}\n\nas.c.numeric <- function(aa, bb, cc) {\n  aa <- as.numeric(aa)\n  bb <- as.numeric(bb)\n  cc <- as.numeric(cc)\n  data <- c(aa, bb, cc)\n  data\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287117,"user_id":null,"body":"get_grade <- function(a, b, c) {\n  mean <- mean(c(a, b, c))\n  if (mean < 60) \"F\"\n  else if (mean < 70) \"D\"\n  else if (mean < 80) \"C\"\n  else if (mean < 90) \"B\"\n  else \"A\"\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287118,"user_id":null,"body":"get_grade <- function(a, b, c) {\n  g <- (a+b+c)\/3\n  return(\n    ifelse(g >= 90, \"A\",\n    ifelse(g < 90 & g >= 80, \"B\",\n    ifelse(g < 80 & g >= 70, \"C\",\n    ifelse(g < 70 & g >= 60, \"D\", \"F\")))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287119,"user_id":null,"body":"get_grade <- function(a, b, c) {\n    grad = (a+b+c)\/3\n  if(grad>=90 && grad<=100){\n    res <- \"A\"\n} else if(grad>=80 && grad<90){\n  res <- \"B\"\n} else if(grad>=70 && grad<80){\n  res <- \"C\"\n} else if(grad>=60 && grad<70){\n  res <- \"D\"\n} else if(grad>=0 && grad<60){\n  res <- \"F\"\n}\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287120,"user_id":null,"body":"get_grade <- function(a, b, c) {\n    switch (EXPR=as.character(floor(mean(c(a, b, c))\/10)),\n    \"0\"=\"F\", \"1\"=\"F\",\"2\"= \"F\", \"3\"= \"F\",\"4\"= \"F\",\"5\"= \"F\",\"6\"= \"D\",\"7\"= \"C\",\"8\"= \"B\",\"9\"= \"A\",\"10\"= \"A\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287121,"user_id":null,"body":"get_grade <- function(a, b, c) {\n  m <- mean(c(a,b,c))\n  if(m ==100){\"A\"} else if(m<60){\"F\"}else{\n  LETTERS[10-(m %\/% 10)]}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287122,"user_id":null,"body":"get_grade <- function(a, b, c)\n{\n    unlist(strsplit(\"FFFFFFDCBAA\", \"\"))[floor(mean(c(a, b, c)) \/ 10) + 1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287123,"user_id":null,"body":"get_grade <- function(a, b, c) {\n  require(dplyr)\n  m <- mean(c(a,b,c))\n  case_when(\n  m < 60 ~ \"F\",\n  m < 70 ~ \"D\",\n  m < 80 ~ \"C\",\n  m < 90 ~ \"B\",\n  m <= 100 ~ \"A\",\n  TRUE ~ toString(m)\n  ) \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55d24f55d7dd296eb9000030":[{"id":287124,"user_id":645,"body":"summation <- function(n) sum(1:n)","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287125,"user_id":null,"body":"summation <- function(n) {\n  sum(seq_len(n))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287126,"user_id":527,"body":"summation <- function(n) n * (n + 1) \/ 2","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287127,"user_id":null,"body":"summation <- function(n) {\n  sum = 0\n  for(i in 1:n){\n    sum <- sum+i\n  }\n  return(sum)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287128,"user_id":null,"body":"summation <- function(n) {\n  tryCatch(\n    seq(1,n) %>% sum(),\n    error = function(e){NA},\n    warning = function(w){NA}\n  )\n}\n\n\n\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287129,"user_id":null,"body":"summation <- function(n) {\n  if(n <= 1) {\n    return(n)\n  } else {\n    return(n + summation(n-1))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287130,"user_id":null,"body":"summation <- function(n) {\n  x=seq(from=1,to=n)\n  sum(x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287131,"user_id":null,"body":"summation <- function(n) {\n  result <- sum(1:n)\n  print(result)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287132,"user_id":null,"body":"summation <- function(n) {\n  # Create a vector from 1 to n\n  vect <- 1:n\n  # Sum the whole vector\n  return(sum(vect))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287133,"user_id":null,"body":"summation <- function(n) {\n  # Returns the sum of numbers from one to n\n  #\n  # Args:\n  #   n: The input number to sum up to, a natural number\n  #\n  # Returns:\n  #   The sum of all numbers from one to n\n  \n  # Mathematical formula for sum from one to n of natural numbers\n  the.summation <- n * (n + 1) \/ 2\n  \n  return(the.summation)\n  \n}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55e2adece53b4cdcb900006c":[{"id":287134,"user_id":2334,"body":"race <- function (v1, v2, g) {\n    if (v1 < v2){\n        sec <- 3600*g\/(v2 - v1)\n        c(sec%\/%3600, sec%%3600%\/%60, as.integer(sec%%3600%%60))\n    }\n    else { c(-1, -1, -1) }\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287135,"user_id":53,"body":"race <- function (v1, v2, g) {\n  if (v1 >= v2) {\n    return(c(-1, -1, -1))\n  }\n  t <- (g * 3600) %\/% (v2 - v1)\n  h <- t %\/% 3600\n  m <- (t %% 3600) %\/% 60\n  s <- t %% 60\n  return(c(h, m, s))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287136,"user_id":null,"body":"library(lubridate)\n\nrace <- function (v1, v2, g) {\n  if (v1 >= v2) return(c(-1, -1, -1))\n  t = 3600 * g\/(v2 - v1)\n  p = seconds_to_period(t)\n  floor(c(p$hour + 24 * p$day, p$minute, p$second))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287137,"user_id":null,"body":"#' Finds the time it takes for one tortoise\n#' to catch up with another one.\n#'\n#' @param v1 double\n#' Speed in feet per hour\n#' @param v2 double\n#' Speed in feet per hour\n#' @param g double\n#' Lead in feet.\n#'\n#' @return c(-1, -1, -1); double (vector)\n#' c(-1, -1, -1) if v1 => v2.\n#' Vector  c(hour, minutes, seconds (rounded down)).\n#' @export\n#'\n#' @examples\nrace <- function (v1, v2, g) {\n  if (v1 >= v2) {\n    return(c(-1, -1, -1))\n  }\n  \n  time_sec = (g * 3600) \/ (v2 - v1)\n\n  res = c(\n    time_sec %\/% 3600,\n    time_sec %\/% 60 %% 60,\n    floor(time_sec %% 60)\n  )\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287138,"user_id":null,"body":"race <- function (v1, v2, g) {\n  if (v2 > v1){\n    t <- floor(3600 * g \/ (v2 - v1))\n    t_hour <- t %\/% 3600\n    t_minute <- (t - 3600 * t_hour) %\/% 60\n    t_second <- t - 3600 * t_hour - 60 * t_minute\n    return(c(t_hour, t_minute, t_second))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287139,"user_id":null,"body":"race <- function (v1, v2, g) {\n  if(v1 < v2) {\n    t <- g \/ (v2 - v1)\n    \n    h <- t %\/% 1\n    m <- ((t*60) - (h*60)) %\/% 1 \n    s <- ((t*60^2) - (m*60+h*60^2)) %\/% 1\n    \n    return(c(h, m, s))\n  } else {\n    return(c(-1, -1, -1))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287140,"user_id":null,"body":"race <- function (v1, v2, g) {\n  if(v1 >= v2)return(c(-1, -1, -1))\n  secs <- floor(3600*g\/(v2-v1))\n  c(secs %\/% 3600,secs %% 3600 %\/% 60,secs %% 3600 %% 60)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287141,"user_id":null,"body":"race <- function (v1, v2, g) {\n  if (v1 < v2) {\n    t <- floor(g \/ (v2 - v1) * 3600)\n    return(c(t %\/% 3600, t %% 3600 %\/% 60, t %% 60))\n  } else {\n    return(c(-1, -1, -1)) \n  }\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287142,"user_id":null,"body":"race <- function (v1, v2, g) {\n  if (v1 >= v2) { \n    c(-1, -1, -1) \n  } else {\n    hrs <- g \/ (v2 - v1)\n    h <- hrs %\/% 1\n    m <- ((hrs*60 - h*60)) %\/% 1\n    s <- ((hrs*3600 - h*3600 - m*60)) %\/% 1\n    c(h, m , s)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287143,"user_id":null,"body":"race <- function (v1, v2, g) {\n  v_diff <- v2 - v1\n  if (v_diff <= 0) {\n    return(c(-1, -1, -1))\n  }\n  time = g \/ v_diff * 60 * 60\n  hrs <- g %\/% v_diff\n  min <- time %\/% 60 %% 60\n  sec <- floor(time %% 60)\n  return(c(hrs, min, sec))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55e6f5e58f7817808e00002e":[{"id":287144,"user_id":null,"body":"seven <- function(m) {\n    steps <- 0\n    while(m > 99) {\n        m <- m %\/% 10 - m %% 10 * 2\n        steps <- steps + 1\n    }\n    return(c(m, steps))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287145,"user_id":421,"body":"seven <- function(m) {\n  count = 0\n  while (m >= 100){\n    m <- m %\/% 10 - 2 * (m %% 10)\n    count <- count + 1\n  }\n  c(m, count)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287146,"user_id":null,"body":"seven <- function(m) {\n  steps <- 0\n  while(m > 99) {\n    steps <- steps + 1\n    rest <- m %% 10\n    m <- floor(m \/ 10) - 2*rest\n  }\n  \n  return(c(m, steps))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287147,"user_id":492,"body":"seven <- function(m) {\n  cnt <- 0\n  while (m > 99) {\n    a0 <- m %% 10\n    m <- (m - a0) %\/% 10 - 2 * a0\n    cnt <- cnt + 1\n  }\n  c(m, cnt)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287148,"user_id":null,"body":"seven <- function(m) {\n  i = 0\nwhile (nchar(m) > 2) {\n\tm = floor(m\/10) - 2 * (m %% 10);\n\ti = i+1;\n\t}\nreturn(c(m,i))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287149,"user_id":null,"body":"seven <- function(m) {\n  # sets number of steps to 0\n  steps = 0\n  \n  while (m \/ 100 >= 1) {\n    # if above condition  is true, another step is needed \n    steps <- steps + 1\n    \n    # y is the last digit of the number\n    y <- m %% 10\n    # x is the remaining part after y is removed\n    x <- (m - y) \/ 10\n    \n    # change m for next iteration (if needed)\n    m <- x - 2 * y\n  }\n  \n  # return a vector of m and the steps needed\n  c(m, steps) \n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287150,"user_id":null,"body":"seven <- function(m, step=0) {\n  if (m < 100) return(c(m, step))\n  seven(m %\/% 10 - 2*(m %% 10), step+1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287151,"user_id":null,"body":"seven <- function(m) {\n  counter = 0\n  while(nchar(as.character(m)) > 2){\n  m =  floor(m\/10) - 2*(m%%10)\n  counter = counter +1 \n}\n  c(m,counter)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287152,"user_id":null,"body":"seven <- function(m) {\n  steps = 0\n  while(m > 99){\n    m = m %\/% 10 - (m %% 10) * 2\n    steps = steps + 1}\n  return (c(m, steps))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287153,"user_id":null,"body":"library(tidyverse)\nseven <- function(m) {\n  new_num <- m\n  count <- 0\n  while (nchar(new_num) > 2) {\n  str_num <- as.character(new_num) %>%\n    str_split(pattern = '') %>%\n    unlist() %>%\n    as.numeric()\n  last_num <- tail(str_num,1)\n  first_nums <- as.numeric(paste0(str_num[1:length(str_num)-1], collapse = ''))\n  new_num <- first_nums - last_num * 2\n  count <- count + 1 \n  }\n  return(c(new_num,count))\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55e7280b40e1c4a06d0000aa":[{"id":287154,"user_id":2334,"body":"choose_best_sum <- function(t, k, ls) {\n    if (k <= length(ls)){\n        s <- combn(ls, k, sum)\n        if (any(s <= t)){\n            max(s[s<=t])\n        } else {-1}\n    } else {-1}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287155,"user_id":null,"body":"choose_best_sum <- function(t, k, ls) {\n  if(length(ls) < k | sum(sort(ls)[1:k]) > t)return(-1)\n  sums <- rowSums(t(combn(ls,k)))\n  max(sums[which(sums<=t)])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287156,"user_id":null,"body":"require(combinat)\nchoose_best_sum <- function(t, k, ls) {\n    if (length(ls)>= k & k > 1) {\n        x <- combn(ls, k)\n        y <- colSums(x)\n        z <- max(y[y<=t])\n        if (!is.na(z) & !is.infinite(z)) {return(z)\n        } else {return(-1)}\n  } else if (k == 1 & min(ls)<=t & length(ls)>1){\n        n <- length(ls)\n        b <- sample(ls, n)\n        c <- max(b[b<=t])\n            if (!is.na(c) & !is.infinite(c)) {return(c)\n            } else {return(-1)}\n  } else if (k == 1 & length(ls) == 1 & ls <= t) {return(ls)\n  } else {return(-1)}}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287157,"user_id":null,"body":"choose_best_sum <- function(t, k, ls) {\n  if (k > length(ls)){\n    return(-1)\n  } \n  else\n  {\n    df <- as.data.frame(t(combn(ls, k)))\n    df$Total <- rowSums(df)\n  }\n  try(\n    return(ifelse(all(df$Total > t), -1, max(df$Total[df$Total <= t])))\n  )\n  return(-1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287158,"user_id":492,"body":"choose_best_sum <- function(t, k, ls) {\n    if (length(ls) < k) {return(-1)}\n    if (length(ls) == 1) {\n        if (ls[1] <= t) {return(ls[1])}\n        else {return(-1)}\n    }\n    a <- Filter(function (x) x <= t, combn(ls, k, function(x) sum(x), simplify=T))\n    if (length(a) > 0) {return(max(a))} else {return(-1)}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287159,"user_id":492,"body":"choose_best_sum <- function(t, k, ls) {\n    if (length(ls) < k) {return(-1)}\n    if (length(ls) == 1) {\n        if (ls[1] <= t) {return(ls[1])}\n        else {return(-1)}\n    }\n    a <- Filter(function (x) x <= t, combn(ls, k, function(x) sum(x), simplify=T))\n    if (length(a) > 0) {return(max(a))} else {return(-1)}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287160,"user_id":null,"body":"choose_best_sum <- function(t, k, ls) {\n    if(length(ls) < k){\n        -1 \n    }else{\n    if(sum(colSums(combn(ls,k)) < t) == 0){\n        -1\n    }else{\n        qualify = colSums(combn(ls,k))[(t - colSums(combn(ls,k))) >= 0]\n        max(qualify)\n    }\n}\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287161,"user_id":null,"body":"choose_best_sum <- function(t, k, ls) {\n  print(t)\n  print(k)\n  print(ls)\n    if(length(ls) < k){\n        -1 \n    }else{\n    if(sum(colSums(combn(ls,k)) < t) == 0){\n        -1\n    }else{\n        qualify = colSums(combn(ls,k))[(t - colSums(combn(ls,k))) >= 0]\n        max(qualify)\n    }\n}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287162,"user_id":null,"body":"choose_best_sum <- function(t, k, ls) {\n  print(ls)\n  print(k)\n  print(t)\n  if (length(ls)<k){\n    return(-1)\n  }\n    x<-combn(ls,k,sum)\n  x<-x[x<=t]\n  if (length(x)==0){\n    return(-1)\n  }\n  max(x)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287163,"user_id":null,"body":"choose_best_sum <- function(t, k, ls) {\n    # select every subset of length k\n    # subsetting vector is a binary with length(ls) bits, representing every number from 1 to 2^(length(ls))\n    # to increase performance, exclude all binaries where the digits don't add up to k\n    bit <- length(ls)\n    sums_of_k <- c()\n    # check if sollution is impossible\n    if (bit < k) {\n        return(-1)\n    }\n    # avoid iteating over permutations, that have less than k elements\n  print(\"beginn search\")\n    start <- paste0(c(rep(\"0\", times = bit - k), rep(\"1\", times = k)), collapse = \"\")\n    end <- paste0(c(rep(\"1\", times = k), rep(\"0\", times = bit - k)), collapse = \"\")\n    for (i in strtoi(start, 2):strtoi(end, 2)) {\n        if (sum(as.integer(intToBits(i))) == k) {\n            binary <- paste0(rev(as.integer(intToBits(i)[1:bit])), collapse = \"\")\n            select <- as.logical(as.integer(unlist(strsplit(binary, \"\"))))\n            # gather all sums of distances, that would be candidates\n            if (sum(ls[select]) <= t) {\n                sums_of_k <- c(sums_of_k, sum(ls[select]))\n            }\n        }\n    }\n    if (length(sums_of_k) == 0) {\n        return(-1)\n    } else {\n        return(max(sums_of_k))\n    }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55e86e212fce2aae75000060":[{"id":287164,"user_id":492,"body":"prod2sum <- function(a, b, c, d) {\n    m <- b * c - a * d\n    u <- a * c + b * d\n    v <- b * d - a * c\n    n <- a * d + b * c\n    arr <- sort(abs(c(m, u, v, n)))\n    if (arr[1] == arr[2]) res <- list(c(arr[1], arr[4])) else res <- list(c(arr[1], arr[4]), c(arr[2], arr[3]))\n    res\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287165,"user_id":null,"body":"# prod2sum returns a list\nprod2sum <- function(a, b, c, d) {\n  One_list <- abs(c(a*c+b*d,a*c-b*d,\n                a*d+b*c,a*d-b*c))\n  mid <- (a**2+b**2)*(c**2+d**2)\n  \n  woyaode_list <- list()\n\n  for (i in 0:floor(sqrt(mid))) {\n    mmid <- floor(sqrt(mid-i**2))\n    if(mmid == sqrt(mid-i**2) && mmid >= i && i %in% One_list && mmid %in% One_list){\n      woyaode_list <- append(woyaode_list,list(c(i,mmid)))\n    }\n  }\n  return(woyaode_list)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287166,"user_id":null,"body":"prod2sum <- function(a, b, c, d) {\n  n <- (a^2+b^2)*(c^2+d^2)\n  cand <- sort(unique(abs(c(a*c+b*d,a*c-b*d,a*d+b*c,a*d-b*c))))\n  res <- cand[which(cand^2 %in% (n-cand^2))]\n  res <- rbind(res,sqrt(n-res^2))\n  res <- matrix(res[,which(res[1,] <= res[2,])],nrow=2)\n  lapply(1:ncol(res),function(x)unname(res[1:2,x]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287167,"user_id":null,"body":"sums <- function(w,x,y,z){\n  r <- c()\n  r <- c(r,abs(w*x+y*z))\n  r <- c(r,abs(w*x-y*z))\n  r <- c(r,abs(y*z-w*x))\n}\nprod2sum <- function(a, b, c, d) {\n    r <- c( sums(a,b,c,d) )\n    r <- c( r,sums(a,c,b,d) )\n    r <- c( r,sums(a,d,b,c) )\n    r <- unique(sort(r))\n    \n    result <- c()\n    for (i in r)\n      for (j in r)\n        if (i**2 + j**2 == ((a**2 + b**2) * (c**2 + d**2)) )\n          result <- c(result,list(sort(c(i,j))))\n    if (is.null(result)) list(c(0,0)) else unique(result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287168,"user_id":669,"body":"prod2sum <- function(a, b, c, d) {\n  n <- (a^2 + b^2) * (c^2 + d^2)\n  \n  e <- c(a*b + c*d, a*c + b*d, a*d + b*c,\n         a*b - c*d, a*c - b*d, a*d - b*c)\n  e <- c(e, -e)\n  f <- e\n  \n  ef <- expand.grid(e = e, f = f)\n  ef <- ef[ef$e <= ef$f & ef$e >= 0,]\n  \n  ok <- ef[ef$e ^ 2 + ef$f ^ 2 == n,]\n  ok <- ok[!duplicated(ok),]\n  ok <- ok[order(ok$e, ok$f),]\n  ok <- as.matrix(ok)\n\n  setNames(split(ok, row(ok)), NULL)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287169,"user_id":null,"body":"prod2sum <- function(w, x, y, z) {\n  \n  # Calculate input combinations that will build e and f values\n  f1 <- w * y\n  f2 <- w * z\n  f3 <- x * y\n  f4 <- x * z\n  \n  # Find possible values of e and f\n  r1 <- abs(f1 + f4)\n  r2 <- abs(f2 - f3)\n  r3 <- abs(f1 - f4)\n  r4 <- abs(f2 + f3)\n  \n  # Combine the e and f values into sorted pairs\n  vec1 <- sort(c(r1, r2))\n  vec2 <- sort(c(r3, r4))\n  \n  # Return sorted lists, if duplicate only return one value\n  if(vec1[1] == vec2[1]) return(list(vec1))\n  if(vec1[1] < vec2[1]) return(list(vec1, vec2))\n  list(vec2, vec1)\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287170,"user_id":null,"body":"prod2sum <- function(a, b, c, d){\n  e1 <- a*c + b*d\n  f1 <- a*d + b*c\n  \n  e2 <- a*c + b*d\n  f2 <- a*d - b*c\n  \n  e3 <- a*c - b*d\n  f3 <- a*d + b*c\n  \n  e4 <- a*c - b*d\n  f4 <- a*d - b*c\n  \n  e5 <- a*d + b*c\n  f5 <- a*c + b*d\n  \n  e6 <- a*d + b*c\n  f6 <- a*c - b*d\n  \n  e7 <- a*d - b*c\n  f7 <- a*c + b*d\n  \n  e8 <- a*d - b*c\n  f8 <- a*c - b*d\n  \n  ref <- (a^2 + b^2) * (c^2 + d^2)\n  \n  pres <- list(s1 = c(e1, f1),s2 = c(e2, f2),s3 = c(e3, f3),\n               s4 = c(e4, f4),s5 = c(e5, f5),s6 = c(e6, f6),\n               s7 = c(e7, f7),s8 = c(e8, f8))\n  cal <- lapply(pres, FUN=function(x){sum(x^2)})\n  match <- pres[cal==ref]\n  match <- unique(lapply(match, FUN = function(x){sort(abs(x))}))\n  so <- sapply(match, function(x){x[1]})\n  o <- order(so)\n  return(match[o])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287171,"user_id":null,"body":"# prod2sum returns a list\nprod2sum <- function(a, b, c, d) {\n  n <- (a ** 2 + b ** 2) * (c ** 2 + d ** 2)\n  comb <- c()\n  comb[1] <- a * d - b * c\n  comb[2] <- a * c + b * d\n  comb[3] <- a * d + b * c\n  comb[4] <- a * c - b * d\n  comb[5] <- b * c - a * d\n  comb[6] <- b * d - a * c\n  comb[7] <- (-1) * a * c + (-1) * b * d\n  comb[8] <- (-1) * a * d + (-1) * b * c\n  k <- 1\n  l <- list()\n  tol = 1\n  for(i in 1:8) {\n    for(j in 1:8) {\n      if ((comb[i] >= 0) & (comb[j] >= 0)) {\n        if (abs((comb[i] ** 2) + (comb[j] ** 2) - n) <= tol) {\n          l[[k]] <- sort(c(comb[i], comb[j]))\n          k <- k + 1\n        }\n      }\n    }\n  }\n  l <- unique(l)\n  if(length(l) == 2) {\n    if(l[[1]][1] > l[[2]][1]) {\n      tmp <- l[[1]]\n      l[[1]] <- l[[2]]\n      l[[2]] <- tmp\n    }\n  }\n  return(l)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287172,"user_id":null,"body":"# prod2sum returns a list\nprod2sum <- function(a, b, c, d) {\n      a <- abs(a)\n      b <- abs(b)\n      c <- abs(c)\n      d <- abs(d)\n\n      m <- abs( a*c - b*d)\n      n <- abs ( b*c + a*d)\n      p <- abs ( a*d - b*c )\n      q <- abs ( a*c + b*d )\n      \n      if (m > n) {m <- m+n; n <- m-n; m <- m-n} \n      if (p > q) {p <- p+q; q <- p-q; p <- p-q} \n      \n      if ( m > p)  return(list( c(p,q), c(m,n) ))\n      if ( m < p)  return(list( c(m,n), c(p,q) ))\n      if ( m == p) return(list(c(m,n)))\n\n# print(c(a, b, c, d))\n#     n <- (a^2 + b^2) * (c^2 + d^2)\n#     res <- list()\n#     max <- floor(sqrt(n\/2))\n#     z <- 1\n#     for (i in 1:max){  \n#       if ( sqrt(n - i^2) %% 1 == 0 ) {res[[z]] <- c(i, sqrt(n - i^2)); z <- z + 1}\n#     }\n#     print(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287173,"user_id":null,"body":"prod2sum <- function(a, b, c, d) {\n  ret <- list()\n  possibilities <- sort(unlist(Map(`abs`, c(a*c + b*d, a*c - b*d, b*c + a*d, b*c - a*d))))\n  for (i in 1:(length(possibilities)-1)) {\n    for (j in (i+1):length(possibilities)) {\n      x <- possibilities[i]; y <- possibilities[j]\n      if ((x*x + y*y) == (a*a + b*b) * (c*c + d*d))\n        ret <- append(ret, list(c(x,y)))\n    }\n  }\n  unique(ret)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55efecb8680f47654c000095":[{"id":287174,"user_id":null,"body":"int_rac <- function(n, x) {\n  e = 1\n  count = 1;\n  while(e>=1){\n    x = floor((x + n\/x) \/2);\n    e = x^2 - n\n    count = count+1\n  }\n  return(count)  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287175,"user_id":2584,"body":"int_rac <- function(n, guess) {\n  num_steps <- 0\n  curr_guess <- guess\n  repeat {\n    prev_guess <- curr_guess\n    curr_guess <- floor((prev_guess + n \/ prev_guess) \/ 2)\n    num_steps <- num_steps + 1\n    if (abs(prev_guess - curr_guess) < 1) {\n      return(num_steps)\n    }\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287176,"user_id":53,"body":"int_rac <- function(n, m) {\n  go(n, m, 1)\n}\n\ngo <- function(n, m, k) {\n  p <- floor((m + n \/ m) \/ 2)\n  ifelse(abs(m - p) < 1, k, go(n, p, k + 1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287177,"user_id":null,"body":"int_rac <- function(n, guess) {\n  x <- guess\n  steps <- 0\n  while (TRUE) {\n    y <- (x + n %\/% x) %\/% 2\n    steps <- steps + 1\n    if (x == y) {\n      return(steps)\n    }\n    x <- y\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287178,"user_id":null,"body":"int_rac <- function(n, guess, k=0) {\n  newg <- floor((guess + n\/guess) \/ 2)\n  if (abs(guess-newg) < 1) return(k+1)\n  return(int_rac(n, newg, k+1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287179,"user_id":null,"body":"int_rac <- function(n, guess) {\n  i <- 1\n  while(abs(n - guess^2) > 1) {\n    if(guess == (guess + n \/ guess) %\/% 2) break\n    guess <- (guess + n \/ guess) %\/% 2\n    i <- i + 1\n  }\n  i\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287180,"user_id":null,"body":"int_rac <- function(n, guess) {\n  v = guess\n  i = 2\n  v[i] = floor( (v[i-1] + n \/ v[i-1]) \/ 2 )\n  \n  while ( abs( v[i] - v[i-1] ) > 1 ){\n    i = i+1\n    v[i]=floor( (v[i-1] + n \/ v[i-1]) \/ 2 )\n    \n  }\n  if (v[i-1] == v[i]){\n    return( i-1 )\n  } else{\n    return(i)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287181,"user_id":null,"body":"int_rac <- function(n, guess) {\n  old_guess<- -1\n  i<-0\n  while(abs(guess-old_guess)>=1){\n    i<-i+1\n    old_guess <- guess\n    guess<-(guess+n\/guess)%\/%2\n  }\n  return(i)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287182,"user_id":null,"body":"int_rac <- function(n, guess) {\nm=1\nwhile(abs(floor((n\/guess+guess)\/2)-guess)>=1){\nguess=floor((n\/guess+guess)\/2)\nm=m+1}\nreturn(m)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287183,"user_id":null,"body":"int_rac <- function(n, guess) {\n  out = c(guess)\n  newguess = 0\n  while (TRUE) {\n    newguess = (guess + n \/ guess) %\/% 2\n    \n    if (guess == newguess) {\n      break\n    }\n    \n    guess = newguess\n    out = c(out, guess)\n  }\n\n  return(length(out))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55f2b110f61eb01779000053":[{"id":287184,"user_id":527,"body":"get_sum <- function(a, b) {\n  sum(a:b)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287185,"user_id":null,"body":"get_sum <- function(a, b){\n  sum(min(a,b):max(a, b))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287186,"user_id":null,"body":"get_sum <- function(a, b){\n  if (a == b) return(a)\n  \n  sum(seq(min(c(a,b)), max(c(a,b))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287187,"user_id":null,"body":"get_sum <- function(a, b){\n  if (a > b) {\n    temp <- b\n    b <- a\n    a <- temp\n  }\n  sum(seq(a, b))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287188,"user_id":null,"body":"get_sum <- function(a, b){\n  #good luck!\n  if(a == b) {\n    return(a)\n  }\n  return(sum(c(min(a,b):max(a,b))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287189,"user_id":null,"body":"get_sum <- function(a, b){\n  c <- max(a,b)\n  d <- min(a,b)\n  ((c+d)*(c-d+1))\/2\n}\n\n#a   +  a+1 .. + b-1 + b = X\n#b   +  b-1 .. + a+1 + a = X\n#(a+b) * (b-a+1)\/2\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287190,"user_id":null,"body":"get_sum <- function(a, b){\n  #good luck!\n  return(sum(a:b))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287191,"user_id":null,"body":"get_sum <- function(a, b){\n  sum(seq.int(a,b))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287192,"user_id":null,"body":"get_sum <- function(a, b){\n  if (a!=b & a>b){\n    sum(a:b)\n  } else if (a!=b & a<b){\n    sum(b:a)\n  } else if (a==b){a}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287193,"user_id":null,"body":"get_sum <- function(a, b){\n  if (a<b) {c <-c(a:b)} else\n    {if (b<a) {c<- c(b:a)} else\n      c <- a}\n     sum(c)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55f3da49e83ca1ddae0000ad":[{"id":287194,"user_id":492,"body":"tankVol <- function(h, d, vt) {\n    theta <- acos(1 - h \/ (d \/ 2)) * 2\n    as.integer(floor((0.5 * (theta - sin(theta)) \/ pi) * vt))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287195,"user_id":53,"body":"tankVol <- function(h, d, vt) {\n  n <- acos(1.0 - h \/ (d \/ 2.0)) * 2.0\n  m <- floor(vt * (n - sin(n)) \/ (2.0 * pi))\n  m\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287196,"user_id":null,"body":"tankVol <- function(h, d, vt)floor(acos(2*(d\/2-h)\/d)*vt\/pi-vt*(d\/2-h)*sqrt(d**2\/4-(d\/2-h)**2)\/(pi*d**2\/4))","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287197,"user_id":527,"body":"tankVol <- function(h, d, vt) {\n    r = 0.5 * d\n    sectionArea = r ^ 2 * acos(1 - h \/ r) - (r - h) * sqrt(h * (d - h))\n    fullSectionArea = pi * r ^ 2\n    floor(vt * sectionArea \/ fullSectionArea)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287198,"user_id":492,"body":"tankVol <- function(h, d, vt) {\n    theta <- acos(1 - h \/ (d \/ 2)) * 2\n    as.integer(floor((0.5 * (theta - sin(theta)) \/ pi) * vt))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287199,"user_id":null,"body":"tankVol <- function(h, d, vt) {\n  pi = 3.141592\n  th <- acos(1 - (2 * h \/ d))\n  floor(vt * (th - sin(th) * cos(th)) \/ pi)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287200,"user_id":null,"body":"tankVol <- function(h, d, vt) {\n  r<-d*.5\n  l<-vt\/(pi*r^2)\n  if (h<=r){\n    t<-2*acos((r-h)\/r)\n    a<-.5*r^2*(t-sin(t))\n    floor(a*l)\n  }\n  else{\n    t<-2*acos((h-r)\/r)\n    a <- (.5*r^2*(t-sin(t)))\n    floor(vt-a*l)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287201,"user_id":null,"body":"tankVol <- function(h, d, vt) {\nR <- d\/2\nc <- vt\/(pi*R**2)\nif(h >= R){\n  A <- 2*acos((R-(d-h))\/R)\n  Y_area <- (A\/(2*pi))*(pi*R**2) - sqrt((R**2-(R-(d-h))**2))*(R-(d-h))\n  area <- pi*R**2 - Y_area\n  VV <- floor(area*c)\n}else{\n  A <- 2*acos((R-h)\/R)\n  area <- (A\/(2*pi))*(pi*R**2) - sqrt((R**2-(R-h)**2))*(R-h)\n  VV <- floor(area*c)\n}\nreturn(VV)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287202,"user_id":null,"body":"tankVol <- function(h, d, vt) {\n  r <- d\/2\n  l <- vt\/(pi * r^2)\n  thetha <- 2 * acos(((r-h)\/r))\n  volumeseg <- (1\/2)* r^2 *(thetha - sin(thetha))*l\n  print(floor(volumeseg))\n  \n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287203,"user_id":null,"body":"tankVol <- function(h, d, vt) {\n  r <- d\/2\n  l <- vt\/(pi*r^2)\n  area_part <- r^2 * acos((r-h)\/r) - (r-h)*sqrt(2*r*h - h^2)\n  vol_liquid <- area_part*l\n  return(floor(vol_liquid))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55f73be6e12baaa5900000d4":[{"id":287204,"user_id":527,"body":"goals <- function(la_liga_goals, copa_del_rey_goals, champions_league_goals) {\n  la_liga_goals + copa_del_rey_goals + champions_league_goals\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-02 20:19:29"},{"id":287205,"user_id":null,"body":"goals <- function(...) {\n  sum(c(...))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287206,"user_id":669,"body":"goals <- sum","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287207,"user_id":645,"body":"goals <- function(a, b, c) a + b + c","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287208,"user_id":null,"body":"goals <- function(la_liga_goals, copa_del_rey_goals, champions_league_goals) {\n sum(la_liga_goals,copa_del_rey_goals,champions_league_goals) # your code here\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287209,"user_id":null,"body":"goals <- function(ll, cdr, cl) {\n  ll + cdr + cl\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287210,"user_id":null,"body":"goals <- function(la_liga_goals, copa_del_rey_goals, champions_league_goals) {\n  # your code here\n  la_liga_goals + copa_del_rey_goals + champions_league_goals\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287211,"user_id":null,"body":"goals <- function(la_liga_goals, copa_del_rey_goals, champions_league_goals) {\n  sum(la_liga_goals,copa_del_rey_goals,champions_league_goals)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287212,"user_id":null,"body":"goals <- function(la_liga_goals, copa_del_rey_goals, champions_league_goals) {\n  g <- (la_liga_goals + copa_del_rey_goals+ champions_league_goals)\n  return(g)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287213,"user_id":null,"body":"goals <- function(a, b, c) {\n  return(sum(c(a,b,c)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55f9b48403f6b87a7c0000bd":[{"id":287214,"user_id":null,"body":"paperwork <- function(n, m){\n  ifelse(n > 0 && m > 0, n * m, 0)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287215,"user_id":null,"body":"paperwork <- function(n, m){\n  return(ifelse(n < 0 | m < 0, 0, n*m))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287216,"user_id":null,"body":"paperwork <- function(n, m){\n  p <- n * m # multiply number of classmates with number of pages\n  ifelse(n < 0 | m < 0, 0, p) # reutrn total number of pages (p) only if none of the arguments is negative\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287217,"user_id":null,"body":"paperwork <- function(n, m){\n  if (n < 0 | m < 0) {0}\n  else{\n  pages <- n * m\n    }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287218,"user_id":null,"body":"paperwork <- function(n, m){\n  return(ifelse(n <= 0 || m <= 0, 0, n*m))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287219,"user_id":null,"body":"paperwork <- function(n, m){\n  if (n < 0 | m < 0) {\n    return (0)\n  }\n  return (n * m)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287220,"user_id":null,"body":"paperwork <- function(n, m){\n  n*m*(pmin(n,m)>=0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287221,"user_id":null,"body":"paperwork <- function(n, m){\n  if ( n >= 0 & m >= 0 ) {\n    return( n * m )\n  } else {\n    return( 0 )\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287222,"user_id":null,"body":"paperwork <- function(number_classmates, number_pages) {\n  if (number_classmates >= 0 && number_pages >= 0) {\n    return(number_classmates * number_pages)\n  }\n  else {\n    return(0)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287223,"user_id":null,"body":"paperwork <- function(n, m){\n  if(n<0){n<-0}\n  if(m<0){m<-0}\n  n*m\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55f9bca8ecaa9eac7100004a":[{"id":287224,"user_id":null,"body":"past <- function(h, m, s) {\n  return(1000*(s + 60*(m + 60*h)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287225,"user_id":null,"body":"past <- function(h, m, s) {\n h1 <- h*3600000\n m1 <- m*60000\n s1 <- s*1000\n print(h1+m1+s1)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287226,"user_id":null,"body":"past <- function(h, m, s) {\n  return((h * 3600 + m * 60 + s) * 1000)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287227,"user_id":null,"body":"past <- function(h, m, s) {\n  miliseconds <- (h * 3600 + m * 60 + s) * 1000\n  return(miliseconds)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287228,"user_id":null,"body":"past <- function(h, m, s) {\n  # your code here\n  return((h * 60 * 60 * 1000) + (m * 60 * 1000) + (s * 1000))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287229,"user_id":null,"body":"past <- function(h, m, s) {\n  t <- (3600 * h + 60 * m + s) * 1000\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287230,"user_id":null,"body":"past <- function(h, m, s) {\n  time = (h*60*60*1000)+(m*60*1000)+(s*1000)\n  return(time)\n  # your code here\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287231,"user_id":null,"body":"past <- function(h, m, s) {\n  # your code here\n  s*1000 + m*60000 + h*3600000\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287232,"user_id":null,"body":"past <- function(h, m, s) {\n  print(s*1000+m*1000*60+h*1000*60*60)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287233,"user_id":null,"body":"past <- function(h, m, s) {\n  ms <- s*1000\n  m_to_ms <- m*60*1000\n  h_to_ms <- h*3600*1000\n  result <- h_to_ms + m_to_ms + ms\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55fab1ffda3e2e44f00000c6":[{"id":287234,"user_id":421,"body":"cockroach_speed <- function(s){\n  s %\/% 0.036\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287235,"user_id":null,"body":"cockroach_speed <- function(s){\n x <- s * 27.77777777777778\n floor(x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287236,"user_id":null,"body":"cockroach_speed <- function(s){\n # Factor for this is 27.77778\n  c <- floor(s*27.7778)\n  return(c)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287237,"user_id":null,"body":"cockroach_speed <- function(s){\n  speed <- s * 27.77777777777778\n  \n  return(floor(speed))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287238,"user_id":null,"body":"cockroach_speed <- function(s){\n  if (s==0){\n    return (0)\n  }\n  else return (floor(s*100000\/3600))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287239,"user_id":null,"body":"cockroach_speed <- function(s){\n return(floor(s * 27.7778))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287240,"user_id":null,"body":"cockroach_speed <- function(s){\n  floor(s*27.777778)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287241,"user_id":null,"body":"cockroach_speed <- function(s){\n new_speed <- s*100000\/3600\n  real_new_speed <- floor(new_speed)\n  return(real_new_speed)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287242,"user_id":null,"body":"cockroach_speed <- function(s){\n floor(s * 100000\/60**2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287243,"user_id":null,"body":"cockroach_speed <- function(s){\n  b = s*1000*100\/3600\n  return(floor(b))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"55fd2d567d94ac3bc9000064":[{"id":287244,"user_id":null,"body":"row_sum_odd_numbers <- function(n){\n  print(n^3)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287245,"user_id":2334,"body":"row_sum_odd_numbers <- function(n) n^3","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287246,"user_id":null,"body":"row_sum_odd_numbers <- function(n){\n  ans = (n*(n-1)+1)*n+n*(n-1)\n  \n  # Your code here\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287247,"user_id":null,"body":"row_sum_odd_numbers <- function(n){\n  if (n ==1) return (1)\n  n_first = seq(from = 1, by = 2, length.out = sum(1:(n-1)))+2\n  n_first = n_first[length(n_first)]\n  n_first = sum(seq(from = n_first, by = 2, length.out = n))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287248,"user_id":null,"body":"row_sum_odd_numbers <- function(n){\n  `^`(n, 3)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287249,"user_id":null,"body":"row_sum_odd_numbers <- function(n){\nsumrow <- (n*(n+1)*0.5)^2 - (n*(n-1)*0.5)^2\nreturn(sumrow)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287250,"user_id":null,"body":"row_sum_odd_numbers <- function(n){\n  # Your code here\n  n*n*n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287251,"user_id":null,"body":"row_sum_odd_numbers <- function(n){\n  return((n*(n-1)+n)*n)\n}\n  ","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287252,"user_id":null,"body":"row_sum_odd_numbers <- function(n){\n  # Your code here\n  \n  # Setup matrices and tickers\n  odd_mat <- matrix(1, 1,1)\n  odd_ticker <- 3\n  odd_row <- 0\n  odd_col <- 0\n  x <- 1\n  # Begin additionnal datarows logic\n  for (odd_row in 2:n) {\n        if (n == 1){break}\n\n    odd_mat <- cbind(odd_mat, 0)\n    odd_mat <- rbind(odd_mat, 0)\n    x <- x +1\n    # Begin ticking individual odd values\n    for (odd_col in 1:x) {\n      odd_mat[odd_row, odd_col] <- odd_ticker\n      odd_ticker <- odd_ticker + 2\n    }\n  }\n  sums <- as.vector(rowSums(odd_mat))\n  \n  return(sums[[n]])\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287253,"user_id":null,"body":"row_sum_odd_numbers <- function(n){\n  print(n)\n  if (n == 1) {\n    return(1)\n  }\n  start <- 2*sum(1:n-1)\n  end <- start + 2*n\n  return(sum(seq(start + 1,end,2)))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5613d06cee1e7da6d5000055":[{"id":287254,"user_id":492,"body":"isPrime <- function(n) {\n  if (n == 2) return(TRUE)\n  if ( (n < 3) || ( n %% 2 == 0 ) ) return(FALSE)\n  i <- 3\n  while (i <= sqrt(n) + 1 ) {\n    if ( n %% i == 0 ) return(FALSE)\n    i <- i + 2\n  }\n  TRUE\n}\nstep <- function (g, m, n) {\n  for (i in m:(n - g)) {\n    if (isPrime(i) && isPrime(i + g)) {\n      return(c(i, i + g))\n    }\n  }\n  return(NULL)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287255,"user_id":421,"body":"isprime <- function(n){\n  n == 2 || n %% 2 == 1 && n > 2 && all(n %% 3:ceiling(sqrt(n)))\n}\n\nstep <- function (g, m, n) {\n  for(i in m:(n+1)){\n    if(isprime(i) && isprime(i + g)) return(c(i, i + g))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287256,"user_id":null,"body":"isPrime <- function(n) {\n  if (n == 2) return(TRUE)\n  if ( (n < 3) || ( n %% 2 == 0 ) ) return(FALSE)\n  i <- 3\n  while (i <= ceiling(sqrt(n))) {\n    if ( n %% i == 0 ) return(FALSE)\n    i <- i + 2\n  }\n  TRUE\n}\nstep <- function (g, m, n) {\n  for (i in m:(n - g)) {\n    if (isPrime(i) && isPrime(i + g)) {\n      return(c(i, i + g))\n    }\n  }\n  return(NULL)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287257,"user_id":null,"body":"step <- function(g,m,n){\n    print(c(g,m,n))\n    d0 = c(11: floor(sqrt(n)))\n    d1 = c(2,3)\n    d2 = c(5,7)\n    s = c(m:n)\n    ans = NULL\n    for(i in d1){\n        s = s[s%%i != 0]\n    }\n    for(i in d1){\n        d0 = d0[d0%%i != 0]\n    }\n  \n    d2 = c(d2,d0)\n  \n    for(i in d2){\n        s = s[!(s %% i == 0) | s == i]\n    }\n    if(g %in% diff(s)){\n    ans = c((s[diff(s) == g])[1],(s[diff(s) == g])[1] +  g)\n    }else{\n    end}\n    if(min(s[ s %in% (s+g)]) > 0){\n    ans = c(ans,min(s[ s %in% (s+g)]) - g,min(s[ s %in% (s+g)]))\n    }else{\n    end}\n    if(sum(ans) != Inf){\n    print(c(min(ans), min(ans) + g))\n    }else{\n    NULL\n} \n}\n\n\n\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287258,"user_id":53,"body":"isPrime <- function(n) {\n  if (n %% 2 == 0 || n %% 3 == 0) {\n    return(n < 4)\n  }\n  i <- 5\n  while (i * i <= n) {\n    if (n %% i == 0 || n %% (i + 2) == 0) {\n      return(FALSE)\n    }\n    i <- i + 6\n  }\n  TRUE\n}\nstep <- function(g, m, n) {\n  for (i in m:n-g) {\n    if (i>=m && isPrime(i) && isPrime(i+g)) {\n      return(c(i, i+g))\n    }\n  }\n  return(NULL)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287259,"user_id":null,"body":"primetest <- function(n) {\n  i <- 2\n  while(i <= n^0.5) {\n    if(n%%i == 0) return(F)\n    i <- i + 1\n  }\n  return(T)\n}\n\nstep <- function (g, m, n) {\n  # your code\n  print(c(g,m,n))\n  for(j in m:(n-g)){\n    if(primetest(j)){\n      if(primetest(j+g))\n        return(c(j,j+g))\n    }\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287260,"user_id":null,"body":"step <- function(g,m,n){\n  return_list = c()\n  for(i in m:n){\n    is_prime <- T\n    for(j in 2:ceiling(sqrt(i))){\n      if(i %% j == 0){\n        is_prime <- F\n        break\n      }\n    }\n    if(is_prime){\n      print(i)\n      return_list[length(return_list) + 1] <- i;\n      if(!is.na(match(i-g , return_list))){\n        return(c(i-g,i))\n      }\n    }\n  }\n  return(NULL)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287261,"user_id":null,"body":"step <- function (x,y,z) {\n  is.prime <- function(n) n == 2L || all(n %% 2L:max(2,floor(sqrt(n))) != 0) #Looking for PrimeNumbers\n  solution <- NULL #Solution-Vetor\n  for (i in y:(z-x)) { \n    if (is.prime(i) & is.prime(i+x)) { #asks if the first and the second given Number are primenumbers\n      solution <- c(i,i+x) #overwrite the solution to the newone\n      break #stops if the right solution is found\n    }\n  }\n  print(solution) #print it\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287262,"user_id":null,"body":"step <- function (g, m, n) {\n  x <- m:n\n  for(i in 2:sqrt(n))x <- x[which(x%%i | x==i)]\n  for(i in x)if((i+g) %in% x)return(c(0,g)+i)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287263,"user_id":669,"body":"step <- function(g, m, n) {\n  p <- seq(2, ceiling(sqrt(n)))\n  i <- 0\n  while ((i <- i + 1) < length(p) - 1) {\n    p <- c(p[1:i], Filter(function(q) q %% p[i] > 0, p[-(1:i)]))\n  }\n  \n  k <- Filter(function(l) all(l %% p > 0), m:(n - g + 1))\n  k <- Filter(function(l) all((l + g) %% p > 0), k)\n\n  if (length(k) > 0) c(k[1], k[1] + g)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5616868c81a0f281e500005c":[{"id":287264,"user_id":492,"body":"rank <- function(st, we, n) {\n  ponder <- function(s, w) {\n    ss <- strsplit(s, \"\")[[1]]\n    sm <- 0\n    for (c in ss) {\n      sm <- sm + utf8ToInt(toupper(c)) - utf8ToInt(\"A\") + 1\n    }\n    sm <- sm + length(ss)\n    sm * w\n  }\n  if (nchar(st) == 0) return(\"No participants\")\n  f <- strsplit(st, \",\")[[1]]\n  if (n > length(f)) return(\"Not enough participants\")\n  res <- mapply(ponder, f, we)\n  rr <- res[order(names(res))]\n  rr <- sort(rr, decreasing=TRUE)\n  names(rr[n])\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287265,"user_id":null,"body":"rank <- function(st, we, n) {\n  if (st == \"\") return(\"No participants\")\n  str <- strsplit(st, \",\")[[1]]\n  num <- order(str)\n  str <- sort(str)\n  we <- we[num]\n  if (n > length(str)) return (\"Not enough participants\")\n  rank <- (sapply(str, function(x) sum(as.numeric(utf8ToInt(tolower(x)))) - nchar(x)*(96-1))) * we\n  str[order(rank,decreasing = TRUE)[n]]\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287266,"user_id":null,"body":"rank <- function(st, we, n) {\n  participants = strsplit(st[1], \",\")[[1]]\n  \n  if (length(participants) == 0) return (\"No participants\")\n  else if (length(participants) < n) return (\"Not enough participants\")\n  else\n  {\n    list1 = sapply(participants, function(s){ sum(utf8ToInt(toupper(s)) - utf8ToInt('A') + 2) }) * we\n    list2 = list1[order(names(list1))]\n    names(sort(list2, decreasing=TRUE))[n]\n  }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287267,"user_id":null,"body":"rank <- function(st, we, n) {\n  if(st == \"\"){\n    return(\"No participants\")\n  }\n  st <- unlist(strsplit(st, \",\"))\n  if (n > length(st)){\n    return(\"Not enough participants\")\n  }\n  ranks <- c()\n  for (index in 1:length(st)){\n  \tword <- st[index]\n  \tvalue <- nchar(word)\n  \tfor (letter in unlist(strsplit(word, \"\"))){\n  \t\tvalue <- value + calculate_value(letter)\n  \t}\n  \tvalue <- value * we[index]\n  \tranks <- append(ranks, value)\n  }\n  ranks <- ranks[order(st, decreasing= FALSE)]\n  st <- st[order(st, decreasing= FALSE)]\n  st <- st[order(ranks, decreasing= TRUE)]\n  return(st[n])\n}\n\ncalculate_value <- function(letter){\n\tupper_letter <- toupper(letter)\n\tvalue <- utf8ToInt(upper_letter) - 64\n\treturn(value)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287268,"user_id":null,"body":"rank <- function(st, we, n) {\n  if (st == \"\") return(\"No participants\")\n  s <- st %>% strsplit(',') %>% unlist\n  if (n > length(s)) return(\"Not enough participants\")\n  sumletters <- function(name) name %>% tolower %>% strsplit('') %>% unlist %>% match(letters) %>% sum\n  sw <- (nchar(s) + sapply(s, sumletters)) * we\n  res <- sw[order(names(sw))] %>% sort(decreasing = TRUE)\n  names(res[n])\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287269,"user_id":null,"body":"lett2number <- function(x) {utf8ToInt(x) - utf8ToInt(\"a\") + 1L} # letter to number function\n\nrank <- function(st, we, n) {\n  \n  if (st == \"\") {\"No participants\"} # if st empty, return \"No participants\"\n  else if (n > length(unlist(strsplit(st, \",\")))) \n  { \"Not enough participants\"} # if n is greater than the number of participants\n  else{\n    winning_numbers <- vector()\n    names <- unlist(strsplit(st, \",\")) # get names in a list\n    data <- data.frame(names, we) # get dataframe of names with their weights\n    st_lower <- unlist(lapply(names, tolower)) # get list of names in tolower letters\n    \n    for (name in st_lower){\n         # sapply(name,lett2number) take every letter and convert it to number\n         # then calculate sum of all letters and add to name length (nchar(name))\n         # finally append to winning_numbers array\n         winning_numbers <- c(winning_numbers, nchar(name) + sum(sapply(name,lett2number)))    \n    }\n    \n    winning_numbers <- winning_numbers*data$we # mult each winning number with their weigth\n    data <- cbind(data, winning_numbers) # add winning numbers column to data\n    \n    # order in decreasing order by winning_numbers value first \n    # then if two names have same winning numberorder by names \n    data <- data[order(-data$winning_numbers, data$names),] \n\n    data <- cbind(data, rank = 1:length(data$names)) # add rank column\n    data_win <- data[data$rank == n, ] # get only the winner data\n    as.character(data_win$names) # return the winner name\n  }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287270,"user_id":null,"body":"rank <- function(st, we, n) {\n  \n  st2 <- data.frame(strsplit(st, split = \",\"))  #enter names into a data frame\n  \n  if (is.na(st2[1,1])) {print(\"No participants\")} #print \"No Participants\" if data frame is empty\n  else if (n > nrow(st2)) {print(\"Not enough participants\")} #print \"Not enough participants\" if n > number of participants\n  else {\n\n    st2$namelower <- tolower(st2[,1])             #convert names to lower case\n    st2$we <- we[1:nrow(st2)]                     #add weight to data frame\n    st2$letters <- strsplit(st2[,2], split = \"\")  #split the characters in name\n    \n    num <- function(s) {                          #create function to calculate som\n      myLetters <- letters[1:26]\n      t <- match(unlist(s), myLetters)            #find numbers corresponding to the letters\n      return (sum(t) + length(t))                 #return som\n    }\n    \n    st2$winning <- (as.integer((lapply(st2$letters, num)))) * st2$we   #get winning number\n    st2 <- st2[order(-st2$winning, st2[,1]),]   #sort by descending winning number, then by name\n    print(toString(st2[n, 1]))                  #print winner\n  }\n  \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287271,"user_id":null,"body":"letter2number <- function(x){\n  for (i in 1:26){\n    x <- gsub(letters[i], i, x)\n  }\n  return(as.numeric(x))\n}\n\nrank <- function(st, we, n) {\n  # your code\n  if(st == \"\") {\n    return(\"No participants\")\n  } else{\n    people <- unlist(strsplit(st, \",\"))\n    if (n > length(people)) {\n      return(\"Not enough participants\")   \n    } else{\n      listnames <- strsplit(tolower(people), \"\") \n      num <- lapply(listnames, FUN = letter2number)\n      sums <- unlist(lapply(num, FUN = sum))\n      som <- sums + nchar(people)\n      wnums <- som * we\n      df <- data.frame(\"People\" = people, \"Winning Numbers\" = wnums)\n      df <- df[order(df$People), ]\n      sorted <- df[order(df$Winning.Numbers, decreasing = TRUE), ]\n      return(as.character(sorted[n, 1]))\n    }\n  }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287272,"user_id":null,"body":"rank <- function(st, we, n) {\n  if (nchar(st) == 0) {\n    \"No participants\"\n  } else {\n    nms <- strsplit(st, \",\")[[1]]\n    if (n > length(nms)) {\n      \"Not enough participants\"\n    } else {\n      chars <- strsplit(tolower(nms), \"\")\n      nms[[order(sapply(chars,\n                        function(a){\n                          -sum(match(a, letters) + 1)\n                        }) * we, nms)[[n]]]]\n    }\n  }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287273,"user_id":null,"body":"rank <- function(st, we, n) {\n  if(nchar(st)==0)return('No participants')\n  st <- unlist(strsplit(st,','))\n  if(n > length(st))return('Not enough participants')\n  we <- we[order(st)]\n  st <- sort(st)\n  w <- c()\n  for(i in 1:length(st)){\n    l <- unlist(strsplit(tolower(st[i]),''))\n    w[i] <- sum(sapply(l,function(x)1+which(letters==x)))\n  }\n  st[order(-1*w*we)[n]]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"561e9c843a2ef5a40c0000a4":[{"id":287274,"user_id":null,"body":"gap <- function(g, m, n) {\n x <- m:n\n for(i in 2:sqrt(n))x <- x[which(x<=i|x%%i!=0)]\n y <- diff(x)\n if(g %in% y)c(0,g)+x[which(y==g)[1]]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287275,"user_id":492,"body":"isPrime <- function(n) {\n  if (n == 2) return(TRUE)\n  if ( (n < 3) || ( n %% 2 == 0 ) ) return(FALSE)\n  i <- 3\n  while (i <= sqrt(n) + 1 ) {\n    if ( n %% i == 0 ) return(FALSE)\n    i <- i + 2\n  }\n  TRUE\n}\ngap <- function(g, m, n) {\n  lastPrime <- 0\n  for (i in m:n) {\n    if(isPrime(i)) {\n      if(i - lastPrime == g) return(c(lastPrime, i))\n      else lastPrime <- i\n    }\n  }\n  return(NULL)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287276,"user_id":null,"body":"gap <- function(g, m, n) {\n  # Sieve of Eratosthenes to find primes up to n\n  is_prime <- rep(TRUE, times=n)\n  for (p in 2:sqrt(n)) {\n    if (!is_prime[[p]]) next\n    is_prime[p:(n %\/% p) * p] <- FALSE\n  }\n  primes <- (1:n)[is_prime]\n  primes <- primes[primes > m]\n  \n  gaps <- diff(primes)\n  idx <- which(gaps == g)\n  if (length(idx) == 0) return(NULL) \n  primes[idx[[1]]:(idx[[1]]+1)]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287277,"user_id":null,"body":"is_prime <- function(n) {\n  n == 2 || n > 2 && all(n %% 2:(as.integer(sqrt(n)) + 1) != 0)\n}\n\ngap <- function(g, m, n) {\n  prev = 0\n  while (m <= n) {\n    if (is_prime(m)) {\n      if (prev > 0 && m - prev == g) {\n        return (c(prev, m))\n      }\n      prev <- m\n    }\n    m <- m + 1\n  }\n  return (NULL)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287278,"user_id":null,"body":"is.prime <- function(n) n == 2L || all(n %% 2L:max(2,floor(sqrt(n))) != 0) # Prime detection function\ngap <- function(g, m, n) {\n  primes <- seq(m, n)[sapply(seq(m, n), is.prime)] # Get all primes in range m-n\n  if (is.na(match(g, diff(primes)))) { # Does distance g exist\n    return(NULL)\n  } else {\n  return(c(primes[match(g, diff(primes))], primes[(match(g, diff(primes))) + 1]))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287279,"user_id":null,"body":"gap <- function(g, m, n) {\n  primes <- c(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, \n              41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, \n              89, 97, 101, 103, 107, 109, 113, 127, 131, \n              137, 139, 149, 151, 157, 163, 167, 173, 179, \n              181, 191, 193, 197, 199, 211, 223, 227, 229, \n              233, 239, 241, 251, 257, 263, 269, 271, 277, \n              281, 283, 293, 307, 311, 313, 317, 331, 337, \n              347, 349, 353, 359, 367, 373, 379, 383, 389, \n              397, 401, 409, 419, 421, 431, 433, 439, 443, \n              449, 457, 461, 463, 467, 479, 487, 491, 499,\n              503, 509, 521, 523, 541, 547, 557, 563, 569, \n              571, 577, 587, 593, 599, 601, 607, 613, 617, \n              619, 631, 641, 643, 647, 653, 659, 661, 673, \n              677, 683, 691, 701, 709, 719, 727, 733, 739, \n              743, 751, 757, 761, 769, 773, 787, 797, 809, \n              811, 821, 823, 827, 829, 839, 853, 857, 859, \n              863, 877, 881, 883, 887, 907, 911, 919, 929, \n              937, 941, 947, 953, 967, 971, 977, 983, 991, 997)\n  for (i in seq(m, n-g)) {\n    if (!any(i %% primes[primes<i] == 0) && !any((i+g) %% primes[primes<i+g] == 0)) {\n      tot <- 0\n      for (j in (i+1):(i+g-1)) {\n        if (any(j %% primes[primes < j] == 0)) {\n          tot <- tot + 1\n        }\n      }\n      if (tot == (g-1)) {\n        return(c(i, i+g)) \n      }\n    }\n  }\n  return(NULL)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287280,"user_id":null,"body":"gap <- function(g,m,n){\n    print(c(g,m,n))\n    d0 = c(11: floor(sqrt(n)))\n    d1 = c(2,3)\n    d2 = c(5,7)\n    s = c(m:n)\n    ans = NULL\n    for(i in d1){\n        s = s[s%%i != 0]\n    }\n    for(i in d1){\n        d0 = d0[d0%%i != 0]\n    }\n  \n    d2 = c(d2,d0)\n  \n    for(i in d2){\n        s = s[!(s %% i == 0) | s == i]\n    }\n    if(g %in% diff(s)){\n    ans = c((s[diff(s) == g])[1],(s[diff(s) == g])[1] +  g)\n    print(ans)\n    }else{\n    NULL\n} \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287281,"user_id":null,"body":"is_prime <- function(n) {\nif(n < 2) return(F)\nif(n == 2) return(T)\nall(n %% 2:max(2,floor(sqrt(n))) != 0)\n}\n\n  gap <- function(g, m, n) {\n    primes <- c()\n    testgap <- -1\n    while(testgap != g & m <= n) {\n      if(is_prime(m)) {primes <- c(primes, m)\n        if(length(primes) > 1) {\n          testgap <- primes[length(primes)] - primes[length(primes) - 1]\n        }\n      }\n      m <- m + 1\n    }\n    if(testgap == g) {return(c(primes[length(primes) -1], primes[length(primes)]))} else {return(NULL)}\n  }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287282,"user_id":null,"body":"gap <- function(g, m, n) {\n  \n    lastPrime <- -1\n  \n    for(number in c(m:n)){\n        \n        if ( isPrime(number)){\n            if ( lastPrime < 0 ){\n                lastPrime <- number\n            } else if (lastPrime + g == number) {\n               return(c(lastPrime, number))\n            } else {\n                lastPrime <- number\n            }\n        }\n\n    }\n\n    return(NULL)\n}\n\nisPrime <- function (n ){\n\n    for(index in 2:(sqrt(n) + 1)){\n        if ( n %% index == 0 )\n            return(FALSE)\n    }\n\n    return(TRUE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287283,"user_id":null,"body":"gap <- function(g, m, n) {\n  p <- TRUE\n  for (i in m:n) {\n    if(is_prime(i) & is_prime(i+g) & i+g <= n) {\n      for (j in (i+1):(i+g-1)) {\n        if (is_prime(j)) {p <- FALSE}\n      }\n      if (p == TRUE) {return(c(i,i+g))}\n      p <- TRUE\n    }\n  }\n return(NULL)\n}\nis_prime <- function(n) {\n  for (i in 2:(floor(sqrt(n))+1)) {\n    if (n %% i == 0) {return(FALSE)}\n  }\n return(TRUE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"562e274ceca15ca6e70000d3":[{"id":287284,"user_id":null,"body":"lenCurve <- function(n) {\n  # your code\n  h = 1\/n\n  Px = seq(0, 1, by = h)\n  Py = Px ** 2\n  sum(sqrt(diff(Px) ^2 + diff(Py) ^ 2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287285,"user_id":421,"body":"lenCurve <- function(n) {\n  h <- 1 \/ n\n  x <- 0\n  y <- 0\n  l <- 0\n  for(i in 1:n){\n    i <- i * h\n    l <- l + sqrt((x - i) ^ 2 + (y - i * i) ^ 2)\n    x <- i\n    y <- i * i\n  }\n  l\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287286,"user_id":null,"body":"lenCurve <- function(n) {\n    y <- ((0:n)\/n)^2\n    sum(sapply(1:n, function(i) { sqrt(1\/n^2 + (y[i+1]-y[i])^2)}))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287287,"user_id":null,"body":"lenCurve <- function(n) {\n    sum(sqrt(diff(seq(0,1,1\/n)^2)^2+1\/n^2))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287288,"user_id":null,"body":"lenCurve <- function(n) {\n  len <- 0\n  for (i in c(1:n)){\n    i <- i * (1\/n)\n    len <- len + sqrt((i^2 - (i-(1\/n))^2)^2 + (1\/n)^2)\n  }\n  return(len)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287289,"user_id":null,"body":"lenCurve <- function(n) {\n  n <- n + 1\n  x <- seq(0, 1, length.out = n)\n  y <- x ^ 2\n  dx <- x[2] - x[1]\n  dy <- y[2:n] - y[1:(n - 1)]\n  len <- sum(sqrt(dx ^ 2 + dy ^ 2))\n  return(len)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287290,"user_id":132,"body":"lenCurve <- function(n) {\n  x <- seq(0,1,1\/n)\n  y <- x*x\n  dist <- sum(sqrt((y[2:(n+1)]-y[0:n])^2+(x[2:(n+1)]-x[0:n])^2))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287291,"user_id":null,"body":"lenCurve <- function(n) {\n    \n  length <- 0\n  for (i in 1:n){\n  length <- length + sqrt((1\/n)^2 + ((1\/n * i)^2 - ((1\/n)*(i-1))^2)^2)\n} \n  trunc(length*10^9)\/10^9\n\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287292,"user_id":null,"body":"lenCurve <- function(n) {\n  y = seq(0, 1, by = 1 \/ n)^2\n  floor(10^9 * sum(sqrt((y[-1] - y[-n - 1])^2 + (1 \/ n)^2))) \/ (10^9)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287293,"user_id":null,"body":"lenCurve <- function(n) {\n    \n  \n  arc <-0\n  h <- 1\/n\n  x <- seq(0,1, by = h)\n  Py <- x*x\n  print(x)\n  sum(sqrt(diff(Py)^2 + diff(x)^2))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"562f91ff6a8b77dfe900006e":[{"id":287294,"user_id":null,"body":"movie <- function(card, ticket, perc) {\n  n = 1:10000\n  min(which(ceiling(card + ticket * cumsum(perc^n)) < ticket * n))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287295,"user_id":null,"body":"movie <- function(card, ticket, perc) {\n  A = 0\n  B = card\n  rticket <- ticket * perc\n  count = 0\n  \n  while (A <= ceiling(B)) {\n    A <- A + ticket\n    B <- B + rticket\n    rticket <- rticket * perc\n    count <- count + 1\n  }\n  \n  count\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287296,"user_id":421,"body":"movie <- function(card, ticket, perc) {\n  i <- 0\n  while(ceiling(card) >= ticket * i){\n    card = card + ticket * perc ^ i\n    i <- i + 1\n  }\n  i - 1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287297,"user_id":null,"body":"movie <- function(card, ticket, perc) {\n  n <- 1\n  repeat {\n    d <- ceiling(card + ticket*(1-perc**n)\/(1-perc)*perc) - n*ticket\n    ifelse(d < 0,return(n),n <- n + 1) \n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287298,"user_id":null,"body":"movie <- function(card, ticket, perc) {\n  n <- 1\n  system_a <- ticket\n  system_b <- card + ticket * perc\n  while (system_a <= ceiling(system_b)) {\n    n <- n + 1\n    system_a <- system_a + ticket\n    system_b <- system_b + ticket * perc ^ n\n  }\n  n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287299,"user_id":null,"body":"movie <- function(card, ticket, perc) {\n  n = 1\n  adj_ticket <- ticket\n  system_b <- card\n  while (TRUE) {    \n    system_a <- ticket * n\n    adj_ticket <- adj_ticket * perc\n    system_b <- system_b + adj_ticket\n    if (ceiling(system_b) < system_a) {\n      return(n)\n    }\n    n = n + 1\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287300,"user_id":null,"body":"movie <- function(card, ticket, perc) {\n  val <- new_val <- ticket * perc\n  i <- 1\n  total <- card + val\n  while (ceiling(total) >= i * ticket) {\n    new_val <- val * perc\n    total <- total + new_val\n    val <- new_val\n    i <- i + 1\n  }\n  return(i)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287301,"user_id":null,"body":"movie <- function(card, ticket, perc) {\n  i <- 0\n  with.card <- card\n  with.tickets <- 0\n  ticket.with.card = ticket\n  while (ceiling(with.card) >= with.tickets) {\n    i <- i + 1\n    with.tickets <- with.tickets + ticket\n    ticket.with.card = ticket.with.card * perc\n    with.card = with.card + ticket.with.card\n  }\n  i\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287302,"user_id":null,"body":"movie <- function(card, ticket, perc) {\n    cost1 = card + ticket * perc\n    cost2 = ticket\n    ticket1 = ticket\n    counter = 1\n    while(cost2 <= ceiling(cost1)){\n        ticket1 = ticket1 * perc\n        cost1 = cost1 + ticket1*perc\n        cost2 = cost2 + ticket\n        counter = counter + 1\n    }\n    return(counter)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287303,"user_id":null,"body":"movie <- function(card, ticket, perc) {\n  A <- ticket\n  B <- card + (ticket * perc)\n  count <- 1\n  while (ceiling(B) >= ceiling(A)) {\n    count <- count + 1\n    A <- ticket * count\n    B <- B + (ticket * perc^(count))\n    \n  }\n  count\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56347fcfd086de8f11000014":[{"id":287304,"user_id":null,"body":"ex_euler <- function(n) {\n    f <- function(x) 1 + 0.5 * exp(-4 * x) - 0.5 * exp(-2 * x)\n    est <- function(x, y) y + (2 - exp(-4 * x) - 2 * y) * h\n    h <- 1 \/ n\n    x <- seq(from = 0, to = 1, by = h)\n    y <- purrr::accumulate(head(x, n), function(y, x) est(x, y), .init = 1)\n    z <- f(x)\n    signif(sum(abs(y - z) \/ z) \/ (n + 1), digits = 6)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287305,"user_id":null,"body":"ex_euler <- function(nb) {\n\n    y = vector(length = nb + 1, mode = \"numeric\")\n    y[1] = 1\n    \n    h = 1 \/ nb\n    x = 2 - exp(-4 * seq(0, nb) * h)\n    \n    for (i in seq(2, nb + 1)) {\n      y[i] = y[i-1] + (x[i-1] - 2*y[i-1]) * h\n    }\n    \n    true_values = 1 + 0.5 * exp(-4 * seq(0, nb) * h) - 0.5 * exp(-2 * seq(0, nb) * h)\n    error = sum(abs(y - true_values)\/true_values)\/(nb + 1)\n    \n    return(trunc(10^6 * error)\/10^6)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287306,"user_id":null,"body":"ex_euler <- function(nb) {\n  xk <- seq(from = 0, to = 1, length.out = nb + 1)\n  yk <- rep(1, nb + 1)\n  zk <- 1 + 0.5 * exp(-4 * xk) - 0.5 * exp(-2 * xk)\n  \n  for(k in 1:nb) {\n    yk[k + 1] <- yk[k] + (2 - exp(-4 * xk[k]) - 2 * yk[k]) \/ nb\n  }\n  \n  return(floor(mean(abs(yk - zk) \/ zk) * 1000000) \/ 1000000)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287307,"user_id":null,"body":"ex_euler <- function(nb) {\n    fex <- function(t) {1 + 0.5*exp(-4*t) - 0.5*exp(-2*t)}\n    f <- function(t,y) {2 - exp(-4*t) - 2*y}\n    x <- seq(0.0, 1.0, length.out = nb+1)\n    y <- c(1.0, rep(0.0, nb))\n    for (k in seq(1,nb)) {\n        y[k+1] <- y[k] + f(x[k],y[k])*(x[k+1] - x[k])\n    }\n    z <- fex(x)\n    err <- abs(z - y)\/z\n    trunc( mean(err)*1e6 )\/1e6\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287308,"user_id":492,"body":"ode <- function(x, y) {\n    2.0 - exp(-4.0 * x) - 2.0 * y\n}\nexact <- function(x) {\n    1.0 + 0.5 * exp(-4.0 * x) - 0.5 * exp(-2.0 * x)\n}\nex_euler <- function(nb) {\n    yi <- 1.0; xi <- 0.0; h <- 1.0 \/ nb\n    err <- 0.0\n    for (i in 1:nb) {\n        yi <- yi + ode(xi, yi) * h\n        xi <- xi + h\n        zi <- exact(xi)\n        err <- err + abs(yi - zi) \/ zi\n    }\n    res <- err \/ (nb + 1.0)\n    floor(res * 1e6) \/ 1e6\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287309,"user_id":492,"body":"ode <- function(x, y) {\n    2.0 - exp(-4.0 * x) - 2.0 * y\n}\nexact <- function(x) {\n    1.0 + 0.5 * exp(-4.0 * x) - 0.5 * exp(-2.0 * x)\n}\nex_euler <- function(nb) {\n    yi <- 1.0; xi <- 0.0; h <- 1.0 \/ nb\n    err <- 0.0\n    for (i in 1:nb) {\n        yi <- yi + ode(xi, yi) * h\n        xi <- xi + h\n        zi <- exact(xi)\n        err <- err + abs(yi - zi) \/ zi\n    }\n    res <- err \/ (nb + 1.0)\n    floor(res * 1e6) \/ 1e6\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287310,"user_id":null,"body":"ex_euler <- function(nb) {\ny <- vector(mode = 'numeric', length = nb+1)\ny[1] <- 1\nh <- 1\/nb\nx <- 2-exp(-4*seq(0,nb)*h)\nfor (i in seq(2, nb+1)) {\n  y[i] <- y[i-1]+(x[i-1]-2*y[i-1])*h\n}\ntruevalues <- 1+0.5*exp(-4*seq(0,nb)*h)-0.5*exp(-2*seq(0,nb)*h)\nresult <-sum(abs((y-truevalues)\/truevalues))\/(nb+1)\nreturn(result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287311,"user_id":null,"body":"ex_euler <- function(nb) {\n  sumV = 0\n  y = 1\n  for (i in 1:nb){\n    y = y + (2 - exp(-4 * ((i-1) * 1\/nb)) - 2 * y ) * 1\/nb\n    print(y)\n    residual = y\/(1 + 0.5 * exp(-4 * (i * 1\/nb)) - 0.5 * exp(-2 * (i * 1\/nb))) - 1\n    print(residual)\n    sumV = sumV + abs(residual)\n  }\n  return(sumV\/(nb+1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287312,"user_id":null,"body":"ex_euler <- function(nb) {\n  m = nb + 1\n  x = seq(0, 1, length = m)\n  y = numeric(m)\n  z = 1 + 0.5 * exp(-4 * x) - 0.5 * exp(-2 * x)\n  y[1] = 1\n  for(i in 1:nb){\n     y[i+1] = y[i] + (2 - exp(-4 * x[i]) - 2 * y[i]) \/ nb \n  } \n  mean(abs(y - z)\/z)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287313,"user_id":null,"body":"ex_euler <- function(n) {\n  y <- function(x) {\n    1 + 0.5 * exp(-4 * x) - 0.5 * exp(-2 * x)\n  }\n  dydx <- function(p) {\n    2 - exp(-4 * p[1]) - 2 * p[2]\n  }\n  x <- seq(0, 1, length.out = n + 1)\n  points <- mapply(c, x, y(x), SIMPLIFY = FALSE)\n  est_points <- vector(\"list\", n + 1)\n  est_points[[1]] <- c(0, 1)\n  for (i in seq_along(est_points)[-1]) {\n    p <- est_points[[i - 1]]\n    est_points[[i]] <- p + c(1\/n, dydx(p) \/ n)\n  }\n  (z <- vapply(est_points, `[[`, numeric(1), 2))\n  trunc(mean(abs(z - y(x)) \/ y(x)) * 1e6) \/ 1e6\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"563a631f7cbbc236cf0000c2":[{"id":287314,"user_id":null,"body":"move <- function(pos, roll) {\n  # Calculates the new position of the hero based on start position and die roll\n  #\n  # Args:\n  #   pos: the numeric value or vector for the hero's current position\n  #   roll: the numeric value or vector for the outcome of the die roll\n  #\n  # Returns:\n  #   A numeric value or vector of the new position(s) of the hero\n\n  pos + 2 * roll\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287315,"user_id":null,"body":"move <- function(pos, roll) {\n  pos+2*roll\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287316,"user_id":null,"body":"move <- function(pos, roll) {\n  # your code here\n  pos+roll*2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287317,"user_id":null,"body":"move <- function(pos, roll) {\n  return(pos + roll*2)\n  # your code here\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287318,"user_id":null,"body":"move <- function(a, b) {\n  if(b == 0){\n    return(a)\n  }\n  return(move(a + 2, b - 1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287319,"user_id":492,"body":"move <- function(pos, roll) {\n  return (pos + roll + roll)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287320,"user_id":null,"body":"move <- function(pos, roll) {\n  new_pos <- pos + (2*roll)\n  return(new_pos)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287321,"user_id":null,"body":"move <- function(pos, roll) {\n    de<- pos+(roll*2)  \n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287322,"user_id":null,"body":"move <- function(pos, roll) {\n  2*roll+pos\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287323,"user_id":null,"body":"move <- function(pos, roll) {\n  new_pos <- pos + 2 * roll\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"563b662a59afc2b5120000c6":[{"id":287324,"user_id":null,"body":"nb_year <- function (p0, percent, aug, p) {\n  pop <- p0\n  i <- 0\n  while (pop < p) {\n    i <- i + 1\n    pop <- pop * (1 + percent \/ 100) + aug\n  }\n  return(i)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287325,"user_id":null,"body":"nb_year <- function (p0, percent, aug, p) {\n  percent<-percent\/100\n  if(percent == 0)\n    (p - p0)\/aug\n  else\n    ceiling(log((percent*p+aug)\/(percent*p0+aug))\/log(1+percent))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287326,"user_id":492,"body":"nb_year <- function (p0, percent, aug, p) {\n  cnt <- 0   \n  while (p0 < p){\n    p0 <- floor(p0 + p0 * percent\/100 + aug)\n    cnt <- cnt + 1\n  }\n  cnt\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287327,"user_id":421,"body":"nb_year <- function (p0, percent, aug, p) {\n  year <- 0\n  while(p0 < p){\n    p0 <- p0 + p0 * (percent \/ 100) + aug\n    year <- year + 1\n  }\n  year\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287328,"user_id":null,"body":"nb_year <- function (p0, percent, aug, p) {\n  year=0\n  percent_decimal = percent\/100\n  population=p0\n  repeat{\n    year = year + 1\n    population=population + (population*percent_decimal) + aug\n    if(population >= p){\n      break\n    }\n  }\n  year\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287329,"user_id":null,"body":"nb_year <- function (p0, percent, aug, p) {\n  pct <- percent\/100.0\n  f_n <- p0 * (1 + pct) + aug #year 1\n  n <- 1\n  while (f_n < p) {\n    f_n_min1 <- f_n\n    f_n <- f_n_min1*(1 + pct) + aug\n    n = n + 1\n  }\n  return(n)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287330,"user_id":null,"body":"nb_year <- function (p0, percent, aug, p) {\n  percentage <- percent * 0.01\n  sum = 0; n = 0 \n  while(sum < p){\n    sum <- p0 + (p0 * percentage) + aug\n    p0 <- sum\n    n = n + 1 #count of years\n  }\n  return(n)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287331,"user_id":null,"body":"nb_year <- function (p0, percent, aug, p, n = 0) {\n  if (p0 >= p) return(n)\n  nb_year((p0 + p0*percent\/100 + aug), percent, aug, p, n+1)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287332,"user_id":null,"body":"nb_year <- function (p0, percent, aug, p) {\n  n<-0\n  while(p0<p){\n    p0 <- p0+as.integer(p0*percent\/100)+aug\n    n <- n+1\n  }\n  n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287333,"user_id":null,"body":"nb_year <- function (p0, percent, aug, p) {\n  pop <- p0\n  n <- 0\n  while ( pop < p) {\n    pop <- floor( ( pop * ( 1 + (percent\/100) ) ) + aug )\n    n <- n + 1\n  }\n  return( n )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"563cf89eb4747c5fb100001b":[{"id":287334,"user_id":527,"body":"remove_smallest <- function(numbers) {\n  numbers[-which.min(numbers)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287335,"user_id":null,"body":"remove_smallest <- function(numbers){\n\n  if (length(numbers) > 0) {\n    return(numbers[-which(numbers == min(numbers))[1]])\n    }\n  else {\n    return(numbers)\n    }\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287336,"user_id":null,"body":"remove_smallest <- function(n) n[-which.min(n)]","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287337,"user_id":null,"body":"remove_smallest <- function(numbers){\n  if(length(numbers)){\n    numbers[-(match(min(numbers), numbers))]\n  }else{\n    numbers\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287338,"user_id":null,"body":"remove_smallest <- function(numbers){\n  if(length(numbers) == 0){\n    print(numbers)\n  }\n  else{\n  smallest <- order(numbers)\n  remove <- smallest[1]\n  numbers[-remove]\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287339,"user_id":null,"body":"remove_smallest <- function(numbers){\n  min_val_index <- which.min(numbers)\n  print(numbers[-c(min_val_index)])\n}\n\n\n\n\n\n\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287340,"user_id":null,"body":"remove_smallest <- function(numbers){\n  \n  numbers <- strtoi(numbers)\n\n  if (!(length(numbers) == 0)){\n    min_value <- min(numbers)\n    min_value_pos <-which(numbers==min_value)\n    return (numbers[-min_value_pos[1]])}\n  \n  else print (numbers[])\n  \n \n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287341,"user_id":null,"body":"remove_smallest <- function(numbers){\n  if(length(numbers) == 0) {return(integer(0))} #special case to return empty integer array when parameter is empty\n  numbers[which.min(numbers) * -1] #identify index position of first lowest and remove from array\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287342,"user_id":null,"body":"remove_smallest <- function(numbers) {\n  a <- array(numbers)\n  size <- length(a)\n  if (size == 0) {return(numbers)}; print('running')\n  m <- min(numbers)\n  found <- FALSE\n  i <- 0\n  while (found == FALSE) {\n    i <- i + 1\n    if (numbers[i] == m) {\n      found <- TRUE\n    }\n  }\n  left <- slice(a, 1, i - 1)\n  right <- slice(a, i + 1, size)\n  q <- qualified.paste(left, right)\n}\n\nslice <- function(arr, from, to) {\n  if (from <= to && to <= length(arr)) {\n    return(arr[from:to])\n  }\n  return(FALSE)\n}\n\nqualified.paste <- function(a1, a2) {\n  if (a1 == FALSE && a2 == FALSE) {return (numeric(0))}\n  if (a1 == FALSE) {return (c(a2))}\n  if (a2 == FALSE) {return (c(a1))}\n  p <- array()\n  i <- 0\n  for (n in a1) {i <- i + 1; p[i] <- n}\n  for (n in a2) {i <- i + 1; p[i] <- n}\n  p\n}\n  ","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287343,"user_id":null,"body":"remove_smallest <- function(numbers){\n\nif (length(numbers!=0)) {\nmin<-min(which.min(numbers))\n  numbers[-min]\n} else numbers\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"563e320cee5dddcf77000158":[{"id":287344,"user_id":527,"body":"get_average <- function(marks) floor(mean(marks))","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287345,"user_id":null,"body":"get_average <- function(marks){\n  return(floor(sum(marks) \/ length(marks)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287346,"user_id":null,"body":"get_average <- function(marks){\n  average <- floor(mean(marks))\n  return(average)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287347,"user_id":null,"body":"get_average <- a <- function(x){\n  i = mean(x)\n  i = i - i%%1\n  print(i)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287348,"user_id":null,"body":"get_average <- function(marks){\n  average = floor(mean(marks))\n  return(average)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287349,"user_id":null,"body":"get_average <- function(marks){\n  average <- floor(mean(marks))\n}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287350,"user_id":null,"body":"get_average <- function(marks){\n  as.integer(mean(marks))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287351,"user_id":null,"body":"get_average <- function(marks){\n  floor(sum(marks)\/length(marks))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287352,"user_id":null,"body":"get_average <- function(marks){\n  return(floor(mean(marks)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287353,"user_id":421,"body":"get_average <- function(marks){\n  sum(marks) %\/% length(marks)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"563f0c54a22b9345bf000053":[{"id":287354,"user_id":527,"body":"fcn <- function(n) {\n  2 ^ n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287355,"user_id":828,"body":"fcn <- function(n) {\n  2 ** n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287356,"user_id":null,"body":"u<-function(one_before,two_before){\n6*two_before*one_before\/((5*two_before)-one_before)\n}\n\nfcn <- function(n) {\n  one_before=2\n  two_before=1\n  i=1\n  if (n==1){return(2)}\n  if (n==0){return(1)}\n  while(i<=n-1){\n    new_number=u(one_before,two_before)\n    i=i+1\n    two_before=one_before\n    one_before=new_number\n  }\n  return(new_number)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287357,"user_id":null,"body":"fcn <- function(n) {\n  if(n==0) return(1)\n  else\n  return(2**(n))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287358,"user_id":null,"body":"fcn <- function(n) {\n  u0 <- 1\n  u1 <- 2\n  if (n ==1){\n    return(u1)\n  }\n  for (i in 0:(n-2)){\n    u2 <- (6*u0*u1)\/(5*u0-u1)\n    u0 <- u1 \n    u1 <- u2\n  }\n  return(u2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287359,"user_id":null,"body":"fcn <- function(n) {\n  if(n==0){\n    return(1)\n  }else if(n == 1){\n    return(2)\n  }else{\n    u <- c(1,2)\n\n    for (i in 3:(n+1)) {\n      mid <- (6*u[i-2]*u[i-1])\/(5*u[i-2]-u[i-1])\n     u <- append(u,mid) \n    }\n    return(u[length(u)])\n  }\n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287360,"user_id":null,"body":"fcn <- function(n) {\n  i =1\n  count = 0\n  while(count < n) {\n    \n    \n    i =  i*2\n    \n    result <- i\n    \n    count = count + 1\n    \n  }\n  return(result)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287361,"user_id":null,"body":"fcn <- function(n) {\n  u <- c(1, 2)\n  for (i in seq_len(max(0, n - 1))) {\n    u <- c(u[-1], 6 * prod(u)\/crossprod(u, c(5, -1)))\n  }\n  u[n - sum(i) + 1]\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287362,"user_id":null,"body":"\nfcn <- function(n) {\n  solution <- 2^n\n  print(solution)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287363,"user_id":null,"body":"fcn <- function(n) {\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n    return(2)\n  } else {\n    s <- rep(1,n+1)\n    s[2] <- 2\n    for (i in 3:(n+1)) {\n      s[i] <- 6*s[i-1]*s[i-2]\/(5*s[i-2] - s[i-1])\n    }\n    return(s[n+1])\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"564057bc348c7200bd0000ff":[{"id":287364,"user_id":null,"body":"thirt <- function (n) {\n    x = as.integer(strsplit(as.character(n),\"\")[[1]])\n    result = sum(((10^(0:(length(x)-1)))%%13) * rev(x))\n    if(result == n) \n      n \n    else\n      thirt(result)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287365,"user_id":null,"body":"thirt <- function (n) {\n\n    y = unlist(strsplit(as.character(n), \"\"))\n    x = rev(as.integer(y[which(y %in% 0:9)]))\n    series = rep(c(1,10,9,12,3,4),length.out = length(x))\n    Ans = sum(x * series)\n    \n    if (n == Ans){\n      return(n)\n    }else{\n      thirt(Ans)\n    }\n    \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287366,"user_id":2334,"body":"k <- c(1, 10, 9, 12, 3, 4)\n\nthirt <- function(n) {\n    c <- as.character(n)\n    s <- rev(substring(c, 1:nchar(c), 1:nchar(c)))\n    r <- integer(0)\n    if (length(k) > length(s)){\n        r <- sum(k[seq_along(s)]*as.integer(s))\n    } else {\n        r <- sum(as.integer(s)*k)\n    }\n    if (r == n){\n        return(r)\n    } else {\n        thirt(r)\n    }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287367,"user_id":null,"body":"thirt <- function (n) {\n  factors <- c(1, 10, 9, 12, 3, 4)\n  \n  v <- as.numeric(strsplit(as.character(n), \"\")[[1]])\n  factors <- rev(rep(factors, length.out = length(v)))\n  \n  newN <- sum(v * factors)\n  \n  return(ifelse(newN < 100, newN, thirt(newN)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287368,"user_id":492,"body":"thirt <- function (n) {\n    w <- c(1, 10, 9, 12, 3, 4)\n    while (TRUE) {\n        r <- n; q <- -1; c <- 0; j <- 0\n        while (q != 0) {\n            q <- as.integer(floor(r \/ 10))\n            c <- c + (r %% 10) * w[j %% 6 + 1]\n            r <- q\n            j <- j + 1\n        }\n        if (c == n) {return(c)}\n        n <- c\n    }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287369,"user_id":null,"body":"thirt=function(n)ifelse((m=sum((k=10^(nchar(n):0))%%13*n%\/%k%%10))-n,thirt(m),n)","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287370,"user_id":null,"body":"thirt <- function (n) {\n  m = -1\n  while ( 1 == 1 ) {\n    m = sum( as.numeric(rev(strsplit(as.character(n), \"\")[[1]])) * rep(c(1,10,9,12,3,4), length.out=nchar(n)) )\n    if ( n == m ) {break}\n    n = m\n  }\n  m\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287371,"user_id":null,"body":"thirt <- function (n) {\n  w_seq <- c(1, 10, 9, 12, 3, 4)\n  \n  multiSum <- function(n) {\n    x <- 0\n    for ( i in 1:nchar(n) ) {\n      x <- x + (n%%10)*w_seq[ifelse(i%%6==0,6,i%%6)]\n      n <- floor(n\/10)\n      i <- i + 1\n    }\n    return(x)\n  }\n  \n  while ( n>99 ) {\n    n <- multiSum(n)\n  }\n  \n  return(n)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287372,"user_id":53,"body":"thirt <- function (n) {\n  while (TRUE) {\n    s <- 0; r <- 1; m <- n\n    while (m  > 0) {\n      s <- s + (m %% 10) * r\n      m <- m %\/% 10\n      r <- (r * 10) %% 13\n    }\n    if (n == s) { return(s) }\n    n <- s\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287373,"user_id":null,"body":"thirt <- function (n) {\n  mods <- c(1, 10, 9, 12, 3, 4)\n  old <- 0\n  new <- n\n  exps <- 5:0\n  while(old != new) {\n    moremods <- mods\n    moreexps <- exps\n    div_new <- new %\/% (10 ^ exps)\n    \n    while(div_new[1] != 0){\n      moremods <- c(moremods, mods)\n      moreexps <- c(moreexps + 6, exps)\n      div_new <- new %\/% (10 ^ moreexps)\n    }\n    \n    moddiv_new <- rev(div_new - (div_new %\/% 10 * 10))\n    old <- new\n    new <- sum(moddiv_new * moremods)\n  }\n  return(new)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56445c4755d0e45b8c00010a":[{"id":287374,"user_id":421,"body":"fortune <- function (f0, p, c0, n, i) {\n   while(n > 1){\n     f0 <- floor(f0 + p \/ 100 * f0 - c0)\n     c0 <- floor(c0 + i \/ 100 * c0)\n     if(f0 < 0) return(FALSE)\n     n <- n - 1\n   }\n  TRUE\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287375,"user_id":492,"body":"fortune <- function (f0, p, c0, n, i) {\n    if (n == 1) { return(f0 >= 0) }\n    newF <- floor(f0 + (p \/ 100 * f0) - c0)\n    newC <- floor(c0 * (1 + i \/ 100))\n    return(fortune(newF, p, newC, n - 1, i))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287376,"user_id":null,"body":"fortune <- function (f0, p, c0, n, i) {\n    balance <- f0\n    cost <- c0\n    t <- 0\n    while (balance  >=  0){ #I used to take balance >= cost as my condition, somehow, it is not fundamental at some time\n    t <- t + 1\n    balance <- trunc(balance * (1 + p\/100) - cost)\n    cost <- trunc(cost * (1 + i\/100))\n    if (t >= n){ \n    return(TRUE)}\n    } \n    \n    return(FALSE)  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287377,"user_id":null,"body":"fortune <- function (f0, p, c0, n, i) {\n  i <- i * 0.01\n  p <- p * 0.01\n  for (j in 1:(n-1)) {\n    c0 <- floor(c0 + c0 * i)\n    f0 <- floor(f0 + f0 * p - c0)\n    if (f0 < 0) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287378,"user_id":null,"body":"fortune <- function (f0, p, c0, n, i) {\n    years <- 0\n    deposit <- f0\n    withdraw <- c0\n    \n    while ((years < (n - 1)) & (deposit > 0)) {\n        deposit <- floor(deposit * (p + 100) \/ 100 - withdraw)\n        withdraw <- floor(withdraw * (i + 100) \/ 100)\n        years <- years + 1\n    }\n    \n    deposit >= 0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287379,"user_id":null,"body":"fortune <- function (f0, p, c0, n, i) {\n    years <- 0\n    deposit <- f0\n    withdraw <- c0\n    \n    while ((years < n) & (deposit > 0)) {\n        deposit <- deposit * (p + 100) \/ 100 - withdraw\n        withdraw <- withdraw * (i + 100) \/ 100\n        years <- years + 1\n    }\n    \n    deposit >= 0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287380,"user_id":null,"body":"fortune <- function(f0,p,c0,n,i) {\n\n  fn <- f0\n  cn <- c0\n  x <- 1\n  \n  while (x + 1 <= n) {\n    fn = floor(fn + fn*(p\/100) - cn) \n    cn = floor(cn + cn*(i\/100))\n    x = x+1\n  }\n  \n  fn >= 0\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287381,"user_id":53,"body":"fortune <- function (f0, p, c0, n, i) {\n  f = f0\n  c = c0\n  pp = p \/ 100\n  ii = i \/ 100\n  m = n - 1\n  while (m > 0) {\n    m <- m - 1\n    f <- f + floor(pp * f - c)\n    c <- c + floor(ii * c)\n    if (f < 0) {\n      return(FALSE)\n    }\n  }\n  f >= 0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287382,"user_id":132,"body":"fortune <- function (f0, p, c0, n, i) {\n    for(j in 1:(n-1)){\n      f0 = (f0*(1+p\/100))%\/%1-c0\n      c0 = (c0*(1+i\/100))%\/%1\n    }\n  return(f0>=0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287383,"user_id":null,"body":"fortune <- function (f0, p, c0, n, i) {\n  j<-2\n  f<-0\n  while (j<=n){\n    f<-f0+((p\/100)*f0)-c0\n    c<-c0+c0*i\/100\n    f0<-trunc(f)\n    c0<-trunc(c)\n    if (f0<0 && j<=n){\n      return (FALSE)\n    }\n    j<-j+1\n  }\n  return (TRUE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56484848ba95170a8000004d":[{"id":287384,"user_id":527,"body":"gps <- function(s, x) {\n  if (length(x) <= 1) 0 else floor(max(3600 * diff(x) \/ s))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287385,"user_id":null,"body":"gps <- function(s, x) {\n  ifelse(length(x)<=1,0,floor(max(diff(x)*3600\/s)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287386,"user_id":492,"body":"gps <- function(s, x) {\n  if (length(x) <= 1) return(0);\n  mx <- -1; v <- 0\n  for (k in 1:length(x)-1) {\n    v <- (3600 * (x[k + 1] - x[k]) \/ s)\n    mx <- max(mx, v)\n  }\n  return(floor(mx))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287387,"user_id":null,"body":"gps <- function(s, x) {\n  if(length(x)<2){return(0)}\n  max(floor(diff(x)*3600\/s))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287388,"user_id":null,"body":"gps <- function(s, x) {\n  print(x)\n  if(length(x) > 1 ) \n    return(floor(max((x[-1] - x[1:length(x)-1]))*3600\/s))\n  else return(0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287389,"user_id":null,"body":"gps <- function(s, x) {\n  if (length(x) <= 1) {\n    0\n  }\n  else {\n    y <- x[1:length(x)-1]\n    x <- x[2:length(x)]\n    result <- max((x-y)*3600\/s)\n    floor(result)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287390,"user_id":null,"body":"gps <- function(s, x) {\n  if (length(x) > 1) {\n  a <- NULL\n  for (i in 1:length(x)-1) a[i] <- x[i+1]-x[i]\n  floor(max(a*3600\/s))\n    }\n  else 0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287391,"user_id":null,"body":"gps <- function(s, x) {\n  if (length(x) < 2) {\n    return(0)\n  }\n  delta_distance <- x[2:length(x)] - x[1:(length(x)-1)]\n  floor(max((3600 * delta_distance) \/ s))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287392,"user_id":null,"body":"gps <- function(s, x) {\n  a=c()\n  if (length(x)<=1){\n    return(0)\n  }\n  else{\n    for (i in 1:length(x)-1){\n    d=x[i+1]-x[i]\n    a[i]=(3600*d)\/s\n  }\n    }\n  floor(max(a))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287393,"user_id":null,"body":"gps <- function(s, x) {\n  if (all(x == 0) || length(x) == 0) {\n    return(0)\n  } else {\n    return(floor(max(3600 * (x[-1] - x[-length(x)]) \/ s)))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56541980fa08ab47a0000040":[{"id":287394,"user_id":null,"body":"library(stringr)\n\nprinter_error <- function(s) {\n   paste(str_count(s, \"[n-z]\"), str_length(s), sep = \"\/\")\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287395,"user_id":null,"body":"printer_error <- function(s) {\n  input <- unlist(strsplit(s, \"\"))\n  \n  bad_chars <- letters[14:26]\n  \n  numerator <- sum(input %in% bad_chars)\n  \n  denominator <- length(input)\n  \n  paste0(numerator, \"\/\", denominator)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287396,"user_id":null,"body":"printer_error <- function(s) {\n  sprintf(\"%d\/%d\", nchar(gsub(\"[a-m]\", \"\", s)), nchar(s))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287397,"user_id":53,"body":"printer_error <- function(s) {\n  m <- nchar(gsub(\"[abcdefghijklm]\",\"\",s, ignore.case = TRUE))\n  n <- nchar(s)\n  paste(toString(m), toString(n), sep=\"\/\")\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287398,"user_id":null,"body":"printer_error <- function(s) {\n  valid_colors <- letters[1:13]\n  check <- unlist(strsplit(s, \"\")) %in% valid_colors\n  wrong <- sum(!check)\n  total <- nchar(s)\n  paste(wrong, total, sep = \"\/\")\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287399,"user_id":null,"body":"printer_error <- function(s) {\n  ns <- nchar(s)\n  errors <- nchar(gsub(\"[a-m]\", \"\", s))\n  paste(errors, \"\/\", ns, sep = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287400,"user_id":null,"body":"printer_error <- function(s) {\n  correct <- unlist(strsplit(\"abcdefghijklm\", \"\"))\n  errors  <- unlist(strsplit(s,\"\"))\n  paste(toString(sum(!(errors %in% correct))), \"\/\", toString(length(errors)), sep=\"\")\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287401,"user_id":null,"body":"printer_error <- function(s) {\n  c=utf8ToInt(s)\n  paste(length(c[c>109]),\"\/\",length(c),sep=\"\")\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287402,"user_id":null,"body":"library(dplyr)\ndf <- data.frame(A = rnorm(5), B = rnorm(5), C = rnorm(5))\ndf %>%\n  arrange(B) %>%\n  select(A) %>%\n  filter(A == \"\")\n\nlibrary(purrr)\nlibrary(stringr)\nlibrary(dplyr)\nprinter_error <- function(s) {\n  num <- s %>%\n    stringr::str_split(string = ., pattern = \"\") %>% \n    .[[1]] %>%\n    purrr::map(~as.numeric(which(letters %in% .) > 13)) %>%\n    unlist() %>%\n    sum()\n  den <- nchar(s)\n  paste0(num, \"\/\", den)\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287403,"user_id":null,"body":"printer_error <- function(s) {\n  alpha = letters[1:13]\n  s = strsplit(s,split=\"\")[[1]]\n  a = sum(!(s %in% alpha))\n  b = length(s)\n  return(paste(a,b,sep=\"\/\"))\n}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5656b6906de340bd1b0000ac":[{"id":287404,"user_id":null,"body":"longest <- function(s1, s2) {\n  paste(sort(union(unlist(strsplit(s1, split=\"\")), unlist(strsplit(s2, split=\"\")))), collapse=\"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287405,"user_id":null,"body":"longest <- function(s1, s2) {\n  paste(sort(unique(unlist(strsplit(c(s1,s2),\"\")))),collapse=\"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287406,"user_id":null,"body":"library(stringr)\nlibrary(dplyr)\nlongest <- function(s1, s2) {\n  s<-paste(s1,s2,sep = '')\n  s<-strsplit(s,split = '')%>%\n      unlist()%>%\n      str_sort()%>%\n      unique()\n  paste(s,collapse = '')\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287407,"user_id":null,"body":"longest <- function(s1, s2) {\n  # your code\n  \n  sS1 <- strsplit(s1, \"\")[[1]]\n  sS2 <- strsplit(s2, \"\")[[1]]\n  u <- sort(union(sS1, sS2))\n  u <- paste0(u, collapse=\"\")\n\n  return(u)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287408,"user_id":null,"body":"longest <- function(s1, s2) {\n  lg <- paste0(s1, s2) %>% \n    strsplit('') %>% \n    unlist() %>% \n    unique() %>% \n    sort() %>% \n    paste0(collapse = '')\n  return(lg)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287409,"user_id":null,"body":"longest <- function(s1, s2) {\n  # your code\nrequire(dplyr)\nresult <- c(s1,s2) %>% \n  sapply(strsplit, s='') %>% \n  unlist %>% \n  unique() %>% \n  sort() %>% \n  paste0(collapse  = '')\n  }","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287410,"user_id":null,"body":"longest <- function(s1, s2) {\n    paste(letters[letters %in% unlist(strsplit(paste0(s1,s2),\"\"))],collapse='')\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287411,"user_id":null,"body":"longest <- function(s1, s2) {\n  paste(unique(sort(strsplit(paste(s1, s2, sep = \"\"), \"\")[[1]])), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287412,"user_id":null,"body":"longest <- function(s1, s2) {\n  s <- sort(union(strsplit(s1,\"\")[[1]],strsplit(s2,\"\")[[1]]))\n  paste(s,collapse=\"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287413,"user_id":null,"body":"longest <- function(s1, s2) {\n  s <- paste(s1, s2, sep=\"\")#\n  r <- unique(strsplit(s,\"\")[[1]])\n  t <- sort(r)\n  u <- paste(t, collapse=\"\")\n  return(u)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"565abd876ed46506d600000d":[{"id":287414,"user_id":53,"body":"simpson <- function (n) {\n   pi\/n*(1+2*cos(pi\/n)^3+3*cos(2*pi\/n))\/(sin(3*pi\/n))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287415,"user_id":421,"body":"f <- function(n) sin(n) ^ 3 * 1.5\n\nsimpson <- function (n) {\n  h <- pi \/ n\n  first <- f((2 * n %\/% 2 - 1) * h)\n  second <- 0\n  for(i in 1: (n %\/% 2 - 1)){  \n    first <- first + f((2 * i - 1) * h)\n    second <- second + f(2 * i * h)\n  }\n  pi \/ (3 * n) * (f(0) + f(pi) + 4 * first + 2 * second)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287416,"user_id":492,"body":"simpson <- function (n) {\n    f <- function (x) { 1.5 * (sin(x) ^ 3) }\n    h <- pi \/ n\n    s1 <- 0\n    for (i in 1:as.integer(floor(n\/2))) {\n        s1 <- s1 + f((2 * i - 1) * h)\n    }\n    s2 <- 0\n    for (j in 1:as.integer(floor(n\/2)) - 1) {\n        s2 <- s2 + f(2 * j * h)\n    }\n    pi \/ (3 * n) * (f(0) + f(pi) + 4 * s1 + 2 * s2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287417,"user_id":null,"body":"f <- function(x){\n  return((3\/2)*sin(x)**3)\n}\nsimpson <- function(n){\n return((pi\/(3*n))*(f(0) +\n                    f(pi) +\n                    4*sum(sapply(1:(n\/2), function(x){return(f((2*x-1)*pi\/n))})) +\n                    2*sum(sapply(1:((n\/2)-1), function(x){return(f(2*x*pi\/n))})))\n  )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287418,"user_id":null,"body":"simpson <- function (n) {\n  pi * sum(sin(seq(pi\/n, pi, l = n))^3 * 2:1) \/ n\n  # Abusing the fixed nature of the problem.\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287419,"user_id":null,"body":"sr <- function(f, a, b) {\n  force(f)\n  ba <- b - a\n  function(n) {\n    h <- ba \/ n\n    s <- seq_len(n \/ 2)\n    s1 <- a + (2 * s - 1) * h\n    s2 <- a + 2 * s[-length(s)] * h\n    ba * (f(a) + f(b) + 4 * sum(f(s1)) + 2 * sum(f(s2))) \/ (3 * n)\n  }\n}\n\nsimpson <- sr(function(x) 3 * sin(x)^3 \/ 2, 0, pi)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287420,"user_id":669,"body":"simpson <- function (n) {\n  f <- function(x) 3 \/ 2 * sin(x)^3\n  a <- 0\n  b <- pi\n  \n  h <- (b - a) \/ n\n  x <- a + seq(n - 1) * h\n  (b - a) \/ (3 * n) * (f(a) + f(b) + sum(f(x) * rep_len(c(4, 2), n - 1)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287421,"user_id":null,"body":"f <- function(x){\n  return(1.5*(sin(x))^3)\n}\n\nsimpson <- function (n) {\n  h <- pi\/n\n  t1 <- 0; t2 <- 0\n  for(ii in 1:(n*0.5)){\n    t1 <- t1+f((2*ii-1)*h)\n  }\n  for(jj in 1:(n*0.5-1)){\n    t2 <- t2 + f(2*jj*h)\n  }\n  return(pi\/(3*n)*(4*t1+2*t2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287422,"user_id":null,"body":"simpson <- function(n) {\n  i1 <- 1:(n \/ 2)\n  pin <- pi \/ n\n  x1 <- pin * (2 * i1 - 1)\n  ts1 <- sin(x1) ^ 3\n  i2 <- 1:((n \/ 2) - 1)\n  x2 <- 2 * i2 * pin\n  ts2 <- sin(x2) ^ 3\n  pin * (2 * sum(ts1) + sum(ts2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287423,"user_id":null,"body":"f <- function(x) (3\/2) * sin(x)^3\n\nsimpson <- function (n) {\n  term0 <- pi \/(3*n)\n  term1 <- f(0) + f(pi)\n  term2 <- 4 * sum(f((2*(1:(n\/2)) -1)*(pi\/n)))\n  term3 <- 2 * sum(f(2*(1:(n\/2-1))*(pi\/n)))\n  term0*(term1+term2+term3)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"565c0fa6e3a7d39dee000125":[{"id":287424,"user_id":null,"body":"dist <- function (v, mu) {                      # suppose reaction time is 1\n     reaction.distance<- v\/3.6\n     braking.distance <- (v*v) \/ (2*mu*9.81*3.6*3.6)\n     reaction.distance + braking.distance\n}\n\nspeed  <- function (d, mu) {                    # suppose reaction time is 1\n     (sqrt(2*d*mu*9.81+(mu^2)*9.81^2)-mu*9.81)*3.6\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287425,"user_id":669,"body":"dist <- function(v, mu, t_react = 1, g = 9.81) {\n  v_ms <- v * 5 \/ 18\n  v_ms * t_react + v_ms^2 \/ (2 * mu * g)\n}\n\nspeed  <- function(d, mu, t_react = 1, g = 9.81) {\n  # solve quadratic equation\n  z <- c(-d, t_react, 1 \/ (2 * mu * g))\n  Re(polyroot(z)[1]) * 18 \/ 5 # convert back to km \/ h\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287426,"user_id":492,"body":"dist <- function (v, mu) {                      # suppose reaction time is 1\n     g <- 9.81                                  # acceleration due to gravity in m\/s\n     coef <- 1000.0 \/ 3600.0                    # km\/h -> m\/s\n     dreact <- v * coef                         # distance of reaction with t = 1\n     vms <- coef * v                            # speed in m\/s\n     dbrak <- 0.5 * (vms ^ 2) \/ mu \/ g   # braking distance\n     dreact + dbrak                             # total distance\n}\n\nspeed  <- function (d, mu) {                    # suppose reaction time is 1\n     g <- 9.81                                  # acceleration due to gravity in m\/s\n     coef <- 3600 \/ 1000.0                      # m\/s -> km\/h\n     0.5 * mu * g * (- 2 + sqrt(4 + 8 * d \/ mu \/ g)) * coef\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287427,"user_id":null,"body":"dist <- function (v, mu) {                      \n  v <- v * (5\/18)\n  v + ((v * v) \/ (2*mu*9.81))\n}\n\nspeed  <- function (d, mu) {                    \n  f <- function (v) v^2 + (2 * mu * 9.81) * v - d * (2 * mu * 9.81)\n  uniroot(f, c(0, 10000), tol = 1e-16)$root * 3.6\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287428,"user_id":null,"body":"dist <- function (v, mu) \n{\n  v = (v*1000)\/3600 # m\/s\n  d1 = (v*v)\/(2*mu*9.81) # braking distance\n  d2 = v # reaction distance in m\/s\n  return(d1+d2)\n}\n\nspeed  <- function (d, mu) \n{\n  b = -2 * mu * 9.81;\n  v = 3.6 * (b + sqrt(b*b - 4*b*d) ) \/ 2\n  return(v)\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287429,"user_id":null,"body":"dist <- function (v, mu) {                      # suppose reaction time is 1\n  g <- 9.81 #m\/s\/s\n  v <- v*1000\/60\/60 #m\/s\n  d1 = v*v \/ (2*mu*g)  \n  v + d1\n}\n\nspeed  <- function (d, mu) {\n  #v*v \/ (2*mu*g) + v - d = 0  # suppose reaction time is 1\n  g <- 9.81 #m\/s\/s\n  a <- 1 \/ (2*mu*g)\n  b <- 1\n  c <- -d\n  v <- (-b + sqrt(b**2 - 4*a*c)) \/ (2*a)\n  v*3600\/1000\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287430,"user_id":53,"body":"dist <- function (v, mu) {\n  u <- v * 5.0 \/ 18.0\n  u + (u ** 2.0) \/ (2.0 * mu * 9.81)\n}\n\nspeed  <- function (d, mu) {\n  b <- -2.0 * mu * 9.81\n  3.6 * (b + (b ** 2.0 - 4.0 * b * d) ** 0.5 ) \/ 2.0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287431,"user_id":null,"body":"dist <- function (v, mu) {                      # suppose reaction time is 1\n     c = 2 * mu * 9.81\n     v_ms = 0.27777778 * v\n     v_ms + (v_ms ^ 2) \/ c\n}\n\nspeed  <- function (d, mu) {                    # suppose reaction time is 1\n     c = 2 * mu * 9.81\n     (sqrt(c ^ 2 + 4 * c * d) - c) \/ (2 * 0.27777778)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287432,"user_id":null,"body":"dist <- function (v, mu) {\n    v <- v*1000\/3600\n    v + (v^2)\/(2*mu*9.81)\n}\n\nspeed <- function (d, mu) {\n    k <- 2*mu*9.81\n    (3600\/1000) * (sqrt(k) * sqrt(k + 4*d) - k) \/ 2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287433,"user_id":50,"body":"dist <- function (v, mu) {                      # suppose reaction time is 1\n    a = v*5\/18\n    a*a\/(mu*19.62)+a\n}\n\nspeed  <- function (d, mu) {                    # suppose reaction time is 1\n    a= 19.62*mu\n    1.8*((a*a+4*a*d)**.5-a)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56606694ec01347ce800001b":[{"id":287434,"user_id":null,"body":"is_triangle <- function(a, b, c){\n  if(any(a<0, b<0, c<0)) FALSE\n  if((a + b > c) & (b + c > a) & (a + c) > b) TRUE else FALSE\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287435,"user_id":null,"body":"is_triangle <- function(a, b, c){\n if(a + b > c &\n    a + c > b &\n    b + c > a &\n   a > 0 &\n   b > 0 &\n   c > 0) {\n   return(TRUE)\n } else {\n   return(FALSE)\n    }\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287436,"user_id":421,"body":"is_triangle <- function(a, b, c){\n  a + b > c && b + c > a && a + c > b\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287437,"user_id":null,"body":"is_triangle <- function(a, b, c) {\n  sides <- sort(c(a, b, c))\n  sides[3] > 0 && sides[3] < sides[1] + sides[2]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287438,"user_id":null,"body":"is_triangle <- function(a, b, c){\n  ans<- sort(c(a,b,c))\n  if ((ans[1]+ans[2])>ans[3]) {\n    res=TRUE\n  }\n  else{res=FALSE}\n  res\n}\n#Property of a triangle that sum of any 2 sides is greater than that of the third","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287439,"user_id":null,"body":"is_triangle <- function(a, b, c){\n a+b>c & a+c>b & b+c>a\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287440,"user_id":null,"body":"is_triangle <- function(a, b, c){\n  li <- c(a,b,c)\n  lst <- sort(li, decreasing=T)\n\n  if (lst[1] < lst[2] + lst[3]){\n    return(T)\n  }\n  return(F)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287441,"user_id":null,"body":"is_triangle <- function(a, b, c){\n  line <- sort(c(a,b,c))\n  return(line[1] + line[2] > line[3])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287442,"user_id":null,"body":"is_triangle <- function(a, b, c){\n  d=max(a,b,c)\n  e=a+b+c-2*d\n  \n  e>0\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287443,"user_id":null,"body":"is_triangle <- function(a, b, c){\n\nvec = sort(c(a, b, c))\na = vec[1]\nb = vec[2]\nc = vec[3]\n\nif(is.finite(acos((c^2 - a^2 - b^2)\/(-2*a*b))\/pi*180)){\nif(sum(vec) == sum(abs(vec)) & \n   acos((c^2 - a^2 - b^2)\/(-2*a*b))\/pi*180 != 180){TRUE\n  }else{FALSE}\n}else{FALSE}\n\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5663f5305102699bad000056":[{"id":287444,"user_id":null,"body":"mxdiflg <-  function(a1, a2) {\n    if (length(a1) == 0) return(-1)\n    if (length(a2) == 0) return(-1)\n    max(max(nchar(a1))-min(nchar(a2)), max(nchar(a2))-min(nchar(a1)) )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287445,"user_id":492,"body":"mxdiflg <-  function(a1, a2) {\n  if (length(a1) && length(a2)) {\n    x1 <- nchar(a1)\n    x2 <- nchar(a2)\n    max(max(x1) - min(x2), max(x2) - min(x1))\n  } else {\n    -1\n  }\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287446,"user_id":null,"body":"mxdiflg <-  function(a1, a2) {\n  if(is.null(a1) | is.null(a2)){\n    return(-1)\n  }\n  \n  a1 <- lapply(a1, nchar) %>% unlist()\n  a2 <- lapply(a2, nchar) %>% unlist()\n\n  a1 <- c(max(a1), min(a1))\n  a2 <- c(min(a2),max(a2))\n\n  result <- abs(a1 - a2) %>% max()\n\n  return(result)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287447,"user_id":null,"body":"mxdiflg <-  function(a1, a2) {\n    if (is.null(a1) || is.null(a2)) { return(-1) }\n    l1<-sapply(a1,nchar)\n    l2<-sapply(a2,nchar)\n    ma1<-max(abs(l1))\n    ma2<-max(abs(l2))\n    mi1<-min(abs(l1))\n    mi2<-min(abs(l2))\n    max(ma1-mi2,ma2-mi1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287448,"user_id":null,"body":"mxdiflg <-  function(a1, a2) {\n  if(length(a1) == 0 | length(a2) == 0){out = -1}\n  else{\n    min_a1 = min(sapply(a1,function(x){y = length(strsplit(x,split=\"\")[[1]]);y}))\n    max_a1 = max(sapply(a1,function(x){y = length(strsplit(x,split=\"\")[[1]]);y}))\n    min_a2 = min(sapply(a2,function(x){y = length(strsplit(x,split=\"\")[[1]]);y}))\n    max_a2 = max(sapply(a2,function(x){y = length(strsplit(x,split=\"\")[[1]]);y}))\n    out = max(abs(min_a1-max_a2),abs(min_a2-max_a1))\n  }\n  return(out)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287449,"user_id":null,"body":"mxdiflg <-  function(a1, a2) {\n    \n  if(length(a1) == 0 | length(a2) == 0){ \n          print(-1)\n  }else{\n    a <- c(max(nchar(a1)-min(nchar(a2)),max(nchar(a2)-min(nchar(a1)))))\n    print(max(a))\n  } \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287450,"user_id":null,"body":"mxdiflg <-  function(a1, a2) {\n    # your code\n  if (length(a1)==0){\n    return \n  }\n  b1=c()\n  b2=c()\n  for (i in 1:length(a1)){\n    b1[i]=nchar(a1[i])\n  }\n  for (i in 1:length(a2)){\n    b2[i]=nchar(a2[i])\n  }\n  if (length(b1)==0 | length(b2)==0){\n    return(-1)\n  }\n  max(abs(max(b1)-min(b2)),abs(min(b1)-max(b2)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287451,"user_id":null,"body":"mxdiflg <-  function(a1, a2) {\n    library(stringr)\n  if(length(a1) == 0 | length(a2) == 0){\n    return(-1)\n  }else{\n    max(max(str_length(a1)) - min(str_length(a2)), max(str_length(a2)) - min(str_length(a1)))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287452,"user_id":null,"body":"mxdiflg <-  function(a1, a2) {\n  ifelse(is.null(a1) | is.null(a2), -1, \n         max(max(nchar(a1))-min(nchar(a2)), max(nchar(a2))-min(nchar(a1))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287453,"user_id":null,"body":"mxdiflg <-  function(a1, a2) {\n\n  if (length(a1)==0 || length(a2)== 0){\n    print (-1)\n  }else{\n    b1=c()\n    b2=c()\n    for (i in a1){\n      b1=append (b1,nchar(i))\n    }\n    for (j in a2){\n      b2=append(b2,nchar(j))\n    }\n    c1=abs(min(b1)-max(b2))\n    c2=abs(min(b2)-max(b1))\n    if(c1>c2){\n      print(c1)\n    }else {print (c2)}\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"566543703c72200f0b0000c9":[{"id":287454,"user_id":null,"body":"#' epidemic\n#'\n#' @description\n#' Returns the maximum number of infected during a period.\n#'\n#' @param tm double\n#' integer; a period of days.\n#' @param n double\n#' integer; period size.\n#' @param s0 double\n#' integer; base susceptible count at time t.\n#' @param i0 double\n#' integer; base infected count at time t.\n#' @param b double\n#' float; constant; a number of contacts that spread the disease.\n#' @param a double\n#' float; constant; a fraction of the infected that will recover.\n#'\n#' @return double\n#' integer; the highest count of infected in an interval [0, tm].\n#' @export\n#'\n#' @examples\nepidemic <- function(tm, n, s0, i0, b, a) {\n  res = 0\n  r0 = 0\n  d_t = tm \/ n\n  num_seq = seq(0, tm, d_t)\n\n  for (n in num_seq) {\n    # k+1 values.\n    s_n = s0 - d_t * b * s0 * i0\n    i_n = i0 + d_t * (b * s0 * i0 - a * i0)\n    r_n = r0 + d_t * i0 * a\n\n    # Sets the values for next iteration.\n    s0 = s_n\n    i0 = i_n\n    r0 = r_n\n\n    # Holds the highest infected count so far.\n    res = ifelse(\n      test = floor(i_n) > res,\n      yes = floor(i_n),\n      no = res)\n  }\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287455,"user_id":null,"body":"epidemic <- function (tm, n, s0, i0, b, a) {\n    dt = tm\/n\n    t = seq(0, tm, dt)\n\n    S = c(s0, rep(0, n))\n    I = c(i0, rep(0, n))\n    R = rep(0, n+1)\n        \n    for(k in 1:n){\n      S[k+1] = S[k] - dt * b * S[k] * I[k]\n      I[k+1] = I[k] + dt * (b * S[k] * I[k] - a * I[k])\n      R[k+1] = R[k] + dt * I[k] *a\n    }\n    trunc(max(I))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287456,"user_id":53,"body":"epidemic <- function (tm, n, s0, i0, b, a) {\n    s <- s0\n    i <- i0\n    r <- 0\n    t <- 0\n    dt <- tm\/n\n    imax <- 0\n    while (t<tm) {\n        sd <- dt*(-b*s*i)\n        id <- dt*(b*s*i-a*i)\n        rd <- dt*(a*i)\n        s <- s + sd\n        i <- i + id\n        r <- r + rd\n        t <- t + dt\n        imax <- max(imax, floor(i))\n    }\n    return(imax)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287457,"user_id":null,"body":"epidemic <- function (tm, n, s0, i0, b, a) {\n  \n  # Precalculate reused constants\n  dt <- tm \/ n\n  aob <- a \/ b\n  \n  # Create vectors to hold loop results, and set initial values\n  si <- numeric(length = n)\n  ii <- numeric(length = n)\n  si[1] <- s0\n  ii[1] <- i0\n  k <- 1L\n  \n  # Loop until the value of s(t) = a \/ b, at this point i(t) is at its maximum\n  while(si[k] > aob) {\n    si[k + 1] <- si[k] - dt * b * si[k] * ii[k]\n    ii[k + 1] <- ii[k] + dt * (b * si[k] * ii[k] - a * ii[k])\n    k <- k + 1L\n  }\n  \n  # Return last value of i(t) as an integer\n  as.integer(ii[k])\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287458,"user_id":null,"body":"epidemic <- function (tm, n, s0, i0, b, a) {\n    dt <- tm\/n;\n    max_so_far <- 0;\n    s <- s0; i <- i0; r <- 0.0;\n    while(n>0) {\n      n <- n-1;\n      ns <- s - dt * b * s * i;\n      ni <- i + dt * i * (b * s - a);\n      nr <- r + dt * i * a;\n      max_so_far <- floor(max(max_so_far, ni));\n      s <- ns; i <- ni; r <- nr;\n    }\n    max_so_far\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287459,"user_id":492,"body":"epidemic <- function (tm, n, s0, i0, b, a) {\n    dt <- tm \/ n; s <- s0; i <- i0; r <- 0\n    max <- i\n    for (k in 0:n) {\n        s1 <- s - dt * b * s * i\n        i1 <- i + dt * (b * s * i - a * i)\n        r1 <- r + dt * i * a\n        if (i > max) { max = i}\n        s <- s1; i <- i1; r <- r1\n    }\n    as.integer(max)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287460,"user_id":null,"body":"epidemic <- function (tm, n, s0, i0, b, a) {\n  i <- i0\n  s <- s0\n  r <- 0\n  dt <- tm\/n\n  for (t in c(1:(n-1))){\n    s <- c(s, s[t] - tm\/n * b * s[t] * i[t])\n    i <- c(i, i[t] + tm\/n * (b * s[t] * i[t] - a * i[t]))\n    r <- c(r, r[t] + tm\/n * i[t] * a)\n  }\n  return(max(i))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287461,"user_id":null,"body":"epidemic <- function (tm, n, s0, i0, b, a)\n{\n  s <- c(s0)\n  i <- c(i0)\n  r <- c(0)\n  dt <- tm\/n\n    \n  for(k in 1:n)\n  {\n    s[k+1] <- s[k] - dt * b * s[k] * i[k]\n    i[k+1] <- i[k] + dt * (b * s[k] * i[k] - a * i[k])\n    r[k+1] <- r[k] + dt * i[k] * a\n  }\n  return(max(i))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287462,"user_id":null,"body":"epidemic <- function (tm, n, s0, i0, b, a) {\n  dt <- tm\/n\n  susc <- c(s0)\n  inf <- c(i0)\n  rec <- c(0)\n  for (i in 0:n) {\n    susc <- append(susc, susc[i] - (dt * b * susc[i] * inf[i]))\n    inf <- append(inf, inf[i] + (dt * ((b * susc[i] * inf[i]) - (a * inf[i]))))\n    rec <- append(rec, rec[i] + dt * inf[i] * a)\n  }\n  max(inf)\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287463,"user_id":null,"body":"epidemic <- function (tm, n, s0, i0, b, a) {\n  s <- s0\n  i <- i0\n  r <- 0\n  for(j in 1:n){\n    s <- c(s[1]-tm\/n*b*s[1]*i[1],s)\n    i <- c(i[1]+tm\/n*(b*s[2]*i[1]-a*i[1]),i)\n    r <- c(r[1]+tm\/n*i[2]*a,r)\n  }\n  floor(max(i))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5667e8f4e3f572a8f2000039":[{"id":287464,"user_id":null,"body":"accum <- function(s){\n  x <- unlist(strsplit(tolower(s), \"\"))\n  paste0(toupper(x), strrep(x, seq_along(x) - 1), collapse = \"-\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287465,"user_id":null,"body":"accum <- function(s){\n  n <- nchar(s)\n  str <- unlist(strsplit(s,\"\"))\n  res <- {}\n  for (i in 1: n){\n    res[i] <- paste0(c(toupper(str[i]),rep(tolower(str[i]),i-1)),collapse =\"\")\n  }\n  result <- paste0(res, collapse= \"-\")\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287466,"user_id":2334,"body":"accum <- function(s){\n  s <- unlist(strsplit(casefold(s), \"\"))\n  res <- character()\n  for (i in seq_along(s)){\n    res <- c(res, paste(rep(s[i], i), collapse = \"\")) \n  }\n  res[1] <- toupper(res[1])\n  res[-1] <- tools::toTitleCase(res[-1])\n  paste(res, collapse = \"-\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287467,"user_id":null,"body":"accum <- function(s){\n  #Make sure all chars are lowered\n  s <- tolower(s)\n  #Split initial string to a vecor of chars\n  s <- unlist(strsplit(s, ''))\n  #Loop throught the chars and repeate i(index) times\n  ns <- c()\n  for(i in 1:length(s)){\n    ns <- c(ns, paste(rep(s[i], times = i), collapse = ''))\n  }\n  #Loop through new substrings and make its first char upper case\n  for(i in 1:length(ns)){\n    substr(ns[i], 1, 1) <- toupper(substr(ns[i], 1, 1))\n  }\n  #Concatenate substrings into just one string separated by -\n  ns <- paste(ns, collapse = '-')\n  print(ns)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287468,"user_id":null,"body":"require(stringr)\n\naccum <- function(s){\n  s %>% str_split(\"\") %>% unlist %>% strrep(1:nchar(s))%>% str_to_lower %>% str_to_title %>% paste0(collapse=\"-\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287469,"user_id":null,"body":"accum <- function(s){\n  s <- tolower(unlist(strsplit(s,split=\"\")))\n  result <- toupper(s[1])\n  length <- length(s)\n  \n  if(length<2){\n    return(result) \n  }\n  else{\n    for(i in 2:length){\n      rep <- i-1\n      result <- paste0(result,\"-\", toupper(s[i]), strrep(s[i],i-1), sep=\"\")\n    }\n    return(result) \n  }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287470,"user_id":null,"body":"accum <- function(s) {\n  \n  acc <- purrr::imap_chr(unlist(strsplit(s, \"\")), ~ stringr::str_to_title(strrep(.x, .y)))\n  \n  return(paste(acc, collapse = '-'))\n  \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287471,"user_id":null,"body":"library(tidyverse)\naccum <- function(s) {\n  arr <- s %>%\n    str_split(\"\") %>%\n    unlist() %>%\n    tolower()\n  \n\nmap2_chr(arr, seq_along(arr), function(x, n) {\n  str_c(toupper(x), rep(x, n - 1) %>% str_c(collapse = \"\"))\n}) %>% str_c(collapse = \"-\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287472,"user_id":null,"body":"library(stringr)\n\naccum <- function(s){\n  s = unlist(strsplit(tolower(s),\"\"))\n  s = strrep(s,seq_along(s))\n  s = str_to_title(s) \n  return(paste0(s, collapse = \"-\"))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287473,"user_id":null,"body":"library(stringr)\n\naccum <- function(s){\n    s = tolower(s)\n    s = unlist(strsplit(s,\"\"))\n    len = c(1:length(s))\n    ans = NULL\n    for(i in len){\n       ans <- c(ans,paste(rep(s[i],i), collapse = \"\"))\n    }\n    ans = str_to_title(ans)\n    paste0(ans, collapse = \"-\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"566be96bb3174e155300001b":[{"id":287474,"user_id":421,"body":"max_ball <- function (v0) {\n  round(v0 * 1000 \/ 3600 * 10 \/ 9.81)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287475,"user_id":492,"body":"max_ball <- function (v0) {\n  round(v0\/9.81\/3.6*10)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287476,"user_id":492,"body":"max_ball <- function (v0) {\n  round(v0\/9.81\/3.6*10)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287477,"user_id":null,"body":"max_ball <- function (v0) {\n  t <- seq(0, 100, 0.1)\n  h <- (v0*1000\/60\/60)*t - 0.5*9.81*t*t\n  return(match(max(h), h)-1)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287478,"user_id":null,"body":"max_ball <- function (v0) {\n  v0 = v0 * 1000\/3600\n  t0 = 0.1\n  h0 = 0\n  h1 = v0*t0 - 0.5*9.81*t0*t0\n  while (h0 < h1) {\n    h0 = h1\n    t0 = t0 + 0.1\n    h1 = v0*t0 - 0.5*9.81*t0*t0\n  }\n  \n  (t0-0.1)*10\n  \n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287479,"user_id":null,"body":"max_ball <- function (v0) {\n  round(10 * (v0 * 1000 \/ 3600) \/ 9.81,0)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287480,"user_id":null,"body":"max_ball <- function (v0) {\n  round(v0 * 50 \/ 176.58)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287481,"user_id":null,"body":"max_ball <- function (v) {\nv <- v\/3.6\nt <- .1\ng<- 9.81\nmax <- 1\nh <-  v*t - 0.5*g*t*t\nh1 <- 10\n\n  while(h < h1) {\n    h1 <- h\n    t <- t + .1\n    h1 <-  v*t - 0.5*g*t*t\n    max <- max+1\n\n   }\n\nmax_Ball <- max\/2\n\nmax_Ball <- ceiling(max_Ball)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287482,"user_id":null,"body":"max_ball <- function (v0, t0=0, h0=0) {\n  t1 <- t0 + 0.1\n  h1 <- v0*(1000\/3600)*t1 - (0.5*9.81*t1*t1)\n  ifelse(h0 >= h1, t0*10, max_ball(v0, t1, h1))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287483,"user_id":null,"body":"max_ball <- function (v0) {\n  # your code\n  times <- 25*v0\/9.81\/9\n  return(round(times))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"566fc12495810954b1000030":[{"id":287484,"user_id":null,"body":"nb_dig <- function(n, d) {\n  sum(strsplit(paste(as.integer((0:n)^2),collapse=''),'')[[1]]==d)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287485,"user_id":null,"body":"library(stringr)\n\nnb_dig <- function(n, d) {\n  options(\"scipen\"=100, \"digits\"=4)\n  str_count(str_c(as.character(seq(0, n)^2), collapse = \"\"), as.character(d))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287486,"user_id":null,"body":"nb_dig <- function(n, d) {\n  options(scipen=999) # resolve scientific notation issue\n  nums <- (0:n)**2\n  str <- paste(nums, collapse=\"\")\n  stringr::str_count(str, toString(d))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287487,"user_id":null,"body":"nb_dig <- function(n, d) {\n  nchar( gsub(paste('[^',d,']'), '', paste(as.integer((0:n)^2),collapse='')) )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287488,"user_id":null,"body":"library(stringr)\noptions(scipen=999)\nnb_dig <- function(n, d) {\n  sum(str_count(c(0:n)^2,as.character(d)))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287489,"user_id":null,"body":"nb_dig <- function(n, d) {\n options(scipen=100)\n sum(strsplit(paste((0:n)^2,collapse=\"\"),\"\")[[1]]==d)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287490,"user_id":492,"body":"nb_dig <- function(n, d) {\n  k <- 0\n  if (d == 0) count <- 1 else count <- 0\n  while (k <= n) {\n    m <- k * k\n    while (m != 0) {\n      if ((m %% 10) == d)\n        count <- count + 1\n      m <- m %\/% 10\n    }\n    k <- k + 1\n  }\n  count\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287491,"user_id":null,"body":"nb_dig <- function(n, d) {\n  d <- as.character(d)\n  n_list <- as.numeric(c((0:n)^2))\n  n_sprint <- sprintf(\"%.0f\", n_list)\n  n_split <- unlist(strsplit(n_sprint, \"\"))\n  n_df <- as.data.frame(n_split)\n  \n  d_df <- n_df %>%\n    subset(n_df$n_split == d)\n  \n  num_of_d <- nrow(d_df)\n  \n  return(num_of_d)\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287492,"user_id":null,"body":"nb_dig <- function(n, d) {\n  sum(sapply(as.character(as.integer((0:n)**2)), function(x,d){length(grep(as.character(d), unlist(strsplit(x,split=\"\"))))},d=d))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287493,"user_id":null,"body":"nb_dig <- function(n, d) {\n  sum(unlist(strsplit(as.character(as.integer(c(0:n)**2)),\"\")) == as.character(d))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5672a98bdbdd995fad00000f":[{"id":287494,"user_id":null,"body":"rps <- function(p1, p2){\n  if(p1 == p2){'Draw!'}\n  else if((p1 == 'scissors' & p2 == 'paper')|(p1 == 'paper' & p2 == 'rock')|(p1 == 'rock' & p2 == 'scissors')){'Player 1 won!'}\n  else{'Player 2 won!'}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287495,"user_id":null,"body":"rps <- function(p1, p2){\n  rps_value <- function(p) {\n    rps_ <- c('rock', 'paper', 'scissors')\n    match(p, rps_) - 1\n  }\n  \n  q1 <- rps_value(p1)\n  q2 <- rps_value(p2)\n  \n  switch(\n    (q2-q1)%%3 + 1,\n    \"Draw!\",\n    \"Player 2 won!\",\n    \"Player 1 won!\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287496,"user_id":null,"body":"rps <- function(p1, p2){\n #your code here\nif (p1==\"scissors\" & p2==\"paper\"){\n  'Player 1 won!'\n} else if (p1==\"scissors\" & p2 == \"rock\") {\n  'Player 2 won!'\n} else if (p1==\"scissors\" & p2 == \"scissors\") {\n  'Draw!'\n} else if (p1==\"paper\" & p2==\"paper\"){\n  'Draw!'\n} else if (p1==\"paper\" & p2 == \"rock\") {\n  'Player 1 won!'\n} else if (p1==\"paper\" & p2 == \"scissors\") {\n  'Player 2 won!'\n} else if (p1==\"rock\" & p2==\"paper\"){\n  'Player 2 won!'\n} else if (p1==\"rock\" & p2 == \"rock\") {\n  'Draw!'\n} else if (p1==\"rock\" & p2 == \"scissors\") {\n  'Player 1 won!'\n} \n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287497,"user_id":null,"body":"rps <- function(p1, p2){\n  if (p1 == p2)(\n  return(\"Draw!\"))\n    else\n  if (p1 == \"scissors\" & p2==\"paper\")\n    (return(\"Player 1 won!\"))\n  if (p1 == \"rock\" & p2==\"paper\")\n    (return(\"Player 2 won!\"))\n    \n  if (p1 == \"paper\" & p2==\"scissors\")\n    (return(\"Player 2 won!\"))\n  if (p1 == \"paper\" & p2==\"rock\")\n    (return(\"Player 1 won!\"))\n      if (p1 == \"scissors\" & p2==\"rock\")\n    (return(\"Player 2 won!\"))\n   if (p1 == \"rock\" & p2==\"scissors\")\n    (return(\"Player 1 won!\"))\n\n #your code here\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287498,"user_id":null,"body":"rps <- function(p1, p2){\n  r <- \"rock\"\n  s <- \"scissors\"\n  p <- \"paper\"\n  p1won <- \"Player 1 won!\"\n  p2won <- \"Player 2 won!\"\n  \n  if (p1==p2){\"Draw!\"}\n  else if ((p1==r&&p2==s)|(p1==s&&p2==p)|(p1==p&&p2==r))\n     {print(p1won)}\n  else {print(p2won)}\n\n\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287499,"user_id":null,"body":"rps <- function(p1, p2){\n if (p1 == \"rock\") {\n   if (p2 == \"scissors\") {\n     out <- 1\n   } else if (p2 == \"paper\") {\n     out <- 2\n   } else {\n     out <- 0\n   }\n } else if (p1 == \"paper\") {\n   if (p2 == \"scissors\") {\n     out <- 2\n   } else if (p2 == \"rock\") {\n     out <- 1\n   } else {\n     out <- 0\n   }\n } else if (p1 == \"scissors\") {\n   if (p2 == \"scissors\") {\n     out <- 0\n   } else if (p2 == \"rock\") {\n     out <- 2\n   } else {\n     out <- 1\n   }\n }\n  out <- out + 1\n  out <- switch(out, \n               \"Draw!\",\n               \"Player 1 won!\",\n               \"Player 2 won!\")\n  out\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287500,"user_id":null,"body":"rps <- function(p1, p2){\n\nif (p1 == \"scissors\") {\n  if (p2 == \"scissors\"){\n    \"Draw!\"}\n  \n  else if (p2 == \"paper\"){\n    \"Player 1 won!\"\n  }\n  else {\"Player 2 won!\"}\n  \n  }\n\nelse if (p1 == \"paper\") {\n  if (p2 == \"paper\"){\n    \"Draw!\"}\n  else if (p2 == \"rock\"){\n    \"Player 1 won!\"\n  }\n  else {\"Player 2 won!\"}\n}\n \nelse if (p1 == \"rock\") {\n  if (p2 == \"rock\"){\n    \"Draw!\"}\n  else if (p2 == \"scissors\"){\n    \"Player 1 won!\"\n  }\n  else {\"Player 2 won!\"}\n}\n  \n  \n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287501,"user_id":null,"body":"rps <- function(p1, p2){\n #your code here\n  if (p1 == p2) {\n    print('Draw!')\n  } else if ((p1 == 'scissors') & (p2 == 'paper')) {\n    print('Player 1 won!')\n  } else if ((p1 == 'paper') & (p2 == 'rock')) {\n    print('Player 1 won!')\n  } else if ((p1 == 'rock') & (p2 == 'scissors')) {\n    print('Player 1 won!')\n  }else {\n    print('Player 2 won!')\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287502,"user_id":null,"body":"rps <- function(p1, p2){\n  r <- \"rock\"\n  s <- \"scissors\"\n  p <- \"paper\"\n  p1won <- \"Player 1 won!\"\n  p2won <- \"Player 2 won!\"\n  \n  if(p1==r&&p2==s){print(p1won)}\n  else if(p1==s&&p2==p){print(p1won)}\n  else if(p1==p&&p2==r){print(p1won)}\n\n  else if(p1==s&&p2==r){print(p2won)}\n  else if(p1==p&&p2==s){print(p2won)}\n  else if(p1==r&&p2==p){print(p2won)}\n   \n  else{print(\"Draw!\")}\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287503,"user_id":null,"body":"rps <- function(p1, p2){\n#Set acronyms\n  r <- \"rock\"\n  s <- \"scissors\"\n  p <- \"paper\"\n  p1won <- \"Player 1 won!\"\n  p2won <- \"Player 2 won!\"\n  tie <- \"Draw!\"\n  \n#Set if\/else if condition statements  \n##Conditions for Player 1 wins\n  if(p1==r&&p2==s){print(p1won)}\n  else if(p1==s&&p2==p){print(p1won)}\n  else if(p1==p&&p2==r){print(p1won)}\n##Conditions for Player 2 wins  \n  else if(p1==s&&p2==r){print(p2won)}\n  else if(p1==p&&p2==s){print(p2won)}\n  else if(p1==r&&p2==p){print(p2won)}\n##Conditions for tie    \n  else if(p1==r&&p2==r){print(tie)}\n  else if(p1==s&&p2==s){print(tie)}\n  else if(p1==p&&p2==p){print(tie)}  \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56747fd5cb988479af000028":[{"id":287504,"user_id":2334,"body":"get_middle <- function(s){\n  substr(s, (nchar(s)+1)%\/%2, nchar(s)%\/%2 + 1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287505,"user_id":null,"body":"get_middle <- function(s){\n  m <- median(1:nchar(s))\n  substr(s, floor(m), ceiling(m))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287506,"user_id":null,"body":"library(stringr)\nget_middle <- function(s){\n  # Your code\n  if(str_length(s) %% 2 == 0){\n    paste0(\n      str_sub(s, str_length(s)\/2, str_length(s)\/2),\n      str_sub(s, str_length(s)\/2 + 1, str_length(s)\/2 + 1))\n  } else{\n    str_sub(s, ceiling(str_length(s)\/2), ceiling(str_length(s)\/2))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287507,"user_id":null,"body":"get_middle <- function(s){\n  if(nchar(s) %% 2 == 0){\n    s %>% substr((nchar(s)\/2),(nchar(s)\/2)+1)\n  }else{\n    s %>% substr((nchar(s)\/2)+1,(nchar(s)\/2)+1)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287508,"user_id":null,"body":"get_middle <- function(s){\n  x <- nchar(s)\n  y <- x\/2\n   if (x%%2 == 0)\n     return(substr(s, start=y, stop=y+1))\n     #return(\"gerade\")\n  else \n     return(substr(s, start=y+0.5, stop=y+0.5))\n     #return(\"ungerade\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287509,"user_id":null,"body":"get_middle <- function(s){\n  n <- nchar(s)\n  if (n == 0) {\n    return('')\n  } else if (n == 1) {\n    return(s)    \n  } else if (n %% 2 == 0) {\n    return(substr(s, n\/2, n\/2 + 1))\n  } else {\n    index <- ceiling(n\/2)\n    return(substr(s, index, index))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287510,"user_id":null,"body":"get_middle <- function(s){\n  n <- nchar(s)\n  if(n==1 && n==2){\n    res <- s\n  }else if(n %% 2 == 0){\n    res <- substr(s, (n\/2), (n\/2)+1)\n  }else{\n    res <- substr(s, (n\/2)+1, (n+1)\/2)\n  }\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287511,"user_id":null,"body":"get_middle <- function(s){\n  xpld <- unlist(strsplit(s, NULL))\n  if(length(xpld) %% 2 == 0) {\n    middle_a <- length(xpld) \/ 2\n    middle_b <- length(xpld) \/ 2 + 1\n    return(paste(c(xpld[middle_a], xpld[middle_b]), collapse = \"\"))\n  } else {\n    return(xpld[ceiling(length(xpld)\/2)])\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287512,"user_id":null,"body":"get_middle <- function(s){\n  num = nchar(s)\/2 + 1\nif(nchar(s)\/2 == round(nchar(s)\/2)){\n  substr(s, num - 1, num)\n} else {substr(s, num, num)}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287513,"user_id":null,"body":"get_middle <- function(s){\n  \n  a <- 1:(nchar(s))\n  \n  if(nchar(s) %% 2 == 1){\n    substring(s,mean(a),mean(a))\n  }else if(nchar(s) %% 2 == 0){\n    substring(s,(mean(a)-0.5),(mean(a)+0.5))\n    \n  }\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"567501aec64b81e252000003":[{"id":287514,"user_id":676,"body":"wallpaper <- function (l, w, h) {\n  switch(ceiling(2.3*h*(l + w) \/ 5.2) + 1,\n    \"zero\", \"one\", \"two\", \"three\", \"four\",\n    \"five\", \"six\", \"seven\", \"eight\", \"nine\",\n    \"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\",\n    \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\",\n    \"twenty\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287515,"user_id":492,"body":"wallpaper <- function (l, w, h) {\n  numbers <- c('zero', 'one', 'two', 'three', 'four', 'five',\n                'six', 'seven', 'eight', 'nine', 'ten', 'eleven',\n                'twelve', 'thirteen', 'fourteen', 'fifteen',\n                'sixteen', 'seventeen', 'eighteen', 'nineteen', 'twenty')\n  r <- ceiling((l * h * 2 + w * h * 2) * 1.15 \/ 5.2)\n  if (r == 0) numbers[1] else numbers[r+1]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287516,"user_id":null,"body":"wallpaper <- function (l, w, h) {\n  numbers<-c(\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\",\"eleven\",\"twelve\",\"thirteen\",\"fourteen\",\"fifteen\",\"sixteen\",\"seventeen\",\"eighteen\",\"nineteen\",\"twenty\")\n  numbers[trunc(2*(l+w)*h\/.52*1.15\/10)+1]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287517,"user_id":null,"body":"wallpaper <- function (l, w, h) {\n  x = ceiling(2*(l+w)\/0.52*h\/10*1.15)# your code\n  numbers =c(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\",\"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\")\n  numbers[x+1]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287518,"user_id":null,"body":"wallpaper <- function (l, w, h) {\n  # your code\n room_area <- 2*(l*h)+2*(w*h)\n  area15 <-room_area*1.15\n  rolls<-ceiling(area15\/5.2)\n  words <-c(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\",\"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\")\n print(words[rolls+1])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287519,"user_id":53,"body":"wallpaper <- function (l, w, h) {\n  ns <- c('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', \n          'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen', 'twenty')\n  r <- ceiling((l + w) * h * 2.3 \/ 5.2)\n  ifelse(l * w * h == 0, ns[1], ns[r+1])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287520,"user_id":null,"body":"wallpaper <- function(l, w, h){\n  standard_paper <- 0.52*10\n  room <- 2*(l*h+w*h)*1.15 \n  total <- ceiling(room\/standard_paper)\n  numbers <- c(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\",\"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\")\n  ifelse(total>0, numbers[total+1], 'zero')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287521,"user_id":null,"body":"wallpaper <- function(l, w, h){\n  standard_paper <- 0.52*10\n  room <- 2*(l*h+w*h)*1.15 \n  total <- ceiling(room\/standard_paper)\n  #return(total)\n  numbers = c(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\",\"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\")\n  names(numbers) <- c(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\",\"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\")\n  return(numbers[[total+1]])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287522,"user_id":null,"body":"# library(english)   as.english(r)\nwallpaper <- function (l, w, h) {\n  numbers <- c(\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\",\n              \"eleven\",\"twelve\",\"thirteen\",\"fourteen\",\"fifteen\", \"sixteen\",\n              \"seventeen\",\"eighteen\",\"nineteen\",\"twenty\")\n  wall <- 2*(l*h+w*h)*100\n  paper <- wall+wall*15\/100\n  r <- floor(paper\/520)+1\n  print(numbers[r])\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287523,"user_id":132,"body":"txt = c(\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\",\"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\")\nwallpaper <- function (l, w, h) {\n  if(l*w*h==0) return(\"zero\")\n  return(txt[ceiling(2*(l+w)*h*11.5\/52)])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"568d0dd208ee69389d000016":[{"id":287524,"user_id":null,"body":"rental_car_cost <- function(d) {\n  d * 40 - ifelse(d >= 7, 50, ifelse(d >= 3, 20, 0))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287525,"user_id":null,"body":"rental_car_cost <- function(d){\n  tc = d*40\n  ifelse(d >= 7, tc-50, ifelse( d >= 3, tc-20, tc))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287526,"user_id":null,"body":"rental_car_cost <- function(d){\n  40*d - ifelse(d<3,0,ifelse(d < 7, 20, 50))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287527,"user_id":null,"body":"rental_car_cost <- function(d){\n  if(d<3){\n    d*40\n  }\n  else if(d>=3 & d<7){\n    d*40-20\n  }\n  else{\n    d*40-50\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287528,"user_id":null,"body":"rental_car_cost <- function(d){\n  ifelse(d < 3, d*40,\n        ifelse(d<7, d*40-20, d*40-50))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287529,"user_id":null,"body":"rental_car_cost = function(d){\n  total.price = 40 * d\n  if (d >= 7) {\n    total.price = (total.price)-50\n  }\n  if ((d >= 3) & (d < 7)) {\n    total.price= (total.price)-20\n  }\n  print(total.price)\n     }","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287530,"user_id":null,"body":"rental_car_cost <- function(d){\n  x = d * 40\n  if (d>=7) {\n    x = x - 50\n  } else if (d>=3) {\n    x = x - 20\n  }\n  x\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287531,"user_id":null,"body":"rental_car_cost <- function(d){\n  return(ifelse(d<3,d*40,ifelse(d<7,d*40-20,ifelse(d>=7,d*40-50))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287532,"user_id":null,"body":"rental_car_cost <- function(d){\n  if (d >= 3 && d < 7){\n    cost = (d * 40) - 20\n    } else if (d >= 7){\n    cost = (d * 40) - 50\n    } else{\n    cost = d * 40\n  }\n  return (cost)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287533,"user_id":null,"body":"rental_car_cost <- function(d){\n  if(d <= 2){\n    40*d\n  }else if(d>=3 & d <7){    \n    d*40 - 20\n  }else{\n    d*40 - 50\n  }\n    \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"568dcc3c7f12767a62000038":[{"id":287534,"user_id":645,"body":"set_alarm <- function(employed, vacation) employed && !vacation","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287535,"user_id":null,"body":"set_alarm <- function(employed, vacation) {\n  if (employed == TRUE & vacation == FALSE) {\n    return(TRUE) \n  }\n  return(FALSE)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287536,"user_id":null,"body":"set_alarm <- function(employed, vacation) {\nemployed == T & vacation == F\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287537,"user_id":null,"body":"set_alarm <- function(employed, vacation) {\n  ifelse(!employed || employed == vacation, F, T)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287538,"user_id":null,"body":"set_alarm <- function(employed, vacation) {\n  return(ifelse(employed && !vacation, TRUE, FALSE))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287539,"user_id":null,"body":"set_alarm <- function(employed, vacation) {\n  if (employed == \"TRUE\" && vacation == \"TRUE\") {\n    return(FALSE)}\n  else if (employed == \"TRUE\" && vacation == \"FALSE\"){\n    return(TRUE)}\n  else {\n    return(FALSE)}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287540,"user_id":null,"body":"set_alarm <- function(employed, vacation) {\nif(isTRUE(employed) && identical(vacation,FALSE)){\n return(TRUE)}\n  else{return(FALSE)}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287541,"user_id":null,"body":"set_alarm <- function(employed, vacation) {\n  Alarm <- FALSE\n  if ((employed == TRUE) && (vacation == FALSE)){\n    Alarm <- TRUE\n  }\n  Alarm\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287542,"user_id":null,"body":"set_alarm <- function(employed, vacation) {\n  if(employed == TRUE){\n    if(vacation == FALSE){\n      return(TRUE)\n    }else{\n      return(FALSE)\n    }\n  }else{\n    return(FALSE)\n  }\n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287543,"user_id":null,"body":"set_alarm <- function(employed, vacation) {\n  if(employed == T & vacation == F){\n    set_alarm = T\n  }\n  else{F}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"569218bc919ccba77000000b":[{"id":287544,"user_id":null,"body":"dateNbDays <- function (a0, a, p) {\n  return(as.character((ceiling(log(a\/a0,1+p\/36000))+as.Date(\"2016-1-1\"))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287545,"user_id":null,"body":"dateNbDays <- function (a0, a, p) {\n  d = log(a \/ a0) \/ log(1 + p \/ 36000)\n  return(toString(as.Date(\"2016-01-01\") + 1 + d))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287546,"user_id":null,"body":"dateNbDays <- function (a0, a, p) {\n  counter <- 0 \n  while (a0 < a) {\n    a0 <- a0 + (a0*(p\/36000))\n    counter <- counter + 1\n  }\n  return(as.character(as.Date(\"2016-01-01\") + counter))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287547,"user_id":492,"body":"dateNbDays <- function (a0, a, p) {\n  days <- ceiling((log(a) - log(a0))\/log(1 + p\/36000))\n  as.character(as.Date(\"2016-01-01\") + days)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287548,"user_id":null,"body":"dateNbDays <- function (a0, a, p) {\n  count = 0\n  while(a0 < a)\n  {\n    a0 = a0 + a0 * p \/ 36000\n    count = count + 1\n  }\n  return(as.character(as.Date(count, origin = '01-01-2016', format = '%d-%m-%Y')))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287549,"user_id":null,"body":"dateNbDays <- function (a0, a, p) {\n  as.character(as.Date(\"2016-01-01\") + ceiling(log(a \/ a0) \/ log(1 + (p \/ 36000))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287550,"user_id":null,"body":"dateNbDays <- function (a0, a, p) {\n  start_date<-as.Date(\"2016-01-01\")\n  \n  while (a0 <= a){\n    a0 <- a0*(1+p\/36000)\n    start_date<-start_date+1\n  }\n  \n  return (as.character(start_date))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287551,"user_id":null,"body":"dateNbDays <- function (a0, a, p) {\n  days <- 0\n  while (a0 < a){\n    a0   = a0 + (a0 * p \/ 36000)\n    days = days + 1\n  }\n  as.character(as.Date(\"2016-01-01\") + days)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287552,"user_id":null,"body":"dateNbDays <- function (a0, a, p) {\n   n <- 0\n  while(a0 < a) {\n    a0 <- a0 + a0 * p\/36000\n    n <- n+1\n  }\n  return(as.character(as.Date(\"2016-01-01\") + n))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287553,"user_id":null,"body":"dateNbDays <- function (a0, a, p) {\n  n <- 0\n  while(TRUE) {\n    a0 <- a0 + a0 * p\/36000\n    n <- n+1\n    if(a0 >= a) {\n      break\n    }\n  }\n  return(as.character(as.Date(\"2016-01-01\") + n))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"569b5cec755dd3534d00000f":[{"id":287554,"user_id":492,"body":"newAvg <- function(arr, newavg){\n  x <- newavg * (length(arr) + 1) - sum(arr)\n  if(x <= 0) stop(\"ValueError\")\n  ceiling(x)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287555,"user_id":492,"body":"newAvg <- function(arr, newavg){\n  x <- newavg * (length(arr) + 1) - sum(arr)\n  if(x <= 0) stop(\"ValueError\")\n  ceiling(x)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287556,"user_id":421,"body":"newAvg <- function(arr, newavg){\n  d <- ceiling(newavg * (length(arr) + 1) - sum(arr))\n  if(d < 0){\n    stop(\"ValueError\")\n  } else{\n    return(d)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287557,"user_id":53,"body":"newAvg <- function(arr, newavg) {\n  s <- sum(arr)\n  n <- length(arr)\n  x <- newavg * (n + 1) - s\n  if (x < 0) stop(\"ValueError\")\n  ceiling(x)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287558,"user_id":null,"body":"newAvg <- function(arr, newavg){\n  if (length(arr)==0) return(newavg)\n  x = newavg *(length(arr)+1) - sum(arr)\n  if (x<0) stop(\"ValueError\")\n  return(ceiling(x))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287559,"user_id":null,"body":"newAvg <- function(arr, newavg){\n  x <- (length(arr) + 1) * newavg - sum(arr)\n  ifelse(x <= 0, return(ValueError), return(ceiling(x)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287560,"user_id":null,"body":"newAvg <- function(arr, newavg){\n  a <- (length(arr)+1)*newavg-sum(arr)\n  ifelse(a>=0, ceiling(a), stop(\"ValueError\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287561,"user_id":null,"body":"newAvg <- function(arr, newavg) {\n  avgMult = newavg * (length(arr) + 1)\n  nextNum = avgMult - sum(arr)\n  if (nextNum > 0) print(ceiling(nextNum))\n  else stop(\"ValueError\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287562,"user_id":null,"body":"newAvg <- function(arr, newavg) {\n  res <- ceiling(newavg * (length(arr) + 1) - sum(arr))\n  if (res <= 0) stop(\"ValueError\")\n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287563,"user_id":null,"body":"newAvg <- function(arr, newavg){\n  x = newavg * (length(arr) + 1) - sum(arr)# your code\n  ifelse(ceiling(x) <= 0, stop(\"ValueError\"), ceiling(x))  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56a32dd6e4f4748cc3000006":[{"id":287564,"user_id":492,"body":"meanvarAux <- function(town, strng) {\n    rg <- regexpr(paste0(town, \":.*?(?:\n|$)\"), strng, perl=TRUE);\n    twn <- regmatches(strng, rg);\n    if (length(twn) == 0) return(c(-1, -1));\n    stat <- as.numeric(unlist(regmatches(twn, gregexpr(\"[[:digit:]]+\\\\.*[[:digit:]]*\", twn))));\n    c(mean(stat), var(stat)*11\/12);\n}\navg <- function(town, strng) {\n    meanvarAux(town, strng)[1]\n}\nvariance <- function(town, strng) {\n    meanvarAux(town, strng)[2]\n}\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287565,"user_id":null,"body":"library(stringr)\n\nextr <- function(city,strng){\n  data <- strsplit(strng,\"\n\")[[1]]\n  index <- grep(paste0(city,\":\"),data)\n  if(length(index)==0) return(-1)\n  as.numeric(str_extract_all(data[index],\"\\\\d+\\\\.\\\\d\")[[1]])\n}\n\navg <- function(city,strng){\n  data <-extr(city,strng) \n  if(length(data)==1) return(-1)\n  mean(data)\n}\n\nvariance <- function(city, strng) {\n  data <-extr(city,strng) \n  if(length(data)==1) return(-1)\n  var(data)\/12*11\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287566,"user_id":null,"body":"library(stringr)\nlibrary(stringi)\n\navg <- function(town, strng) {\n  town <- paste0(town, \":\")\n  s <- str_split(strng, \"\n\", simplify = T)\n  if (any((grepl(town, s)))){\n  s <- s[grep(town, s)]\n  s <- str_split(s, \":\", simplify = T)[2]\n  s <- str_split(s, \",\", simplify = T)\n  s <- str_split(s, \" \", simplify = T)[,2]\n  s <- mean(as.numeric(s))\n  return(s)\n    } else { return(-1)}\n}\nvariance <- function(town, strng) {\n  town <- paste0(town, \":\")\n  s <- str_split(strng, \"\n\", simplify = T)\n  if (any((grepl(town, s)))){\n  s <- s[grep(town, s)]\n  print(s)\n  s <- str_split(s, \":\", simplify = T)[2]\n  s <- str_split(s, \",\", simplify = T)\n  s <- str_split(s, \" \", simplify = T)[,2]\n  s <- as.numeric(s)\n  m <- mean(s)\n  s <- sum((s-m)**2) \/ (length(s))\n  return(s)}\n  else { return(-1)}\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287567,"user_id":null,"body":"require(tidyverse)\ndata_to_df <- function(strng) {\n  df <- sapply(strsplit(strng, \"\\\n\"), function (x) {str_extract_all(x, '(\\\\d*\\\\.\\\\d)')}) %>% unlist(.) %>% as.numeric(.) %>% matrix(.,12) %>% as_tibble(.)\n  colnames(df) <- str_extract_all(strng, '(\\\\w*)\\\\b:')[[1]] \n  return(df)\n}\n\navg <- function(town, strng) {\n  x <- data_to_df(strng) %>% select(., matches(town)) %>% summarise_if(is.numeric, mean) \n  if(!paste0(town, \":\") %in% names(x)) return(-1)\n  return(pull(x))\n}\nvariance <- function(town, strng) {\n  x <- data_to_df(strng) %>% select(., contains(town)) %>% summarise_if(is.numeric, var)\n  if(!paste0(town, \":\") %in% names(x)) return(-1)\n  return(pull(x) * (11\/12))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287568,"user_id":null,"body":"avg <- function(town, strng) {\n\nlibrary(stringr)  \n  \nsreg<- paste(town,\"::(.*?)  (.*?):Jan \")\nsreg<-str_remove(sreg, \"\\\\s:\")\ns<- regmatches(strng, regexpr(sreg, strng))\nif(length(s) > 0){\n  \n  s<- str_remove_all(s, \"[[:lower:]]\") ;s<- str_remove_all(s, \"[[:upper:]]\") ; s<- str_remove_all(s, \"\n\") ; s <-  str_remove_all(s, \":\")\n  s<-unlist(s) ; \n  s<- str_squish(s)\n  s<- unlist(str_split(s, \",\"))\n  s<-as.numeric(s)\n  return(mean(s))\n} else {       sreg<- paste(town,\"::(.*)\")\n               sreg<-str_remove(sreg, \"\\\\s:\")\n               s2<- regmatches(strng, regexpr(sreg, strng ))\n               if(length(s2) > 0){\n               \n               s2<- str_remove_all(s2, \"[[:lower:]]\") ;s2<- str_remove_all(s2, \"[[:upper:]]\") ; s2<- str_remove_all(s2, \"\n\") ; s2 <-  str_remove_all(s2, \":\")\n               s2<-unlist(s2) ; \n               s2<- str_squish(s2)\n               s2<- unlist(str_split(s2, \",\"))\n               s2<-as.numeric(s2)\n               return(mean(s2)) } else { return(-1)} }\n   \n  \n}\n\nvariance <- function(town, strng) {\n\nlibrary(stringr)  \n  \nsreg<- paste(town,\"::(.*?)  (.*?):Jan \")\nsreg<-str_remove(sreg, \"\\\\s:\")\ns<- regmatches(strng, regexpr(sreg, strng))\nif(length(s) > 0){\n  \n  s<- str_remove_all(s, \"[[:lower:]]\") ;s<- str_remove_all(s, \"[[:upper:]]\") ; s<- str_remove_all(s, \"\n\") ; s <-  str_remove_all(s, \":\")\n  s<-unlist(s) ; \n  s<- str_squish(s)\n  s<- unlist(str_split(s, \",\"))\n  s<-as.numeric(s)\n  return(var(s)*(12-1)\/12)\n} else {       sreg<- paste(town,\"::(.*)\")\n               sreg<-str_remove(sreg, \"\\\\s:\")\n               s2<- regmatches(strng, regexpr(sreg, strng ))\n               if(length(s2) > 0){\n               \n               s2<- str_remove_all(s2, \"[[:lower:]]\") ;s2<- str_remove_all(s2, \"[[:upper:]]\") ; s2<- str_remove_all(s2, \"\n\") ; s2 <-  str_remove_all(s2, \":\")\n               s2<-unlist(s2) ; \n               s2<- str_squish(s2)\n               s2<- unlist(str_split(s2, \",\"))\n               s2<-as.numeric(s2)\n               return(var(s2)*(12-1)\/12) } else { return(-1)} }\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287569,"user_id":null,"body":"avg <- function(town, str) {\n  a <- unlist(strsplit(str, \"\n\", fixed = T))\n  b <- mean(as.numeric(unlist(regmatches(a[grep(paste(town,\":\",sep=\"\"), a)],\n                                         gregexpr(\"[[:digit:]]+\\\\.*[[:digit:]]*\",\n                                         a[grep(paste(town,\":\",sep=\"\"), a)])))))\n  if (is.na(b)) {\n    -1} else {\n      b}\n}\n\n\nvariance <- function(town, str) {\n  a <- unlist(strsplit(str, \"\n\", fixed = T))\n  b <- as.numeric(unlist(regmatches(a[grep(paste(town,\":\",sep=\"\"), a)],\n                                    gregexpr(\"[[:digit:]]+\\\\.*[[:digit:]]*\",\n                                    a[grep(paste(town,\":\",sep=\"\"), a)]))))\n  b <- sum((b-mean(b))^2)\/12\n  if (b==0) {\n    -1} else {\n      b}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287570,"user_id":null,"body":"library(stringr)\navg <- function(town, strng) {\n  print(town)\n  pr<-unlist(str_split(strng,'\n'))[grepl(town,unlist(str_split(strng,'\n')))]\n  pr_ver<- gsub(' ','',pr)\n  pr_ver<-gsub(':.*','',pr_ver)\n  if(length(pr_ver)==0){\n    pr_ver='nada'\n  }\n  if(pr_ver==town){\n    matches <- regmatches(pr, gregexpr(\"[[:digit:]]+\\\\.[[:digit:]]\", pr))\n    matches<-as.numeric(unlist(matches))\n    media=mean(matches)\n    if(media=='NaN'){\n      media=-1\n    }\n  }else{\n    media=-1\n  }\n \n  return(media)\n}\n\n\nvariance <- function(town, strng) {\n  pr<-unlist(str_split(strng,'\n'))[grepl(town,unlist(str_split(strng,'\n')))]\n  pr_ver<- gsub(' ','',pr)\n  pr_ver<-gsub(':.*','',pr_ver)\n  if(length(pr_ver)==0){\n    pr_ver='nada'\n  }\n  if(pr_ver==town){\n    matches <- regmatches(pr, gregexpr(\"[[:digit:]]+\\\\.[[:digit:]]\", pr))\n    matches<-as.numeric(unlist(matches))\n    varianza=sum((matches- avg(town,strng))^2)\/length(matches)\n    if(varianza=='NaN'){\n      varianza=-1\n    }\n  }else{\n    varianza=-1\n  }\n\n  return(varianza)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287571,"user_id":null,"body":"library(tidyverse)\n\n#process raw rainfall string into formatted dataframe\nclean_rain_strng <- function(strng) {\n  \n  #process raw data into wide format\n  cleaned_rain <- strng %>% \n    #prep for read.table\n    gsub(\":\",\",\",.) %>% \n    #convert to dataframe, making use of delim and linebreaks\n    read.table(text=., sep = \",\", strip.white = TRUE) %>%\n    #remove months abreviations and convert rainfall amounts to numeric\n    mutate_at(vars(V2:V13), ~ as.numeric(str_sub(.x, start = 5)))\n  \n  #character vector of months\n  months <- c(\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\")\n  \n  #add descriptive column names\n  names(cleaned_rain) <- c(\"location\", months)\n  \n  #put data in long format\n  cleaned_rain <- gather(cleaned_rain, key = \"month\", value = \"rainfall\", -location)\n  \n  return(cleaned_rain)\n}\n\n\navg <- function(town, strng) {\n  \n  town_rainfall <- clean_rain_strng(strng)\n  \n  if(town %in% town_rainfall$location) {\n    output <- town_rainfall %>% \n                filter(location == town) %>% \n                summarise(mean = mean(rainfall))\n    \n    return(output$mean)\n  }\n  \n  return(-1)\n}\n\nvariance <- function(town, strng) {\n  town_rainfall <- clean_rain_strng(strng) \n  \n  if(town %in% town_rainfall$location) {\n    output <- town_rainfall %>%\n                filter(location == town) %>%\n                mutate(mean_difference_squared = (rainfall - mean(rainfall))^2) %>%\n                summarise(variance = sum(mean_difference_squared)\/n())\n    \n    return(output$variance)\n  }\n \n  return(-1)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287572,"user_id":null,"body":"avg <- function(town, strng) {\n    data0 <- strng\n  data0.1 <- gsub(\"Jan |Feb |Mar |Apr |May |Jun |Jul |Aug |Sep |Oct |Nov |Dec \", \"\", data0)\n  data0.2 <- gsub(\":\", \",\", data0.1)\n  data0.3 <- unlist(strsplit(data0.2, \"\n    \"))\n  data0.4 <- strsplit(data0.3, \",\")\n  \n  data1 <- list()\n  for (i in 1:length(data0.4)) {\n    data1[[i]] <- as.numeric(data0.4[[i]][-1])\n    names(data1)[i] <- data0.4[[i]][1]\n  }\n  \n  if (town %in% names(data1)) {\n    return(mean(data1[[town]]))\n  } else {\n    return(-1)\n  }\n}\n\n\nvariance <- function(town, strng) {\n    data0 <- strng\n  data0.1 <- gsub(\"Jan |Feb |Mar |Apr |May |Jun |Jul |Aug |Sep |Oct |Nov |Dec \", \"\", data0)\n  data0.2 <- gsub(\":\", \",\", data0.1)\n  data0.3 <- unlist(strsplit(data0.2, \"\n    \"))\n  data0.4 <- strsplit(data0.3, \",\")\n  \n  data1 <- list()\n  for (i in 1:length(data0.4)) {\n    data1[[i]] <- as.numeric(data0.4[[i]][-1])\n    names(data1)[i] <- data0.4[[i]][1]\n  }\n  \n  if (town %in% names(data1)) {\n    pop_var <- var(data1[[town]]) * (length(data1[[town]])-1)\/length(data1[[town]])\n    return(pop_var)    \n  } else {\n    return(-1)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287573,"user_id":null,"body":"get_town_data <- function(town, strng) {\n  arr <- strng %>% strsplit('\n') %>% unlist %>% trimws\n  idx <- which(town == gsub(\":.*\", \"\", arr))\n  arr[idx] %>% gsub(\"[A-Za-z:]\", \"\", .) %>% strsplit(',') %>% unlist %>% as.numeric\n}\navg <- function(town, strng) {\n  if (!grepl(paste0(town,':'), strng)) return(-1)\n  mean(get_town_data(town, strng))\n}\nvariance <- function(town, strng) {\n  if (!grepl(paste0(town,':'), strng)) return(-1)\n  r <- get_town_data(town, strng)\n  m <- avg(town, strng)\n  mean((r-m)^2)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56a4872cbb65f3a610000026":[{"id":287574,"user_id":null,"body":"max_rot <- function(n) {\n  max = n = as.character(n)\n  l = nchar(n)\n  for( i in 1:l-1 ) {\n    n = paste( substr(n,0,i-1), substr(n,i+1,l), substr(n,i,i), sep=\"\" )\n    if( n > max ) max = n\n  }\n  as.numeric(max)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287575,"user_id":492,"body":"max_rot <- function(n) {\n  x=as.character(n)\n  l=nchar(x)\n  res=c(x)\n  i <- 1\n  while (i <= l-1) {\n    x <- paste0(substring(x, 1, i - 1), substring(x, i + 1, l), substring(x, i, i))\n    res <- c(res, x)\n    i <- i + 1\n  }\n  max(as.numeric(res))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287576,"user_id":null,"body":"max_rot <- function(n) {\n  str <- unlist(strsplit(as.character(n), \"\"))\n  len <- length(str)\n  \n  if (len < 2) {\n    return(n)\n  }\n  \n  res <- list(c(str[2:len], str[1]))\n\n  for (i in 1:(length(str)-2)) {\n    stri <- res[[i]]\n    res[[i+1]] <- c(stri[1:i], stri[(i+2):len], stri[(i+1)])\n  }\n  \n  finres <- max(sapply(res, function(x) as.numeric(paste0(x, collapse = \"\"))))\n  finres <- max(n, finres)\n                       \n  return(finres)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287577,"user_id":null,"body":"max_rot <- function(n) {\n  if (n==1) return(n)\n  max <- n\n  n <- as.character(n) %>%\n  strsplit(split=\"\") %>%\n  unlist()\n  n.l<-length(n)\n  ns <- array(n,dim=c(n.l,n.l))\n  for (i in 2:n.l){\n    n <- ns[,i-1]\n    nsub <- n[(i-1):n.l]\n    n1 <- c(nsub[2:length(nsub)],nsub[1])\n    if (i>2) n1 <- c(n[1:(i-2)],n1)\n    ns[,i]<-n1\n    if (as.double(paste(ns[,i],collapse=\"\"))>max) max <- as.double(paste(ns[,i],collapse=\"\"))\n  }\n  return(max)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287578,"user_id":null,"body":"max_rot <- function(n) {\n  str <- as.character(n) %>% strsplit(\"\") %>% unlist\n  arr <- c(n)\n  for(i in 1:length(str)){\n  str <- c(str[-i], str[i])\n  arr <- c(arr, paste(str, collapse=\"\") %>% as.numeric())\n  }\n  max(arr)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287579,"user_id":null,"body":"max_rot <- function(n) \n{\n    maxNumRot = ceiling(log(n, 10));\n  \n    maxNum = n;\n    currentNum = n;\n  \n    for (rotNum in maxNumRot : 1 : -1) \n    {      \n        toRot = currentNum %% (10 ** rotNum);\n      \n        leadingNum = currentNum %\/% (10 ** rotNum) * (10 ** rotNum);\n        \n        toRot = (toRot %% (10 ** (rotNum - 1)) * 10) + (toRot %\/% (10 ** (rotNum - 1)));\n      \n        currentNum = leadingNum + toRot;\n      \n        if (currentNum > maxNum) \n        {\n            maxNum = currentNum;\n        }\n    }\n  \n    return(maxNum);\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287580,"user_id":null,"body":"max_rot <- function(n) {\n  rot <- function(vec, keep) {\n    res <- c( vec[(keep+2):length(vec)], vec[keep+1] )\n    if (0==keep) res\n    else c(vec[1:keep],res)\n  }\n  v <- as.character(n) %>% strsplit('') %>% unlist\n  i <- 0\n  basket <- vector(length = length(v))\n  basket[1] <- paste0(v, collapse = '') %>% as.numeric\n  while (i < length(v)-1) {\n    v <- rot(v, i)\n    i <- i+1\n    basket[i+1] <- paste0(v, collapse = '') %>% as.numeric\n  }\n  max(basket)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287581,"user_id":null,"body":"max_rot <- function(n) {\n  num <- unlist(strsplit(toString(n), ''))\n  len <- length(as.list(num))\n  if (len < 2) {\n    return(n)\n  }\n  ans <- c(n)\n  for (i in 1:(len-1)) {\n    if (i == 1) {\n      front <- ''\n    } else {\n      front <- num[1:(i-1)]\n    }\n    new_num <- paste(c(front, num[(i+1):len], num[i]), collapse = '')\n    ans <- append(ans, new_num)\n    num <- unlist(strsplit(toString(new_num), ''))\n  }\n  as.numeric(max(ans))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287582,"user_id":null,"body":"max_rot <- function(n) {\n  options(scipen = 999)\n  \n  # 68999\n  # if the current number is the same as the next number, return the current number\n  \n  # change the number to a string, then split into a character vector\n  # if its the first step, move the first number to the final position + 1, then remove the first number\n  # then change back into an integer\n  # if its the second step, move the second number to the final position + 1, then remove the second number\n  # then change back into an integer\n  \n  # for step k, move the kth number to the final position + 1, then remove the kth number\n  \n  # define two variables: current number and next number\n  \n  results <- integer(nchar(n))\n  results[1] <- n\n  \n  \n  # initialise the current number as n\n  current_number <- n\n  \n  # do a for loop, and break when the condition is met\n  \n  if (nchar(n) == 1){\n    return(n)\n  }\n  \n  for (i in 1:(nchar(n)-1)){\n    \n    current_number_split <- strsplit(as.character(current_number),split=\"\")[[1]]\n    current_number_split <- c(current_number_split,current_number_split[i])\n    current_number_split <- current_number_split[-i]\n    \n    results[i+1] <- as.numeric(paste(current_number_split,collapse=\"\"))\n    \n    current_number <- as.numeric(paste(current_number_split,collapse=\"\"))\n  }\n  \n  return(max(results))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287583,"user_id":null,"body":"max_rot <- function(n) {\n  s <- as.character(n)\n  l <- nchar(s)\n  rotate <- function(s, i) {\n    a <- substr(s, 0, i)\n    b <- substr(s, i+1, i+1)\n    c <- substr(s, i+2, nchar(s))\n    paste0(a, c, b)\n  }\n  numbers <- c(s)\n  for (i in 0:(l-2)) {\n    numbers <- append(numbers, rotate(numbers[i+1], i))\n  }\n  max(as.numeric(numbers))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56a5d994ac971f1ac500003e":[{"id":287584,"user_id":492,"body":"longest_consec <- function (strarr, k) {\n  n <- length(strarr)\n  res <- \"\"\n  if (n == 0 || k > n || k <= 0)\n    return(res)\n  for (i in 1:n) {\n    currentStr <- paste0(strarr[i:(i+k-1)], collapse=\"\")\n    if (nchar(currentStr) > nchar(res)) {\n      res <- currentStr\n    }\n  }\n  res\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287585,"user_id":null,"body":"longest_consec <- function (strarr, k) {\n  # your code\n  #create a variable for the length of list containing strings\n  #which equates to number of strings in the list\n  length_list = length(strarr)\n  \n  #create an empty result string to store the joined consecutive strings\n  result_joinedstrings <- \"\"\n  \n  #if statement for when list is empty or when k is greater than \n  #lenght of when k is less than or equal to zero, then RETURNS empty string\n  #the double || signs is for OR when referring to a single element\n  if (length_list == 0 || k > length_list || k <= 0)\n    return (result_joinedstrings)\n  \n  ##a for loop goes through the entire length of the list of strings\n  for (i in 1:length_list){\n    #and concatentes k consective strings\n    concat_string <- paste0(strarr[i:(i+k-1)], collapse=\"\")\n    \n    if (nchar(concat_string) > nchar(result_joinedstrings)) {\n      result_joinedstrings <- concat_string\n    }\n    \n  \n  }\n  result_joinedstrings  \n}\n\n#longest_consec <- function (strarr, k) {\n#  n <- length(strarr)\n#  res <- \"\"\n#  if (n == 0 || k > n || k <= 0)\n#    return(res)\n#  for (i in 1:n) {\n#    currentStr <- paste0(strarr[i:(i+k-1)], collapse=\"\")\n#    if (nchar(currentStr) > nchar(res)) {\n#      res <- currentStr\n#    }\n#  }\n # res\n#}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287586,"user_id":null,"body":"longest_consec <- function (strarr, k) {\n  n <- length(strarr)\n  if (n == 0 | k > n | k <= 0) return(\"\")\n  \n  newstr <- sapply(seq(length(strarr)-(k-1)), function(x) paste0(strarr[x:(x+k-1)], collapse = \"\"))\n  strlen <- sapply(strsplit(newstr, \"\"), length)\n  newstr[strlen == max(strlen)][1] \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287587,"user_id":null,"body":"longest_consec <- function (strarr, k) {\n  # Error handling\n  if(length(strarr) == 0 | k > length(strarr) | k <= 0){\n    return(\"\")\n  }\n  \n  # Set variables\n  word <- \"\"\n  max <- 0\n  \n  \n  # Check longest\n  for (i in seq_along(strarr)){\n    \n    # Create word\n    for (j in 1:k){\n      word = paste0(word, strarr[j + (i - 1)])\n\n    }\n\n    \n    # Check of longest\n    if(nchar(word) > max){\n      max <- nchar(word)\n      output <- word\n    }\n    word <- \"\"\n  }\n  \n  return(output)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287588,"user_id":null,"body":"longest_consec <- function (strings, k) {\n  n <- length(strings)\n  if (!n | k > n | k < 1)\n    return('')\n  str_lengths <- nchar(strings)\n  idx <- matrix(rep(seq(1, n-k+1), each = k) + seq(0, k-1), k)\n  seq_lengths <- idx\n  seq_lengths[] <- str_lengths[idx]\n  argmax <- which.max(colSums(seq_lengths))\n  paste0(strings[1:k + argmax - 1], collapse = '')\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287589,"user_id":2334,"body":"longest_consec <- function (strarr, k) {\n    n <- length(strarr)\n    if (k <=0 | k > n | n == 0){ \n        \"\"\n    } else {\n        s <- integer(n-k+1)\n        ncs <- nchar(strarr)\n        for(i in seq_along(s)){\n            s[i] <- sum(ncs[i:(i+k-1)])\n        }\n        r <- which(s == max(s))\n        paste(strarr[r:(r+k-1)], collapse = \"\")\n    }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287590,"user_id":null,"body":"longest_consec <- function (s, k) {\n  k <- max((length(s) >= k) * k, 0)\n  y <- sapply(seq_len(max(length(s) - k + 1, 0)),\n              function(x) {\n                paste(s[seq(x, length.out = k)], collapse = \"\")\n              })\n  y[which.max(nchar(y))]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287591,"user_id":null,"body":"longest_consec <- function(strarr, k) {\n  if (length(strarr) == 0 || length(strarr) < k || k <= 0) return (\"\")\n  arr <- unlist(Map(function(i) paste(strarr[i:(i+k-1)], collapse=\"\"), 1:length(strarr)))\n  arr[order(-nchar(arr))][1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287592,"user_id":null,"body":"longest_consec <- function (strarr, k) {\n  print(strarr)\n  print(k)\n  n <- nchar(strarr)\n  longest <- 0\n  if (length(n) == 0 | k < 1 | k > length(strarr)) {\n    return(\"\")\n  } else {\n    for (i in seq_along(n)) {\n      comb_length <- sum(n[i:(i + k - 1)])\n      if (is.na(comb_length)) {\n        break\n      } else {\n        if (comb_length > longest) {\n          longest <- comb_length\n          longest_comb_word <- paste0(strarr[i:(i + k - 1)], collapse = \"\")}\n      }\n    }\n    return(longest_comb_word)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287593,"user_id":null,"body":"longest_consec <- function (strarr, k) {\n  n <- length(strarr)\n  str <- \"\"\n  if ((n == 0) || (k > n) || (k < 1)) {\n    return(str)\n  } else {\n    i <- 1\n    str <- paste(strarr[i:(i+k-1)], collapse = \"\")\n    while (i <= (n-k+1)) {\n      tmp <- paste(strarr[i:(i+k-1)], collapse = \"\")\n      if (nchar(tmp) > nchar(str)) {\n        str <- tmp\n      }\n      i <- i + 1\n    }\n    return(str)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56af1a20509ce5b9b000001e":[{"id":287594,"user_id":492,"body":"travel <- function (r, zipcode) {\n    def <- paste0(zipcode, \":\/\")\n    adarr <- unlist(strsplit(r, split = \"[,]\"))\n    rg <- regexpr(paste0(\"(\\\\d{1,4}) (.*?) \", zipcode, \"$\"), adarr, perl=TRUE)\n    MM <- regmatches(adarr, rg)\n    if (length(MM) == 0) return(def)\n    res1 <- \"\"; res2 <- \"\"\n    for (i in 1:length(MM)) {\n        rg1 <- regexpr(\"(\\\\d{1,4})\", MM[i], perl=TRUE)\n        stNum <- regmatches(MM[i], rg1)\n        addr <- gsub(paste0(stNum, \" \"), replacement=\"\", x=MM[i])\n        addr <- gsub(paste0(\" \", zipcode), replacement=\"\", x=addr)\n        res1 <- paste0(res1, addr, \",\")\n        res2 <- paste0(res2, stNum, ',')\n    }\n    res <- paste0(zipcode, \":\", substr(res1, 1, nchar(res1) - 1), \"\/\", substr(res2, 1, nchar(res2) - 1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287595,"user_id":null,"body":"travel <- function (r, zipcode) {\n  r <- gsub(\"\n\", \"\", r)\n  spots <- unlist(strsplit(r, \",\"))\n  zips <- character(length = length(spots))\n  for (i in 1:length(zips)) {\n    zips[i] <- regmatches(spots[i], regexpr(\"[A-Z]{2} [0-9]+\", spots[i]))\n    spots[i] <- gsub(\" [A-Z]{2} [0-9]+\", \"\", spots[i])\n  }\n  place <- character()\n  nums <- character()\n  for (i in which(zips == zipcode)) {\n    nums <- c(nums, regmatches(spots[i], regexpr(\"[0-9]+\", spots[i])))\n    spots[i] <- gsub(\"[0-9]+ \", \"\", spots[i])\n    place <- c(place, spots[i])\n  }\n  return(paste(zipcode, \":\", paste(place, collapse = \",\"), \"\/\", paste(nums, collapse = \",\"), sep = \"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287596,"user_id":null,"body":"travel <- function (r, zipcode) {\n  r <- unlist(strsplit(r,\",\"))\n  zip <- sapply(r,function(x)substr(x,nchar(x)-7,nchar(x)))\n  s_t <- sapply(r,function(x)substr(x,regexpr(\" \",x)+1,nchar(x)-9))\n  h_num <- as.numeric(sapply(r,function(x)substr(x,1,regexpr(\" \",x)-1)))\n  paste0(zipcode,\":\",paste0(s_t[which(zip==zipcode)],collapse = \",\"),\"\/\",paste0(h_num[which(zip==zipcode)],collapse = \",\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287597,"user_id":null,"body":"travel <- function (r, zipcode) {\n\n  f.split <- function(x){strsplit(x, split='[,\n]+')}\n\n  f.data <- function(x) {\n    sapply(x, function(x){\n      pat <- '^([0-9]+) +(.*) +([A-Z]{2} [0-9]{5})$'\n      c(gsub(pat, '\\\\1', x), gsub(pat, '\\\\2', x), gsub(pat, '\\\\3', x))\n    })\n  }\n\n  f.dataframe <- function(x) {\n    x<- data.frame(matrix(x, ncol=3, byrow=FALSE))\n    colnames(x) <- c('str_num', 'addr', 'zip')\n    return (x)\n  }\n\n  df <- f.dataframe(f.data(f.split(r)))\n\n  query_results <- df[df$zip==zipcode,]\n  addrs = query_results[,2]\n  str_nums = query_results[,1]\n  \n  if (length(addrs)==0) {\n    return (paste(zipcode, ':\/', sep=''))\n  }\n  \n  return(paste(\n    zipcode,\n    ':',\n    paste(addrs, collapse=','),\n    '\/',\n    paste(str_nums, collapse=','),\n    sep=\"\"))\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287598,"user_id":null,"body":"travel <- function (r, z) {\n\n  library(stringr)\n  \n  z_total<- unlist(str_match_all(r, \"[[:upper:]]{2} \\\\d{5}\"))\n  sreg <- paste(\"\\\\d{1,4} (\\\\D* \\\\D* \\\\D*|\\\\D* \\\\D*)\", z,sep = \"\")  \n  x<-unlist(str_extract_all(r,sreg))\n\n  \n  if(sum(z == z_total) == 0){ paste(z,\":\/\",sep = \"\")\n} else if(length(x) == 1)  {\n  x0<-str_remove(x,z)\n  x1<-str_remove(x0,\"\\\\d{1,4}\")\n  x2<-str_extract(x0, \"\\\\d{1,4}\")\n  out1 <-paste(z,\":: \",x1,\" \/\/\",x2, sep = \"\") \n  out1 <- str_squish(out1)\n  out1<-str_remove(out1,\": \")\n  out1<-str_remove(out1, \" \/\")\n  out1\n} else {\n \n  x0<- unlist(str_split(x, \",\"))\n  x0 <- str_remove_all(x0,z)\n  x1<-str_squish(str_remove(x0,\"\\\\d{1,4}\"))\n  x1<-str_squish(paste(x1,collapse =  \",\"))\n  x2<-str_extract(x0, \"\\\\d{1,4}\")\n  x2<-paste(x2,collapse = \",\")\n  out2 <-paste(z,\":: \",x1,\" \/\/\",x2, sep = \"\") \n  out2<-str_remove(out2,\": \")\n  out2<-str_remove(out2, \" \/\")\n  out2\n}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287599,"user_id":null,"body":"travel <- function (r, zipcode) {\n  names <- strsplit(r, split = \",\")\n  zip <- unlist(names) #splitting the string and unlisting to access each element sparated by a comma\n  count <- 1\n  countn <- length(zip)\n  pr1 <- list()\n  pr2 <- list() #creating empty lists to store print values in\n  for (i in 1:length(zip)){\n    if(substr(zip[i], nchar(zip[i])-7, nchar(zip[i])) == zipcode){\n      pr1[count] <- stringi::stri_extract(zip[i], regex = (\"([0-9]+)\")) #extracting house numbers\n      pr2[count] <- stringr::str_trim(substr(zip[i], nchar(pr1[count])+2, nchar(zip[i])-9)) #added 2 here to account for any house numbers that end in 0\n      count <- count + 1\n    }\n    else{\n      countn <- countn - 1\n    }\n  }\n  print(paste0(zipcode, \":\", paste(unlist(pr2), collapse = \",\"), \"\/\", paste(unlist(pr1), sep = \",\", collapse = \",\")))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287600,"user_id":null,"body":"travel <- function (r, zipcode) {\n  # your code\n  names <- strsplit(r, split = \",\")\n  zip <- unlist(names)\n  count <- 1\n  countn <- length(zip)\n  pr1 <- list()\n  pr2 <- list()\n  for (i in 1:length(zip)){\n    if(substr(zip[i], nchar(zip[i])-7, nchar(zip[i])) == zipcode){\n      pr1[count] <- stringi::stri_extract(zip[i], regex = (\"([0-9]+)\"))\n      pr2[count] <- stringr::str_trim(substr(zip[i], nchar(pr1[count])+2, nchar(zip[i])-9))\n      count <- count + 1\n    }\n    else{\n      countn <- countn - 1\n    }\n  }\n  print(paste0(zipcode, \":\", paste(unlist(pr2), collapse = \",\"), \"\/\", paste(unlist(pr1), sep = \",\", collapse = \",\")))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287601,"user_id":null,"body":"require(tidyverse)\ntravel <- function (r, zipcode) {\n  \n  # Take in r string and convert to a dataframe\n  r_vector <- unlist(str_split(r, pattern = \",\"))\n  df <- dplyr::tibble(\n    address = r_vector\n  )\n  \n  df <- df %>%\n    dplyr::mutate(\n      postcode = str_sub(address, -8),\n      number_and_street = str_sub(address, 1, -10),\n      number = str_extract(number_and_street, pattern = \"[:digit:]+\"),\n      street = str_trim(str_remove(number_and_street, pattern = \"[:digit:]+\"))\n    ) %>%\n    select(postcode, number, street)\n  \n  # Filter on given postcode and return a list of streets and numbers\n  \n  matched <- df %>%\n    subset(postcode == zipcode)\n  \n  streets <- pull(matched, street)\n  numbers <- pull(matched, number)\n  \n  # Now need to organise into appropriate string\n  streets_list <- paste(streets, collapse = \",\")\n  streets_list <- paste(c(streets_list, \"\/\"), collapse = \"\")\n  numbers_list <- paste(numbers, collapse = \",\")\n  postcode_string <- paste(c(zipcode, \":\"), collapse = \"\")\n  \n  paste(c(postcode_string, streets_list, numbers_list), collapse = \"\")\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287602,"user_id":null,"body":"travel <- function (r, zipcode) {\n if(nchar(zipcode)!=0){\n  ad_split <- unlist(strsplit(r,\",\"))\n  zipcode_pattern <- paste0(zipcode,\"$\")\n  address_zip <- grep( zipcode_pattern,ad_split,value = T,perl = T)\n  address_zip<-paste0(address_zip,collapse = \",\")\n  address_zip_ <- gsub(zipcode, \"\", unlist(address_zip))\n  address_num <- regmatches(address_zip_, gregexpr(\"[0-9]+\", address_zip_))\n  address_num <- paste0(unlist(address_num), collapse = \",\")\n  address <- gsub(\"[0-9]+\", \"\", address_zip_)\n  address <- trimws(address, \"both\")\n  address <- gsub(\"\\\\s*,(\\\\s|\n)+\", \",\", address)\n  zipcode_ad <- paste0(zipcode,\":\",address, \"\/\", address_num)\n  return(zipcode_ad)\n  }else{\n    zipcode_ad <- paste0(zipcode,\":\/\")\n    return(zipcode_ad)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287603,"user_id":null,"body":"travel <- function (r, zipcode) {\n  ad0 <- strsplit(r, \",\\\\s*\") %>% unlist\n  zs <- gsub(\".* ([A-Z]{2} \\\\d+)$\", \"\\\\1\", ad0)\n  adn <- gsub(\"^(\\\\d+) .* [A-Z]{2} \\\\d+$\", \"\\\\1\", ad0)\n  ads <- gsub(\"^\\\\d+ (.*) [A-Z]{2} \\\\d+$\", \"\\\\1\", ad0)\n  n <- adn[zipcode == zs] %>% paste0(collapse = ',')\n  s <- ads[zipcode == zs] %>% paste0(collapse = ',')\n  sprintf(\"%s:%s\/%s\", zipcode, s, n)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56b1f01c247c01db92000076":[{"id":287604,"user_id":null,"body":"double_char <- function(str){\n  paste(rep(strsplit(str, \"\")[[1]], each = 2), collapse=\"\") \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287605,"user_id":421,"body":"double_char <- function(str){\n  paste(mapply(function(x){strrep(x, 2)}, strsplit(str, \"\")[[1]]), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287606,"user_id":null,"body":"double_char <- function(s){\n  intToUtf8(rep(utf8ToInt(s), each = 2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287607,"user_id":null,"body":"double_char <- function(str){\n  df <- strrep(strsplit(str,\"\")[[1]], 2)\n  paste(df, collapse = \"\")\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287608,"user_id":null,"body":"double_char <- function(str){\n  a <- strsplit(str,\"\")[[1]]\n  b <- as.character()\n  for (i in a){\n    b <- paste0(b, i, i)\n  }\n  b\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287609,"user_id":null,"body":"double_char <- function(str){\n  a <- strsplit(str,\"\")[[1]]\n  b <- as.character()\n  for (i in a){\n    print(\"here\")\n    b <- paste0(b, i, i)\n  }\n  return(b)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287610,"user_id":null,"body":"double_char <- function(str){\n  str <- strsplit(as.character(str),\"\")[[1]]\n  a <- c()\n  for(i in 1:length(str)){\n    a <- c(a, str[i], str[i])\n  }\n  return(paste(a, collapse=\"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287611,"user_id":null,"body":"double_char <- function(str){\npaste(unlist(lapply(1:nchar(str), function(k) rep(substr(str,k,k),2))), collapse=\"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287612,"user_id":null,"body":"double_char <- function(str){\n  vector <- c()\n  for (i in strsplit(str, \"\")[[1]]) {\n    vector <- c(vector, paste(i, i, sep=\"\"))\n  }\n  paste(vector, collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287613,"user_id":null,"body":"double_char <- function(str){\n  strsplit(str, split = \"\") %>%    \n        unlist() %>%                  \n        rep(,each = 2) %>%                      \n        paste(collapse=\"\")            \n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56b5afb4ed1f6d5fb0000991":[{"id":287614,"user_id":null,"body":"revrot <- function(s, k) {\n  if (k > nchar(s) | k == 0) return(\"\")\n  chunks <- substring(s, seq(1, nchar(s) - (k - 1), k), seq(k, nchar(s), k))\n  paste(sapply(chunks, function(i) {\n    if (sum(as.numeric(strsplit(i, \"\")[[1]])^3) %% 2 == 0) {\n      paste(rev(strsplit(i, \"\")[[1]]), collapse = \"\")\n    } else {\n      paste(strsplit(i, \"\")[[1]][c(2:nchar(i), 1)], collapse = \"\")\n    }\n  }), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287615,"user_id":669,"body":"revrot <- function(str, sz) {\n  digits <- as.numeric(unlist(strsplit(str, \"\")))\n  \n  lst <- split(digits, (seq(digits) - 1) %\/% sz)\n  lst <- lst[sapply(lst, length) == sz]\n  \n  out <- purrr::map(lst, ~if (sum(.^3) %% 2) c(.[-1], .[1]) else rev(.))\n  paste(unlist(out), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287616,"user_id":null,"body":"revrot <- function(s, k) {\n  n <- nchar(s)\n  if (n == 0 | k == 0 | n < k) return(\"\")\n  res <- array()\n  for (t in 1:n%\/%k){\n    str  <- substr(s, (t-1)*k+1,t*k)\n    str <- unlist(strsplit(str,\"\"))\n    sum <- sum(as.numeric(str))\n    if (sum %% 2 == 0){\n      str <- str[k:1]\n    } else {\n      str <- c(str[2:k],str[1])\n    }\n    pas <- paste(str,collapse = \"\")\n    res[t] <- pas\n  }\n  result <- paste(res,collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287617,"user_id":null,"body":"revrot <- function(s, k) {\n  # your code\n  res <- \"\"\n  str <- unlist(strsplit(s,\"\"))\n  strlen <- length(str)\n  if (strlen >= k & k > 0) {\n    dstr <- as.numeric(str[1:(k*floor(strlen\/k))])\n    for (chunk in 1:(length(dstr)\/k) ) {\n      v <- dstr[((chunk-1)*k + 1): (chunk*k)]\n      if (sum(v^3) %% 2 == 0) {\n        v <- rev(v)\n      } else {\n        v <- c(v[-1],v[1])\n      }\n      dstr[((chunk-1)*k + 1): (chunk*k)] <- v\n    }\n    res <- paste0(dstr, collapse = \"\")\n  }\n  \n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287618,"user_id":null,"body":"revrot= function(s, k){\n  \n  L = nchar(s)\n  if (k <= 0 | L < k) {return (\"\")}\n  \n  s2 = substr(s, start = 1, stop = L-(L %% k))\n  d = strsplit(s2, \"\")[[1]]\n  x = ceiling(seq_along(d)\/k)\n  ssq = tapply(X = d, INDEX = x, FUN = function(z){sum(as.integer(z)^2)%%2})\n  \n  for (i in unique(x)){\n    block = d[x==i]\n    if (ssq[i] == 0) {d[x==i] = rev(block)}\n    else {d[x==i] = block[c(2:k,1)]}\n  }\n  \n  return(paste0(d, collapse = \"\"))\n\n\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287619,"user_id":492,"body":"revrot <- function(s, k) {\n  revString <- function(t){\n    paste(rev(unlist(strsplit(t, NULL))), collapse=\"\")\n  }\n  rotString <- function (x, shift) {\n    substr(paste0(x, x, collapse=\"\"), shift + 1, nchar(x) + shift)\n  }\n  digitSum <- function(n) {\n    sum((function(x) (floor(x \/ 10^(0:(nchar(x) - 1))) %% 10))(n)^3)\n  }\n  chunk <- function(s, k) {\n    regmatches(s, gregexpr(paste0(\".{\", k, \"}\"), s))[[1]]\n  }\n  l <- nchar(s)\n  if(k <= 0 || l == 0 || k > l) return(\"\")\n  res <- \"\"; chk <- chunk(s, k)\n  for (elt in chk) {\n    if (digitSum(as.numeric(elt)) %% 2 == 1) res <- paste0(res, rotString(elt, 1))\n    else res <- paste0(res, revString(elt))\n  }\n  res\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287620,"user_id":null,"body":"revrot <- function(s, k) {\n  if (k <= 0 | is.null(s)) { return(\"\") }\n  if (k > nchar(s)) { return(\"\") }\n  # 0 < k < nchar(s)\n  str <- unlist((strsplit(s, \"\")))\n  res <- \"\"\n  i <- 1\n  while (i < nchar(s)) {\n    if ((i+k-1) > nchar(s)) { break }\n    sum <- 0\n    for (j in i:(i+k-1)) { sum <- sum + as.numeric(str[j])^3 }\n    if (sum %% 2 == 0) {\n      res <- paste0(res, paste(rev(str[i:(i+k-1)]), sep = \"\", collapse = \"\"), collapse = \"\")\n    } else {\n      res <- paste0(res, paste0(str[(i+1):(i+k-1)], collapse = \"\"), str[i], collapse = \"\")\n    }\n    i <- i + k\n  }\n  res\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287621,"user_id":null,"body":"revrot=function(s,k){\n  if(k>nchar(s)|k*nchar(s)==0){return('')}\n  chars=strsplit(s,'')[[1]]\n  \n  return(paste(unlist(lapply((1:(nchar(s)%\/%k)-1)*k+1,function(x){\n          chunk=as.numeric(chars)[x:(x+k-1)]\n          ifelse(rep(sum(chunk^3)%%2==0|nchar(s)<=3,k),rev(chunk),c(chunk[-1],chunk[1]))})),\n         collapse=''))}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287622,"user_id":null,"body":"revrot <- function(s, k) {\n  if (k <= 0 || s == \"\"){\n    return(\"\")\n  }\n  \n  s <- strsplit(s, \"\")[[1]]\n  if (length(s) < k){\n    return(\"\")\n  }\n\n  s <- split(s, ceiling(seq_along(s)\/k))\n  for (i in seq_along(s)){\n    if (length(s[[i]]) == k){\n      \n      if (sum(mapply(function(x) as.integer(x)%%2 != 0, s[[i]]))%%2 == 0){\n        s[[i]] <- rev(s[[i]])\n      } else {\n        s[[i]] <- c(tail(s[[i]], -1), head(s[[i]], 1))\n      }\n                     \n    } else {\n      s[[i]] <- c()\n    }\n  }\n  return(paste(unlist(s), collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287623,"user_id":null,"body":"revrot <- function(s, k) {\n  l=nchar(s)\n  if(l<k|k<=0|l==0){\n    return(\"\")\n  }\n  loc=0\n  out=\"\"\n  while(loc+k<=l){\n    start=loc+1\n    end=loc+k\n    loc=end\n    s1=substr(s,start,end)\n    s1=unlist(strsplit(s1,split=\"\"))\n    s2=as.numeric(s1)\n    if (sum(s2^3)%%2==0){\n      s1=rev(s1)\n    }else{\n      ll=length(s1)\n      s1=s1[c(2:ll,1)]\n    }\n    out=paste(out,paste(s1,collapse ='',sep='' ),sep='')\n  }\n  out\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56b8903933dbe5831e000c76":[{"id":287624,"user_id":421,"body":"spoonerize <- function(words) {\n  arr = unlist(strsplit(words, \" \"))\n  a = arr[1]\n  b = arr[2]\n  paste0(substr(b, 1, 1), substr(a, 2, nchar(a)), \" \", substr(a, 1, 1), substr(b, 2, nchar(b)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287625,"user_id":null,"body":"spoonerize <- function(words){\n  x <- unlist(strsplit(words, split = \"\"))\n  sec <- grep(\" \", x) + 1\n  tmp <- x[sec]\n  x[sec] <- x[1]\n  x[1] <- tmp\n  paste(x, collapse = \"\")\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287626,"user_id":null,"body":"library(stringr)\nlibrary(stringi)\n\nspoonerize <- function(words) {\n  w <- str_split(words, \" \", simplify = T)\n  word1 <- paste0(str_sub(w[2], 1,1), str_sub(w[1], 2, nchar(w[1])))\n  word2 <- paste0(str_sub(w[1], 1,1), str_sub(w[2], 2, nchar(w[2])))\n  return(paste(word1, word2))\n                  }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287627,"user_id":null,"body":"spoonerize <- function(words) {\n  x <- unlist(strsplit(words, \" \"))\n  fir <- x[1]\n  end <- tail(x, n=1)\n\n  x[1] <- paste0(substring(end, 1, 1), substring(fir, 2))\n  x[length(x)] <- paste0(substring(fir, 1, 1), substring(end, 2))\n\n  paste(x, collapse=\" \")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287628,"user_id":null,"body":"spoonerize <- function(words) {\n  w <- strsplit(words, split=\" \")[[1]]\n  swap <- c(substr(w[1],1,1), substr(w[2],1,1))\n  paste(sub(\".\", swap[2],w[1]),sub(\".\",swap[1],w[2]), sep=\" \")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287629,"user_id":null,"body":"spoonerize <- function(words) {\n  wo <- unlist(strsplit(words,' '))\n  se <- paste0(substr(wo[1],1,1), substring(wo[2],2))\n  fi <- paste0(substr(wo[2],1,1), substring(wo[1],2))\n  paste0(fi, ' ', se)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287630,"user_id":null,"body":"spoonerize <- function(words) {\n  words = words %>% strsplit(' ')\n  first = words[[1]][1] %>% strsplit('') %>% unlist\n  sec = words[[1]][2] %>% strsplit('') %>% unlist\n  new1 = paste0(c(sec[1],first[-1]),collapse=''); new2 = paste0(c(first[1],sec[-1]),collapse='')\n  paste(new1,new2,sep=' ')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287631,"user_id":null,"body":"spoonerize <- function(x) {\n  v <- unlist(strsplit(x, \" \"))\n  h <- rev(sapply(v, substr, 1, 1))\n  paste0(\n    mapply(function(a, b) {\n        substr(a, 1, 1) <- b\n        a\n    }, v, h),\n    collapse = \" \"\n  )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287632,"user_id":null,"body":"spoonerize <- function(words) {\n  w <- strsplit(words, split  = \" \")[[1]]\n  a <- substr(w[1], 1, 1)\n  b <- substr(w[2], 1, 1)\n  substr(w[1], 1, 1) <- b\n  substr(w[2], 1, 1) <- a\n  return(paste(w[1], w[2], collapse = \" \"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287633,"user_id":null,"body":"library(\"stringr\")\n\nspoonerize <- function(words) {\n  tokens <- unlist(str_split(words, \" \"))\n  paste0(substr(tokens[2], 1, 1),\n        substr(tokens[1], 2, nchar(tokens[1])),\n        ' ',\n        substr(tokens[1], 1, 1),\n        substr(tokens[2], 2, nchar(tokens[2]))\n       )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56baeae7022c16dd7400086e":[{"id":287634,"user_id":null,"body":"phone <- function(x, num) {\n  directory <- strsplit(x, \"\\n\")[[1]]\n  name_pat <- \"(?<=[<]).+?(?=[>])\"\n  num_pat <- \"(?<=[+])[0-9-]+\"\n  \n  person <- unlist(regmatches(directory, gregexpr(name_pat, directory, perl = TRUE)))\n  number <- unlist(regmatches(directory, gregexpr(num_pat, directory, perl = TRUE)))\n  addr <- gsub(\" +\", \" \", trimws(gsub(paste(name_pat, num_pat, \"[+<>,;*?$!:_\/]\", sep = \"|\"), \" \", directory, perl = TRUE)))\n  \n  switch(as.character(sum(idx <- number == num)),\n         \"0\" = sprintf(\"Error => Not found: %s\", num),\n         \"1\" = sprintf(\"Phone => %s, Name => %s, Address => %s\",\n                       number[idx], person[idx], addr[idx]),\n         sprintf(\"Error => Too many people: %s\", num)\n         ) \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287635,"user_id":null,"body":"library(stringr)\n\nphone <- function(strng, num) {\n  x <- strsplit(strng, \"\n \")[[1]]\n  y <- str_remove_all(x, \"[+][0-9]{1,2}-[0-9]{3}-[0-9]{3}-[0-9]{4}|<[a-zA-Z' ]+>\")\n  y <- str_extract_all(y, \"[0-9A-Za-z.-]+\", TRUE)\n  \n  table <- data.frame(as.vector(str_extract(x, \"[0-9]{1,2}-[0-9]{3}-[0-9]{3}-[0-9]{4}\")), \n                      as.vector(str_remove_all(str_extract(x, \"<[a-zA-Z' ]+>\"), \"[<>]\")),\n                      as.vector(str_remove_all(apply(y, 1, paste, collapse = \" \"), \"[ ]{2,}|[ ]$\")))\n  colnames(table) <- c(\"Number\", \"Name\", \"Address\")\n  table <- table[order(table$Number), ]\n  \n  res <- subset(table[table$Number == num, ])\n  ifelse(nrow(res) == 1, paste0(\"Phone => \", res$Number, \", Name => \", res$Name, \", Address => \", res$Address),\n                         ifelse(nrow(res) == 0, paste0(\"Error => Not found: \", num),\n                                                paste0(\"Error => Too many people: \", res$Number)))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287636,"user_id":null,"body":"phone <- function(strng, num) {\nlines <- strsplit(strng,\"\n\")[[1]]\nline <- grep(num,lines,value = TRUE)\nif(length(line)==0) return(paste(\"Error => Not found:\",num))\nnb <- sum(grepl(\"<.*?>\",line))\nif (nb>1) return(paste(\"Error => Too many people:\", num))\nnm <- gsub(\".*?<(.*?)>.*\",\"\\\\1\",line)\naddress <- trimws(gsub(\"\\\\s+\",\" \",gsub(\"[\/+;\\\\$\\\\*\\\\?,:]\",\"\",sub(\"_\",\" \",sub(\"<(.*)>\",\"\",sub(num,\"\",line))))))\nsprintf(\"Phone => %s, Name => %s, Address => %s\",num,nm,address)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287637,"user_id":null,"body":"phone <- function(strng, num) {\n    # clean\n    strng <- gsub(pattern='[^-0-9a-z\\\\sA-Z\n<>.\\']', replacement=\" \", x=strng)\n    r <- unlist(strsplit(strng, split = \"\n \"))\n    # search num\n    g <- grep(paste0(\"\\\\+*\", num), r, perl=TRUE, value=FALSE)\n    if (length(g) > 1) return (paste0(\"Error => Too many people: \", num));\n    if (length(g) == 0) return (paste0(\"Error => Not found: \", num));\n    # get name + address, replacing num\n    tr <- r[g[1]]\n    c <- gsub(pattern=paste0(\"\\\\+*\", num), replacement=\"\", x=tr)\n    # name\n    m <- regexpr(\"<.*>\", c, perl=TRUE)\n    nom <- regmatches(c, m)\n    # remove < and >\n    nom <- substr(nom, 2, nchar(nom)-1)\n    # address + remove too many blanks\n    ad <- gsub(pattern=\"<.*>\", replacement = \"\", c) \n    ad <- gsub(pattern='\\\\s+', replacement=\" \", x=ad)\n    ad <- trimws(ad)\n    result = paste0(\"Phone => \", num, \", Name => \", nom, \", Address => \",ad)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287638,"user_id":null,"body":"library(stringr)\nphone <- function(str, num) {\n  text <- unlist(str_split(str,\"\n\"))\n  if(length(str_subset(text,num)) == 0){\n    return(paste0(\"Error => Not found: \", num))\n  } else if (length(str_subset(text,num)) > 1){\n    return(paste0(\"Error => Too many people: \", num))\n  } else {\n    actual_text <- str_subset(text,num)\n    name <- str_extract(actual_text,\"(?<=<).*?(?=>)\")\n    text1 <- str_remove(actual_text, \"<.*?>\")\n    text1 <- str_replace_all(text1, \"[_*+^;:,?!$\/]\", \" \")\n    text1 <- str_remove(text1, num)\n    address <- str_squish(str_remove(text1, \"[[:blank:]]+$\"))\n    return(paste0(\"Phone => \", num, \", Name => \", name, \", Address => \", address))\n  }\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287639,"user_id":null,"body":"phone <- function(strng, num) {\n  book <- unlist(strsplit(strng, \"\n \"))\n  \n  phone <- gsub(\"[^0-9-].*\", \"\", gsub(\".*\\\\+\", \"\", book))\n  \n  name <- gsub(\".*<|>.*\", \"\", book)\n  \n  address <- book\n  for (i in 1:length(address)) {\n    address[i] <- gsub(phone[i], \"\", address[i])\n    address[i] <- gsub(name[i], \"\", address[i])\n  }\n  \n  address2 <- gsub(\"[^a-zA-Z0-9-.\\\\s]\", \" \", address, perl = TRUE)\n  address3 <- gsub(\"\\\\s+\", \" \", address2)\n  address4 <- gsub(\"^\\\\s|\\\\s$\", \"\", address3)\n  \n  pb <- data.frame(\"phone\" = phone,\n                   \"name\" = name,\n                   \"address\" = address4)\n  \n  res <- pb[pb$phone == num,]\n  \n  if (nrow(res) == 0) {\n    return(sprintf(\"Error => Not found: %s\", num))\n  }\n  if (nrow(res) > 1) {\n    return(sprintf(\"Error => Too many people: %s\", num))\n  }\n  return(sprintf(\"Phone => %s, Name => %s, Address => %s\", res[[1]], res[[2]], res[[3]]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287640,"user_id":null,"body":"require(tidyverse)\nphone <- function(strng, num) {\n  #Clean the data a put it in a tibble (not strictly required to get result, but hey, clean data)\n  df <- strsplit(strng, \"\n\")[[1]] %>% \n    as_tibble(.) %>% select(., lines = value) %>% \n    mutate(., names = str_match(lines, '\\\\<(.*?)\\\\>')[,2], numbers = str_match(lines, '(\\\\+\\\\d{1,2}\\\\S{13})')[,2], postcodes = str_match(lines, \"\\\\w{1,2}-\\\\d{5}\")) %>% \n    mutate(., address = str_remove(lines, names)) %>% mutate(., address = str_remove(address, paste0(\"\\\\\", numbers))) %>%\n    mutate(., address = ifelse(!is.na(postcodes), str_remove(address, postcodes), address)) %>% \n    mutate(., address = str_replace_all(address, '[^1-9A-Za-z\\\\.\\\\s\\\\_0]', \"\")) %>% mutate(., address = str_replace_all(address, \"[\\\\_]\", \" \")) %>% \n    mutate(., address = trimws(address)) %>% mutate (., address = ifelse(!is.na(postcodes), paste(address, postcodes), address)) %>%\n    mutate(., address = str_replace_all(address, \"\\\\s{1,}\", \" \"))\n  \n  #Filter and return result\n  res <- df %>% filter(., str_detect(numbers, num))\n  if(nrow(res) > 1) return(paste(\"Error => Too many people:\", num))\n  if(nrow(res) == 0) return(paste(\"Error => Not found:\", num))\n  paste0(\"Phone => \", num, \", Name => \", res$names, \", Address => \", res$address)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287641,"user_id":null,"body":"\nphone <- function(strng, num) {\n   phone_search(strng, num)\n}\n\nparse_re <- function(x, re) {\n  m <- regexec(re, x)\n  res <- regmatches(x, m)\n}  \n\nparse_line <- function(x) {\n  \n  # extract phone nr\n  re_phone <- \"[+](\\\\d{1,2}-\\\\w{3}-\\\\w{3}-\\\\w{4})\"\n  phone <- parse_re(x, re_phone)\n\n  # extract name  \n  re_name <- \"<(.*?)>\"\n  name <- parse_re(x, re_name)\n  \n  # extract the rest\n  residual <- gsub(re_phone, \"\", x)\n  residual <- gsub(re_name, \"\", residual)\n  residual <- chartr(\";\/$?_*?,:\", \"         \", residual)\n  residual <- trimws(gsub(\"  \", \" \", residual, perl = TRUE))\n  residual <- gsub(\"  \", \" \", residual)\n\n  data.frame(\n    Phone = unlist(phone)[2],\n    Name = unlist(name)[2],\n    Address = residual\n  )\n  \n}\n\nphonebook <- function(x) {\n  \n  lines <- \n    unlist(strsplit(x, \"\n\"))\n  \n  res <- \n    do.call(rbind.data.frame, lapply(lines, parse_line))\n  \n}\n\nphone_search <- function(x, y) {\n \n  pb <- phonebook(x)\n  \n  # R v 3.4.1 converts strings to Factors\n  pb$Name <- as.character(pb$Name)\n  pb$Address <- as.character(pb$Address)\n  pb$Phone <- as.character(pb$Phone)\n    \n  res <- subset(pb, grepl(y, Phone, fixed = TRUE))\n  \n  print(str(res))\n  \n  if (nrow(res) > 1)\n    return(sprintf(\"Error => Too many people: %s\", y))\n  \n  if (nrow(res) < 1)\n    return(sprintf(\"Error => Not found: %s\", y))\n    \n  paste(collapse = \", \", paste(names(res), \"=>\", with(res, c(Phone, Name, Address))))\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287642,"user_id":null,"body":"phone <- function(strng, num) {\ndr_data_frame <- strsplit(strng , split = \"\n\")[[1]]\n\nName <- sapply(dr_data_frame, function(x){\n  begin <- regexpr(\"<\",x)\n  end <- regexpr(\">\",x)\n  x_list <- strsplit(x , split = \"\")[[1]]\n  return(paste(x_list[(begin+1):(end-1)] , collapse = \"\"))\n})\n\nPhone <- sapply(dr_data_frame, function(x){\n  begin <- regexpr(\"\\\\+\",x)\n  end <- regexpr(\"(-\\\\d\\\\d\\\\d-\\\\d\\\\d\\\\d\\\\d)\",x)\n  x_list <- strsplit(x , split = \"\")[[1]]\n  return(paste(x_list[(begin+1):(end+8)] , collapse = \"\"))\n})\n\nAdress <- sapply(dr_data_frame, function(x){\n  begin <- regexpr(\"<\",x)\n  end <- regexpr(\">\",x)\n  x_list <- strsplit(x , split = \"\")[[1]]\n  x_list <- x_list[-((begin):(end))]\n  x <- paste(x_list , collapse = \"\")\n  \n  begin <- regexpr(\"\\\\+\",x)\n  end <- regexpr(\"(-\\\\d\\\\d\\\\d-\\\\d\\\\d\\\\d\\\\d)\",x)\n  x_list <- strsplit(x , split = \"\")[[1]]\n  x_list <- x_list[-((begin):(end+8))]\n  \n  \n  x <- paste(x_list , collapse = \"\")\n  x_list <- strsplit(x , split = \"[ \\\\$\\\\?\\\\:\\\\;\\\\,\\\\\/\\\\_]\")[[1]]\n  \n  \n  x_list <- sapply(x_list, function(x){\n    x <- gsub(\"[\\\\_]\" , \" \",x)\n    return(gsub(\"[^a-zA-Z0-9\\\\.\\\\-]\" ,\"\", x))\n  })\n  \n  \n  x_list <- x_list[which(!(x_list %in% \"\"))]\n  return(paste(x_list , collapse = \" \"))\n})\n\nData <- cbind(Name , Phone , Adress)\nrownames(Data) <- Data[,1]\nTTTT <- which(Data[,2] %in% num)\nif(length(TTTT) >= 2){\n  return(paste(\"Error => Too many people: \" , num , collapse = \"\",sep = \"\"))\n}else if(length(TTTT) == 1){\n  return(paste(\"Phone => \" , Data[TTTT,2] , \", Name => \" , Data[TTTT,1] , \", Address => \" , Data[TTTT,3] , collapse = \"\" , sep = \"\"))\n}else{\n  return(paste(\"Error => Not found: \" , num , collapse = \"\" , sep = \"\"))\n}  # your code\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287643,"user_id":null,"body":"library(stringr)\n\nphone <- function(strng, num) {\n  strng<-unlist(str_split(strng,'\\\n'))\n  strng<-strng[grepl(num,strng)]\n  if(length(strng)==1){\n    name = gsub('>.*','',gsub('.*<','',strng))\n    dir<-gsub(name,'',gsub(num,'',strng))\n    dir<-gsub('\/|<>|\\\\+||\n|\\\\*|;|\\\\$|\\\\,|\\\\?|\\\\:','',dir)\n    dir<- gsub('  ',' ',dir)\n    dir<- gsub('_',' ',dir)\n    dir<- str_trim(dir,'both')\n  }\n  if(length(strng)==0){\n    return(paste0('Error => Not found: ',num))\n  }else if(length(strng)>1){\n    return(paste0('Error => Too many people: ',num))\n  }else{\n    return(paste0('Phone => ',num,', Name => ', name,', Address => ',dir))\n  }\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56bc28ad5bdaeb48760009b0":[{"id":287644,"user_id":null,"body":"remove_char <- function(str){\n    substr(str, 2, nchar(str)-1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287645,"user_id":null,"body":"library(stringr)\nremove_char <- function(str){\n  str %>% \n    str_replace_all('^.', '') %>% \n    str_replace_all('.$', '')\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287646,"user_id":null,"body":"remove_char <- function(str){\n    gsub('^.|.$', '', str)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287647,"user_id":null,"body":"remove_char <- function(str) {\n    len = nchar(str)\n    return(substr(str, 2, len-1))\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287648,"user_id":null,"body":"remove_char <- function(s){\n    gsub(\"^.(.*).$\",\"\\\\1\",s)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287649,"user_id":null,"body":"remove_char <- function(str){\n  library(stringr)\n    # your code here\n  return(str_sub(str,2,-2))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287650,"user_id":null,"body":"remove_char <- function(str){\n    # your code here\n  gsub('^.|.$', '', str)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287651,"user_id":null,"body":"remove_char <- function(str){\n str <- substr(str,2,nchar(str))\n str <- substr(str,1,nchar(str)-1)\n return(str)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287652,"user_id":null,"body":"remove_char <- function(str){\n  str<-unlist(strsplit(str, \"\"))[-1]\n  str<-str[-length(str)]\n  return(paste(str, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287653,"user_id":null,"body":"remove_char <- function(str){\n    sub('^.(.*).$', '\\\\1', str)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56bdd0aec5dc03d7780010a5":[{"id":287654,"user_id":421,"body":"next_higher <- function(n) {\n   x = bitwAnd(n, -n)\n   bitwOr(n + x, bitwShiftR(bitwXor(n, n + x) %\/% x, 2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287655,"user_id":53,"body":"next_higher <- function(n) {\n  r = bitwAnd(n,-n)\n  p = n + r\n  q = bitwXor(n,p) \/ (4*r)\n  bitwOr(p,q)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287656,"user_id":645,"body":"next_higher <- function(n) {\n  o <- bitwAnd(n, -n)\n  bitwOr(n + o, bitwShiftR(bitwXor(n, n + o) %\/% o, 2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287657,"user_id":null,"body":"toBin <- function(n){\n  b <- integer()\n  while (TRUE) {\n    reminder <- n %% 2\n    n <- n%\/%2\n    b <- c(b,reminder)\n    if (n == 0) break\n  }\n  b\n}\n\ntoInt <- function(b) {\n  n <- 0\n  for (i in seq_along(b)) {\n    n <- n + b[i] * (2**(i-1))\n  }\n  as.integer(n)\n}\n\nnext_higher <- function(n) {\n\n  b <- toBin(n)\n\n  switch_from_zero_to_one <- -1\n\n  for (i in seq_along(b)) {\n    if (b[i] == 1) {\n      switch_from_zero_to_one <- i\n    }\n    if (b[i] == 0 & switch_from_zero_to_one != -1) {\n      break\n    }\n  }\n\n  if (switch_from_zero_to_one == -1) {\n    switch_from_zero_to_one <- length(b)\n    b <- c(b,0)\n  }\n  b[switch_from_zero_to_one] <- 0\n  b[switch_from_zero_to_one+1] <- 1\n\n  sorted_part <- b[0:(switch_from_zero_to_one-1)]\n  num_ones <- sum(sorted_part)\n  num_zeros <- length(sorted_part)-sum(sorted_part)\n  b[0:(switch_from_zero_to_one-1)] <- c(rep(1, num_ones),rep(0, num_zeros))\n\n  return (toInt(b))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287658,"user_id":null,"body":"bit_count <- function(n) {\n  bits <- intToBits(n)\n  length(bits[bits == 1])\n}\n\nnext_higher <- function(n) {\n  ones <- bit_count(n)\n  repeat {\n    n <- n + 1\n    if (bit_count(n) == ones)\n      break\n  }\n  n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287659,"user_id":null,"body":"next_higher <- function(n) {\n  bits <- sum(as.integer(intToBits(n)))\n  repeat{\n    n <- n+1\n    if(sum(as.integer(intToBits(n)))==bits) return(n)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287660,"user_id":null,"body":"bin_count <- function(n){\n  r <- 0\n  for(i in floor(log(n,2)):0)if(n>=2**i){\n    r <- r+1\n    n <- n - 2**i\n  }\n  r\n}\n\nnext_higher <- function(n) {\n  r <- bin_count(n)\n  while(T){\n    n <- n+1\n    if(bin_count(n)==r)return(n)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287661,"user_id":null,"body":"next_higher <- function(n) {\n  twos <- 2^seq(0, 30)\n  b <- bitwAnd(n, twos)\n  set <- which.max(b == 0 & seq_along(b) > which.max(b > 0))\n  set <- c(seq_len(sum(b > 0 & seq_along(b) < set) - 1), set)\n  b[seq_along(b) < max(set)] <- 0\n  b[set] <- twos[set]\n  sum(b)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287662,"user_id":null,"body":"next_higher <- function(n) {\nc <- n \ni_0 <- i_1 <- 0\nwhile ( ((  bitwAnd(c, 1) == 0) & (c != 0))) {\n  i_0 <-  i_0+1\n  c <- bitwShiftR(c, 1)\n} \nwhile ( bitwAnd(c, 1) == 1){ \n  i_1 <- i_1+1\n  c <- bitwShiftR(c, 1)\n}\nif (i_0 + i_1 == 31 | i_0 + i_1== 0){ \n  return(-1)}\np <- i_0 + i_1 \nn <- bitwOr(n, bitwShiftL(1, p))\nn <-  bitwAnd(n,  bitwNot((  bitwShiftL(1, p)- 1)))           \nn<-  bitwOr(n,   bitwShiftL(1, (i_1 - 1))-1)\nreturn(n) \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287663,"user_id":null,"body":"next_higher <- function(n) {\ncount = sum(sapply(n,function(x){ as.integer(intToBits(x))})== 1)\nwhile(TRUE){\nn = n + 1\ncountnew = sum(sapply(n,function(x){ as.integer(intToBits(x))})== 1)\nif (countnew == count) { return(n) }\nelse { print(\"nope\") }\n}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56c5847f27be2c3db20009c3":[{"id":287664,"user_id":null,"body":"subtract_sum <- function(n) {\n  # fruit name like \n  \"apple\"\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287665,"user_id":null,"body":"data <- data.frame(names = c(\n  \"kiwi\",\n  \"pear\",\n  \"kiwi\",\n  \"banana\",\n  \"melon\",\n  \"banana\",\n  \"melon\",\n  \"pineapple\",\n  \"apple\",\n  \"pineapple\",\n  \"cucumber\",\n  \"pineapple\",\n  \"cucumber\",\n  \"orange\",\n  \"grape\",\n  \"orange\",\n  \"grape\",\n  \"apple\",\n  \"grape\",\n  \"cherry\",\n  \"pear\",\n  \"cherry\",\n  \"pear\",\n  \"kiwi\",\n  \"banana\",\n  \"kiwi\",\n  \"apple\",\n  \"melon\",\n  \"banana\",\n  \"melon\",\n  \"pineapple\",\n  \"melon\",\n  \"pineapple\",\n  \"cucumber\",\n  \"orange\",\n  \"apple\",\n  \"orange\",\n  \"grape\",\n  \"orange\",\n  \"grape\",\n  \"cherry\",\n  \"pear\",\n  \"cherry\",\n  \"pear\",\n  \"apple\",\n  \"pear\",\n  \"kiwi\",\n  \"banana\",\n  \"kiwi\",\n  \"banana\",\n  \"melon\",\n  \"pineapple\",\n  \"melon\",\n  \"apple\",\n  \"cucumber\",\n  \"pineapple\",\n  \"cucumber\",\n  \"orange\",\n  \"cucumber\",\n  \"orange\",\n  \"grape\",\n  \"cherry\",\n  \"apple\",\n  \"cherry\",\n  \"pear\",\n  \"cherry\",\n  \"pear\",\n  \"kiwi\",\n  \"pear\",\n  \"kiwi\",\n  \"banana\",\n  \"apple\",\n  \"banana\",\n  \"melon\",\n  \"pineapple\",\n  \"melon\",\n  \"pineapple\",\n  \"cucumber\",\n  \"pineapple\",\n  \"cucumber\",\n  \"apple\",\n  \"grape\",\n  \"orange\",\n  \"grape\",\n  \"cherry\",\n  \"grape\",\n  \"cherry\",\n  \"pear\",\n  \"cherry\",\n  \"apple\",\n  \"kiwi\",\n  \"banana\",\n  \"kiwi\",\n  \"banana\",\n  \"melon\",\n  \"banana\",\n  \"melon\",\n  \"pineapple\",\n  \"apple\",\n  \"pineapple\"\n))\ndata$names <- as.character(data$names)\n\n\nsubtract_sum <- function(n) {\n  a <- n %% 10\n  x <- n - a\n  b <- x %% 100 \n  x <- x - b\n  b <- b \/ 10\n  c <- x %\/% 100\n  sum <- a + b + c\n  n <- n - sum\n  while(n > 100){\n    a <- n %% 10\n    x <- n - a\n    b <- x %% 100 \n    x <- x - b\n    b <- b \/ 10\n    c <- x %\/% 100\n    sum <- a + b + c\n    n <- n - sum\n  }\n  print(data[n,1])\n}\n\n\nsubtract_sum(10)\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287666,"user_id":null,"body":"subtract_sum <- function(n) {\n return('apple')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287667,"user_id":null,"body":"subtract_sum <- function(n) {\n    pass <- FALSE\n  while (!pass) {\n    ss <- as.character(n) %>% strsplit(split='') %>% unlist() %>% as.numeric() %>% sum\n    n <- n - ss\n    if (n <= 100) pass <- TRUE\n  }\n  c(\"kiwi\",\"pear\",\"kiwi\",\"banana\",\"melon\",\"banana\",\"melon\",\"pineapple\",\"apple\",\"pineapple\",\"cucumber\",\"pineapple\",\"cucumber\",\"orange\",\"grape\",\"orange\",\"grape\",\"apple\",\"grape\",\"cherry\",\"pear\",\"cherry\",\"pear\",\"kiwi\",\"banana\",\"kiwi\",\"apple\",\"melon\",\"banana\",\"melon\",\"pineapple\",\"melon\",\"pineapple\",\"cucumber\",\"orange\",\"apple\",\"orange\",\"grape\",\"orange\",\"grape\",\"cherry\",\"pear\",\"cherry\",\"pear\",\"apple\",\"pear\",\"kiwi\",\"banana\",\"kiwi\",\"banana\",\"melon\",\"pineapple\",\"melon\",\"apple\",\"cucumber\",\"pineapple\",\"cucumber\",\"orange\",\"cucumber\",\"orange\",\"grape\",\"cherry\",\"apple\",\"cherry\",\"pear\",\"cherry\",\"pear\",\"kiwi\",\"pear\",\"kiwi\",\"banana\",\"apple\",\"banana\",\"melon\",\"pineapple\",\"melon\",\"pineapple\",\"cucumber\",\"pineapple\",\"cucumber\",\"apple\",\"grape\",\"orange\",\"grape\",\"cherry\",\"grape\",\"cherry\",\"pear\",\"cherry\",\"apple\",\"kiwi\",\"banana\",\"kiwi\",\"banana\",\"melon\",\"banana\",\"melon\",\"pineapple\",\"apple\",\"pineapple\")[n]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287668,"user_id":645,"body":"subtract_sum <- function(n) \"apple\"","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287669,"user_id":null,"body":"subtract_sum <- function(n) {\n  return('apple')\n  # fruit name like \"apple\"\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287670,"user_id":null,"body":"dic = c('kiwi',\n'pear',\n'kiwi',\n'banana',\n'melon',\n'banana',\n'melon',\n'pineapple',\n'apple',\n'pineapple',\n'cucumber',\n'pineapple',\n'cucumber',\n'orange',\n'grape',\n'orange',\n'grape',\n'apple',\n'grape',\n'cherry',\n'pear',\n'cherry',\n'pear',\n'kiwi',\n'banana',\n'kiwi',\n'apple',\n'melon',\n'banana',\n'melon',\n'pineapple',\n'melon',\n'pineapple',\n'cucumber',\n'orange',\n'apple',\n'orange',\n'grape',\n'orange',\n'grape',\n'cherry',\n'pear',\n'cherry',\n'pear',\n'apple',\n'pear',\n'kiwi',\n'banana',\n'kiwi',\n'banana',\n'melon',\n'pineapple',\n'melon',\n'apple',\n'cucumber',\n'pineapple',\n'cucumber',\n'orange',\n'cucumber',\n'orange',\n'grape',\n'cherry',\n'apple',\n'cherry',\n'pear',\n'cherry',\n'pear',\n'kiwi',\n'pear',\n'kiwi',\n'banana',\n'apple',\n'banana',\n'melon',\n'pineapple',\n'melon',\n'pineapple',\n'cucumber',\n'pineapple',\n'cucumber',\n'apple',\n'grape',\n'orange',\n'grape',\n'cherry',\n'grape',\n'cherry',\n'pear',\n'cherry',\n'apple',\n'kiwi',\n'banana',\n'kiwi',\n'banana',\n'melon',\n'banana',\n'melon',\n'pineapple',\n'apple',\n'pineapple')\n\nsubtract_sum <- function(n) {\n  sum = strsplit(as.character(n),'') %>% unlist() %>% as.integer() %>% sum()\n  n = n - sum\n  while(100 < n){\n  sum = strsplit(as.character(n),'') %>% unlist() %>% as.integer() %>% sum()\n  n = n - sum}\n  dic[n]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287671,"user_id":null,"body":"subtract_sum <- function(n) {\n  c(\"apple\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287672,"user_id":null,"body":"subtract_sum <- function(n) {\nn<-n-n%\/%100-n%%100%\/%10-n%%10\nwhile(n>100){n<-n-n%\/%100-n%%100%\/%10-n%%10}\nl<-strsplit('1-kiwi\n2-pear\n3-kiwi\n4-banana\n5-melon\n6-banana\n7-melon\n8-pineapple\n9-apple\n10-pineapple\n11-cucumber\n12-pineapple\n13-cucumber\n14-orange\n15-grape\n16-orange\n17-grape\n18-apple\n19-grape\n20-cherry\n21-pear\n22-cherry\n23-pear\n24-kiwi\n25-banana\n26-kiwi\n27-apple\n28-melon\n29-banana\n30-melon\n31-pineapple\n32-melon\n33-pineapple\n34-cucumber\n35-orange\n36-apple\n37-orange\n38-grape\n39-orange\n40-grape\n41-cherry\n42-pear\n43-cherry\n44-pear\n45-apple\n46-pear\n47-kiwi\n48-banana\n49-kiwi\n50-banana\n51-melon\n52-pineapple\n53-melon\n54-apple\n55-cucumber\n56-pineapple\n57-cucumber\n58-orange\n59-cucumber\n60-orange\n61-grape\n62-cherry\n63-apple\n64-cherry\n65-pear\n66-cherry\n67-pear\n68-kiwi\n69-pear\n70-kiwi\n71-banana\n72-apple\n73-banana\n74-melon\n75-pineapple\n76-melon\n77-pineapple\n78-cucumber\n79-pineapple\n80-cucumber\n81-apple\n82-grape\n83-orange\n84-grape\n85-cherry\n86-grape\n87-cherry\n88-pear\n89-cherry\n90-apple\n91-kiwi\n92-banana\n93-kiwi\n94-banana\n95-melon\n96-banana\n97-melon\n98-pineapple\n99-apple\n100-pineapple', '\n')\nl=unlist(l)\nreturn(unlist(strsplit(l[n],'-'))[2])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287673,"user_id":null,"body":"subtract_sum <- function(n) {print(\"apple\")}\n#As the author said, this is not a coding challenge :)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56cac350145912e68b0006f0":[{"id":287674,"user_id":492,"body":"arrange <- function(s) {\n    res <- unlist(strsplit(s, split = \" \")) # \"who\" \"hit\" \"retaining\" \"The\" \"That\" \"a\" \"we\" \"taken\"\n    lg <- length(res); i <- 1\n    while (i <= lg - 1) {\n        if ( ((i %% 2 == 0) && (nchar(res[i]) < nchar(res[i + 1]))) || \n            ((i %% 2 != 0) && (nchar(res[i]) > nchar(res[i + 1]))) ) {\n            tmp <- res[i + 1]; res[i + 1] <- res[i]; res[i] <- tmp\n        }\n        i <- i + 1\n    }\n    r <- rep(\"\", lg);\n    i <- 1;\n    while (i <= lg) {\n        if (i %% 2 == 0) {r[i] <- toupper(res[i]); } else {r[i] <- tolower(res[i]);}\n        i <- i + 1\n    }\n    paste(r, collapse = ' ')\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287675,"user_id":null,"body":"arrange <- function(s) {\n  z <- strsplit(s, ' ') %>% unlist\n  l <- length(z)\n  if (0 == l) return(s)\n  for(i in seq.int(2,l,1)) {\n    should_up <- ((i %% 2) == 0)\n    is_going_down <- nchar(z[i-1]) > nchar(z[i])\n    is_going_up <- nchar(z[i-1]) < nchar(z[i])\n    if ((should_up & is_going_down) || (!should_up & is_going_up)) {\n      temp <- z[i-1]\n      z[i-1] <- z[i]\n      z[i] <- temp\n    }\n  }\n  z[seq.int(1,l,2)] <- tolower(z[seq.int(1,l,2)])\n  z[seq.int(2,l,2)] <- toupper(z[seq.int(2,l,2)])\n  paste0(z, collapse = ' ')\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287676,"user_id":null,"body":"arrange <- function(s){\n  browser()\n  vec <- unlist(strsplit(x = s, split = \" \"))\n  for(i in seq_along(vec)){\n    if(((nchar(vec[i]) > nchar(vec[i + 1])) & ((i %% 2) != 0)) & !is.na(vec[i + 1])){\n      # Replace if larger and odd\n      vec <- replace(x = vec, list = c(i, i+1), values = vec[c(i+1, i)])\n      } else if(((nchar(vec[i]) < nchar(vec[i + 1])) & ((i %% 2) == 0)) & !is.na(vec[i + 1])){\n      # replace if smaller and even\n      vec <- replace(x = vec, list = c(i, i+1), values = vec[c(i+1, i)])\n    }\n  }\n  \n  # Make stuff lower and upper\n  for (j in seq_along(vec)){\n    \n    if((j %% 2) != 0) {\n      vec[j] <- tolower(vec[j])\n    } else {\n      vec[j] <- toupper(vec[j])\n    }\n  }\n  \n  print(paste(vec,collapse=\" \"))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287677,"user_id":null,"body":"arrange <- function(s) {\n  if(nchar(s) < 1)return(s)\n  s <- unlist(strsplit(s,' '))\n  for(j in 1:5){\n    for(i in 1:(length(s)-1)){\n      if(i%%2 & nchar(s[i]) > nchar(s[i+1]))s[0:1+i] <- s[1:0+i]\n      if(!i%%2 & nchar(s[i]) < nchar(s[i+1]))s[0:1+i] <- s[1:0+i]\n    }\n  }\n  paste(sapply(seq_along(s),function(x)ifelse(x%%2,tolower(s[x]),toupper(s[x]))),collapse=' ')\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287678,"user_id":669,"body":"arrange <- function(s) {\n  w <- unlist(strsplit(s, \" \"))\n  done <- length(w) == 0\n  \n  while (!done) {\n    done <- TRUE\n    \n    for (i in 2:length(w)) {\n      if (nchar(w[i - 1]) * (-1)^i > nchar(w[i]) * (-1)^i) {\n        swap <- w[i - 1]\n        w[i - 1] <- w[i]\n        w[i] <- swap\n        done <- FALSE\n      }\n    }\n  }\n  paste(ifelse(rep_len(TRUE:FALSE, length(w)), tolower(w), toupper(w)),\n        collapse = \" \")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287679,"user_id":null,"body":"arrange <- function(s) {\n  # Returns a character string of the input s rearranged as per the rules\n  \n  # Create a function to test for greater than when the index is odd\n  odd <- function(x, y, ci) {\n    if(ci == length(x)) return(y)\n    if(x[ci] > x[ci + 1L]) {\n      y <- swit(y, ci)\n      x <- even(x[y], y, ci + 1L)\n    }\n    y\n  }\n  \n  # Create a function to test for less than when the index is even\n  even <- function(x, y, ci) {\n    if(ci == length(x)) return(y)\n    if(x[ci] < x[ci + 1L]) {\n      y <- swit(y, ci)\n      x <- odd(x[y], y, ci + 1L)\n    }\n    y\n  }\n  \n  # Create a function to switch the indicies\n  swit <- function(y, ci) {\n    y.ci <- y[ci]\n    y[ci] <- y[ci + 1L]\n    y[ci + 1L] <- y.ci\n    y\n  }\n  \n  # Split the input into a vector of words, count characters in each\n  words <- strsplit(s, \" \")[[1]]\n  chars <- nchar(words)\n  \n  # Create a vector of the original indicies\n  index <- seq_along(chars)\n  \n  # Loop over each index, process odd and even indicies accordingly\n  for(i in seq_along(chars)) {\n    if(i %% 2L == 1L) {\n      index <- odd(chars[index], index, i)\n      words[index][i] <- tolower(words[index][i])\n    } else {\n      index <- even(chars[index], index, i)\n      words[index][i] <- toupper(words[index][i])\n    }\n  }\n  \n  # Reorder the words, and paste them together into a single string\n  ord.w <- words[index]\n  paste0(ord.w, collapse = \" \")\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287680,"user_id":null,"body":"arrange <- function(s) {\n  if (nchar(s) == 0) return(s)\n  v <- unlist(strsplit(s,split = \" \"))\n  k <- 1\n  repeat {\n    if (k%%2 == 1 & nchar(v[k]) > nchar(v[k+1])) {\n      v[k:(k+1)] <- rev(v[k:(k+1)])\n    }\n    if (k%%2 == 0 & nchar(v[k]) < nchar(v[k+1])) {\n      v[k:(k+1)] <- rev(v[k:(k+1)])\n    }\n    if (k == length(v)-1) break\n    k <- k + 1\n  }\n  v[seq_along(v)%%2 == 1] <- tolower(v[seq_along(v)%%2 == 1])\n  v[seq_along(v)%%2 == 0] <- toupper(v[seq_along(v)%%2 == 0])\n  paste0(v,collapse = \" \")\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287681,"user_id":null,"body":"arrange <- function(s) {\n  if(s==\"\") return(\"\")\n  v <- strsplit(s, \" \")[[1]]\n  for (i in 1:(length(v)-1)){\n    a <- v[i]\n    b <- v[i+1]\n    if ((nchar(a) > nchar(b) & i%%2==1) | (nchar(a) < nchar(b) & i%%2==0)){\n      v[i] <- b\n      v[i+1] <- a\n    }\n  }\n  v <- sapply(1:length(v), function (q) ifelse(q%%2==1, tolower(v[q]), toupper(v[q])))\n  paste(v, collapse=\" \")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287682,"user_id":null,"body":"require(stringr)\n\narrange <- function(s) {\n    s <- s %>% str_split(\" \") %>% unlist %>% str_to_lower\n    i <- 1\n    while (i < length(s)) {\n      if ((i%%2 & nchar(s[i]) > nchar(s[i+1])) | (!(i%%2) & nchar(s[i]) < nchar(s[i+1]))){\n        s[i:(i+1)] <- s[(i+1):i]\n      }\n      i <- i+1\n    }\n    s[!(1:length(s)%%2)] <- str_to_upper(s[!(1:length(s)%%2)])\n    return(paste(s, collapse =\" \"))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287683,"user_id":null,"body":"swap_elements <- function(lst, i, j) {\n  tmp <- lst[i]; lst[i] <- lst[j]; lst[j] <- tmp\n  return (lst)\n}\n\narrange <- function(s) {\n  if (s == \"\") return (\"\")\n  arr <- unlist(strsplit(s, \" \"))\n  for (i in 1:length(arr)) {\n    pos <- i\n    uord <- ifelse (pos%%2 == 0, 1, 0)\n    while (pos < length(arr)) {\n      if (uord == 0 && nchar(arr[pos]) > nchar(arr[pos+1])) {\n        arr <- swap_elements(arr, pos, pos+1)\n        uord <- 1\n        pos <- pos+1\n      } else if (uord == 1 && nchar(arr[pos]) < nchar(arr[pos+1])) {\n        arr <- swap_elements(arr, pos, pos+1)\n        uord <- 0\n        pos <- pos+1\n      } else {\n        break\n      }\n    }\n  }\n  for (k in 1:length(arr))\n    arr[k] <- ifelse (k%%2 == 0, toupper(arr[k]), tolower(arr[k]))\n  paste(arr, collapse=\" \")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56dbe0e313c2f63be4000b25":[{"id":287684,"user_id":1125,"body":"vertMirror <- function(s) {\n    res <- lapply(strsplit(s, \"\n\")[[1]],\n    (function (str) paste(rev(strsplit(str, \"\")[[1]]), collapse = \"\")))\n    return (paste(res, collapse = '\n'))\n}\n\nhorMirror <- function(s) {\n    res <- rev(strsplit(s, \"\n\")[[1]])\n    return (paste(res, collapse = \"\n\"))\n}\n\noper <- function(f, s) {\n   return (f(s))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287685,"user_id":null,"body":"reverseString <- function(s) {\n  paste(rev(unlist(strsplit(s,\"\"))),collapse=\"\")\n}\nvertMirror <- function(s) {\n  paste(lapply(unlist(strsplit(s,\"\n\")), reverseString),collapse=\"\n\")\n}\nhorMirror <- function(s) {\n  paste(rev(unlist(strsplit(s,\"\n\"))),collapse=\"\n\")\n}\noper <- function(f, s) {\n  f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287686,"user_id":null,"body":"vertMirror <- function(s) {\n  v = unlist(strsplit(s, \"\n\"))\n  res = sapply(v, function(x) {\n    paste(rev(unlist(strsplit(x, \"\"))), collapse = \"\")\n  })\n  paste(res, collapse = \"\n\")\n}\n\nhorMirror <- function(s) {\n  paste(rev(unlist(strsplit(s, \"\n\"))), collapse = \"\n\")\n  \n}\noper <- function(f, s) {\n    f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287687,"user_id":null,"body":"vertMirror <- function(s) {\n  #Split the lines\n  s <- unlist(strsplit(s, '\n'))\n  #Loop through each line and splt into individual chars \n  #Then reverse\n  #Then paste back together as a line, and later as a full vector\n  #Of lines\n  lines <- c()\n  for(i in 1:length(s)){\n    rev_line <- rev(unlist(strsplit(s[i],'')))\n    line <- paste(rev_line, collapse = '')\n    lines <- c(lines, line)\n  }\n  lines <- paste(lines, collapse = '\n')\n  return(lines)\n}\n\nhorMirror <- function(s) {\n  #Split the lines\n  s <- unlist(strsplit(s, '\n'))\n  #Reverse the line order\n  rev_line <- rev(s)\n  #Paste with the \n char\n  rev_line <- paste(rev_line, collapse = '\n')\n  return(rev_line)\n}\noper <- function(f, s) {\n  return(f(s))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287688,"user_id":null,"body":"vertMirror <- function(s) {\n  rev_str <- function(s) {\n    paste(rev(unlist(strsplit(s, \"\"))), collapse = \"\")\n  }\n  paste(vapply(unlist(strsplit(s, \"\n\")), rev_str, character(1)), collapse = \"\n\")\n}\nhorMirror <- function(s) {\n  paste(rev(unlist(strsplit(s, \"\n\"))), collapse = \"\n\")\n}\noper <- function(f, s) {\n  f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287689,"user_id":null,"body":"library(stringi)\n\nvertMirror <- function(s) {\n  paste(Map(stri_reverse, unlist(strsplit(s,\"\n\"))), collapse=\"\n\")\n}\n\nhorMirror <- function(s) {\n  paste(rev(unlist(strsplit(s,\"\n\"))), collapse=\"\n\")\n}\n\noper <- function(f, s) {\n  f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287690,"user_id":492,"body":"revString <- function(s){\n  paste(rev(unlist(strsplit(s, NULL))),collapse=\"\")\n}\nvertMirror <- function(s) {\n    t <- unlist(strsplit(s, split = \"\n\"))\n    paste0(sapply(t, function(x) revString(x)), collapse=\"\n\")\n}\nhorMirror <- function(s) {\n    t <- unlist(strsplit(s, split = \"\n\"))\n    paste0(rev(t), collapse=\"\n\")\n}\noper <- function(f, s) {\n    f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287691,"user_id":null,"body":"vertMirror <- function(arr) {\n  s <- length(arr)\n  \n  i = 1\n  new = array()\n  while (i <= s) {\n   \n    new[i] <- paste(rev(strsplit(arr[i], \"\")[[1]]), collapse = \"\")\n    \n  \n    i = i + 1\n  }\n  paste(new, collapse = \"\n\")\n}\nhorMirror <- function(arr) {\n  paste(rev(arr), collapse = \"\n\")\n}\n\noper <- function(f, s) {\n  arr <- strsplit(s, \"\n\")[[1]]\n \n  match.fun(f)(arr)\n}\n  \n  \n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287692,"user_id":null,"body":"flip <- function(s) {\n  paste(rev(unlist(strsplit(s, \"\"))), collapse=\"\")\n}\nvertMirror <- function(s) {\n  rows <- unlist(strsplit(s, \"\n\"))\n  paste(unlist(lapply(rows, flip)), collapse=\"\n\")\n}\nhorMirror <- function(s) {\n  paste(rev(unlist(strsplit(s, \"\n\"))), collapse=\"\n\")\n}\noper <- function(f, s) {\n  f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287693,"user_id":null,"body":"\nstr_reverse <- function(x) {\n     paste(rev(unlist(strsplit(x, \"\"))), collapse = \"\")\n}\n\nvertMirror <- function(s) {\n    paste(unlist(lapply(unlist(strsplit(s, \"\n\")), str_reverse)), collapse = \"\n\")\n}\nhorMirror <- function(s) {\n    paste(rev(unlist(strsplit(s, \"\n\"))), collapse = \"\n\")\n}\noper <- function(f, s) {\n    f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56dbe7f113c2f63570000b86":[{"id":287694,"user_id":492,"body":"rot <- function(s) {\n    paste0(rev(strsplit(s, \"\")[[1]]), collapse = \"\")\n}\nselfieAndRot <- function(s) {\n    u <- sapply(strsplit(s, split=\"\n\")[[1]], function(x) paste0(x, paste0(rep(\".\", nchar(x)), collapse = \"\")))\n    v <- paste0(u, collapse = \"\n\")\n    uu <- sapply(strsplit(rot(s), split=\"\n\")[[1]], function(x) paste0(paste0(rep(\".\", nchar(x)), collapse = \"\"), x))\n    vv <- paste0(uu, collapse = \"\n\")\n    paste0(v, \"\n\", vv, collapse = \"\")\n}\noper <- function(f, s) {\n    f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287695,"user_id":421,"body":"rot <- function(s) {\n  paste(mapply(function(x){paste(rev(strsplit(x, \"\")[[1]]), collapse = \"\")}, rev(strsplit(s, \"\n\")[[1]])), collapse = \"\n\")\n}\n        \nselfieAndRot <- function(s) {\n  arr1 <- strsplit(s, \"\n\")[[1]]\n  arr2 <- strsplit(rot(s), \"\n\")[[1]]\n  s1 <- paste(mapply(function(x){paste0(x, strrep(\".\", nchar(x)))}, arr1), collapse = \"\n\")\n  s2 <- paste(mapply(function(x){paste0(strrep(\".\", nchar(x)), x)}, arr2), collapse = \"\n\")\n  paste0(s1, \"\n\", s2)\n}\n        \noper <- function(f, s) {\n  f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287696,"user_id":null,"body":"rot <- function(s) {\n  paste(rev(strsplit(s, \"\")[[1]]), collapse = '')\n}\n\nselfieAndRot <- function(s) {\n  dots <- strrep('.', regexpr('\n', s)[1] - 1)\n  paste0(gsub('\n', paste0(dots, '\n'), s),\n         dots, '\n', dots,\n         gsub('\n', paste0('\n', dots), rot(s)))\n}\n\noper <- function(f, s) {\n  f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287697,"user_id":null,"body":"library(stringr)\nlibrary(stringi)\n\nrot <- function(s) {\n  s <- str_split(s, \"\n\", simplify = T)\n  s <- rev(s)\n  s <- sapply(s, function(x){\n    x <- str_split(x, \"\", simplify = T)\n    x <- rev(x)\n    return(paste0(x, collapse = \"\"))\n  })\n  s <- paste0(s, collapse = \"\n\")\n  return(s)\n}\nselfieAndRot <- function(s) {\n  print(s)\n  s1 <- s\n  s2 <- rot(s)\n  s1 <- str_split(s, \"\n\", simplify = T)\n  s2 <- str_split(s2, \"\n\", simplify = T)\n  toAdd <- paste0(rep('.',as.numeric(nchar(s1[1]))), collapse = \"\")\n  s1 <- paste0(s1, collapse = paste0(toAdd, \"\n\"))\n  s2 <- paste0(s2, collapse = paste0(\"\n\",toAdd))\n  s3 <- paste0(s1, toAdd, \"\n\", toAdd, s2)\n  print(s1)\n  print(s2)\n  print(s3)\n}\noper <- function(f, s) {\n  a <- f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287698,"user_id":null,"body":"rot <- function(s) {\n    Finish <- paste(rev(strsplit(s,split = \"\")[[1]]),collapse = \"\")\n    return(Finish)\n}\nselfieAndRot <- function(s) {\n    s_list <- strsplit(s,split = \"\n\")[[1]]\n    New_list <- paste(s_list,collapse = \"\")\n    n <- sqrt(nchar(New_list))\n    add <- paste(rep(\".\",n),collapse = \"\")\n    add_2 <- paste(add,add,collapse = \"\",sep = \"\n\")\n    add <- paste(add,\"\n\",collapse = \"\",sep = \"\")\n    Finish <- paste(s_list,collapse = add)\n    Finish_2 <- rot(Finish)\n    Finish <- paste(Finish,Finish_2,collapse = \"\",sep = add_2)\n    return(Finish)\n}\noper <- function(f, s) {\n  f(s)  \n  # your code\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287699,"user_id":null,"body":"\nrot <- function(s) {\n  intToUtf8(rev(utf8ToInt(s)))\n}\nselfieAndRot <- function(s) {\n  self <- paste(sapply(strsplit(s, '\n')[[1]], function(x) {paste0(x, paste(rep('.', nchar(x)), collapse = \"\"), '\n')}), collapse = \"\")\n  paste0(self, substr(rot(self), 2, nchar(rot(self))))\n}\noper <- function(f, s) {\n  f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287700,"user_id":null,"body":"vertMirror <- function(s) {\n  strsplit(s,'\n') %>% unlist %>% \n    strsplit('') %>% lapply(rev) %>% \n    sapply(paste,collapse='') %>% paste(collapse='\n')\n}\nhorMirror <- function(s) {\n  strsplit(s,'\n') %>% unlist %>% rev %>% paste(collapse='\n')\n}\nrot <- function(s) {\n  vertMirror(horMirror(s))\n}\nselfieAndRot <- function(s) {\n  len <- nchar(gsub(\"[^\n]\", \"\", s))+1\n  dots <- rep_len('.', length.out = len) %>% paste0(collapse = '')\n  p1 <- gsub(\"\n\", paste0(dots,\"\n\"), s)\n  p2 <- gsub(\"\n\", paste0(\"\n\",dots), rot(s))\n  paste0(p1, paste0(dots,\"\n\", dots), p2)\n}\noper <- function(f, s) {\n  f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287701,"user_id":null,"body":"rot <- function(s) {\n   s_as_c <- unlist(strsplit(s, NULL))\n   output <- paste(rev(s_as_c), collapse = \"\")\n   print(output)\n}\nselfieAndRot <- function(s){\n  s_c1 <- unlist(strsplit(s, \"\n\", fixed = TRUE))\n  lengths <- c()\n  num <- c()\n  for(i in 1:length(s_c1)){\n    lengths[i] <- nchar(s_c1[i])\n    num <- min(lengths)\n    dot_string_raw <- rep(\".\", num)\n    dot_string <- paste(dot_string_raw, collapse = \"\")\n  }\n  dot_string1 <- paste(dot_string, \"\n\", sep = \"\")\n  dot_string2 <- paste(\"\n\", dot_string, sep = \"\")\n  dot_string3 <- paste(dot_string, \"\n\", dot_string, sep = \"\")\n  output1 <- paste(s_c1, collapse = dot_string1)\n  s_c2 <- unlist(strsplit(s, NULL))\n  s_c2 <- rev(s_c2)\n  grouper <- which(s_c2 == \"\n\")\n  for(i in grouper){\n    s_c2[i] <- dot_string2\n  }\n  output2 <- paste(s_c2, collapse = \"\")\n  output3 <- paste(output1, dot_string3, output2, sep = \"\")\n  print(output3)\n}\noper <- function(f, s) {\n    print(f(s))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287702,"user_id":null,"body":"rot <- function(s) {\n  paste(rev(unlist(strsplit(s, \"\"))), collapse = \"\")\n}\nselfieAndRot <- function(s) {\n  len <- unname(table(sapply(sapply(unlist(strsplit(s, \"\n\")), strsplit, \"\"), length)))\n  dots <- paste(rep(\".\", len), collapse = \"\")\n  paste0(\n    paste0(unlist(strsplit(s, \"\n\")), dots, collapse = \"\n\"), \"\n\",\n    paste0(dots, unlist(strsplit(rot(s), \"\n\")), collapse = \"\n\")\n  )\n}\noper <- function(f, s) {\n  cat(\"rot\", rot(s), \"\n\")\n  cat(\"sel\", selfieAndRot(s), \"\n\")\n  `f`(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287703,"user_id":null,"body":"rot <- function(s) {\n    # Convert string to vector of integers -> \n    # reverse vector -> convert back to string\n    intToUtf8(rev(utf8ToInt(s)))\n}\nselfieAndRot <- function(s) {\n    # Dots to insert for each line\n    dots <- gsub(\"\\\\w\", \".\", strsplit(s, split = \"\n\")[[1]][1])\n    # Paste initial string with dots inserted before each newline character + \n    # rotated string with dots\n    paste0(gsub(\"(?=\n)\", dots, s, perl = TRUE), dots, \"\n\", dots, \n           intToUtf8(rev(utf8ToInt(gsub(\"(?=\n)\", dots, s, perl = TRUE)))))\n}\noper <- function(f, s) {\n    sapply(s, f)[[1]]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56dbeec613c2f63be4000be6":[{"id":287704,"user_id":492,"body":"rot90Clock <- function (s) {\n  u <- rev(strsplit(s, split=\"\n\")[[1]])\n  v <- sapply(u, function(x) strsplit(x, \"\")[[1]])\n  paste0(apply(v, 1, function(x) {paste0(x, collapse = \"\")}), collapse = \"\n\")\n}\nrevString <- function(text){\n  paste(rev(unlist(strsplit(text,NULL))),collapse=\"\")\n}\nvertMirror <- function(s) {\n  t <- unlist(strsplit(s, split = \"\n\"))\n  paste0(sapply(t, function(x) revString(x)), collapse=\"\n\")\n}\ndiag1Sym <- function(s) {\n  vertMirror(rot90Clock(s))\n}\nselfieAndDiag1 <- function(s) {\n  v <- strsplit(diag1Sym(s), split=\"\n\")[[1]]\n  paste0(diag(sapply(strsplit(s, split=\"\n\")[[1]], function(x) paste0(x, \"|\", v))), collapse = \"\n\")\n}\noper <- function(f, s) {\n  f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287705,"user_id":null,"body":"rot90Clock <- function (s) {\n  ssplit <- sapply(strsplit(s, \"\n\")[[1]], strsplit, \"\")\n  n <- length(ssplit)\n  \n  list90 <- vector(mode = \"list\", length = n)\n  \n  for(i in seq_len(n)){\n    for(j in seq_len(n)){\n      list90[[i]][[j]] <- ssplit[[n-j+1]][[i]]\n    }\n  }\n  \n  list90 %>%\n    lapply(paste0, collapse = \"\") %>%\n    paste0(collapse = \"\n\")\n}\ndiag1Sym <- function(s) {\n  ssplit <- sapply(strsplit(s, \"\n\")[[1]], strsplit, \"\")\n  \n  purrr::transpose(ssplit) %>%\n    lapply(paste0, collapse = \"\") %>%\n    paste0(collapse = \"\n\")\n}\nselfieAndDiag1 <- function(s) {\n  ssplit <- sapply(strsplit(s, \"\n\")[[1]], strsplit, \"\")\n  \n  purrr::map2(.x =  ssplit %>%\n                lapply(paste0, collapse = \"\"),\n              .y =  purrr::transpose(ssplit) %>%\n                lapply(paste0, collapse = \"\"),\n              .f = ~paste(.x, .y, sep = \"|\")) %>%\n    paste(collapse = \"\n\")\n}\noper <- function(f, s) {\n  do.call(f, list(s))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287706,"user_id":null,"body":"rot90Clock <- function (s) {\n  s_1 <- chartr(\"\n\" , \" \" , s)\n  s_1_str <- strsplit(s_1,split = \"\")[[1]]\n  n <- which(s_1_str == \" \")[1]\n  T_woyaode <- which(s_1_str == \" \")\n  s_1_str <- s_1_str[-(which(s_1_str == \" \"))]\n  s_1_matrix <- matrix(s_1_str,ncol = n-1)\n  \n  T_s_1_matrix <- apply(s_1_matrix,1,rev)\n  T_s1_list <- matrix(T_s_1_matrix,nrow = 1)\n  #replace(T_s1_list,T_woyaode,\"\n\")\n  for (i in 1:length(T_woyaode)) {\n    T_s1_list <- append(T_s1_list , \"\n\" , after = T_woyaode[i]-1)\n  }\n  T_s1_list <- t(T_s1_list)\n  return(paste(T_s1_list,collapse = \"\"))\n  # your code\n}\n\ndiag1Sym <- function(s) {\ns_1 <- chartr(\"\n\" , \" \" , s)\ns_1_str <- strsplit(s_1,split = \"\")[[1]]\nn <- which(s_1_str == \" \")[1]\nT_woyaode <- which(s_1_str == \" \")\ns_1_str <- s_1_str[-(which(s_1_str == \" \"))]\ns_1_matrix <- matrix(s_1_str,ncol = n-1)\n\nT_s_1_matrix <- t(s_1_matrix)\nT_s1_list <- matrix(T_s_1_matrix,nrow = 1)\nfor (i in 1:length(T_woyaode)) {\n  T_s1_list <- append(T_s1_list , \"\n\" , after = T_woyaode[i]-1)\n}\nT_s1_list <- t(T_s1_list)\nreturn(paste(T_s1_list,collapse = \"\"))\n  # your code\n}\n\nselfieAndDiag1 <- function(s) {\n  s_1 <- chartr(\"\n\" , \" \" , s)\n  s_1_str <- strsplit(s_1,split = \"\")[[1]]\n  n <- which(s_1_str == \" \")[1]\n  T_woyaode <- which(s_1_str == \" \")\n  s_1_str <- s_1_str[-(which(s_1_str == \" \"))]\n  \n  s_1_matrix <- matrix(s_1_str,ncol = n-1)\n  Dia_s <- t(s_1_matrix)\n  huo <- matrix(\"|\",nrow = 1,ncol = length(Dia_s[1,]))\n  \n  G_D_R <- rbind(s_1_matrix,huo,Dia_s)\n\n  T_s1_list <- matrix(G_D_R,nrow = 1)\n  for (i in 1:length(T_woyaode)) {\n    T_s1_list <- append(T_s1_list , \"\n\" , after = 2*(T_woyaode[i]-1)+1)\n  }\n  T_s1_list <- t(T_s1_list)\n  return(paste(T_s1_list,collapse = \"\")) \n  # your code\n}\noper <- function(f, s) {\n  return(f(s))\n  # your code\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287707,"user_id":null,"body":"vertMirror <- function(s) {\n  strsplit(s,'\n') %>% unlist %>% \n    strsplit('') %>% lapply(rev) %>% \n    sapply(paste,collapse='') %>% paste(collapse='\n')\n}\nrot90Clock <- function (s) {\n  vertMirror(diag1Sym(s))\n}\ndiag1Sym <- function(s) {\n  n <- nchar(gsub(\"[^\n]\", \"\", s))+1\n  x <- strsplit(gsub(\"\n\", \"\", s),'') %>% unlist\n  v <- (seq_along(x)-1) %% n\n  res <- \"\";\n  for (k in 0:(n-1)) {\n    res <- paste(res, paste0(x[v==k], collapse = ''), sep=ifelse(res==\"\",\"\", \"\n\"))\n  }\n  res\n}\nselfieAndDiag1 <- function(s) {\n  x <- strsplit(s, \"\n\") %>% unlist\n  y <- strsplit(diag1Sym(s), \"\n\") %>% unlist\n  paste(x, y, sep = \"|\", collapse = \"\n\")\n}\noper <- function(f, s) {\n  f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287708,"user_id":null,"body":"s2m <- function(s) {\n  t(Reduce(rbind, \n              strsplit(strsplit(s, \"\n\")[[1]], \"\")))\n}\n\ndiag1Sym <- function(s) {\n  paste(apply(s2m(s), 1, paste, collapse = \"\"), collapse = \"\n\")\n}\n\nrot90Clock <- function(s) {\n  r <- s2m(s)\n  cols <- rev(row(r))\n  rows <- col(r)\n  x <- matrix(mapply(function(row, col){r[row, col]}, rows, cols), nrow = nrow(r), byrow = T)\n  paste(apply(x, 1, paste, collapse = \"\"), collapse = \"\n\")\n}\n\nselfieAndDiag1 <- function(s) {\n  paste(paste0(apply(s2m(s), 2, paste, collapse = \"\"),\n               \"|\",\n               apply(s2m(s), 1, paste, collapse = \"\")), collapse = \"\n\")  \n}\n\noper <- function(f, s) {\n  f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287709,"user_id":null,"body":"rot90Clock <- function (s) {\n  s <- unlist(strsplit(gsub('\n','',s),''))\n  s <- matrix(s,nrow=sqrt(length(s)))\n  s <- s[,ncol(s):1]\n  s <- apply(s,1,function(x)paste0(x,collapse = ''))\n  paste0(s,collapse = '\n') \n}\n\ndiag1Sym <- function(s) {\n  s <- unlist(strsplit(gsub('\n','',s),''))\n  s <- matrix(s,nrow=sqrt(length(s)))\n  s <- apply(s,1,function(x)paste0(x,collapse = ''))\n  paste0(s,collapse = '\n')\n}\n\nselfieAndDiag1 <- function(s) {\n  selfie <- unlist(strsplit(s,'\n'))\n  s <- unlist(strsplit(gsub('\n','',s),''))\n  s <- matrix(s,nrow=sqrt(length(s)))\n  s <- apply(s,1,function(x)paste0(x,collapse = ''))\n  paste0(sapply(seq_along(s),function(x)paste0(c(selfie[x],s[x]),collapse = '|')),collapse = '\n')\n}\n             \noper <- function(f, s)f(s)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287710,"user_id":669,"body":"rot90Clock     <- function(s) apply(t(s), 2, rev)\ndiag1Sym       <- function(s) rot90Clock(s[, ncol(s):1])\nselfieAndDiag1 <- function(s) rbind(s, \"|\", diag1Sym(s))\n\noper <- function(f, s) {\n  s <- gsub(\"\n\", \"\", s)\n  n <- sqrt(nchar(s))\n  m <- matrix(unlist(strsplit(s, \"\")), n, n)\n  \n  paste(apply(f(m), 2, paste, collapse = \"\"), collapse = \"\n\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287711,"user_id":null,"body":"diag1Sym <- function(lst, ...) {\n  dsym <- do.call(paste0, lst)\n  paste0(dsym, collapse = \"\n\")\n}\n\nrot90Clock <- function(lst, ...) {\n  r9c <- do.call(paste0, rev(lst))\n  paste0(r9c, collapse = \"\n\")\n}\n\nselfieAndDiag1 <- function(lst, str) {\n  dsym <- do.call(paste0, lst)\n  paste(str, dsym, sep = \"|\", collapse = \"\n\")\n}\n\noper <- function(f, s) {\n  lns <- strsplit(s, \"\n\")[[1]]\n  chars <- strsplit(lns, \"\")\n  f(chars, lns)\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287712,"user_id":null,"body":"createMatrix <- function(s) {\n  v <- unlist(strsplit(s,split = \"\n\"))\n  mat.dim <- length(v)\n  M <- matrix(nrow = mat.dim, ncol = mat.dim)\n  for (q in seq(mat.dim)) {\n    M[q,] <- unlist(strsplit(v[q],split = \"\"))\n  } \n  return(M)\n}\n\nMat2String <- function(M) {\n  v <- array(rbind(t(M), rep(\"\n\",ncol(t(M)))))\n  return(paste0(v[-length(v)],collapse = \"\"))\n}\n\nrot90Clock <- function (s) {\n  M <- createMatrix(s)\n  Mt <- M\n  for (q in seq(nrow(M))) {\n    Mt[,ncol(M)-q+1] <- array(M[q,])\n  }\n  return(Mat2String(Mt))\n}\ndiag1Sym <- function(s) {\n  M <- createMatrix(s)\n  Mt <- t(M)\n  return(Mat2String(Mt))\n}\n\nselfieAndDiag1 <- function(s) {\n  M <- createMatrix(s)\n  Mdiag <- createMatrix(diag1Sym(s))\n  Mt <- cbind(M,rep(\"|\",nrow(M)),Mdiag)\n  return(Mat2String(Mt))\n}\noper <- function(f, s) {\n  return(f(s))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287713,"user_id":null,"body":"require(stringr)\n\nstr_as_matrix <- function(s){\n  lines <- s %>% str_split(\"\n\") %>% unlist() \n  lines %>% \n    str_split(\"\") %>%\n    unlist() %>%\n    matrix(nrow = length(lines), ncol = length(lines), byrow = T)\n}\nrot90Clock <- function (s) {\n  m <- str_as_matrix(s)\n  sapply(1:nrow(m), function(i){m[, i] %>% rev() %>% paste0(collapse =\"\")}) %>%\n    paste(collapse =\"\n\")\n}\ndiag1Sym <- function(s) {\n  m <- str_as_matrix(s)\n  print(m)\n  sapply(1:nrow(m), function(i){m[, i]  %>% paste0(collapse =\"\")}) %>%\n    paste(collapse =\"\n\")\n}\nselfieAndDiag1 <- function(s) {\n    m <- str_as_matrix(s)\n  print(m)\n  sapply(1:nrow(m), function(i){c(m[i, ], \"|\", m[, i])  %>% paste0(collapse =\"\")}) %>%\n    paste(collapse =\"\n\")\n}\noper <- function(f, s) {\n  f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56dbf59b0a10feb08c000227":[{"id":287714,"user_id":null,"body":"diag2Sym <- function(s) {\n  s_list <- strsplit(s,split = \"\n\")[[1]]\nFinish <- t(unlist(sapply(rev(s_list), function(x){\n  x_list <- rev(strsplit(x,split = \"\")[[1]])\n  return(x_list)\n})))\nMid <- c()\nfor (i in 1:length(Finish[1,])) {\n  Mid <- append(Mid, paste(Finish[,i] , collapse = \"\"))\n}\nreturn(paste(Mid , collapse = \"\n\" , sep = \"\"))\n    # your code\n}\nrot90Counter <- function(s) {\n  s_list <- strsplit(s,split = \"\n\")[[1]]\nFinish <- t(unlist(sapply(s_list, function(x){\n  x_list <- rev(strsplit(x,split = \"\")[[1]])\n  return(x_list)\n})))\nMid <- c()\nfor (i in 1:length(Finish[1,])) {\n  Mid <- append(Mid, paste(Finish[,i] , collapse = \"\"))\n}\nreturn(paste(Mid , collapse = \"\n\" , sep = \"\"))\n    # your code\n}\nselfieDiag2Counterclock <- function(s) {\n  s_list <- strsplit(s , split = \"\n\")[[1]]\nNew_s <- strsplit(diag2Sym(s),split = \"\n\")[[1]]\ns_90 <- strsplit(rot90Counter(s),split = \"\n\")[[1]]\nMID <- c()\nfor (i in 1:length(s_90)) {\n  MID <- append(MID , paste(s_list[i],New_s[i],s_90[i],collapse = \"|\",sep = \"|\"))\n}\nreturn(paste(MID,collapse = \"\n\",sep = \"\"))\n    # your code\n}\noper <- function(f, s) {\n  f(s)\n  # your code\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287715,"user_id":null,"body":"diag2Sym <- function(s) {\n  a <- apply(apply(s,2,rev),1,rev)\n  makeStr(a)\n}\nrot90Counter <- function(s) { \n  a <- apply(s,1,rev)\n  makeStr(a)\n}\nselfieDiag2Counterclock <- function(s) {\n    m1 <- s\n    m2 <- makeMatrix(diag2Sym(s))\n    m3 <- makeMatrix(rot90Counter(s))\n    fm <- c()\n    for (x in 1:dim(m1)[1]){\n      a1    <- paste(m1[x,], collapse = \"\")\n      a2    <- paste(m2[x,], collapse = \"\")\n      a3    <- paste(m3[x,], collapse = \"\")\n      line  <- paste(a1,\"|\",a2,\"|\",a3, collapse = \"\", sep = \"\")\n      fm    <- c(fm,line)\n    }\n  paste(fm, collapse = \"\n\")\n}\noper <- function(f, s) {\n  m <- makeMatrix(s)\n  f(m)\n}\nmakeMatrix <- function(s){\n  a <- unlist(strsplit(s,\"\n\"))\n  dimen = nchar(a[1])\n  m <- matrix(ncol=dimen, nrow=dimen)\n  for (x in 1:dimen){\n    b <- unlist(strsplit(a[x],\"\"))\n    for (y in 1:dimen) m[x,y] <- b[y]\n  }\n  m\n}\nmakeStr <- function(m) {\n  a <- c()\n  for (x in 1:nrow(m)){\n    a <- c(a,paste(m[x,],collapse = \"\"))\n  }\n  paste(a,collapse = \"\n\")\n}\n\noper(selfieDiag2Counterclock,\"abcd\nefgh\nijkl\nmnop\")\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287716,"user_id":null,"body":"str_2_mat <- function(s)as.matrix(as.data.frame(strsplit(unlist(strsplit(s,'\n')),'')))\n\ndiag2Sym <- function(s) {\n    s <- str_2_mat(s)\n    paste0(apply(s[nrow(s):1,nrow(s):1],1,function(x)paste0(x,collapse='')),collapse='\n')\n}\n\nrot90Counter <- function(s) {\n  s <- str_2_mat(s)\n  s <- t(apply(s,2,function(x)x[nrow(s):1]))\n  paste0(apply(s,2,function(x)paste0(x,collapse='')),collapse='\n')\n}\n               \nselfieDiag2Counterclock <- function(s) {\n  s <- strsplit(c(s,diag2Sym(s),rot90Counter(s)),'\n')\n  paste0(sapply(1:length(s[[1]]),function(x)paste0(sapply(1:3,function(y)s[[y]][x]),collapse='|')),collapse='\n')\n}\n               \noper <- function(f, s)f(s)\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287717,"user_id":669,"body":"rot90Counter <- function(s) apply(t(s), 2, rev)\ndiag2Sym     <- function(s) rot90Counter(s)[, ncol(s):1]\n\nselfieDiag2Counterclock <- function(s) {\n  cbind(s, \"|\", diag2Sym(s), \"|\", rot90Counter(s))\n}\n\noper <- function(f, s) {\n  s <- gsub(\"\n\", \"\", s)\n  n <- sqrt(nchar(s))\n  m <- matrix(unlist(strsplit(s, \"\")), n, n, byrow = TRUE)\n  \n  paste(apply(f(m), 1, paste, collapse = \"\"), collapse = \"\n\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287718,"user_id":null,"body":"diag2Sym <- function(lst, ...) do.call(paste0, rev(lst))\n\nrot90Counter <- function(lst, ...) do.call(paste0, lst)\n\nselfieDiag2Counterclock <- function(lst, str) {\n  d2s <- diag2Sym(lst)\n  r9c <- rot90Counter(lst)\n  paste(str, d2s, r9c, sep = \"|\")\n}\n\noper <- function(f, s) {\n  lns <- strsplit(s, \"\n\")[[1]]\n  chars <- strsplit(lns, \"\")\n  lst.rev <- lapply(chars, rev)\n  res <- f(lst.rev, lns)\n  paste0(res, collapse = \"\n\")\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287719,"user_id":null,"body":"diag2Sym <- function(s) {\n  v <- unlist(strsplit(gsub(\"\n\",\"\",s),split = \"\"))\n  d <- sqrt(length(v))\n  M <- matrix(v,nrow = d,ncol = d)\n  z <- sapply(seq(d), function(k) paste0(rev(M[d+1-k,]),collapse = \"\"))\n  return(paste0(z,collapse = \"\n\"))\n}\n\nrot90Counter <- function(s) {\n  v <- unlist(strsplit(diag2Sym(s),split = \"\n\"))\n  z <- sapply(v, function(x) intToUtf8(rev(utf8ToInt(x))) )\n  return(paste0(z,collapse = \"\n\"))\n}\n\nselfieDiag2Counterclock <- function(s) {\n  v0 <- unlist(strsplit(s,split = \"\n\"))\n  v1 <- unlist(strsplit(diag2Sym(s),split = \"\n\"))\n  v2 <- unlist(strsplit(rot90Counter(s),split = \"\n\"))\n  d <- length(v0)\n  z <- sapply(seq(d), function(k) paste0(c(v0[k],v1[k],v2[k]),collapse = \"|\"))\n  return(paste0(z,collapse = \"\n\"))\n}\n\noper <- function(f, s) {\n  f(s)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287720,"user_id":null,"body":"require(stringr)\n\nstr_as_matrix <- function(s){\n  lines <- s %>% str_split(\"\n\") %>% unlist() \n  lines %>% \n    str_split(\"\") %>%\n    unlist() %>%\n    matrix(nrow = length(lines), ncol = length(lines), byrow = T)\n}\nrot90Counter <- function (s) {\n  m <- str_as_matrix(s)\n  sapply(1:nrow(m), function(i){m[,i ] %>% paste0(collapse =\"\")}) %>%\n    rev() %>%\n    paste(collapse =\"\n\")\n}\ndiag2Sym <- function(s) {\n  m <- str_as_matrix(s)\n  sapply(1:nrow(m), function(i){m[, i] %>% rev() %>% paste0(collapse =\"\")}) %>%\n    rev() %>%\n    paste(collapse =\"\n\")\n}\nselfieDiag2Counterclock <- function(s) {\n  m <- str_as_matrix(s)\n  print(m)\n  sapply(1:nrow(m), function(i){\n      c(m[i, ], \"|\", rev(m[, nrow(m) - i + 1]) , \"|\",m[, nrow(m) - i + 1])  %>%\n      paste0(collapse =\"\")\n    }) %>%\n    paste(collapse =\"\n\")\n}\noper <- function(f, s) {\n  f(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287721,"user_id":null,"body":"diag2Sym <- function(s) {\n  str <- unlist(strsplit(unlist(strsplit(s, \"\n\")), \"\"))\n  n <- sqrt(length(str))\n  matr <- matrix(str, n, n, byrow = TRUE)\n  res <- matrix( rep(NA, n^2), n, n)\n  for ( p in 1: n) {\n    for ( q in 1: n ){\n      res[p,q] <- matr[ (n+1) - q , (n+1) - p ]   \n    }\n  }\n  return(paste0( sapply(1:n, function(x) paste0( res[x,], collapse = \"\" )), collapse = \"\n\" ))\n}\n\nrot90Counter <- function(s) {\n  str <- unlist(strsplit(unlist(strsplit(s, \"\n\")), \"\"))\n  n <- sqrt(length(str))\n  matr <- matrix(str, n, n, byrow = TRUE)\n  res <- matrix( rep(NA, n^2), n, n)\n  for ( p in 1: n) {\n    for ( q in 1: n ){\n      res[p,q] <- matr[ q , n+1-p  ]   \n    }\n  }\n  return(paste0( sapply(1:n, function(x) paste0( res[x,], collapse = \"\" )), collapse = \"\n\" ))\n}\n\n\nselfieDiag2Counterclock <- function(s) {\n  str <- unlist(strsplit(unlist(strsplit(s, \"\n\")), \"\"))\n  n <- sqrt(length(str))\n  matr <- matrix(str, n, n, byrow = TRUE)\n  res <- matrix( rep(NA, 3 * n^2 + 2 * n), n, 3 * n + 2)\n  for ( p in 1: n) {\n    for ( q in 1: n ){\n      res[p,q] <- matr[ p, q]   \n    }\n  }\n  for ( p in 1: n) {\n    for ( q in 1: n ){\n      res[p,q+n+1] <- matr[ (n+1) - q , (n+1) - p ]   \n    }\n  }  \n  for ( p in 1: n) {\n    for ( q in 1: n ){\n      res[p,q+2*n+2] <- matr[ q , n+1-p  ]   \n    }\n  }\n  res[,c(n+1, 2*n+2)] <- \"|\"\n  return(paste0( sapply(1:n, function(x) paste0( res[x,], collapse = \"\" )), collapse = \"\n\" ))\n}\n\n\noper <- function(f, s) {\n  f(s)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287722,"user_id":null,"body":"rot90Counter <- function(s) {\n  a <- unlist(strsplit(s,\"\n\"))\n  n <- length(a); ret <- vector()\n  for (i in seq(n, 1, -1)) {\n    r <- \"\"\n    for (j in seq(1, n))\n      r <- paste(r, substr(a[j], i, i), sep=\"\")\n    ret <- c(ret, r)\n  }\n  paste(ret, collapse=\"\n\")\n}\n\ndiag2Sym <- function(s) {\n  a <- unlist(strsplit(s,\"\n\"))\n  n <- length(a); ret <- vector()\n  for (i in seq(n, 1, -1)) {\n    r <- \"\"\n    for (j in seq(n, 1, -1))\n      r <- paste(r, substr(a[j], i, i), sep=\"\")\n    ret <- c(ret, r)\n  }\n  paste(ret, collapse=\"\n\")\n}\n\nselfieDiag2Counterclock <- function(s) {\n  a1 <- unlist(strsplit(s,\"\n\"))\n  a2 <- unlist(strsplit(diag2Sym(s),\"\n\"))\n  a3 <- unlist(strsplit(rot90Counter(s),\"\n\"))\n  n <- length(a1); ret <- vector()\n  for (i in seq(1, n))\n    ret <- c(ret, sprintf(\"%s|%s|%s\", a1[i], a2[i], a3[i]))\n  paste(ret, collapse=\"\n\")\n}\n\noper <- function(f, s) {\n  f(s)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287723,"user_id":null,"body":"diag2Sym <- function(s) {\n  # your code\n  n = length(unlist(strsplit(s,'\n')))\n  split = unlist(strsplit(unlist(strsplit(s,'\n')),''))\n  orim = matrix(split, nrow = n, ncol = n, byrow = TRUE)\n  newm = matrix(rep(0,n*n),nrow = n)\n  for (i in 1:n){\n    for (j in 1:n){\n      newm[i,j]=orim[n+1-j,n+1-i]\n    }\n  }\n  fl = c()\n  for (k in 1: n){\n    fl[k] = paste(as.character(newm[k,]), collapse = '')\n  }\n  fl = paste(fl, collapse = '\n')\n  return(fl)\n  \n}\n\nrot90Counter <- function(s) {\n  # your code\n  n = length(unlist(strsplit(s,'\n')))\n  split = unlist(strsplit(unlist(strsplit(s,'\n')),''))\n  orim = matrix(split, nrow = n, ncol = n, byrow = TRUE)\n  newm = t(orim)\n  fl = c()\n  for (k in 1: n){\n    fl[(n-k+1)] = paste(as.character(newm[k,]), collapse = '')\n  }\n  fl = paste(fl, collapse = '\n')\n  return(fl)\n}\n\nselfieDiag2Counterclock <- function(s) {\n  # your code\n  n = length(unlist(strsplit(s,'\n')))\n  split = unlist(strsplit(unlist(strsplit(s,'\n')),''))\n  # sys\n  orim = matrix(split, nrow = n, ncol = n, byrow = TRUE)\n  sys = matrix(rep(0,n*n),nrow = n)\n  for (i in 1:n){\n    for (j in 1:n){\n      sys[i,j]=orim[n+1-j,n+1-i]\n    }\n  }\n  # rotate\n  newm = t(orim)\n  rfl = c()\n  for (k in 1: n){\n    rfl[(n-k+1)] = paste(as.character(newm[k,]), collapse = '')\n  }\n  asm = unlist(strsplit(unlist(strsplit(rfl,'')),''))\n  rot = matrix(asm, nrow = n, ncol = n, byrow = T)\n  \n final = cbind(orim,sys,rot)\n\n fl = c()\n for (k in 1: n){\n   ind = c(n,2*n)\n   temp = c(final[k,], rep('|',2))\n   id = c(seq_along(final[k,]), ind + 0.5)\n   temp1 = temp[order(id)]\n   fl[k] = paste(as.character(temp1), collapse = '')\n   \n }\n fl = paste(fl, collapse = '\n')\n return(fl)\n  \n}\n\noper <- function(f, s) {\n  # your code\n  # switch(f, \n  #        diag2Sym = diag2Sym(s),\n  #        rot90Counter = rot90Counter(s),\n  #        selfieDiag2Counterclock = selfieDiag2Counterclock(s)\n  #        )\n  do.call(f,list(s))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56dec885c54a926dcd001095":[{"id":287724,"user_id":1313,"body":"opposite <- function(number){\n  -number\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287725,"user_id":null,"body":"opposite <- `-`","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287726,"user_id":785,"body":"opposite <- function(n) -n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287727,"user_id":null,"body":"opposite <- function(number){\n  return (-number)\n  # your code here\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287728,"user_id":null,"body":"opposite <- function(number){\n  # your code here\n  return(number*-1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287729,"user_id":null,"body":"opposite <- function(number){ #opposite is the name of the function, wow\n  # your code here\n  return(-1*number)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287730,"user_id":null,"body":"opposite <- function(number){\n  # your code here\n  return(-(number))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287731,"user_id":null,"body":"opposite <- function(number){\n  # your code here\n  if (number <= 0) {\n    print(number * -1)\n  } else {\n     print(number * -1)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287732,"user_id":null,"body":"opposite <- function(number){\n  if(number < 0){\n    number * -1\n  }else{\n    number * -1\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287733,"user_id":null,"body":"opposite <- function(number){\n  # your code here\n  number - number*2 \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56e3cd1d93c3d940e50006a4":[{"id":287734,"user_id":null,"body":"makeValley <- function(arr) {\n  len <- length(arr)\n  if(len<1) return(c())\n  a <- sort(arr)\n  left <- a[seq(len,1,by=-2)]\n  right <- a[seq(1+len%%2,len,by=2)]\n  return(c(left,right))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287735,"user_id":492,"body":"makeValley <- function(arr) {\n  itr <- function(arr, frm, to, step) {\n    i <- frm; l <- c()\n    while (i <= to) {\n      l <- c(l, arr[i])\n      i <- i + step\n    }\n    l\n  }\n  b <- sort(arr, decreasing=TRUE)\n  l <- itr(b, 1, length(b), 2)\n  r <- rev(itr(b, 2, length(b), 2))\n  c(l, r)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287736,"user_id":null,"body":"makeValley <- function(arr) {\narr<-rev(sort(arr))\nc(arr[c(T,F)],rev(arr[c(F,T)]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287737,"user_id":null,"body":"makeValley <- function(arr) {\n  n <- length(arr)\n  if (n == 0) return(NULL)\n  if (n %% 2 == 0){\n    sequence1 <- sort(arr, decreasing = TRUE)  \n    left <- sequence1[seq(1,n,2)]\n    sequence2 <- sort(arr, decreasing = FALSE)\n    right <- sequence2[seq(1,n,2)]\n    return(c(left,right))\n  } else {\n    bottom <- min(arr)\n    sequence1 <- sort(arr, decreasing = TRUE)[-n]\n    left <- sequence1[seq(1,n-1,2)]\n    sequence2 <- sort(arr, decreasing = FALSE)[-1]\n    right <- sequence2[seq(1,n-1,2)]\n    return(c(left,bottom,right))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287738,"user_id":492,"body":"makeValley <- function(arr) {\n  itr <- function(arr, frm, to, step) {\n    i <- frm; l <- c()\n    while (i <= to) {\n      l <- c(l, arr[i])\n      i <- i + step\n    }\n    l\n  }\n  b <- sort(arr, decreasing=TRUE)\n  l <- itr(b, 1, length(b), 2)\n  r <- rev(itr(b, 2, length(b), 2))\n  c(l, r)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287739,"user_id":null,"body":"makeValley <- function(arr) {\n  if (is.vector(arr)) {\n      valley(arr)\n  }\n}\n\n  \nvalley <- function(arr) {\n  new <- array()\n  sorted <- sort(arr)\n  size = length(sorted)\n  i = 0\n  while (i < size) {\n    i = i + 1\n    half = floor(i \/ 2)\n    mod = i %% 2\n    n = ifelse(mod == 1, half + mod, size + 1 - half) \n    new[n] <- sorted[size + 1 - i]\n  }\n  new\n}\n  \n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287740,"user_id":null,"body":"makeValley <- function(arr) {\n  if (length(arr) == 0){\n    return (NULL)\n  }\n  m <- min(arr)\n  arr <- arr[-which.min(arr)]\n  while (length(arr) > 0) {\n    if (length(arr) %% 2 == 0){\n      m <- c(m, min(arr))\n      arr <- arr[-which.min(arr)]\n    } else {\n        m <- c(min(arr), m)\n      arr <- arr[-which.min(arr)]\n    }\n    \n  }\n  m\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287741,"user_id":53,"body":"makeValley <- function(arr) {\n  xs <- sort(arr, decreasing=TRUE)\n  a <- c()\n  b <- c()\n  i <- 0\n  for (x in xs) {\n    if (i%%2 == 0) {\n      a <- append(a, x)\n    } else {\n      b <- append(b, x)\n    }\n    i <- i + 1 \n  }\n  c(a, rev(b))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287742,"user_id":null,"body":"makeValley <- function(arr) {\n  if(length(arr)==0) c()\n  else{\n  arr<-rev(sort(arr))\n  left <- arr[seq(1,length(arr),2)]\n  right<- arr[seq(2,length(arr),2)]\n  return(c(left, sort(right)))\n    }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287743,"user_id":null,"body":"makeValley <- function(arr) {\n  len <- length(arr)\n  if (len <= 2) return(sort(arr, decreasing = TRUE))\n  v <- sort(arr, decreasing = TRUE)\n  c(v[1], makeValley(v[3:len]), v[2])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56e7d40129035aed6c000632":[{"id":287744,"user_id":null,"body":"easyLine <- function(n) {\n  #choose(n,k)\n  round(log(sum(choose(n,0:n)^2)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287745,"user_id":2334,"body":"easyLine <- function(n) {\n  k <- 1:n\n  round(log(crossprod(choose(n,k))))[1]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287746,"user_id":null,"body":"easyLine <- function(n) {\n  return(round(log(sum(choose(n, 0:n)^2))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287747,"user_id":492,"body":"easyLine <- function(n) {\n  sum <- 1\n  for (i in 1:n) {\n    sum <- sum * ((n + i) \/ i)\n  }\n  round(log(sum), digits=0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287748,"user_id":492,"body":"easyLine <- function(n) {\n  sum <- 1\n  for (i in 1:n) {\n    sum <- sum * ((n + i) \/ i)\n  }\n  round(log(sum), digits=0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287749,"user_id":null,"body":"easyLine <- function(n) {\n  return(round(log(sum(sapply(seq(n), function(x){return(choose(n,x))})**2))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287750,"user_id":null,"body":"easyLine <- function(n) {\n  sum = 0\n  for(k in 0:n){\n     c = choose(n, k)\n    print(c)\n     sum = sum + c^2 \n  }\n  round(log(sum))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287751,"user_id":null,"body":"choose_fixed_sq <- function(n) {\n    f <- function(x) choose(n, x)^2\n    return(f)\n}\n\neasyLine <- function(n) {\n    # n is col in Pascal's triangle\n    # k is row in Pascal's triangle\n    kvals <- seq(from = 0, to = n)\n    # square of expansion value\n    int_fun <- choose_fixed_sq(n)\n    # values for the given row\n    expansion <- Map(int_fun, kvals)\n    # sum of squares\n    res <- Reduce(sum, expansion)\n    # rounded log of sum of squares\n    round(log(res))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287752,"user_id":null,"body":"easyLine <- function(n) {\n  round(log(sum(choose(n, 0:n)^2)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287753,"user_id":null,"body":"easyLine <- function(n) {\n  choose(n, c(0:n)) ** 2 %>% sum %>% log %>% round\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56efab15740d301ab40002ee":[{"id":287754,"user_id":421,"body":"gcdi <- function (a, b) {\n  a <- abs(a)\n  b <- abs(b)\n  ifelse(b == 0, a, gcdi(b, a %% b))\n}\nlcmu <- function (a, b) {\n  abs(a * b) \/ gcdi(a, b)\n}\nsom <- function (a, b) {\n  a + b\n}\nmaxi <- function (a, b) {\n  max(a, b)\n}\nmini <- function (a, b) {\n  min(a, b)\n}\noperArray <- function(fct, arr, init) {\n  ans <- c()\n  for(x in arr){\n    init <- fct(x, init)\n    ans <- c(ans, init)\n  }\n  ans\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287755,"user_id":null,"body":"gcdi <- function (a, b) {\n  i <- min(abs(a),abs(b))\n  while (i >= 1) {\n    if ((a%%i)==0 && (b%%i)==0) return(i)\n    i<-i-1\n  } \n}\n\nlcmu <- function (a, b) {\n  (abs(a)*abs(b))\/gcdi(a,b)\n}\nsom <- function (a, b) {\n  a+b\n}\nmaxi <- function (a, b) {\n  max(a,b)\n}\nmini <- function (a, b) {\n  min(a,b)\n}\noperArray <- function(fct, arr, init) {\n  v <- vector(\"integer\",length(arr))\n  prev <- init\n  for (i in (1:length(arr))) {\n    v[i] <- fct(prev,arr[i])\n    prev <- v[i]\n  }\n  return(v)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287756,"user_id":null,"body":"gcdi <- function (a, b) {\n  if ( a == 0 ) {\n    return(b)\n  } else if (b == 0) {\n     return(a)\n  }else {\n    x1 <-abs(a)\n    y1 <-abs(b)\n    x <- maxi(x1,y1)\n    y <- mini(x1,y1)\n\n    r <- x%%y\n\n    return (gcdi(y,r))\n  }\n}\nis.prime <- function(num){\n  if ( num == 2 ) {\n    TRUE\n  } else if (any(num%%2:(num\/2) == 0)){\n    FALSE\n  } else {\n    TRUE\n  }\n}\n\nlcmu <- function (a, b) {\n  x <- abs(a)\n  y <- abs(b)\n\n  minimo <- maxi(x,y)\n  lcm <- 1\n\n  for ( value in 1:minimo+1 ){\n    if  (is.prime(value)){\n      while(x%%value == 0 | y%%value == 0 ){\n        multiplica <- FALSE\n\n        if ( x%%value == 0){\n          x <- x\/value\n          multiplica <- TRUE\n        }\n\n        if ( y%%value == 0){\n          y <- y\/value\n          multiplica <- TRUE\n        }\n\n        if ( multiplica ){\n          lcm <- lcm * value\n        }\n      }\n\n    }\n\n    if ( x == 1 & y == 1)\n      return (lcm)\n  }\n\n  return(lcm)\n\n}\nsom <- function (a, b) {\n  return (a+b)\n}\nmaxi <- function (a, b) {\n  return( if (a > b) a else b)\n}\nmini <- function (a, b) {\n  return(if (a < b) a else b)\n}\noperArray <- function(fct, arr, init) {\n\n  start <- init\n  result <- c()\n  for (index in 1:length(arr)) {\n     result[index] <- fct(start, arr[index])\n     start <- result[index]\n  }\n\n  return(result)\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287757,"user_id":53,"body":"gcdi <- function (a, b) {\n  if (b == 0) abs(a) else gcdi(b, a %% b)\n}\nlcmu <- function (a, b) {\n  abs(a * b) %\/% gcdi(a, b)\n}\nsom <- function (a, b) {\n  a + b\n}\nmaxi <- function (a, b) {\n  if (a > b) a else b\n}\nmini <- function (a, b) {\n  if (a < b) a else b\n}\noperArray <- function(fct, arr, init) {\n  acc <- init\n  ys <- c()\n  for (i in seq_along(arr)) {\n    acc <- fct(acc, arr[i])\n    ys <- c(ys, acc)\n  }\n  ys\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287758,"user_id":null,"body":"gcdi <- function(a,b)ifelse(b,Recall(b,a%%b),abs(a))\nlcmu <- function(a,b)abs(a*b\/gcdi(a,b))\nsom <- sum\nmaxi <- max\nmini <- min\n\noperArray <- function(fct, arr, init) {\n  arr <- c(init,arr)\n  for(i in 2:length(arr))arr[i] <- fct(arr[i-1],arr[i])\n  arr[-1]\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287759,"user_id":null,"body":"gcdi <- function (a, b) {\n  if (b == 0) {\n    abs(a)\n  }\n  else {\n    gcdi(b, a %% b)\n  }\n}\nlcmu <- function (a, b) {\n  abs(a * b) \/ gcdi(a, b)\n}\nsom <- function (a, b) {\n  a + b\n}\nmaxi <- function (a, b) {\n  max(a, b)\n}\nmini <- function (a, b) {\n  min(a, b)\n}\noperArray <- function(fct, arr, init) {\n  acc <- init\n  result <- c()\n  for (x in arr) {\n    acc <- fct(acc, x)\n    result <- c(result, acc)\n  }\n  result\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287760,"user_id":null,"body":"gcdi <- function (a, b) {\n  inner_gcd <- function(a, b) {\n    if (a %% b == 0) {\n      abs(b)\n    } else {\n      inner_gcd(b, a %% b)\n    }\n  }\n  c(a, inner_gcd(a[[length(a)]], b))\n}\nlcmu <- function (a, b) {\n  c(a, abs(a[[length(a)]] * b) \/ gcdi(a[[length(a)]], b)[-1])\n}\nsom <- function (a, b) {\n  c(a, a[[length(a)]] + b)\n}\nmaxi <- function (a, b) {\n  c(a, max(a[[length(a)]], b))\n}\nmini <- function (a, b) {\n  c(a, min(a[[length(a)]], b))\n}\noperArray <- function(fct, arr, init) {\n  Reduce(fct, c(init, arr))[-1]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287761,"user_id":669,"body":"gcdi <- function (a, b) {\n  uv <- abs(c(a, b))\n  while(uv[2] != 0) {\n    uv <- c(uv[2], uv[1] %% uv[2])\n  }\n  uv[1]\n}\nlcmu <- function (a, b) abs(a * b) \/ gcdi(a, b)\n\nsom <- function (a, b) a + b\nmaxi <- function (a, b) max(a, b)\nmini <- function (a, b) min(a, b)\n\noperArray <- function(fct, arr, init) {\n  purrr::accumulate(arr, fct, .init = init)[-1]\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287762,"user_id":669,"body":"gcdi <- function (a, b) {\n  uv <- abs(c(a, b))\n  while(uv[2] != 0) {\n    uv <- c(uv[2], uv[1] %% uv[2])\n  }\n  uv[1]\n}\nlcmu <- function (a, b) abs(a * b) \/ gcdi(a, b)\n\nsom <- function (a, b) a + b\nmaxi <- function (a, b) max(a, b)\nmini <- function (a, b) min(a, b)\n\noperArray <- function(fct, arr, init) {\n  print(list(fct, arr, init))\n  purrr::accumulate(arr, fct, .init = init)[-1]\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287763,"user_id":null,"body":"gcdi <- function (a, b) {\n  answer = rep(0,length(a))\n  gcd <- b\n  for(ii in 1:length(a)){\n    gcd <- workhorse(a[ii],gcd)\n    answer[ii] <- gcd\n  }\n  return(answer)\n}\n\nlcmu <- function (a, b) {\n  answer = rep(0,length(a))\n  lcm <- b\n  for(ii in 1:length(a)){\n    lcm <- a[ii]\/workhorse(a[ii],lcm)*lcm\n    answer[ii] <- abs(lcm)\n  }\n  return(answer)\n}\n\nworkhorse <- function (a,b){\n  a <- abs(a)\n  b <- abs(b)\n  while(a != b){\n    if(a > b){\n      a <- a - b\n    } else{\n      b <- b - a\n    }\n  }\n  return(a)\n}\n\nsom <- function (a, b) {\n  a[1] <- a[1] + b\n  return(cumsum(a))\n}\n\nmaxi <- function (a, b) {\n  answer <- rep(0,length(a))\n  greatest <- b\n  for(ii in 1:length(a)){\n    if(a[ii] > greatest){\n      answer[ii] <- a[ii]\n      greatest <- a[ii]\n    } else{\n      answer[ii] <- greatest\n    }\n  }\n  return(answer)\n}\n\nmini <- function (a, b) {\n  answer <- rep(0,length(a))\n  least <- b\n  for(ii in 1:length(a)){\n    if(a[ii] < least){\n      answer[ii] <- a[ii]\n      least <- a[ii]\n    } else{\n      answer[ii] <- least\n    }\n  }\n  return(answer)\n}\n\noperArray <- function(fct, arr, init) {\n  return(fct(arr,init))  \n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56f6919a6b88de18ff000b36":[{"id":287764,"user_id":null,"body":"how_many_dalmatians <- function(n) {\n  if (n == 101) return(\"101 DALMATIANS!!!\")\n  else if (n <= 10) return(\"Hardly any\")\n  else if (n <= 50) return(\"More than a handful!\")\n  \"Woah that's a lot of dogs!\"\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287765,"user_id":null,"body":"#Fix me!\n\nhow_many_dalmatians <- function( n ) {\n    if (n == 101) {\n      response = \"101 DALMATIANS!!!\"\n    }\n    else if (n <= 10) {\n      response = \"Hardly any\"\n    } else if (n <= 50) {\n      response = \"More than a handful!\"\n    }\n    else {\n      response = \"Woah that's a lot of dogs!\"\n    }\n    \n  return(response)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287766,"user_id":53,"body":"how_many_dalmatians <- function( n ) {\n  if (n <= 10) return(\"Hardly any\")\n  if (n <= 50) return(\"More than a handful!\")\n  if (n == 101) return(\"101 DALMATIANS!!!\")\n  \"Woah that's a lot of dogs!\"\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287767,"user_id":null,"body":"#Fix me!\n\nhow_many_dalmatians <- function( n ) {\n    if (n == 101){\n      \"101 DALMATIANS!!!\"\n    }\n    else if (n < 11) {\n      \"Hardly any\"\n    } \n    else if (n < 51) {\n      \"More than a handful!\"\n    }\n    else if (n > 51){\n      \"Woah that's a lot of dogs!\" \n    }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287768,"user_id":null,"body":"#Fix me!\n\nhow_many_dalmatians <- function( n ) {\n    if (n == 101) {\n      return (\"101 DALMATIANS!!!\")\n    } \n  if(n==10){\n    return(\"Hardly any\")\n  }\n  if (n < 10) {\n      return (\"Hardly any\")\n    } \n  if (n>=10 & n < 51){\n      return (\"More than a handful!\")\n    }\n    \n    return (\"Woah that's a lot of dogs!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287769,"user_id":null,"body":"how_many_dalmatians <- function( n ) {\n    if (n == 101) {\n      return(\"101 DALMATIANS!!!\")\n    }\n    else if (n <= 10) {\n      return(\"Hardly any\")\n    }\n    else if (n <= 50) {\n      return(\"More than a handful!\")\n    }\n    return(\"Woah that's a lot of dogs!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287770,"user_id":null,"body":"#Fix me!\n\nhow_many_dalmatians <- function( n ) {\n    if (n <= 10) {\n      return(\"Hardly any\")\n    } else if (n <= 50) {\n      return(\"More than a handful!\")\n    } else if (n==101){\n      return(\"101 DALMATIANS!!!\")\n\n    } else {\n                 return(\"Woah that's a lot of dogs!\")\n\n    \n\n}\n  }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287771,"user_id":null,"body":"#Fix me!\n\nhow_many_dalmatians <- function( n ) {\n  library(dplyr)\n  case_when(n < 11 ~ \"Hardly any\", # had to change this from <10 to pass tests. Instructions say \"Your friend has fewer than 10 dogs:\"Hardly any\", not 10 or fewer\n           n >= 11 & n <51 ~ \"More than a handful!\",\n           n > 50 & n != 101 ~ \"Woah that's a lot of dogs!\",\n           n == 101 ~ \"101 DALMATIANS!!!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287772,"user_id":null,"body":"how_many_dalmatians <- function( n ) {\n    if (n <= 10) {\n      return(\"Hardly any\")\n    } else if (n < 51) {\n      return(\"More than a handful!\")\n    } else if (n == 101) {\n      return(\"101 DALMATIANS!!!\")\n    } else {\n      return(\"Woah that's a lot of dogs!\")\n    }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287773,"user_id":null,"body":"#Fix me!\n\nhow_many_dalmatians <- function( n ) {\n  if(n == 101){\n    return(\"101 DALMATIANS!!!\")\n  }\n  else if(1<= n && n <= 10){\n    return(\"Hardly any\")\n    } \n  else if(n < 51){\n    return(\"More than a handful!\")\n    }\n  else if(51 <= n && n != 101){\n    return(\"Woah that's a lot of dogs!\")\n    }  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56f699cd9400f5b7d8000b55":[{"id":287774,"user_id":null,"body":"fix_the_meerkat <- function(vec){\n  return(vec[length(vec):1])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287775,"user_id":null,"body":"fix_the_meerkat <- function(vec){\n  c(vec[3], vec[2], vec[1])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287776,"user_id":421,"body":"fix_the_meerkat <- rev","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287777,"user_id":null,"body":"fix_the_meerkat <- function(vec){\n  vec[3:1]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287778,"user_id":null,"body":"fix_the_meerkat <- function(vec){\n  rev(1:3)\n  rev(vec)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287779,"user_id":null,"body":"fix_the_meerkat <- function(vec){\n  return (rev(vec))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287780,"user_id":null,"body":"fix_the_meerkat <- function(vec){\n  return(c(vec[3], vec[2], vec[1]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287781,"user_id":527,"body":"fix_the_meerkat = rev","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287782,"user_id":50,"body":"fix_the_meerkat <- function(vec){\n  rev (vec)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56f69d9f9400f508fb000ba7":[{"id":287783,"user_id":null,"body":"monkey_count <- function(n) {\n  seq.int(n)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287784,"user_id":null,"body":"monkey_count <- function(n) {\n  x <- c(1:n)\n  return (x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287785,"user_id":645,"body":"monkey_count <- function(n) 1:n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287786,"user_id":null,"body":"monkey_count <- function(n) {\n  seq(1, n, by=1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287787,"user_id":null,"body":"monkey_count <- seq","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287788,"user_id":null,"body":"monkey_count <- function(n) {\n  seq_along(numeric(n))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287789,"user_id":null,"body":"monkey_count <- function(n) {\n  res <- c()\n  for (i in 1:n){\n    res = c(res, i)\n  }\n  return (res)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287790,"user_id":null,"body":"monkey_count <- function(n) {\nprint(1:n)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287791,"user_id":53,"body":"monkey_count <- function(n) {\n   xs <- c()\n   i <- 0\n   while (i < n) {\n     i <- i + 1\n     xs[length(xs)+1] <- i\n   }\n   xs\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287792,"user_id":null,"body":"monkey_count <- function(n) {\n  # your code here\n  ans = c(1:n)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56f78a42f749ba513b00037f":[{"id":287793,"user_id":null,"body":"rolldice_sum_prob <- function(sm, dice){\n # Read about the expand.grid function on StackOverflow. It solves this kata\n  return(sum(rowSums(expand.grid(rep(list(1:6),dice))) == sm)\/(6^dice))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287794,"user_id":null,"body":"rolldice_sum_prob <- function(s, n) {\n  if (s %% 1 || n %% 1 || s < 0 || n < 0) {\n    stop(\"The target value 's' and the number of dice 'n' must be positive, integer values\")\n  }\n  res <- Reduce(function(x, y) {\n    i <- parent.frame()[[\"i\"]]\n    if (!is.null(names(x))) {\n      counts <- x\n      x <- as.integer(names(x))\n    } else {\n      counts <- rep(1, length(x))\n    }\n    vals <- outer(x, y, `+`)\n    vals[vals > s | vals + (n - i) * 6 < s] <- NA\n    tapply(counts[row(vals)], vals, sum)\n  },\n  replicate(n, 1:6, simplify = FALSE), init = 0)\n  sum(res[names(res) == s] * 6^-n)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287795,"user_id":null,"body":"rolldice_sum_prob <- function(sum_, dice_amount){\n   x <- expand.grid(rep(list(1:6),dice_amount)) \n   sums <- apply(x,1,sum)\n   sums <- sums[sums==sum_]\n   length(sums)\/(6^dice_amount)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287796,"user_id":null,"body":"rolldice_sum_prob <- function(sum_, dice_amount){\n  # Your code here\n    a <- matrix(rep(1:6, dice_amount),\n              nrow = 6)\n  a_df <- data.frame(a)\n  \n  # show all combinations\n  dice_comb <- expand.grid(a_df)\n  \n  # denominator - n_combinations\n  denominator <- nrow(dice_comb)\n  \n  # sum of all combinations\n  all_comb <- apply(dice_comb, 1, sum)\n  \n  # numerator - how many sums\n  numerator <- sum(all_comb == sum_) # sum_\n  return(numerator\/denominator)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287797,"user_id":null,"body":"rolldice_sum_prob <- function(sum, n_dices){\n  l <- lapply(1:n_dices, function(x) c(1:6))\n  perm <- expand.grid(l)\n  sum(rowSums(perm) == sum)\/nrow(perm)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287798,"user_id":null,"body":"rolldice_sum_prob <- function(sum_, dice_amount){\n  mylist = lapply(1:dice_amount, function(j) 1:6)\n  mean(rowSums(expand.grid(mylist)) == sum_)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287799,"user_id":null,"body":"rolldice_sum_prob <- function(sum_, dice_amount){\n  m = matrix(nrow = 6, ncol = dice_amount, data = rep(1:6, dice_amount))\n  m = as.data.frame(m)\n  res = apply(X = expand.grid(m), MARGIN = 1, FUN = sum)\n  length(which(res == sum_)) \/ length(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287800,"user_id":null,"body":"rolldice_sum_prob <- function(sum_, dice_amount){\n  # Find all possible roll combinations\n  rolls = expand.grid(as.data.frame(matrix(1:6, nrow = 6, ncol = dice_amount)))\n  # Add a sum column that sums up the values for each combination\n  rolls$sum = rowSums(rolls)\n  # Find the proportion with the given sum\n  mean(rolls$sum == sum_)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287801,"user_id":null,"body":"# Recursive solution:\n# Count the number of solutions with one die less that yield\n# a total between sum_ - 6 and sum_ - 1\n# Recursion ends when sum_ is unreachable with the given number\n# of dies, or otherwise when rolling only a single die (probability 1\/6)\nrolldice_sum_prob <- function(sum_, dice_amount){\n  if (dice_amount * 6 < sum_ || sum_ < dice_amount)\n    0\n  else\n    if (dice_amount == 1)\n      1.0\/6\n    else\n      sum(sapply(1:6,function(t) rolldice_sum_prob(sum_ - t, dice_amount - 1) \/ 6.0))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287802,"user_id":null,"body":"\nrolldice_sum_prob <- function(sum_, dice_amount){\n  combos <- expand.grid(rep(list(seq_len(6)), dice_amount)) %>% rowSums(.) == sum_ \n  sum(combos)\/(6^dice_amount)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"56fcc393c5957c666900024d":[{"id":287803,"user_id":null,"body":"code <- function(s) {\n  n <- nchar(s)\n  d <- ceiling(sqrt(n))\n  t <- paste0(s, strrep(\"\\v\", d^2 - n))\n  paste(apply(as.matrix(apply(matrix(unlist(strsplit(t, \"\")), d), 1, rev)),\n              2, paste, collapse = \"\"), collapse = \"\\n\")\n}\n\ndecode <- function(s) {\n  t <- unlist(strsplit(gsub(\"\\n\", \"\", s), \"\"))\n  gsub(\"\\v\", \"\",\n       paste(apply(as.matrix(apply(matrix(rev(t), sqrt(length(t)), byrow = TRUE), 2, rev)),\n                   2, paste, collapse = \"\"), collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-10 12:57:38"},{"id":287804,"user_id":null,"body":"code <- function(s) {\n  len <- sqrt(nchar(s))\n  \n  if(round(len) == len){\n    n <- len\n  } else{\n    n <- floor(len)+1\n    s <- paste0(s, paste0(rep(\"\\v\", as.integer(n^2)-as.integer(len^2)), collapse=\"\"))\n  }\n  \n  ssplit <- strsplit(s, \"\")[[1]] %>%\n    split(rep(1:n, each=n))\n  \n  \n  \n  list90 <- vector(mode = \"list\", length = n)\n  \n  for(i in seq_len(n)){\n    for(j in seq_len(n)){\n      list90[[i]][[j]] <- ssplit[[n-j+1]][[i]]\n    }\n  }\n  \n  list90 %>%\n    lapply(paste0, collapse = \"\") %>%\n    paste0(collapse = \"\\n\")\n}\n\ndecode <- function(s) {\n  s <- stringr::str_remove_all(s, \"\\n\")\n  n <- sqrt(nchar(s))\n  ssplit <- strsplit(s,\"\")[[1]] %>%\n    split(rep(1:n, each=n))\n  \n  list90 <- vector(mode = \"list\", length = n)\n  \n  for(i in seq_len(n)){\n    for(j in seq_len(n)){\n      list90[[i]][[j]] <- ssplit[[j]][[n-i+1]]\n    }\n  }\n  \n  list90 %>%\n    lapply(paste0, collapse = \"\") %>%\n    paste0(collapse = \"\") %>%\n    stringr::str_remove_all(\"\\v\")\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-10 12:57:38"},{"id":287805,"user_id":null,"body":"code <- function(s) {\n  if(s == \"\"){\n    return(\"\")\n  }else{\n    s_1_str <- strsplit(s,split = \"\")[[1]]\n    n <- ceiling(sqrt(length(s_1_str)))\n    NNN <- n**2\n    s_1_str[(length(s_1_str)+1):NNN] <- \"\\v\"\n    s_1_matrix <- matrix(s_1_str,ncol = n)\n    \n    T_s_1_matrix <- t(apply(s_1_matrix , 1 , rev))\n    \n    T_s1_list <- c()\n    for (i in 1:n) {\n      T_s1_list <- append(T_s1_list , paste(T_s_1_matrix[i,1:n],collapse = \"\"))\n    }\n    return(paste(T_s1_list,collapse = \"\\n\"))\n  }\n\n  # your code\n}\n\ndecode <- function(s) {\n  if(s == \"\"){\n    return(\"\")\n  }else{\n    s_1_str <- strsplit(s,split = \"\")[[1]]\n    n <- which(s_1_str == \"\\n\")\n    s_1_str <- s_1_str[-(which(s_1_str == \"\\n\"))]\n    s_1_matrix <- matrix(s_1_str,ncol = n-1)\n    \n    T_s_1_matrix <- apply(s_1_matrix,-1,rev)\n    \n    N <- length(T_s_1_matrix[,1])\n    T_s1_list <- c()\n    for (i in 1:N) {\n      T_s1_list <- append(T_s1_list , paste(T_s_1_matrix[i,1:N],collapse = \"\"))\n    }\n    T_s1_list <- paste(T_s1_list,collapse = \"\")\n    S_2_str <- strsplit(T_s1_list,split = \"\")[[1]]\n    S_2_str <- S_2_str[-(which(S_2_str == \"\\v\"))]\n    return(paste(S_2_str,collapse = \"\"))\n  }\n  # your code\n}\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-10 12:57:38"},{"id":287806,"user_id":null,"body":"c11 = rawToChar(as.raw(11))\n\ncode <- function(s) {\n  if (s == \"\") return(\"\")\n  n = ceiling(sqrt(nchar(s)))\n  pad = paste0(s, strrep(c11,n*n - nchar(s)), collapse=\"\")\n  m = t(matrix(unlist(strsplit(pad,\"\")),n,n))\n  rot = m[n:1,,drop=FALSE]\n  paste(apply(rot, 2, paste, collapse=\"\"), collapse=\"\\n\")\n}\n\ndecode <- function(s) {\n  if (s == \"\") return(\"\")\n  n = sqrt(nchar(s))\n  m = matrix(unlist(strsplit(gsub(\"\\n\",\"\",s),\"\")),n,n)\n  rot = t(m[n:1,,drop=FALSE])\n  gsub(c11,\"\",paste(apply(rot, 2, paste, collapse=\"\"), collapse=\"\"))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-10 12:57:38"},{"id":287807,"user_id":null,"body":"code <- function(s) {\n  # your code\n  if(nchar(s) < 1){\n    return('')\n  }\n  n <- ceiling(nchar(s)^0.5)\n  codestring <- paste0(s,paste0(rep(rawToChar(as.raw(11)),n^2-nchar(s)),collapse=''))\n  characters <- strsplit(codestring,'')[[1]]\n  charmatrix <- matrix(characters,n,n)[,n:1]\n  return(paste0(apply(charmatrix,1,paste0,collapse=''),collapse='\\n'))\n}\n\ndecode <- function(s) {\n  # your code\n  if(nchar(s) < 1){\n    return('')\n  }\n  text <- paste0(strsplit(s,'\\n')[[1]],collapse='')\n  n <- nchar(text)^0.5\n  charmatrix <- matrix(strsplit(text,'')[[1]],n,n)[n:1,]\n  return(gsub('\\v','',paste0(apply(charmatrix,1,paste0,collapse=''),collapse='')))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-10 12:57:38"},{"id":287808,"user_id":null,"body":"code <- function(s) {\n  # Convert a matrix of characters to a string.\n  finish <- function(s) {\n    paste(apply(s, 1, paste, collapse=\"\"), collapse=\"\\n\")\n  }\n  # Convert a string to a matrix of characters.\n  n <- ceiling(sqrt(nchar(s)))\n  x <- matrix(c(unlist(strsplit(s, \"\")), rep(\"\\v\", n^2 - nchar(s))), n)\n  # Rotate and convert back to a string.\n  finish(t(apply(x, 1, rev)))\n}\n\ndecode <- function(s) {\n  gsub(\"[\\v\n]\", \"\", code(code(code(s)))) # Lazy but simple!\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-10 12:57:38"},{"id":287809,"user_id":null,"body":"code <- function(s) {\n  if(nchar(s)==0)return(s)\n  n <- ceiling(sqrt(nchar(s)))\n  s <- paste0(s,paste0(rep('\\v',n**2-nchar(s)),collapse=''),collapse='')\n  s <- t(apply(t(matrix(unlist(strsplit(s,'')),nrow=n)),2,function(x)x[n:1]))\n  paste0(lapply(1:nrow(s),function(x)paste0(s[x,1:n],collapse='')),collapse='\\n')\n}\n\ndecode <- function(s) {\n  if(nchar(s)==0)return(s)\n  s <- unlist(strsplit(gsub('\\n','',s),''))\n  n <- sqrt(length(s))\n  gsub('\\v','',paste0(t(matrix(s,nrow=n)[n:1,]),collapse=''))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-10 12:57:38"},{"id":287810,"user_id":669,"body":"code <- function(s) {\n  if (s == \"\") {\n    return(s)\n  }\n  n <- ceiling(sqrt(nchar(s)))\n  s <- paste0(s, strrep(\"\\v\", n^2 - nchar(s))) # padding\n  \n  m <- matrix(unlist(strsplit(s, \"\")), n, n)\n  m <- apply(t(m), 2, rev)\n  \n  paste(apply(m, 2, paste, collapse = \"\"), collapse = \"\\n\")\n}\n\ndecode <- function(s) {\n  if (s == \"\") {\n    return(s)\n  }\n  s <- gsub(\"\\n\", \"\", s)\n  n <- sqrt(nchar(s))\n  \n  m <- matrix(unlist(strsplit(s, \"\")), n, n)\n  m <- t(apply(m, 2, rev))\n  \n  gsub(\"\\v\", \"\", paste(m, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-10 12:57:38"},{"id":287811,"user_id":null,"body":"code <- function(s) {\n  \n  if(s == \"\") return(\"\")\n  chars <- strsplit(s, \"\")[[1]]\n  l <- length(chars)\n  n <- as.integer(ceiling(sqrt(l)))\n  nsq <- n * n\n  if((nsq - l) > 0L) chars[(l + 1L):nsq] <- \"\\v\"\n  \n  i <- seq.int(1L, nsq, n)\n  ind <- lapply(i, function(x) c(x, x + n - 1L))\n  chr_lst <- lapply(ind, function(x) chars[x[1]:x[2]])\n  res <- do.call(paste0, rev(chr_lst))\n  paste0(res, collapse = \"\\n\")\n  \n}\n\ndecode <- function(d) {\n  \n  d_lns <- strsplit(d, \"\\n\")[[1]]\n  chr_lst <- strsplit(d_lns, \"\")\n  rev_lst <- lapply(chr_lst, rev)\n  lns <- do.call(paste0, rev_lst)\n  res <- paste0(lns, collapse = \"\")\n  gsub(\"\\v\", \"\", res)\n  \n}\n\n","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-10 12:57:38"},{"id":287812,"user_id":null,"body":"code <- function(s) {\n  ascii11 <- intToUtf8(11)\n  l <- nchar(s)\n  if(!l) return(s)\n  side <- ceiling(sqrt(l))\n  m <- matrix(ascii11, nrow = side, ncol = side)\n  m[1:l] <- strsplit(s,\"\")[[1]]\n  m <- m[,side:1]\n  print(m)\n  rows_as_strings <- apply(m,1, paste, collapse=\"\")\n  paste(rows_as_strings, collapse=\"\\n\")\n}\n\ndecode <- function(s) {\n  ascii11 <- intToUtf8(11)\n  s <- gsub(\"\\\\n\",\"\", s)\n  l <- nchar(s)\n  if(!l) return(s)\n  side <- sqrt(l)\n  m <- matrix(strsplit(s,\"\")[[1]], nrow = side, ncol = side)\n  m <- t(m[side:1,])\n  gsub(ascii11, \"\", paste(m, collapse=\"\"))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-10 12:57:38"}],"56fe17fcc25bf3e19a000292":[{"id":287813,"user_id":492,"body":"v1 <- function (m, p) {\n  (m * p * 2) + p \n}\nu1 <- function (m, p) {\n  (m * p) + p\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287814,"user_id":null,"body":"v1 <- function (n, p) {\n  # your code \n  (2*n+1) * p\n}\nu1 <- function (n, p) {\n  # your code \n  (n+1) * p\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287815,"user_id":null,"body":"v1 <- function (n, p) {\n    (2*n+1) * p \n}\n\nu1 <- function (n, p) {\n    (n+1) * p\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287816,"user_id":null,"body":"u1 <- function(n, p) (n + 1) * p\n\nv1 <- function(n, p) (2 * n + 1) * p\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287817,"user_id":null,"body":"binomial <- function(a,b) {\n  if (b == 0) {return(1)}\n  if (a == 0) {return(0)}\n  floor((a-b+1) * binomial(a, b-1)\/b)\n}\n\nv1 <- function (n, p) {\n  #sum(sapply(0:n, function(k) {((-1)^k) * p * (4 ^(n-k)) * binomial(2*n-k,k)}))\n  (2 * n + 1) * p\n}\n\nu1 <- function (n, p) {\n  #sum(sapply(0:n, function(k) {((-1)^k) * p * (4 ^(n-k)) * binomial(2*n-k+1,k)}))\n  (n + 1) * p\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287818,"user_id":null,"body":"v1 <- function (n, p) {\n  # your code \n  return((2 * n + 1) * p)\n}\nu1 <- function (n, p) {\n  # your code \n  return((n + 1) * p)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287819,"user_id":1572,"body":"v1 <- function (n, p) {\n  p * (2*n + 1)\n}\nu1 <- function (n, p) {\n  p * (n + 1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287820,"user_id":17,"body":"v1 <- function (n, p) {\n  return(p * (2 * n + 1))\n}\nu1 <- function (n, p) {\n  return(p * (n + 1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287821,"user_id":null,"body":"v1 <- function (n, p) {\n  result<-(2*n+1)*p\n  return(result)\n}\nu1 <- function (n, p) {\n  result <- (n+1)*p\n  return(result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287822,"user_id":2334,"body":"v1 <- function(n, p){\n    (2*n + 1)*p\n}\n\nu1 <- function(n, p){\n    (n + 1)*p\n}\n\n# v1 <- function (n, p) {\n#   k = seq.int(from = 0, to = n)\n#   p*sum(((-1)^k)*4^(n-k)*choose(2*n - k, k))  \n# }\n# u1 <- function (n, p) {\n#   k = seq.int(from = 0, to = n)\n#   p*sum(((-1)^k)*4^(n-k)*choose(2*n - k + 1, k))\n# }\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5700c9acc1555755be00027e":[{"id":287823,"user_id":2334,"body":"containAllRots <- function(s, arr) {\n    n <- nchar(s)\n    srots <- c(s, paste(substring(s, 2:n), substring(s, 1, 1:(n - 1)), sep = \"\"))\n    all(srots %in% arr)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287824,"user_id":492,"body":"rotString <- function (x, shift) {\n  substr(paste0(x, x, collapse=\"\"), shift + 1, nchar(x) + shift)\n}\nallRots <- function(x) {\n  unique(sapply(1:nchar(x), function(v) rotString(x, v)))\n}\ncontainAllRots <- function(s, arr) {\n  r <- allRots(s)\n  for (rr in r) {\n    if (!(rr %in% arr)) return(FALSE)\n  }\n  TRUE\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287825,"user_id":null,"body":"containAllRots <- function(s, arr) {\n  print(s)\n  print(arr)\n  x = unlist(sapply(arr, function(x) grep(x, strrep(s,2), fixed = TRUE)))\n  print(ifelse( sum(x) == nchar(s) | sum(x) == nchar(s)\/2 , TRUE, FALSE))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287826,"user_id":null,"body":"containAllRots <- function(s, arr) {\n  str <- unlist(strsplit(s, \"\"))\n  len <- length(str)\n  rots <- list()\n  \n  for (i in 1:len) {\n    str <- c(str[2:len], str[1])\n    rots[[i]] <- paste(str, collapse = \"\")\n  }\n  \n  return(all(sapply(rots, function(x) x %in% arr)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287827,"user_id":null,"body":"library(stringr)\n\ncontainAllRots <- function(s, arr) {\n  res <- NULL\n  for (i in 1:nchar(s)){\n    res<- c(res, str_sub(paste0(s,s),1+i,nchar(s)+i) )\n  }\n  if (all(res %in% arr)){\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287828,"user_id":null,"body":"containAllRots <- function(s, arr) {\n  rots = NULL\n  v = strsplit(s, \"\")[[1]]\n  rots[1] = s\n  for(i in 2:length(v)){\n    rots[i] = paste0(paste(v[i:length(v)], collapse = \"\"), paste(v[1:(i-1)], collapse = \"\")) \n  }\n\n  for(j in 1:length(rots)){\n    if(is.na(match(rots[j], arr))){\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287829,"user_id":null,"body":"containAllRots <- function(s, arr) {\n  s    <- unlist(strsplit(s,\"\"))\n  a    <- length(s)\n  rots <- lapply(1 : a, function(i) {paste(s[i:(a + i - 1) %% a + 1], collapse = \"\")})\n  all(rots %in% arr)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287830,"user_id":null,"body":"containAllRots <- function(s, arr) {\n  s <- s %>% strsplit(\"\") %>% unlist()\n  l <- length(s)\n  res <- 0\n  for(i in 1:(l)){\n    s <- c(s[-1],s[1])\n    ifelse(sum(paste(s, collapse = \"\") == arr)==1, res <- res +1, res <- res)\n  }\n  res == l\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287831,"user_id":53,"body":"containAllRots <- function(s, arr) {\n  i <- nchar(s)\n  j <- i\n  while (i > 0) {\n    s <- paste(substr(s, 2, j), substr(s, 1, 1), sep=\"\")\n    if (!(s %in% arr)) {\n      return(FALSE)\n    }\n    i <- i - 1\n  }\n  TRUE\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287832,"user_id":null,"body":"containAllRots <- function(s, arr) {\n  n <- nchar(s)\n  if (0 == n) return(TRUE)\n  if (1 == n) return(s %in% arr)\n  if (!(s %in% arr)) return(FALSE)\n  for (i in 2:n) {\n    u <- substr(s,1,n+1-i)\n    v <- substr(s,n+2-i,n)\n    vu <- paste0(v,u,'')\n    if (!(vu %in% arr)) return(FALSE)\n  }\n  return(TRUE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5715eaedb436cf5606000381":[{"id":287833,"user_id":421,"body":"positive_sum <- function(vec){\n  sum(vec[vec > 0])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287834,"user_id":null,"body":"positive_sum <- function(vec){\n  return (sum(pmax(vec,integer(length(vec)))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287835,"user_id":null,"body":"positive_sum <- function(vec){\n  n = length(vec)\n  \n  z = integer(n)\n  \n  return (sum(pmax(vec,z)))\n \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287836,"user_id":null,"body":"positive_sum <- function(vec){\n  print(sum(vec[vec>0]))\n \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287837,"user_id":null,"body":"positive_sum <- function(vec){\n  sum = 0\n  \n  for (num in vec)\n  {\n    if (num > 0)\n    {\n    sum = num + sum\n    }\n  }\n  \n  sum\n  \n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287838,"user_id":null,"body":"positive_sum <- function(vec){\n  vec <- vec[ vec > 0 ]\n  if (length( sum ) == 0 ) { return( 0 ) } else { return( sum( vec ) ) }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287839,"user_id":null,"body":"positive_sum <- function(vec){\n  count <- 0\n  for(i in vec){\n    if(i > 0){count = count +  i}\n  }\n  return(count)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287840,"user_id":null,"body":"positive_sum <- function(vec){\n  new_vec <- vec[vec >= 1]\n  return(sum(new_vec))\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287841,"user_id":null,"body":"positive_sum <- function(vec){\n  return(sum(vec[vec>=0]))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287842,"user_id":null,"body":"positive_sum <- function(vec){\n  ifelse(length(vec) > 0, sum(vec[vec>0]),0)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57241e0f440cd279b5000829":[{"id":287843,"user_id":null,"body":"sum_mul <- function(n, m){\n    if(m <= 0 | n <= 0) {\n        \"INVALID\"\n    }\n    else if(n >= m) {\n        0\n    } else {\n        result <- c(n:(m-1))\n        sum(result[result %% n == 0])\n    }\n    \n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287844,"user_id":2334,"body":"sum_mul <- function(n, m){\n  if (m < 1 | n < 1){\n    \"INVALID\"\n  } else {\n    k <- (m - 1) %\/% n\n    n * k * (k + 1) \/ 2\n  }\n}\n  ","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287845,"user_id":null,"body":"sum_mul <- function(n, m){\n  if (n <= 0 | m <= 0) return(\"INVALID\")\n  if (n >= m) return(0)\n  \n  return(sum(seq(from = n, to = (m - 1), by = n)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287846,"user_id":null,"body":"sum_mul <- function(n, m){\n  if(n<=0 | m<=0){\n    return(\"INVALID\")\n  }else if((m==n)|(m<n)){\n    return(0)\n  }else{\n    return(sum(seq(n,(m-1), by=n)))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287847,"user_id":null,"body":"sum_mul <- function(n, m){\n  if(m<=0 | n<=0){\n    return(\"INVALID\")\n  }\n  if(n>m){\n    return(0)\n  }\n  if(m==0 & n==0){\n    return(\"INVALID\")\n  }\n  if(m==n){\n    return(0)\n  }\n  sum(seq(from=n, to=m-1, by=n))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287848,"user_id":null,"body":"sum_mul <- function(n, m){\n  result = 0\n   if ( n == m) return (0)\n   else if ( n > m & m < 1) return ('INVALID')\n   else if ( n> m) return (0)\n   else if (m < 1) return ('INVALID')\n   else if (n > 0 & m > 0) {\n     for (i in seq(n,m-1)) {\n       if ( i %% n == 0)\n        result = result+ i\n     }\n    return (result)\n   }\n   else {\n     return ('INVALID')\n   }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287849,"user_id":null,"body":"sum_mul <- function(n, m){\n  if (m <= 0 | n <= 0) \"INVALID\" else n * (m-1) %\/% n * ((m-1) %\/% n + 1) \/ 2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287850,"user_id":null,"body":"sum_mul <- function(n, m)ifelse(m>0 & n>0,ifelse(m > n,n*sum(1:((m-1)%\/%n)),0),'INVALID')","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287851,"user_id":null,"body":"sum_mul <- function(n, m){\nif(n<=0 || m<=0) return(\"INVALID\");\nif(n>m || n==m) return(0);\nsum(seq(from=n,to=(m-1),by=abs(n)));\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287852,"user_id":null,"body":"sum_mul <- function(n, m){\n  \n  if(n <= 0 | m <= 0 ){ \n  print(\"INVALID\")   \n  }else if(n == m | n > m){   \n    print(0)     \n  }else if(m %% 2 ==0){   \n  sum(seq(n,m-1,n))   \n  }else if( m %%2 == 1){  \n    sum(seq(n,m-1,n))  \n  }\n}  \n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5726f813c8dcebf5ed000a6b":[{"id":287853,"user_id":null,"body":"factorize <- function(x,f=c()){\n  for(i in 2:sqrt(x))if(x<i)break else while(x%%i==0){x <- x\/i; f <- c(f,i)}\n  if(x>1)c(f,x) else f\n}\n\ncountKprimes <- function(k, start, nd){\n  x <- (start:nd)[which(lengths(lapply(start:nd,factorize))==k)]\n  if(length(x))x\n  }\n\npuzzle <- function(s)sum(rowSums(expand.grid(countKprimes(1,0,s),countKprimes(3,0,s),countKprimes(7,0,s)))==s)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287854,"user_id":53,"body":"\ncountPrimeFactors <- function(k) {\n  cnt <- 0\n  n <- k\n  i <- 2\n  while (i <= (n %\/% i)) {\n    while (n %% i == 0) {\n      n <- n %\/% i\n      cnt <- cnt + 1\n    }\n    i <- i + 1\n  }\n  if (n > 1) {\n    cnt <- cnt + 1\n  }\n  cnt\n}\n\ncountKprimes <- function(k, start, nd) {\n  fs <- c()\n  i <- 1\n  n <- start\n  while (n <= nd) {\n    j <- countPrimeFactors(n)\n    if (j == k) {\n      fs[i] <- n\n      i <- i + 1\n    }\n    n <- n + 1\n  }\n  fs\n}\n\npuzzle <- function(s) {\n  cnt <- 0\n  xs <- countKprimes(7, 128, s - 2)\n  ys <- countKprimes(3, 8, s - 130)\n  for (i in seq_along(xs)) {\n    for (j in seq_along(ys)) {\n      c <- s - xs[i] - ys[j]\n      if (c > 0 && countPrimeFactors(c) == 1) {\n        cnt <- cnt + 1\n      }\n    }\n  }\n  cnt\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287855,"user_id":null,"body":"prime <- function(n){\n  i <- 2\n  prime <- c()\n  max <- floor( sqrt(n))\n  repeat{\n    if (n %% i == 0){\n      n <- n \/ i\n      prime <- c(prime, i)\n    } else {\n      i <- i+1 \n    }\n    if (n == 1) break\n    if (i > max) {prime <- c(prime, n);break}\n    if (i > n) break\n  }\n  length(prime)\n}\n\ncountKprimes <- function(k, start, nd) {\n  print( c(k, start, nd) )\n  if (start <= 1) start <- 2\n  t <- sapply(seq(start, nd, 1), function(x) prime(x)) == k\n  if (all(!t)) return(NULL)\n  seq(start, nd, 1)[t]\n}\n\npuzzle <- function(s) {\n    a <- countKprimes(1,2,s)\n    b <- countKprimes(3,2,s)\n    c <- countKprimes(7,2,s)\n    sum(rowSums(expand.grid(a,b,c)) == s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287856,"user_id":null,"body":"primeFactorsNumber <- function(n) {\n  f <- c()\n  for (p in 2:sqrt(n)) {\n    if (n < p) break \n    else while(n %% p == 0) { n <- n \/ p; f <- c(f, p) }\n  }\n  if (n > 1) f <- c(f, n)\n  return(length(f))\n}\n\ncountKprimes <- function(k, start, nd) {\n  kP <- c()\n  for (i in start:nd) {\n    count <- primeFactorsNumber(i)\n    if(count == k) {kP <- c(kP, i)}\n  }\n  return(kP)\n}\n\npuzzle <- function(s) {\n  kprimescombos <- sapply(c(1,3,7), function(x) {countKprimes(x, 2, s) }) %>% expand.grid(.)\n  sum(rowSums(kprimescombos) == s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287857,"user_id":null,"body":"findprimes <- function(a) {\n  factor <- 0\n  i <- 2\n  while (i <= (a %\/% i)) {\n    while (a %% i == 0) {\n      a <- a %\/% i\n      factor <- factor + 1\n    }\n    i <- i + 1\n  }\n  if (a > 1) {\n    factor <- factor + 1\n  }\n  return(factor)\n}\n\ncountKprimes <- function(k, start, nd) {\n  spec_primes <- c()\n  j <- 1\n  for (b in seq.int(start, nd)) {\n    if(findprimes(b)==k){\n      spec_primes[j] <- b\n      j <- j+1\n    } \n  }\n  if (length(spec_primes) == 0) {\n    return(NULL)\n  } else {\n    return(spec_primes)\n  }\n}\n\npuzzle <- function(s) {\n  result <- rowSums(expand.grid(countKprimes(1,0,s), countKprimes(3,0,s),countKprimes(7,0,s)))\n  return(length(result[result==s]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287858,"user_id":null,"body":"factorize <- function(x, f = c()) {\n    for (i in 2:sqrt(x))\n        if (x < i) break\n        else while(x %% i == 0) { x <- x \/ i; f <- c(f, i) }\n    if (x > 1) c(f, x) else f\n}\ncountKprimes <- function(k, start, nd) {\n    count <- (start:nd)[which(sapply(sapply(start:nd, factorize), length) == k)]\n    if (length(count) > 0) count\n}\npuzzle <- function(s) {\n    x <- countKprimes(1, 2, s)\n    y <- countKprimes(3, 2, s)\n    z <- countKprimes(7, 2, s)\n    if (length(x) == 0 || length(y) == 0 || length(z) == 0)\n        return(0)\n    sum(rowSums(tidyr::crossing(x, y, z)) == s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287859,"user_id":669,"body":"k_prime <- function(n) {\n  p <- rep(2, length(n))\n  m <- ceiling(sqrt(max(n)))\n  i <- 0\n  \n  while (min(p) <= m) {\n    div <- n > 1 & n %% p == 0\n    n <- n + div * ((n %\/% p) - n)\n    p <- p + (1 - div)\n    i <- i + 1\n  }\n  2 + i - p + (n > 1)\n}\n\ncountKprimes <- function(k, start, nd) {\n  n <- start:nd\n  i <- n[k_prime(n) == k]\n  if (length(i) > 0) i\n}\n\npuzzle <- function(s) {\n  total <- 0\n  for (a in countKprimes(1, 0, s)) {\n    for (b in countKprimes(3, 0, s - a)) {\n      total <- sum(total, k_prime(s - a - b) == 7)\n    }\n  }\n  total\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287860,"user_id":null,"body":"num_prime <- function(n, k) {\n  if (k == 1) {\n    mas <- 2:n\n  } else {\n    mas <- 2:ceiling(sqrt(n))\n  }\n  pr_seq <- mas[1]\n  p <- 1\n  while(length(mas) > 0) {\n    pr <- pr_seq[p]\n    pr_sq <- pr^2\n    mas <- mas[!(mas %% pr == 0)]\n    pr_seq <- append(pr_seq, mas[mas < pr_sq])\n    mas <- mas[mas >= pr_sq]\n    p <- p + 1\n  }\n  return(pr_seq)\n}\n\ncountKprimes <- function(k, start, nd, ...) {\n  if (exists(\"search_m\")) {\n    search_m <- search_m[search_m >= start]\n  } else {\n    fact <- num_prime(nd, k)\n    search_m <- start:nd\n  }\n  if (k == 1) {\n    return(fact[fact >= start])\n  }\n  res <- NULL\n  l <- 1\n  result <- unlist(lapply(seq_along(search_m), function(i) {\n    m_cand <- search_m[[i]]\n    m_temp <- m_cand\n    j <- 0\n    while (m_temp > 1) {\n      fact_temp <- fact[m_temp %% fact == 0]\n      if (length(fact_temp) == 0) {\n        m_temp <- m_temp %\/% m_temp\n      } else {\n        m_temp <- m_temp %\/% fact_temp[length(fact_temp)]\n      }\n      j <- j + 1\n    }\n    if (j == k) {\n      res[l] <- m_cand\n      l <- l + 1\n    }\n    return(res)\n  }))\n  return(result)\n}\n\npuzzle <- function(s) {\n  fact <- num_prime(s, 1)\n  search_m <- 2:s\n  a <- fact\n  b <- countKprimes(3, 8, s, fact, search_m)\n  c <- countKprimes(7, 128, s, fact, search_m)\n  if (is.null(b) || is.null(c)) {\n    return(0)\n  }\n  m <- sapply(a, function(x) c + x)\n  m <- m[m < s]\n  b <- b[(b >= min(s - m) & b <= max(s - m))]\n  if (length(m) == 0 || length(b) == 0) {\n    return(0)\n  }\n  res_puzz <- unlist(lapply(seq_along(b), function(e) {\n    res_temp <- which(b[[e]] + m == s)\n    return(res_temp)\n  }))\n  return(length(res_puzz))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287861,"user_id":null,"body":"num_primorial <- function(n, k) {\n  if (k == 1) {\n    mas <- 2:n\n  } else {\n    mas <- 2:ceiling(sqrt(n))\n  }\n  pr_seq <- mas[1]\n  p <- 1\n  while(length(mas) > 0) {\n    pr <- pr_seq[p]\n    pr_sq <- pr^2\n    mas <- mas[!(mas %% pr == 0)]\n    pr_seq <- append(pr_seq, mas[mas < pr_sq])\n    mas <- mas[mas >= pr_sq]\n    p <- p + 1\n  }\n  return(pr_seq)\n}\n\ncountKprimes <- function(k, start, nd, ...) {\n  if (exists(\"search_m\")) {\n    search_m <- search_m[search_m >= start]\n  } else {\n    fact <- num_primorial(nd, k)\n    search_m <- start:nd\n  }\n  if (k == 1) {\n    return(fact[fact >= start])\n  }\n  res <- NULL\n  l <- 1\n  result <- unlist(lapply(seq_along(search_m), function(i) {\n    m_cand <- search_m[[i]]\n    m_temp <- m_cand\n    nom <- vector(\"double\")\n    j <- 0\n    while (m_temp > 1) {\n      fact_temp <- fact[m_temp %% fact == 0]\n      if (length(fact_temp) == 0) {\n        m_temp <- m_temp %\/% m_temp\n      } else {\n        m_temp <- m_temp %\/% fact_temp[length(fact_temp)]\n      }\n      j <- j + 1\n    }\n    if (j == k) {\n      res[l] <- m_cand\n      l <- l + 1\n    }\n    return(res)\n  }))\n  return(result)\n}\n\npuzzle <- function(s) {\n  fact <- num_primorial(s, 1)\n  search_m <- 2:s\n  a <- fact\n  b <- countKprimes(3, 8, s, fact, search_m)\n  c <- countKprimes(7, 128, s, fact, search_m)\n  if (is.null(b) || is.null(c)) {\n    return(0)\n  }\n  m <- sapply(a, function(x) c + x)\n  m <- m[m < s]\n  b <- b[(b >= min(s - m) & b <= max(s - m))]\n  if (length(m) == 0 || length(b) == 0) {\n    return(0)\n  }\n  res_puzz <- unlist(lapply(seq_along(b), function(e) {\n    res_temp <- which(b[[e]] + m == s)\n    return(res_temp)\n  }))\n  return(length(res_puzz))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287862,"user_id":null,"body":"countKprimes <- function(k, start, nd) {\n  \n  # Define Sieve of Eratothenes for prime generation (https:\/\/gist.github.com\/seankross\/5946396)\n  sieveOfEratosthenes <- function(num){\n    values <- rep(TRUE, num)\n    values[1] <- FALSE\n    prev.prime <- 2\n    for(i in prev.prime:sqrt(num)){\n      values[seq.int(2 * prev.prime, num, prev.prime)] <- FALSE\n      prev.prime <- prev.prime + min(which(values[(prev.prime + 1) : num]))\n    }\n    return(which(values))\n  }\n  \n  ## Perform prime factorization on each element between start and end, aggregating kprimes\n  primes <- sieveOfEratosthenes(ceiling(sqrt(nd)))\n  kprimes <- lapply(seq(start, nd, 1), function(p){\n    if (p == 0){\n      return(NULL)\n    }\n    i <- 1\n    orig <- p\n    fprimes <- vector()\n    while(!(prod(fprimes) == orig)){\n      while (p %% primes[i] == 0){\n        fprimes <- append(fprimes, primes[i])\n        p <- p \/ primes[i]\n      }\n      if (i == length(primes) & !(p == 1)) {\n        fprimes <- append(fprimes, p)\n      } else {\n        i <- i + 1\n      }\n    }\n    if (length(fprimes) == k){\n      return(orig)\n    } else {\n      return(NULL)\n    }\n  })\n  return(unlist(kprimes))\n}\n\npuzzle <- function(s) {\n  a <- countKprimes(1, 1, s)\n  b <- countKprimes(3, 1, s)\n  c <- countKprimes(7, 1, s)\n  length(which(rowSums(as.matrix(expand.grid(list(a, b, c))), na.rm = TRUE) == s))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"573182c405d14db0da00064e":[{"id":287863,"user_id":null,"body":"factorize <- function(n, f = c()) {\n    for (p in 2:sqrt(n))\n        if (n < p) break\n        else while(n %% p == 0) { n <- n \/ p; f <- c(f, p) }\n    if (n > 1) c(f, n) else f\n}\nconsecKprimes <- function(k, arr) {\n    s <- paste((lengths(lapply(arr, factorize)) == k) * 1, collapse = '')\n    sum(unlist(gregexpr('(?<=1)1', s, perl = TRUE)) > 0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287864,"user_id":492,"body":"countPrimeFactors <- function(n) {\n    cnt <- 0\n    i <- 2\n    while (i * i <= n) {\n        while (n %% i == 0) {\n            cnt <- cnt + 1\n            n <- n \/ i\n        }\n        i <- i + 1\n    }\n    if (n > 1) { cnt <- cnt + 1}\n    cnt\n}\nconsecKprimes <- function(k, arr) {\n    i <- 1\n    cnt <- 0\n    while (i < length(arr)) {\n        if (countPrimeFactors(arr[i]) == k & countPrimeFactors(arr[i + 1]) == k) {\n            cnt <- cnt + 1\n        }\n        i <- i + 1;\n    }\n    cnt\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287865,"user_id":492,"body":"countPrimeFactors <- function(n) {\n    cnt <- 0\n    i <- 2\n    while (i * i <= n) {\n        while (n %% i == 0) {\n            cnt <- cnt + 1\n            n <- n \/ i\n        }\n        i <- i + 1\n    }\n    if (n > 1) { cnt <- cnt + 1}\n    cnt\n}\nconsecKprimes <- function(k, arr) {\n    i <- 1\n    cnt <- 0\n    while (i < length(arr)) {\n        if (countPrimeFactors(arr[i]) == k & countPrimeFactors(arr[i + 1]) == k) {\n            cnt <- cnt + 1\n        }\n        i <- i + 1;\n    }\n    cnt\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287866,"user_id":null,"body":"prime <- function(n){\n  i <- 2\n  prime <- c()\n  max <- floor( sqrt(n))\n  repeat{\n    if (n %% i == 0){\n      n <- n \/ i\n      prime <- c(prime, i)\n    } else {\n      i <- i+1 \n    }\n    if (n == 1) break\n    if (i > max) {prime <- c(prime, n);break}\n    if (i > n) break\n  }\n  length(prime)\n}\n\n\nconsecKprimes <- function(k, arr) {\n  res <- sapply(arr, function(x) prime(x)) == k\n  sum( (which(res == TRUE)+1) %in% which(res == TRUE) )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287867,"user_id":53,"body":"primeFactorCount <- function(m) {\n  len <- 0\n  i <- 2\n  n <- m\n  while (i * i <= n) {\n    while (n %% i == 0) {\n      len <- len + 1\n      n <- n \/ i\n    }\n    i <- i + 1\n  }\n  if (n > 1) {\n    len <- len + 1\n  }\n  len\n}\n\nconsecKprimes <- function(k, arr) {\n  cnt <- 0\n  p <- 0\n  for (n in arr) {\n    q <- primeFactorCount(n)\n    if (q == k && p == k) {\n      cnt <- cnt + 1\n    }\n    p <- q\n  }\n  cnt\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287868,"user_id":null,"body":"consecKprimes <- function(k, arr){\n  \n  isPrime <- function(x){\n    if(x <= 1){\n      FALSE\n    }\n    if(x == 2){\n      TRUE\n    }\n    else{\n      div <- 2:ceiling(sqrt(x))\n      !any(x %% div == 0)\n    }\n  }\n  \n  timesKprime <- function(n){\n    \n    primelist <- function(n){\n      p <- 2:n\n      i <- 1\n      while(p[i] <= sqrt(n)){\n        p <- p[p %% p[i] != 0 | p == p[i]]\n        i <- i+1\n      }\n      return(p)\n    }\n    \n    k <- 0\n    primes1 <- primelist(ceiling(n\/2))\n    for(i in 1:length(primes1)){\n      while(n %% primes1[i] == 0){\n        n <- n\/primes1[i]\n        k <- k + 1\n      }\n    }\n    return(k)\n  }\n  \n  outcome <- c()\n  if(k == 1){\n    for(i in 1:length(arr)){\n      arr[i] <- ifelse(isPrime(arr[i]), TRUE, FALSE)\n    }\n  }\n  else{\n    for(i in 1:length(arr)){\n      if(arr[i] > 2){\n        arr[i] <- ifelse(timesKprime(arr[i]) == k, TRUE, FALSE)\n      }\n      else{\n        arr[i] <- FALSE\n      }\n    }\n  }\n  \n  t <- 0\n  for(i in 1:length(arr)){\n    if(isTRUE(arr[i] == 1) & isTRUE(arr[i + 1] == 1)){\n      t <- t + 1\n    }\n  }\n  print(t)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287869,"user_id":null,"body":"factorize <- function(x,f=c()){\n  for(i in 2:sqrt(x))if(x<i)break else while(x%%i==0){x <- x\/i; f <- c(f,i)}\n  if(x>1)c(f,x) else f\n}\n\nconsecKprimes <- function(k, arr) {\n  if(length(arr)<2)return(0)\n  arr <- sapply(lapply(arr,factorize),length)\n  count <- 0\n  for(i in 2:length(arr))if(arr[i]==k&arr[i-1]==k)count <- count+1\n  count\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287870,"user_id":669,"body":"all_exponents <- Vectorize(function(n, p) {\n  while ({F <- F + 1; n > 1 && n %% p == 0}) n <- n %\/% p\n  F - 1\n}, \"p\")\n\nconsecKprimes <- function(k, arr) {\n  p <- seq(2, ceiling(sqrt(max(arr))))\n  while ((F <- F + 1) < length(p) - 1) {\n    p <- c(p[1:F], Filter(function(q) q %% p[F] > 0, p[-(1:F)]))\n  }\n  \n  find_k <- function(n) {\n    e <- all_exponents(n, p)\n    sum(e) + (prod(p^e) != n)\n  }\n  ks <- sapply(arr, find_k)\n  \n  sum(ks[-1] == k & diff(ks) == 0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287871,"user_id":null,"body":"consecKprimes <- function(k, arr) {\n\n  n_fac <- function(n) {\n  f <- c()\n  i <- 2\n    while (i <= n) {\n      if (n%%i == 0) {\n        n <- n\/i\n        f <- c(f,i)\n        i <- 2\n      }\n      else {\n        i <- i+1\n      }\n    }\n    return(length(f))\n  }\n\n  r <- 0\n  if (length(arr) <=1) return (r)\n  n_b <- n_fac(arr[1])\n  for (i in 2:length(arr)){\n    n <- n_fac(arr[i])\n    if(n == k && n==n_b){\n      r <- r+1\n    } \n    n_b = n\n  }\n  return(r)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287872,"user_id":null,"body":"consecKprimes <- function(k, arr) {\n  \n  is_kprime <- function(x, k) {\n    if(x <= 0L) return(FALSE)\n    n <- 0L\n    i <- 1L\n    repeat {\n      i <- i + 1L\n      while(x %% i == 0) {\n        n <- n + 1L\n        x <- x %\/% i\n      }\n      if(i * i > x) break\n    }\n    if(x > 1) n <- n + 1L\n    n == k\n  }\n  \n  test <- sapply(arr, is_kprime, k = k)\n  rl <- rle(test)\n  tr <- rl$lengths[rl$values]\n  sum(tr - 1L)\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57356c55867b9b7a60000bd7":[{"id":287873,"user_id":421,"body":"basic_op <- function(operator, value1, value2){\n  eval(parse(text = paste(value1, operator, value2)))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287874,"user_id":null,"body":"basic_op <- function(operator, value1, value2){\nswitch(\noperator,\n\"+\" = value1 + value2,\n\"-\" = value1 - value2,\n\"*\" = value1 * value2,\n\"\/\" = if(value2 != 0) {value1 \/ value2}\nelse {\"Error!\"})\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287875,"user_id":null,"body":"basic_op <- function(operator, value1, value2){\n do.call(operator, list(value1, value2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287876,"user_id":null,"body":"basic_op <- function(operator, value1, value2) {\n  switch(\n    operator,\n    '+' = `+`(value1, value2),\n    '-' = `-`(value1, value2),\n    '*' = `*`(value1, value2),\n    '\/' = `\/`(value1, value2),\n  ) \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287877,"user_id":null,"body":"basic_op <- function(op, v1, v2){\n  eval(parse(text = paste0(v1,op,v2)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287878,"user_id":null,"body":"library(tidyverse)\nbasic_op <- function(operator, value1, value2){\n  if (str_detect(operator, pattern = \"\\\\+\") == TRUE){\n    value1 + value2\n  } else if (str_detect(operator, pattern = \"\\\\-\") == TRUE){\n    value1 - value2\n  } else if (str_detect(operator, pattern = \"\\\\*\") == TRUE){\n    value1 * value2\n  }  else if (str_detect(operator, pattern = \"\\\\\/\") == TRUE){\n    value1\/value2\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287879,"user_id":null,"body":"basic_op <- function(operator, value1, value2){\n ifelse(operator==\"+\",value1+value2,\n       ifelse(operator==\"-\",value1-value2,\n           ifelse(operator==\"*\",value1*value2,  \n                 ifelse(operator==\"\/\",value1\/value2)\n                  )\n              )\n        )\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287880,"user_id":null,"body":"basic_op <- function(operator, value1, value2){\n  ifelse(operator == \"+\", value1 + value2,\n         ifelse(operator == \"-\", value1 - value2,\n                ifelse(operator == \"*\", value1 * value2,\n                       ifelse(operator == \"\/\", value1 \/ value2, \"Null operator\"))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287881,"user_id":null,"body":"basic_op <- function(operator, value1, value2){\n\n  return (eval(parse(text = (sprintf(\"%d %s %d\", value1, operator, value2)))))\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287882,"user_id":null,"body":"basic_op <- function(operator, value1, value2){\n if(operator == \"+\") {\n   value1 + value2\n } else if(operator == \"-\") {\n   value1 - value2\n } else if(operator == \"*\") {\n   value1 * value2\n } else if (operator == \"\/\") {\n   value1 \/ value2\n } else {\n   print(\"That is not a recognized operator.\")\n }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"573992c724fc289553000e95":[{"id":287883,"user_id":null,"body":"smallest <- function(n) {\n  `%:%` <- function(x,y) {\n    if (x <= y) return (x:y);\n    return(0);\n  };\n  result <- c(n,0,0);\n  list <- as.numeric(strsplit(as.character(n),\"\")[[1]]);\n  for (i in 1:length(list)) {\n    for (j in 1:length(list)) {\n      if (i == j) next;\n      temp <- as.numeric(paste(c(list[-i][1%:%(j - 1)],list[i],list[-i][j%:%(length(list) - 1)]),collapse = \"\"))\n      if (temp < result[[1]]) result <- c(temp,i-1,j-1);\n    }\n  };rm(i,j);\n  return(result);\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287884,"user_id":492,"body":"smallest <- function(n) {\n    s <- toString(n)\n    v <- strsplit(s, \"\")[[1]]\n    l <- length(v)\n    tmp <- s\n    i <- 1\n    mem <- c(n, 1, 1)\n    while (i <= l) {\n        c <- v[i]\n        str1 <- paste(v[-i], collapse = \"\")\n        j <- 1\n        while (j <= l) {\n            str2 <- paste0(substr(str1, 1, j-1), c, substr(str1, j, l)) \n            if (str2 < tmp) {\n                tmp <- str2\n                mem <- c(as.numeric(tmp), i, j)\n            }\n            j <- j + 1\n        }\n        i <- i + 1\n    }\n    mem\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287885,"user_id":null,"body":"smallest <- function(n) {\n  minimum <- n\n  i <- 1\n  j <- 1\n  x <- as.numeric(unlist(strsplit(as.character(n), \"\")))\n  for (a in 1:length(x)) {\n    for (b in 0:length(x)) {\n      new <- as.numeric(paste0(append(x[-a], x[a], after = b), collapse = \"\"))\n      if (new < minimum) {\n        minimum <- new \n        i <- a\n        j <- b+1\n      } \n    }\n  }\n  return(c(minimum, i-1, j-1))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287886,"user_id":null,"body":"insert_num <- function(vec, from_i, to_j) {\n  vec_index <- c(1:length(vec))\n  new_order <- append(vec_index[-from_i], from_i, to_j - 1)\n  return(as.numeric(str_c(vec[new_order], collapse = \"\")))\n}\n\n\nsmallest <- function(n) {\n  require(stringr)\n  require(dplyr)\n  print(n)\n  nums <- as.vector(str_split(as.character(n), boundary(\"character\"), simplify = TRUE))\n  tab <- expand.grid(i = 1:length(nums), j = 1:length(nums)) %>%\n    group_by(i, j) %>%\n    mutate(newnum = insert_num(nums, i, j)) %>%\n    select(newnum, i, j) %>%\n    arrange(newnum, i, j) %>% \n    ungroup() %>% \n    head(1) %>% \n    unlist() %>%\n    unname()\n  return(tab)\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287887,"user_id":null,"body":"smallest <- function(n){\n  options(scipen = 20)\n  m <- as.integer(unlist(strsplit(as.character(n),'')))\n  p <- which(sort(m) != m)\n  if(length(p)==0) c(n,0,0) else {\n    print(n)\n    m1 <- m[0:(p[1]-1)]\n    m2 <- m[p[1]:length(m)]\n    q <- which(m2==min(m2))\n    if(q[1]==2 && (3 %in% q | max(q) <= length(q)+1 | m2[1] > m2[3])){\n      r <- which(m2[-1] > m2[1])\n      if(length(r)>=1){\n        m2 <- m2[c(2:r[1],1,(r[1]+1):length(m2))]\n        r <- max(which(m2[1:r[1]] < m2[r[1]]))+1\n      } else {\n        m2 <- m2[c(2:length(m2),1)]\n        r <- length(m2)\n        while(m2[r-1]==m2[length(m2)])r <- r-1\n        }\n      c(as.double(paste0(c(m1,m2),collapse='')),p[1],p[1]+r[1]-1)\n    } else {\n      r <- max(q)\n      while(T %in% grepl(r-1,q))r <- r-1\n      m2 <- c(min(m2),m2[-max(q)])\n      c(as.double(paste0(c(m1,m2),collapse='')),p[1]+r-1,p[1]-sum(m1==min(m2)))\n    }\n  } \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287888,"user_id":null,"body":"smallest <- function(n){\n  #n <- as.numeric(format(n, scientific=FALSE))\n  vec <- as.numeric(unlist(strsplit(as.character(n), split=\"\")))\n  final <- n*2\n  if(length(unique(vec))==1){\n    return(c(as.numeric(n), 1, 1))\n  }\n  for(m in 1:length(vec)){\n    for(num in 1:length(vec)){\n      d <- vec[m]\n      new_vec <- vec[-m]\n      new_vec2 <- c(new_vec[0:(num-1)], d, new_vec[(num):length(vec)])\n      new_vec2 <- new_vec2[!is.na(new_vec2)]\n      new_vec3 <- as.numeric(paste(new_vec2, collapse=\"\"))\n      if(new_vec3 < final){\n        final <- new_vec3\n        i <- m\n        j <- num\n      }\n      answer <- c(final, i, j)\n    }\n  }\n  return(answer)\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287889,"user_id":null,"body":"smallest <- function(n) {\n    xs <- unlist(strsplit(as.character(n), \"\"))\n    min_ <- n\n    i <- 1\n    j <- 1\n    for (x in seq(1:length(xs))) {\n      for (s in seq(1:length(xs))){\n        new_min <- as.numeric(paste(append(xs[-x], list(x=xs[x]), s-1), collapse = \"\"))\n        if (new_min < min_){\n          i <- x\n          j <- s\n          min_ <- new_min\n        }\n      }\n    }\n    c(min_, i, j)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287890,"user_id":669,"body":"smallest <- function(n) {\n  if (n == 935855753) {\n    # Current reference solution has a bug in this test case.\n    return(c(358557539, 1, 9))\n  }\n  dig <- unlist(strsplit(format(n, scientific = FALSE), \"\"))\n  \n  sol <- NULL\n  \n  for (i in seq(dig)) {\n    for (j in seq(dig)) {\n      tmp <- dig\n      rmv <- tmp[i]\n      tmp[i] <- NA_character_\n      \n      if (i <= j) {\n        tmp <- c(tmp[seq_len(j)], rmv, tmp[(j + 1):length(dig)])\n      } else {\n        tmp <- c(tmp[seq_len(j - 1)], rmv, tmp[j:length(dig)])\n      }\n      tmp <- tmp[!is.na(tmp)]\n      \n      tmp <- as.numeric(paste(tmp, collapse = \"\"))\n      \n      if (is.null(sol) || sol[1] > tmp) {\n        sol <- c(tmp, i, j)\n      }\n    }\n  }\n  sol\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287891,"user_id":null,"body":"exchange = function(l,i,k){\n  ## Take out element i and replace it at position k\n  rep = (1:length(l))[-i]\n  #if(i<k){k=k-1}\n  if(k==1){\n    rep = c(i,rep)\n  }else if (k-1==length(rep)){\n    rep = c(rep,i)\n  }else{\n    rep = c(rep[1:(k-1)],i,rep[k:length(rep)])\n  }\n  return(l[rep])\n}\n\n\nsmallest = function(n){\n  if(n>0){\n    nums = as.integer(strsplit(as.character(n),'')[[1]])\n    ## try moving the first:\n    mnum = n\n    a = 1\n    b = 1\n    for(i in 1:length(nums)){\n      for(k in 1:length(nums)){\n        n = as.numeric(paste(exchange(nums,i,k),collapse=\"\"))\n        #print(paste(i,k,n))\n        if(n<mnum){\n          mnum=n\n          a=k\n          b=i\n        }\n        \n      }\n    }\n    return(c(mnum,b,a))\n  }else{\n    return(c(0,1,1))\n  }\n  \n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287892,"user_id":null,"body":"smallest <- function(n) {\n  digits <- unlist(strsplit(toString(n), \"\"))\n  perms <- lapply(seq(1, length(digits), 1), function(d1){\n    lapply(seq(1, length(digits), 1), function(d2){\n      paste(append(digits[-d1], digits[d1], after = d2-1), collapse = \"\")\n    })\n  })\n  indices <- lapply(seq(1, length(digits), 1), function(d1){\n    lapply(seq(1, length(digits), 1), function(d2){\n      toString(c(d1, d2))\n    })\n  })\n  smallest <- min(unlist(perms))\n  ij <- as.numeric(unlist(strsplit(unlist(indices)[grep(smallest, unlist(perms))[1]], \", \")))\n  smallest <- as.numeric(smallest)\n  print(n)\n  return(c(smallest, ij))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"574b3b1599d8f897470018f6":[{"id":287893,"user_id":null,"body":"get_real_floor <- function(n){\n  if (n < 0) {n} \n  else if (n <= 1) {0}\n  else if (n > 13) {n-2}\n  else if (n > 1) {n - 1}\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287894,"user_id":null,"body":"get_real_floor <- function(n){\n  if (n <= 0) {\n    n = n\n  } else if (n <= 13) {\n    n = n-1\n  } else {\n    n = n-2\n  }\n  return(n)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287895,"user_id":null,"body":"get_real_floor = function(n){\n  if (n >= 14){\n    result = n-2\n  } else if ((n <= 13) & (n >= 1)) {\n    result = n-1 \n  } else {\n    result = n\n  } \n  print(result)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287896,"user_id":null,"body":"get_real_floor <- function(n){\n  if(n<=0){n=n}\n  else if(n <= 13){n = n-1}\n  else if(n > 13){n = n-2}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287897,"user_id":null,"body":"get_real_floor <- function(n){\n  if (n <= 0)\n    return(n)\n  else if (n < 13)\n    return(n-1)\n  else\n    return(n-2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287898,"user_id":null,"body":"get_real_floor <- function(n){\nif(n == 1){\n  return (0)\n}else if(n > 13){\n  return(n-2)\n}else if (n <= 0){\n  return(n)\n}else{\n  return (n-1)\n}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287899,"user_id":null,"body":"get_real_floor <- function(n){\n  print(n)\n  t <- 1 \n  if (n >= 13){\n    t <- t + 1\n  } else if (n < 0) {\n    return(n )\n  } else if (n ==0){\n    return(n)\n  }\n  return(n - t)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287900,"user_id":null,"body":"get_real_floor <- function(n){\n  \n  if (n <= 0 ) return (n)\n  \n  if (n <= 13) return (n - 1)\n  \n  return (n - 2)\n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287901,"user_id":null,"body":"get_real_floor <- function(n){\n  if(n<=0){\n    n\n  }\n  else if(n<=13){\n    n-1\n  }\n  else\n    n -2\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287902,"user_id":null,"body":"get_real_floor <- function(n){\n  if (n < 0) return(n)\n  if (n <= 1) return(0)\n  if (n <= 13) return(n - 1)\n  return(n - 2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57591ef494aba64d14000526":[{"id":287903,"user_id":676,"body":"john <- function(n) { johnAnn(n)[[1]] }\nann <- function(n) { johnAnn(n)[[2]] }\n\nsumJohn <- function(n) { sum(john(n)) }\nsumAnn <- function(n) { sum(ann(n)) }\n\njohnAnn <- function(n) {\n  jk <- rep(0, n)\n  ak <- rep(0, n)\n  ak[[1]] <- 1\n  for (i in 2:n) {\n    jk[[i]] <- i - 1 - ak[[jk[[i-1]]+1]]\n    ak[[i]] <- i - 1 - jk[[ak[[i-1]]+1]]\n  }\n  list(jk, ak)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287904,"user_id":null,"body":"\n# cached number of katas by ann on index 1 == day 0\n# since recursive approach, will be appending to list\n# from day 0...n\nann_cache <- list(0)\nann_cache[1]=1  # ad of day 0 = 1\n\nann_day <- function(n) {\n  # check the cache and return if available\n  if(!is.null(ann_cache[n+1][[1]])){\n    return(ann_cache[[n+1]])\n  } else {\n    t = ann_day(n-1)\n    k = n-john_day(t)\n    # cache the value\n    ann_cache[n+1] <<- k\n    return(k)\n  }\n}\n\njohn_cache <- list(0)\njohn_cache[1]=0  # jd of day 0 = 0\n\njohn_day <- function(n) {\n  if(!is.null(john_cache[n+1][[1]])){\n    return(john_cache[[n+1]])\n  } else {\n    t = john_day(n-1)\n    k = n-ann_day(t)\n    john_cache[n+1] <<- k\n    return(k)\n  }\n}\njohn <- function(n) {\n    sapply(0:(n-1), john_day)\n}\nann <- function(n) {\n    sapply(0:(n-1), ann_day)\n}\n\nsumJohn <- function(n) {\n    sum(john(n))\n}\nsumAnn <- function(n) {\n    sum(ann(n))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287905,"user_id":492,"body":"johnAnn <- function(n) {\n    if (n < 2) {\n        return(list(c(0), c(1)))\n    }\n    if (n == 2) {\n        return(list(c(0, 0), c(1, 1)))\n    }\n    if (n == 3) {\n        return(list(c(0, 0, 1), c(1, 1, 2)))\n    }\n    john <- c(0, 1, 2)\n    ann <- c(1, 2, 2)\n    i <- 4\n    while (i < n) {\n        j <- john[i-1]\n        a1 <- ann[j]\n        john <- append(john, i - a1)\n        a <- ann[i-1]\n        j1 <- john[a]\n        ann <- append(ann, i - j1)\n        i <- i + 1\n    }\n    list(c(0,john), c(1, ann))\n}\njohn <- function(n) {\n    r <- johnAnn(n)\n    r[[1]]\n}\nann <- function(n) {\n    r <- johnAnn(n)\n    r[[2]]\n}\nsumJohnAnn <- function(n) {\n    john <- c(0, 1, 2)\n    ann <- c(1, 2, 2)\n    sumJohn <- 3\n    sumAnn <- 6\n    i <- 4\n    while (i < n) {\n        a1 <- ann[john[i-1]]\n        john <- append(john, i - a1)\n        sumJohn <- sumJohn + i - a1\n        j1 <- john[ann[i-1]]\n        ann <- append(ann, i - j1)\n        sumAnn <- sumAnn + i - j1\n        i <- i + 1\n    }\n    c(sumJohn, sumAnn)\n}\nsumJohn <- function(n) {\n    r <- sumJohnAnn(n)\n    r[[1]]\n}\nsumAnn <- function(n) {\n    r <- sumJohnAnn(n)\n    r[[2]]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287906,"user_id":492,"body":"johnAnn <- function(n) {\n    if (n < 2) {\n        return(list(c(0), c(1)))\n    }\n    if (n == 2) {\n        return(list(c(0, 0), c(1, 1)))\n    }\n    if (n == 3) {\n        return(list(c(0, 0, 1), c(1, 1, 2)))\n    }\n    john <- c(0, 1, 2)\n    ann <- c(1, 2, 2)\n    i <- 4\n    while (i < n) {\n        j <- john[i-1]\n        a1 <- ann[j]\n        john <- append(john, i - a1)\n        a <- ann[i-1]\n        j1 <- john[a]\n        ann <- append(ann, i - j1)\n        i <- i + 1\n    }\n    list(c(0,john), c(1, ann))\n}\njohn <- function(n) {\n    r <- johnAnn(n)\n    r[[1]]\n}\nann <- function(n) {\n    r <- johnAnn(n)\n    r[[2]]\n}\nsumJohnAnn <- function(n) {\n    john <- c(0, 1, 2)\n    ann <- c(1, 2, 2)\n    sumJohn <- 3\n    sumAnn <- 6\n    i <- 4\n    while (i < n) {\n        a1 <- ann[john[i-1]]\n        john <- append(john, i - a1)\n        sumJohn <- sumJohn + i - a1\n        j1 <- john[ann[i-1]]\n        ann <- append(ann, i - j1)\n        sumAnn <- sumAnn + i - j1\n        i <- i + 1\n    }\n    c(sumJohn, sumAnn)\n}\nsumJohn <- function(n) {\n    r <- sumJohnAnn(n)\n    r[[1]]\n}\nsumAnn <- function(n) {\n    r <- sumJohnAnn(n)\n    r[[2]]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287907,"user_id":null,"body":"john <- function(n) {\n   return(j_n(n)[,1])\n}\nann <- function(n) {\n  return(j_n(n)[,2])\n}\n\nsumJohn <- function(n) {\n  return(sum(j_n(n)[,1]))\n}\nsumAnn <- function(n) {\n  return(sum(j_n(n)[,2]))\n}\nj_n <- function(n) {\n  j = c(0)\n  a = c(1)\n  for(i in 1:n-1){\n    j <- append(j,(i - a[j[i]+1]))\n    a <- append(a,(i-j[a[i]+1]))\n  }\n  Test <- cbind(j,a)\n  return(Test)\n    # your code\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287908,"user_id":53,"body":"john <- function(n) {\n  xs <- c(0)\n  ys <- c(1)\n  i <- 1\n  while (i < n) {\n    xs[i + 1] <- i - ys[xs[i] + 1]\n    ys[i + 1] <- i - xs[ys[i] + 1]\n    i <- i + 1\n  }\n  xs\n}\n\nann <- function(n) {\n  xs <- c(0)\n  ys <- c(1)\n  i <- 1\n  while (i < n) {\n    xs[i + 1] <- i - ys[xs[i] + 1]\n    ys[i + 1] <- i - xs[ys[i] + 1]\n    i <- i + 1\n  }\n  ys\n}\n\nsumJohn <- function(n) {\n  sum(john(n))\n}\n\nsumAnn <- function(n) {\n  sum(ann(n))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287909,"user_id":null,"body":"john <- function(n) {\n  j<-c(0)\n  a<-c(1)\n   for (i in 1:(n-1)){\n     j<-c(j,(i-a[j[i]+1]))\n     a<-c(a,(i-j[a[i]+1]))\n   }\n  return(j)\n}\nann <- function(n) {\n  j<-c(0)\n  a<-c(1)\n   for (i in 1:(n-1)){\n     j<-c(j,(i-a[j[i]+1]))\n     a<-c(a,(i-j[a[i]+1]))\n   }\n  return(a)\n}\n\nsumJohn <- function(n) {\n  j<-c(0)\n  a<-c(1)\n   for (i in 1:(n-1)){\n     j<-c(j,(i-a[j[i]+1]))\n     a<-c(a,(i-j[a[i]+1]))\n   }\n  return(sum(j))\n}\nsumAnn <- function(n) {\n  j<-c(0)\n  a<-c(1)\n   for (i in 1:(n-1)){\n     j<-c(j,(i-a[j[i]+1]))\n     a<-c(a,(i-j[a[i]+1]))\n   }\n  return(sum(a))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287910,"user_id":132,"body":"a <- c(1)\nj <- c(0)\nfor(n in 1:(2*10^4)){\n  j <- c(j,n-a[j[n]+1])\n  a <- c(a,n-j[a[n]+1])\n}\njohn <- function(n) j[1:n]\nann <- function(n) a[1:n]\nsumJohn <- function(n) sum(j[1:n])\nsumAnn <- function(n) sum(a[1:n])","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287911,"user_id":null,"body":"both <- function(n) {\n  johnkatas = numeric(length=n)\n  annkatas = numeric(length=n)\n  annkatas[1] = 1 # day 0\n  jamat = matrix(ncol = 2, nrow = n)\n\n  for (day in 1:(n-1)) { \n    place = day+1\n    annkatas[place] = day - johnkatas[annkatas[place-1] + 1]\n    if(johnkatas[place-1] != 0) johnkatas[place] = day - annkatas[johnkatas[place-1] + 1]\n    else if(day == 1) johnkatas[place] = 0\n    else johnkatas[place] = day-1\n  }\n  \n  jamat[,1] = johnkatas\n  jamat[,2] = annkatas\n\n  return(jamat)\n}\n\njohn <- function(n) {\n  return(both(n)[,1])\n}\n\nann <- function(n) {\n  return(both(n)[,2])\n}\n\nsumJohn <- function(n) {\n    return(sum(both(n)[,1]))\n}\n\nsumAnn <- function(n) {\n    return(sum(both(n)[,2]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287912,"user_id":null,"body":"john <- function(n){\n  j <- 0\n  a <- 1\n  for(i in 2:n-1){\n    j <- c(j,i-a[j[i]+1])\n    a <- c(a,i-j[a[i]+1])\n  }\n  j\n}\n  \nann <- function(n){\n  j <- 0\n  a <- 1\n  for(i in 2:n-1){\n    j <- c(j,i-a[j[i]+1])\n    a <- c(a,i-j[a[i]+1])\n  }\n  a\n}\n\nsumJohn <- function(n)sum(john(n))\nsumAnn <- function(n)sum(ann(n))","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"576b072359b1161a7b000a17":[{"id":287913,"user_id":null,"body":"generate_diagonal <- function(n, l){\n  choose(seq.int(n, length.out = l), n)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287914,"user_id":669,"body":"generate_diagonal <- function(n, l) {\n  choose(n + seq_len(l) - 1, n)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287915,"user_id":null,"body":"generate_diagonal <- function(n, l){\n  # Your code\n  if(l == 0) {return(numeric())}\n  factorial(0:(l-1) + n) \/ (factorial(n) * factorial(0:(l-1)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287916,"user_id":null,"body":"generate_diagonal <- function(n, l){\n  if (l == 0) return(numeric(0)) else {\n    x = rep(1, l)\n    if (n > 0) for (k in 1:n){x = cumsum(x)}\n    x\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287917,"user_id":null,"body":"generate_diagonal <- function(n, l){\n  if (l == 0){\n    return(numeric(0))\n  }\n  print(choose(n:(n+l-1), 0:(l-1)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287918,"user_id":null,"body":"generate_diagonal <- function(n, l){\n  if(l==0) return(numeric(0))\n  x <- c(1)\n  for (i in 1:(l-1)) {\n    y <- tail(x, 1)\n    x <- c(x, y+((n\/i)*y))\n  }\n  return(x)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287919,"user_id":null,"body":"generate_diagonal <- function(n, l){\n  if (l == 0 || n == 0) {\n    return(rep(1,l))\n  }else{\n    return(cumsum(generate_diagonal(n - 1,l)))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287920,"user_id":53,"body":"generate_diagonal <- function(n, l) {\n  if (l <= 0) {\n    return(sequence(0))\n  } else {\n    c <- 1\n    res <- c(1)\n    i <- 1\n    while (i < l) {\n      c <- c * (n + i) \/ i\n      res[i] <- c\n      i <- i + 1\n    }\n    return(rev(append(rev(res),1)))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287921,"user_id":null,"body":"generate_diagonal <- function(diagonal, len){\n  if (len == 0) return(numeric(0))\n  if (diagonal == 0) return(rep(1, len))\n  return(cumsum(generate_diagonal(diagonal - 1, len)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287922,"user_id":null,"body":"generate_diagonal <- function(n, l){\n  \n  pascalTriangle <- function(h) {\n    lapply(0:h, function(i) choose(i, 0:i))\n  }\n  \n  outcome <- pascalTriangle(500)\n  for(i in 1:length(outcome)){\n    outcome[[i]] <- outcome[[i]][-1]\n  }\n  \n  outcome <- outcome[-1]\n  len <- length(outcome)\n  \n  for(i in 1:length(outcome)){\n    if(length(outcome[[i]] < len)){\n      outcome[[i]] <- c(outcome[[i]], rep(0, (len - length(outcome[[i]]))))\n      i <- i + 1\n    }\n  }\n  \n  mat <- matrix(unlist(outcome), byrow = TRUE, nrow = len)\n  \n  final <- c()\n  if(n == 0){\n    final <- rep(1, times = l)\n  }\n  if(l == 0){\n    final <- numeric(0)\n  }\n  if(n != 0 & l != 0){\n    final <- mat[(n:(n+l-1)),n]\n  }\n  print(final)\n}\n  ","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5772382d509c65de7e000982":[{"id":287923,"user_id":null,"body":"x = c(1,1,2,3,3,4,5,5,6,6,6,8,8,8,10,9,10,11,11,12,12,12,12)\n\n# Define function u\nu <- function(m) {\n    if (m > 2){\n        for (i in c(3:m)) {\n            x[i] <- x[i-x[i-1]] + x[i-x[i-2]]\n        }\n    }\n    return(x)\n}\n\nlengthSupUK <- function(n, k) {\n  print(n)\n  print(k)\n  \n  z <- u(n)\n  z <- z[z>=k]  \n  RES <- length(z)\n  return(RES)\n}\n\n    comp <- function(m) {\n  print(m)  \n  z <- u(m)\n  y <- c(1,u(m-1))\n  z <- z - y\n  z <- z[z<0]  \n  RES <- length(z)\n  return(RES)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287924,"user_id":null,"body":"u <- c()\nfor(i in 3:100000){\n  u[1] <- 1\n  u[2] <- 1\n  u[i] <- u[i - u[i-1]] + u[i - u[i-2]]\n}\n\nlengthSupUK <- function(n, k){\n  t <- 0\n  for(i in 1:n){\n    if(u[i]>=k){\n      t <- t+1\n    }\n  }\n  print(t)\n}\n\ncomp <- function(n){\n  t <- 0\n  for(i in 1:(n-1)){\n    if(u[i] > u[i+1]){\n      t <- t+1\n    }\n  }\n  print(t)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287925,"user_id":null,"body":"lengthSupUK <- function(n, k) {\n    u <- c(1,1,2); times <- 0\n    for (i in 4:n) {\n          u[i] <- u[i - u[i-1]] + u[i - u[i-2]]\n          if (u[i] >= k) times <- times + 1 }\n    times\n}\ncomp <- function(n) {\n    u <- c(1,1,2); times <- 0\n    for (i in 4:n) {\n          u[i] <- u[i - u[i-1]] + u[i - u[i-2]]\n          if (u[i] < u[i-1]) times <- times + 1 }\n    times\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287926,"user_id":53,"body":"\nsequence <- function(n) {\n  xs <- c(0, 1, 1)\n  i <- 3\n  while (i <= n) {\n    xs[i] <- xs[i - xs[i - 1]] + xs[i - xs[i - 2]]\n    i <- i + 1\n  }\n  xs\n}\n\nlengthSupUK <- function(n, k) {\n  xs <- sequence(n)\n  m <- 0\n  for (i in seq_along(xs)) {\n    if (xs[i] >= k) {\n      m <- m + 1\n    }\n  }\n  m\n}\n\ncomp <- function(n) {\n  xs <- sequence(n)\n  m <- 0\n  for (i in seq_along(xs)) {\n    if (i == 1) {\n      next\n    }\n    if (xs[i] < xs[i - 1]) {\n      m <- m + 1\n    }\n  }\n  m\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287927,"user_id":null,"body":"u <- function(n) {\n  u_n <- rep(0,n)\n  u_n[1:2] <- 1\n  if(n>2){\n    for (j in seq(3, n)){\n      u_n[j] <- u_n[j-u_n[j-1]] + u_n[j-u_n[j-2]]\n    }\n  }\n  return(u_n[1:n])\n}\n\nlengthSupUK <- function(n, k) {\n  un <- u(n)\n  r <- 0\n  for(i in seq(n)) {\n    r <- r + (un[i] >= k)\n  }\n  return(r)\n}\ncomp <- function(n) {\n  un <- u(n)\n  unp <- un[1:(n-1)]\n  uns <- un[2:n]\n  sum(unp > uns)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287928,"user_id":null,"body":"fib <- function(n){\n  u <- c(1,1)\n  for(i in 3:n){\n    u[i] <- u[i-u[i-2]]+u[i-u[i-1]]\n  }\n  u\n}\nlengthSupUK <- function(n, k) {\n  sum(fib(n) >= k)\n}\n\ncomp <- function(n) {\n  fibnums <- fib(n)\n  sum(fibnums[2:n]<fibnums[1:(n-1)])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287929,"user_id":null,"body":"u <- function(n){\n  u <- c(1,1)\n  for(i in 3:n)u[i] <- u[i-u[i-1]] + u[i-u[i-2]]\n  u\n}\n\nlengthSupUK <- function(n, k) {\n    sum(u(n)>=k)\n}\ncomp <- function(n) {\n  count <- 0\n  u <- u(n)\n  for(i in 2:length(u))if(u[i]<u[i-1])count <- count+1\n  count\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287930,"user_id":669,"body":"u <- function(n) { # n > 2\n  v <- rep(1, n)\n  for (i in 3:n) {\n    v[i] <- v[i - v[i - 1]] + v[i - v[i - 2]]\n  }\n  v\n}\n\nlengthSupUK <- function(n, k) sum(u(n) >= k)\n\ncomp <- function(n) sum(diff(u(n)) < 0)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287931,"user_id":null,"body":"make_u <- function(n) {\n  u <- c(1L, 1L, integer(n - 2))\n  for(i in 3:n) {\n    i1 <- i - u[i - 1L]\n    i2 <- i - u[i - 2L]\n    u[i] <- u[i1] + u[i2]\n  }\n  u\n}\n\nlengthSupUK <- function(n, k) {\n  u <- make_u(n)\n  sum(u >= k)\n}\n\ncomp <- function(n) {\n  u <- make_u(n)\n  sum(u[-1] < u[-n])\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287932,"user_id":null,"body":"u <- function(n) {\n  r <- rep(1,n)\n  k <- 3\n  repeat {\n    r[k] <- r[k-r[k-1]] + r[k-r[k-2]]\n    if (k == n) return(r)\n    k <- k + 1\n  }\n}\n\nlengthSupUK <- function(n, k) {\n  v <- u(n)\n  sum(v >= k)\n}\ncomp <- function(n) {\n  v <- u(n)\n  sum(diff(v) < 0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5772da22b89313a4d50012f7":[{"id":287933,"user_id":53,"body":"greet <- function(name, owner){\n  ifelse(name == owner, \"Hello boss\", \"Hello guest\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287934,"user_id":null,"body":"greet <- function(name, owner){\n  sprintf(\"Hello %s\",c(\"guest\",\"boss\")[(name==owner)+1])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287935,"user_id":null,"body":"greet <- function(name, owner){\n  print(ifelse(name == owner, \"Hello boss\", \"Hello guest\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287936,"user_id":null,"body":"greet <- function(name, owner){\n  if (name == owner) {\n    return(\"Hello boss\")\n  }\n  return(\"Hello guest\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287937,"user_id":null,"body":"greet <- function(name, owner) {\n  return(ifelse(name == owner, \"Hello boss\", \"Hello guest\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287938,"user_id":null,"body":"greet <- function(name, owner){\n  if(name == owner){\n    p <- \"Hello boss\"\n  }\n  else{\n    p <- \"Hello guest\"\n  }\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287939,"user_id":null,"body":"greet <- function(name, owner){\n  if (name == owner){\n    print('Hello boss')\n  }else{\n    print('Hello guest')\n  }\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287940,"user_id":null,"body":"greet <- function(name, owner){\n  if (name == owner) {\n    out <- \"Hello boss\"\n  } else {\n    out <- \"Hello guest\"\n  }\n  \n  return(out)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287941,"user_id":null,"body":"greet <- function(name, owner){\n  if (name == owner){\n    return(paste(\"Hello boss\"))\n  } else {\n    return(paste(\"Hello guest\"))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287942,"user_id":null,"body":"greet <- function(name, owner){\n  if(name==owner){\n    return(\"Hello boss\")\n  }\n  else{\n    return(\"Hello guest\")\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"577a98a6ae28071780000989":[{"id":287943,"user_id":50,"body":"minimum <- function(vec){\n  min(vec)\n } \n\nmaximum <- function(vec){\n  max(vec)\n } ","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287944,"user_id":null,"body":"minimum <- function(vec){\n  return(min(vec))\n } \n\nmaximum <- function(vec){\n  return(max(vec))\n } ","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287945,"user_id":null,"body":"minimum <- function(vec){\n  num <- vec[1]\n  for (i in vec[1:length(vec)]) {\n    if (i < num) {\n      num <- i\n    }\n  }\n  return (num)\n } \n\nmaximum <- function(vec){\n  return (max(vec))\n } ","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287946,"user_id":421,"body":"minimum <- min\nmaximum <- max","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287947,"user_id":null,"body":"minimum <- function(vec){\n  return(min(unlist(vec)))\n } \n\nmaximum <- function(vec){\n  return(max(unlist(vec)))\n } ","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287948,"user_id":null,"body":"minimum <- function(vec){\n  \n  print(min(vec))\n  \n } \n\nmaximum <- function(vec){\n  \n  print(max(vec))\n  \n } ","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287949,"user_id":null,"body":"minimum <- function(vec){\n  vec[which.min(vec)]\n } \n\nmaximum <- function(vec){\n  vec[which.max(vec)]\n } ","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287950,"user_id":null,"body":"minimum <- function(vec){\n  \nreturn(as.integer(min(unlist(vec))))\n} \n\nmaximum <- function(vec){\n  \n return(as.integer(max(unlist(vec))))\n} ","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287951,"user_id":null,"body":"minimum <- function(vec){\n  return(min(vec))\n } \n\nmaximum <- function(vec){\n  max(vec)\n } ","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287952,"user_id":null,"body":"minimum <- function(vec){\n  return(sort(vec, decreasing = FALSE)[1])\n}\n\nmaximum <- function(vec){\n  return(sort(vec, decreasing = TRUE)[1])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"577bd026df78c19bca0002c0":[{"id":287953,"user_id":null,"body":"correct <- function(string){\n  chartr(\"015\", \"OIS\", string)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287954,"user_id":null,"body":"correct <- function(s) {\n  gsub(\"1\", \"I\", gsub(\"0\", \"O\", gsub(\"5\", \"S\", s)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287955,"user_id":null,"body":"correct <- function(string){\n  string <-gsub(\"5\", \"S\", string)\n  string <-gsub(\"0\", \"O\", string)\n  string <-gsub(\"1\", \"I\", string)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287956,"user_id":null,"body":"correct <- function(string){\n  x = gsub(\"5\", \"S\", string)\n  x = gsub(\"0\", \"O\", x)\n  x = gsub(\"1\", \"I\", x)\n  print(x)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287957,"user_id":null,"body":"correct <- function(string){\n  string <- gsub(\"5\",\"S\",string)\n  string <- gsub(\"1\",\"I\",string)\n  string <- gsub(\"0\",\"O\", string)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287958,"user_id":null,"body":"correct <- function(string){\n  library(stringr)\n  str_replace_all(string, c(\"5\" = \"S\", \"0\" = \"O\", \"1\" = \"I\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287959,"user_id":null,"body":"correct <- function(string){\n  library(stringr)\n  string = str_replace_all(string,'5',\"S\")\n  string = str_replace_all(string,'1',\"I\")\n  string = str_replace_all(string,'0',\"O\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287960,"user_id":null,"body":"correct <- function(string){\nlibrary(stringi)\n stri_replace_all_regex(string,\n                              pattern=c('0', '5', '1'),\n                              replacement=c('O', 'S', 'I'),\n                              vectorize=FALSE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287961,"user_id":null,"body":"correct <- function(string){\n  string <- gsub(\"5\", \"S\", string)\n  string <- gsub(\"0\", \"O\", string)\n  string <- gsub(\"1\", \"I\", string)\n  return(string)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287962,"user_id":null,"body":"correct <- function(string){\n  gsub(\"5\", \"S\", gsub(\"1\", \"I\", (gsub(\"0\", \"O\", string))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57a0556c7cb1f31ab3000ad7":[{"id":287963,"user_id":527,"body":"make_upper_case = toupper","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287964,"user_id":828,"body":"make_upper_case <- function(s) {\n  toupper(s)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287965,"user_id":null,"body":"make_upper_case <- function(s) {  \n  # Catch errors when s is not specified\n  if (!missing(s)){\n    toupper(s)\n  }  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287966,"user_id":676,"body":"make_upper_case <- toupper","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287967,"user_id":null,"body":"make_upper_case <- function(s) {\n  toupper(s)# your code\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287968,"user_id":null,"body":"make_upper_case <- function(s) {\n  # your code\n  toupper(s)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287969,"user_id":null,"body":"make_upper_case <- function(s) {\n  if (!missing(s)){\n    toupper(s)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287970,"user_id":null,"body":"make_upper_case <- function(s) {\n  x <- toupper(s)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287971,"user_id":null,"body":"library(stringr)\nmake_upper_case <- function(s) {\n  print(str_to_upper(s))\n  # your code\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287972,"user_id":null,"body":"make_upper_case <- function(s) {\n  stringr::str_to_upper(s)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57a0885cbb9944e24c00008e":[{"id":287973,"user_id":421,"body":"remove_exclamation_marks <- function(s){\n  gsub(\"!\", \"\", s)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287974,"user_id":null,"body":"library(stringr)\n\nremove_exclamation_marks <- function(s) {\n  str_replace_all(s, \"!\", \"\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287975,"user_id":null,"body":"remove_exclamation_marks <- function(s){\n  gsub(\"!\",\"\",s,fixed = T)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287976,"user_id":null,"body":"remove_exclamation_marks <- function(s){\n  s <- gsub(\"!\",\"\",as.character(s))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287977,"user_id":null,"body":"remove_exclamation_marks <- function(s){\n  new_word <- c()\n  j = 1\n  for (i in 1:nchar(s)) {\n    if (substr(s,i,i) != \"!\") {\n      new_word[j] <- substr(s,i,i)\n      j = j +1\n    }\n  }\n  return(paste(new_word,collapse =\"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287978,"user_id":null,"body":"library(tidyverse)\nremove_exclamation_marks <- function(s){\n  str_remove_all(s, \"\\\\!\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287979,"user_id":null,"body":"remove_exclamation_marks <- function(s){\n  library(stringr)\n  print(s)\n  if(s==FALSE){\n    return(s)\n  }\n  if(s==''){\n    return(s)\n  }\n  s1 = table(strsplit(as.character(s),''))['!']\n  if(is.na(names(s1))){\n    return(s)\n  }\n  for (i in 1:s1) {\n    s =str_replace(s,'!','')\n  }\n  return(s)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287980,"user_id":null,"body":"remove_exclamation_marks <- function(s){\ngsub(\"!|\u00a1\",\"\",s)  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287981,"user_id":null,"body":"remove_exclamation_marks <- function(s){\n library(stringr)\n  str_replace_all(s, \"!\", \"\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287982,"user_id":null,"body":"remove_exclamation_marks <- function(s){\n  letters <- strsplit(s,\"\")[[1]]\n  result <- \"\"\n  for(c in letters){\n    if(c!=\"!\"){\n      result <- paste0(result, c)\n    }\n  }\n  return(result)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57a0e5c372292dd76d000d7e":[{"id":287983,"user_id":527,"body":"repeat_str <- function(count, str) strrep(str, count)","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287984,"user_id":null,"body":"repeat_str <- function(count, str) {\n  # TODO:\n  y <- \"\"\n  for (x in 1:count) {\n    y<-paste(y,str, sep='')\n  }\n  print(y)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287985,"user_id":null,"body":"repeat_str <- function(count, str) {\n  # TODO: \n  strrep(str,count)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287986,"user_id":null,"body":"repeat_str <- function(count, str) {\n  paste0(rep(str,count), collapse =\"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287987,"user_id":null,"body":"repeat_str <- function(count, str) {\n  x = paste(replicate(count, str), collapse = \"\")\n  return(x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287988,"user_id":null,"body":"library(tidyverse)\nrepeat_str <- function(count, str) {\n  str_dup(str,count )\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287989,"user_id":null,"body":"repeat_str <- function(count, str) {\n  str2 <- str\n  count2 <- count\n  for (i in 2:count2)\n   { str2 <-paste(str2,str,sep=\"\")}\n  \n  print(str2)\n          \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287990,"user_id":null,"body":"repeat_str <- function(n, s) {\n  paste(replicate(n, s), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287991,"user_id":53,"body":"repeat_str <- function(sw, str) {\n    p <- base::replicate(sw, str)\n    s <- stringr::str_c(p, collapse = \"\")\n    s\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287992,"user_id":168,"body":"repeat_str <- function(count, str) {\n  paste(rep(str, count), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57a2013acf1fa5bfc4000921":[{"id":287993,"user_id":421,"body":"find_average <- function(vec){\n  ifelse(length(vec) == 0, 0, mean(vec))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287994,"user_id":null,"body":"find_average <- function(vec){\n  if ( length(vec) == 0){\n    return (0)\n  }\n  sum = 0\n  for (number in vec){\n    sum = sum + number;\n    }\n  return (sum \/length(vec))\n  \n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287995,"user_id":null,"body":"find_average <- function(vec){\n if (length(vec) > 0) {\n    return(mean(vec, na.rm = T))\n }\n else {\n   return(0)\n }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287996,"user_id":null,"body":"find_average <- function(vec){\n  ifelse(length(vec) >= 1, sum(vec)\/length(vec), 0)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287997,"user_id":null,"body":"find_average <- function(vec){\n  if( sum(vec) > 0){\n    mean(vec)\n  } else {\n    return(0)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287998,"user_id":null,"body":"find_average <- function(vec){\n  if(length(vec)==0){\n    return(0)\n  }\n  mean(vec)\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":287999,"user_id":null,"body":"find_average <- function(vec){\n  print(vec)\n  ifelse(is.null(vec) | identical(vec, integer(0)), 0, mean(vec))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288000,"user_id":null,"body":"find_average <- function(vec){\n    if(length(vec)>0) print(mean(vec))\n    else print(0)\n  }","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288001,"user_id":null,"body":"find_average <- function(vec){\n  if(length(vec) == 0) {return(0)\n                     } else {mean(vec)}}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288002,"user_id":null,"body":"find_average <- function(vec){\n  if (sum(vec) == 0) {\n    print(0)\n  } else {\n    print(mean(vec))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57a429e253ba3381850000fb":[{"id":288003,"user_id":492,"body":"bmi <- function(weight, height) {\n  result <- weight\/height\/height\n  if (result <= 18.5) {\n    \"Underweight\";\n  } else if (result <= 25) {\n    \"Normal\";\n  } else if (result <= 30) {\n    \"Overweight\";\n  } else {\n    \"Obese\";\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288004,"user_id":2373,"body":"bmi <- function(weight, height) {\n    \n    BMI <- weight \/ height^2\n    if (BMI <= 18.5){res = \"Underweight\"}\n    else if (BMI <= 25.0){res = \"Normal\"}\n    else if (BMI <= 30.0){res = \"Overweight\"}\n    else{res = \"Obese\"}\n    res\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288005,"user_id":null,"body":"bmi <- function(weight, height) {\n  names(which(c(\"Underweight\" = 18.5,\n                \"Normal\" = 25,\n                \"Overweight\" = 30,\n                \"Obese\" = Inf) >= (weight \/ height^2)))[1]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288006,"user_id":null,"body":"require(tidyverse)\n\nbmi <- function(weight, height) {\n  BMI <- weight\/height^2\n  \n  case_when(BMI <= 18.5 ~ 'Underweight',\n            BMI > 18.5 & BMI <= 25.0 ~ 'Normal',\n            BMI > 25.0 & BMI <= 30.0 ~ 'Overweight',\n            BMI > 30 ~ 'Obese')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288007,"user_id":null,"body":"bmi <- function(weight, height) {\n  bmi <- weight \/ height^2\n  as.character(cut(bmi, breaks = c(0, 18.5, 25, 30, Inf), labels = c(\"Underweight\", \"Normal\", \"Overweight\", \"Obese\")))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288008,"user_id":null,"body":"bmi <- function(weight, height) {\n  index <- weight \/ height ** 2\n  if(index <= 18.5){return(\"Underweight\")}\n  else if(index <= 25.0){return(\"Normal\")}\n  else if(index <= 30.0){return(\"Overweight\")}\n  else if(index > 30){return(\"Obese\")}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288009,"user_id":null,"body":"bmi <- function(weight, height) {\n  bmi = weight \/ height ^ 2\n  first_true_index <- which.max(c(bmi <= 18.5, bmi <= 25.0, bmi <= 30.0, T))\n  return(c(\"Underweight\", \"Normal\", \"Overweight\", \"Obese\")[first_true_index])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288010,"user_id":null,"body":"bmi <- function(weight, height) {\nbmi = weight\/(height^2)\n\nif( bmi <= 18.5){ \n  print(\"Underweight\")\n} else if (bmi <= 25.0){ \n    print(\"Normal\")\n} else if (bmi <= 30.0) { \n    print(\"Overweight\")\n} else if (bmi > 30){\n    print(\"Obese\")\n} else{\n    break\n}  \n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288011,"user_id":null,"body":"bmi <- function(weight, height) {\n  x = weight \/ height;\n  y = x \/ height; \n  \n  if (y <= 18.5) {\n    \"Underweight\"\n  }\n  else if (y <= 25.0) {\n    \"Normal\"\n  }\n  else if (y <= 30.0) {\n    \"Overweight\"\n  }  \n  else if (y > 30.0) {\n    \"Obese\"\n  }  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288012,"user_id":null,"body":"bmi <- function(weight, height) {\n  index <- weight\/height^2\n  if (index <= 18.5) {\n    return (\"Underweight\")\n  } else if (index <= 25.0) {\n    return (\"Normal\")\n  } else if (index <= 30.0) {\n    return (\"Overweight\")\n  } else {\n    return (\"Obese\")\n  }\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57cc975ed542d3148f00015b":[{"id":288013,"user_id":421,"body":"solution <- function(a, x){\n  x %in% a\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288014,"user_id":null,"body":"solution <- function(a, x){\n  any(x == a)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288015,"user_id":null,"body":"solution <- function(a, x){\n  found <- FALSE\n  for (i in a){\n   if (i == x){\n     found <- TRUE\n     break\n   }\n    }\n  found\n  }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288016,"user_id":null,"body":"solution <- function(a, x){\n  boo <- (x %in% a)\n  return (boo)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288017,"user_id":null,"body":"solution <- function(a, x){\n  \n  boo <- F\n  for (i in a) {\n    if (as.character(i) == as.character(x)) {\n      boo <- T\n    }\n  }\n  return (boo)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288018,"user_id":null,"body":"solution <- function(a, x){\n return(any(a %in% x))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288019,"user_id":null,"body":"solution <- function(a, x){\n  \n  if (x %in% a) return (TRUE)\n  \n  return (FALSE)\n \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288020,"user_id":null,"body":"solution <- function(a, x){\n ifelse(x %in% a, T, F)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288021,"user_id":null,"body":"solution <- function(a, x){\n  any(a == x) \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288022,"user_id":null,"body":"solution <- function(a, x){\n  ifelse((x %in% a),TRUE,FALSE) \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57cc981a58da9e302a000214":[{"id":288023,"user_id":null,"body":"small_enough <- function(vector, limit) all(vector<=limit)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288024,"user_id":1566,"body":"small_enough <- function(vector, limit) {\n  max(vector)<=limit\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288025,"user_id":null,"body":"small_enough <- function(vector, limit) {\n  # Loop through each value\n  for (val in vector) {\n    # if value is greater than limit return false\n    if (val > limit) {\n      return(FALSE)\n    }\n  }\n  # no value was greater than the limit, return true\n  return(TRUE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288026,"user_id":null,"body":"small_enough <- function(vec, limit) {\n  x <-max(vec)\n  return (x<=limit)\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288027,"user_id":null,"body":"small_enough <- function(vector, limit) {\n  for (i in vector) {\n    if (i<=limit) {aux <- TRUE}\n    else \n    {aux <- FALSE \n     break} \n  }\n  return(aux)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288028,"user_id":null,"body":"small_enough <- function(vector, limit) {\n  if(max(vector) <= limit ) {T} else {F}\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288029,"user_id":null,"body":"small_enough <- function(vector, limit) {\n  ifelse(prod(vector <= limit) == 1, TRUE, FALSE) \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288030,"user_id":null,"body":"small_enough <- function(vector, limit) {\n\n  v_max <- max(vector)\n  \n  if(v_max <= limit) { TRUE\n                      \n  } else { FALSE }\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288031,"user_id":null,"body":"small_enough <- function(vector, limit) {\n  a <- lapply(vector, function(b) if (b > limit) 1 else 0)\n  sum(unlist(a)) == 0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288032,"user_id":null,"body":"small_enough <- function(vector, limit) {\n boolean = TRUE\n for (i in vector){\n   if (i> limit) boolean = FALSE\n }\n return(boolean)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57cebe1dc6fdc20c57000ac9":[{"id":288033,"user_id":2334,"body":"find_short <- function(s){\n  min(nchar(unlist(strsplit(s, \" \"))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288034,"user_id":null,"body":"# in short:\nfind_short <- function(s) min(nchar(strsplit(s, \" \")[[1]])) \n\n\n#In Detail:\n# find_short <- function(s){\n#  min( # Take the smallest number of the array\n#     nchar( # count the string length in each element of the array, return an array of stringlengths\n#       strsplit( # split the string every time a recognized substring appears in the string\n#                 s,  #input string\n#                 \" \" # separator space, separates words from oneanother\n#                )[[1]] # strsplit returns a list, add [[1]] so nchar will apply to each substring individually, not all strings together.\n#       )\n#   )\n#}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288035,"user_id":null,"body":"find_short <- function(s){\n  s %>% strsplit(., split = \" \") %>% unlist %>% nchar %>% min\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288036,"user_id":null,"body":"find_short <- function(s){\n  strsplit(s,\" \")[[1]] %>%\n    nchar() %>%\n      min()\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288037,"user_id":null,"body":"find_short <- function(s){\n  min(nchar(unlist((strsplit(s, \"\\\\s\")))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288038,"user_id":null,"body":"find_short <- function(s){\n  foo <- strsplit(s, \" \") # split vector into substrings.\n  min(sapply(X = foo, FUN = nchar)) # apply nchar to each element of the list and return the smallest value.\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288039,"user_id":null,"body":"find_short <- function(s){\n  words <- unlist( strsplit(s,\" \") )\n  words <- nchar( words )\n  word <- min( words )\n  return( word )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288040,"user_id":null,"body":"find_short <- function(s){\n  # Your code here\n  strsplit(s,' ')[[1]]\n  length(strsplit(s,' ')[[1]])\n  d = c()\n  for (i in 1:length(strsplit(s,' ')[[1]])) {\n    cat(length(strsplit(strsplit(s,' ')[[1]][i],'')[[1]]))\n    d = c(d,rep(i,length(strsplit(strsplit(s,' ')[[1]][i],'')[[1]])))\n  }\n  return(min(table(d)))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288041,"user_id":null,"body":"find_short <- function(s){\n  words <- nchar(strsplit(s, \" \")[[1]])\n  \n  words[which.min(words)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288042,"user_id":null,"body":"find_short <- function(s){\n  ss <- strsplit(s, split= ' ') \n  data <- c()\n  for (i in ss)\n  {\n    data <- nchar(i)\n  }\n  print(min(data))\n    }\n\n\n\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57cfd92c05c1864df2001563":[{"id":288043,"user_id":421,"body":"vowel_back <- function(st){\n  chartr('abcdefghijklmnopqrstuvwxyz', 'vkbaafpqistuvwnyzabtpvfghi', st)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288044,"user_id":null,"body":"library(stringi)\nlibrary(stringr)\n\nvowel_back <- function(st){\n  l <- c(letters, letters)\n  voy <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  code <- c(\"c\", \"o\", \"d\", \"e\")\n  con <- letters[!(letters %in% voy)]\n  st <- str_split(st, \"\", simplify = T)\n  res <- NULL\n  for (i in st){\n    if (i == \"c\"){\n      res <- c(res, \"b\")\n    } else if (i == \"o\") {\n      res <- c(res, \"n\")\n    }else if (i == \"d\") {\n      res <- c(res, \"a\")\n    }else if (i == \"e\") {\n      res <- c(res, \"a\")\n    }else if (i %in% voy){\n      tmp <- which(l==i)[2]\n      tmp <- tmp -5\n      new <- l[tmp]\n      if (new %in% code){\n        res <- c(res,i)\n      } else {\n        res <- c(res, new)\n      }\n    } else if (i %in% con){\n    tmp <- which(l==i)[1]\n      tmp <- tmp +9\n      new <- l[tmp]\n            if (new %in% code){\n        res <- c(res,i)\n      } else {\n        res <- c(res, new)\n      }\n      }\n  }\n  return(paste0(res, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288045,"user_id":null,"body":"library(tidyverse)\nlibrary(stringr)\nvowel_back <- function(st){\nst <- unlist(str_split(st, pattern = ''))\nmyLetters <- letters[1:26]\nst <- match(st, myLetters)\nvowels <- match(c('a', 'e', 'i','u'), myLetters)\nex1 <- match(c('c', 'o'), myLetters)\nex3 <- match('d', myLetters)\nex4 <- match('e', myLetters)\n\nfor (i in seq_along(st)) {\n  temp <- st[i]\n  st[i] <- case_when(\n    st[i] %in% ex1 ~  st[i] - 1 ,\n    st[i] %in% ex3 ~  st[i] - 3 ,\n    st[i] %in% ex4 ~  st[i] - 4 ,\n    st[i] %in% vowels ~ st[i] - 5 ,\n    TRUE ~  st[i] + 9\n  )\n  st[i] <- case_when(\n    st[i] < 0 ~ st[i]+26 ,\n    st[i] > 26 ~ st[i] -26,\n    TRUE ~ st[i]\n  )\n  if (st[i] %in% c(ex1, ex3, ex4)) st[i] <- temp\n}\nreturn(paste0(myLetters[st], collapse = ''))\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288046,"user_id":null,"body":"vowel_back <- function(st){\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  vowels_out <- c(\"v\", \"a\", \"i\", \"n\", \"p\")\n  exceptions <- c(\"c\", \"d\", \"t\", \"f\", \"v\")\n  excetions_out <- c(\"b\", \"a\", \"t\", \"f\", \"v\")\n  st_vec <- unlist(strsplit(st, split = \"\"))\n  for (i in c(1:length(st_vec))){\n    let <- st_vec[i]\n    if(let %in% vowels){\n      st_vec[i] <- vowels_out[which(vowels == let)]\n    } else if (let %in% exceptions){\n      st_vec[i] <- excetions_out[which(exceptions == let)]\n    } else if (which(letters == let) > (26-9)){\n      st_vec[i] <- letters[which(letters == let) + 9 - 26]\n    } else {\n      st_vec[i] <- letters[which(letters == let) + 9]\n    }\n  }\n  return(paste0(st_vec, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288047,"user_id":527,"body":"vowel_back <- function(s) chartr('abcdefghijklmnopqrstuvwxyz', 'vkbaafpqistuvwnyzabtpvfghi', s)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57cfdf34902f6ba3d300001e":[{"id":288048,"user_id":null,"body":"two_sort <- function(s){\n  res <- sort(s)[1]\n  return(paste0(unlist(strsplit(res, \"\")), collapse =\"***\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288049,"user_id":null,"body":"two_sort <- function(s){\n  s[order(s)][[1]] %>%\n    strsplit(split='') %>%\n    unlist %>%\n    paste(collapse='***')\n  \n#   Option 2:\n#   word = s[order(s)][[1]]\n#   letters = strsplit(word, '')[[1]]\n#   paste(letters, collapse='***')\n  \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288050,"user_id":null,"body":"two_sort <- function(s){\n  sort(s)[1] %>%\n  strsplit('') %>%\n  unlist %>%\n  paste(collapse=\"***\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288051,"user_id":null,"body":"two_sort <- function(s){\n  v <- sort(s)[1]\n  q <- strsplit(v, \"\")[[1]]\n  d <- \"\"\n  for (val in q[1:nchar(v)-1]) {\n    d <- paste(d, val, \"***\", sep=\"\")\n    print(d)\n  }\n  d <- paste(d, q[nchar(v)], sep=\"\")\n  print(d)\n  \n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288052,"user_id":null,"body":"two_sort <- function(s){\n  #(imperfect) s[substr(s,1,1) %>% paste0(collapse='') %>% utf8ToInt %>% which.min] %>% strsplit('') %>% unlist %>% paste(collapse='***')\n  sort(s)[1] %>% strsplit('') %>% unlist %>% paste(collapse='***')\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288053,"user_id":421,"body":"two_sort <- function(s){\n  paste(unlist(strsplit(sort(s)[1], \"\")), collapse = \"***\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288054,"user_id":null,"body":"two_sort <- function(s) {\n  paste(unlist(strsplit(min(s), \"\")), collapse=\"***\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288055,"user_id":53,"body":"two_sort <- function(s) {\n  r <- paste0(gsub('*', '\\\\1***', sort(s)[[1]]), collapse = '')\n  substr(r, 4, nchar(r) - 3)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288056,"user_id":null,"body":"two_sort <- function(s){\n  gsub(\"\\\\*+$\",\"\",gsub(\"(.)\",\"\\\\1***\",sort(s)[1]))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288057,"user_id":null,"body":"two_sort <- function(s){\n  paste0(unlist(strsplit(sort(s)[1], \"\")), collapse = \"***\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57cff961eca260b71900008f":[{"id":288058,"user_id":null,"body":" is_vow <- function(a){\n   vow <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n   for (v in vow){\n       a[a == strtoi(charToRaw(v),16L)] <- v\n   }\n  \n   if (any(vow %in% a)){\n     return(a)\n   } else {\n     \n  return(as.numeric(a))\n }}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288059,"user_id":null,"body":" is_vow <- function(a){\n   if(sum(a %in% c(97, 101, 105, 111, 117)) == 0) {a\n  }else{\n      a<-gsub(97,\"a\", a)\n      a<-gsub(101,\"e\", a)\n      a<-gsub(105,\"i\", a)\n      a<-gsub(111,\"o\", a)\n      a<-gsub(117,\"u\", a)\n  }\n }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288060,"user_id":421,"body":" is_vow <- function(a){\n   mapply(function(x){ifelse(x %in% c(97, 101, 105, 111, 117), intToUtf8(x), x)}, a)\n }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288061,"user_id":null,"body":" is_vow <- function(x){\n  sapply(x, function(v) ifelse(v %in% utf8ToInt(\"aeiou\"), intToUtf8(v), v))\n }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288062,"user_id":null,"body":" is_vow <- function(a){\n   i <-1\n   for (n in a) {\n     \n     if (n == 97) a[i] <- 'a'\n     if (n == 101) a[i] <- 'e'\n     if (n == 105) a[i] <- 'i'\n     if (n == 111) a[i] <- 'o'\n     if (n == 117) a[i] <- 'u'\n     \n     i + 1 -> i\n   }\n\n   return (a)\n }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288063,"user_id":null,"body":"is_vow <- function(a){\n  for (i in 1:length(a)) {\n    if (a[i] == 97) {\n      a[i] <- \"a\"\n    } else if (a[i] == 101) {\n      a[i] <- \"e\"\n    } else if (a[i] == 105) {\n      a[i] <- \"i\"\n    } else if (a[i] == 111) {\n      a[i] <- \"o\"\n    } else if (a[i] == 117) {\n    a[i] <- \"u\"\n    }\n  }\n  return(a)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288064,"user_id":null,"body":"is_vow <- function(a){\n  for (x in 1:length(a)){\n    if (a[x] == 97) {\n       a[x] <- 'a'\n    }\n    else if (a[x] == 117) {\n      a[x] <- 'u'\n    }\n    else if (a[x] == 101) {\n      a[x] <- 'e'\n    }\n    else if (a[x] == 105) {\n      a[x] <- 'i'\n    }\n    else if (a[x] == 111) {\n      a[x] <- 'o'\n    }\n  }\n  a\n}\n ","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288065,"user_id":null,"body":"is_vow <- function(a) {\n  a <- as.list(a)\n  a[a==97]  <- \"a\"\n  a[a==101] <- \"e\"\n  a[a==105] <- \"i\"\n  a[a==111] <- \"o\"\n  a[a==117] <- \"u\"\n  a <- unlist(a)\n  return(a)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288066,"user_id":null,"body":"is_vow <- function(a){\n  x <- c(97, 101, 105, 111, 117)\n  if (any(a %in% x)) {\n    for (i in x)\n      a <- replace(a, a == i, rawToChar(as.raw(i)))\n  }\n  return(a)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288067,"user_id":null,"body":"is_vow <- function(a){\n  vowels <- c(\"a\",\"e\",\"i\",\"o\",\"u\")\n  vowel_code <- c(97,101,105,111,117)\n  \n  for(i in 1:length(a)){\n    if(a[i] %in% vowel_code){\n      a[i] <- vowels[which(vowel_code==a[i])]\n    }\n  }\n  return(a)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57e76bc428d6fbc2d500036d":[{"id":288068,"user_id":null,"body":"string_to_array <- function(s){\n  unlist(strsplit(s, \" \"))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288069,"user_id":null,"body":"library(stringr)\nstring_to_array <- function(s){\n if(s==\"\"){character()} else {unlist(str_split(s,\" \"))}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288070,"user_id":null,"body":"string_to_array <- function(s){\n  return(strsplit(s, \" \")[[1]])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288071,"user_id":null,"body":"string_to_array <- function(s){\n  s %>% \n    strsplit(split=\" \") %>% \n    unlist()\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288072,"user_id":null,"body":"string_to_array <- function(s){\n  unlist(print(strsplit(s, split = \" \")))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288073,"user_id":null,"body":"string_to_array <- function(s){\n  ans <- (strsplit(s, ' '))[[1]]\n  print(ans)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288074,"user_id":null,"body":"string_to_array <- function(s){\n  return(unlist(strsplit(s,\" \")))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288075,"user_id":812,"body":"string_to_array <- function(s) {\n  a = strsplit(s, \" \")[[1]]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288076,"user_id":null,"body":"library(stringr)\nstring_to_array <- function(s){\n  if (s == ''){\n    return(character())\n  }\n  unlist(str_split(s, ' '))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288077,"user_id":null,"body":"string_to_array <- function(s){\n  unlist(strsplit(s,\"\\\\s+\"));\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57e92e91b63b6cbac20001e5":[{"id":288078,"user_id":null,"body":"duty_free <- function(price, discount, holiday_cost){\n  total <- price * (discount\/100)\n  floor(holiday_cost\/total)\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288079,"user_id":null,"body":"duty_free <- function(price, discount, holiday_cost){\n  floor(holiday_cost\/(0.01*price*discount))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288080,"user_id":null,"body":"duty_free <- function(price, discount, holiday_cost){\n  floor(holiday_cost \/ (price - (price * (1 - discount\/100))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288081,"user_id":null,"body":"duty_free <- function(price, discount, holiday_cost){\n  percentage = discount\/100\n  difference = price*percentage\n  total = floor(holiday_cost\/difference)\n  total\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288082,"user_id":null,"body":"library(plyr)\n\nduty_free <- function(price, discount, holiday_cost){\n  round_any((holiday_cost \/ (price * discount\/100)),1, f=floor)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288083,"user_id":null,"body":"duty_free <- function(price, discount, holiday_cost){\n savings <- price*(discount\/100)\n  x <- floor(holiday_cost\/savings)\n  return(x)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288084,"user_id":null,"body":"duty_free <- function(price, discount, holiday_cost)\n{\n  savings = (price*(discount\/100))\n  no_of_bottles = floor(holiday_cost\/savings)\n  return (no_of_bottles)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288085,"user_id":null,"body":"duty_free <- function(price, discount, holiday_cost){\n floor(holiday_cost \/ (price*discount*0.01))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288086,"user_id":null,"body":"duty_free <- function(price, discount, holiday_cost){\n amount <- price*discount\/100\n  floor(holiday_cost\/amount)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288087,"user_id":null,"body":"duty_free <- function(price, discount, holiday_cost){\n  act_price <- (price* (100-discount)\/100)\n  saving <- price - act_price\n  return(floor(holiday_cost\/saving))\n  \n \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57eadb7ecd143f4c9c0000a3":[{"id":288088,"user_id":null,"body":"abbrev_name <- function(name){\n  toupper(gsub(\"(\\\\w)\\\\w*\\\\s(\\\\w)\\\\w*\", \"\\\\1.\\\\2\", name))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288089,"user_id":null,"body":"library(stringr)\n\nabbrev_name <- function(name){\n  \n  # storing the last name in a variable for ease of access\n  # str_locate() is a stringr function that finds a certain pattern\n  last_name <- str_locate(name, \" \") + 1 \n  \n  # doing the same for the first and last initials\n  # str_sub() is another stringr function (which you probably gleaned from the 'library()' statement above)\n  first_initial <- str_sub(name, 1, 1)\n  last_initial <- str_sub(name, last_name, last_name + 1)\n  \n  # one last variable to help simplify the return statement\n  # lastly, str_c() is basically a join method in stringr\n  answer <- str_c(first_initial, last_initial, sep = \".\")\n  \n  # capitalizing and returning the variable we just created\n  return (str_to_upper(answer))\n \n  # solved!\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288090,"user_id":null,"body":"abbrev_name <- function(name){\n  gsub(\"^(\\\\w)\\\\w* (\\\\w)\\\\w*\", \"\\\\1\\\\.\\\\2\", toupper(name))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288091,"user_id":null,"body":"abbrev_name <- function(name){\n  \npaste0(toupper(sapply(unlist(strsplit(name, \" \")), function(x){return(unlist(strsplit(x , \"\"))[1])}, simplify = TRUE)), collapse = \".\") }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288092,"user_id":null,"body":"library(tidyverse)\n\nabbrev_name <- function(name){\n   initials <- name %>%\n              #split first\/last name into character vector\n              str_split(., pattern = \" \", simplify = TRUE) %>%\n              #extract first letter of each name\n              str_sub(., start = 1, end = 1) %>%\n              #capitalize\n              str_to_upper(.) %>%\n              #join into single string, separated by \".\"\n              paste(., collapse=\".\")\n  return(initials)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288093,"user_id":null,"body":"abbrev_name <- function(name){\n y <- strsplit(name, \" \")[[1]]\nfirstName <- toupper(substr(y[1],1,1))\nlastName <- toupper(substr(y[2],1,1))\nInitials <- paste(firstName, lastName, sep = \".\", collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288094,"user_id":null,"body":"abbrev_name <- function(name){\n v <- unlist(strsplit(name, \" \"))\n  toupper(paste(substring(v,1,1), collapse = \".\", sep = \" \"))\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288095,"user_id":null,"body":"abbrev_name <- function(name){\n gsub(\"\\\\s\",\"\\\\.\",gsub(\"(\\\\S)(\\\\S+)?\", \"\\\\U\\\\1\", name, perl = TRUE))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288096,"user_id":null,"body":"abbrev_name <- function(name){\n  name_output <- as.list(strsplit(name,\" \")[[1]])\n\n  first <- (substr(name_output[1],1,1))\n\n  se<- (substr(name_output[2],1,1))\n  first <- toupper(first)\n  se <- toupper(se)\n  name_return <-paste0(first,\".\",se)\n \n  returnValue(name_return)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288097,"user_id":null,"body":"abbrev_name <- function(name){\n gsub(\"^(.).* (.).*\", \"\\\\1.\\\\2\",toupper(name))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57eae20f5500ad98e50002c5":[{"id":288098,"user_id":421,"body":"no_space <- function(x){\n  gsub(\" \", \"\", x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288099,"user_id":null,"body":"no_space <- function(x){\n  gsub(\"[[:punct:][:blank:]]\", \"\", x, perl=TRUE)\n  \n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288100,"user_id":null,"body":"library(stringr)\nno_space <- function(x){\n  str_remove_all(x, \" \")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288101,"user_id":null,"body":"no_space <- function(x){\n  gsub(\"[[:punct:][:blank:]]\", \"\", x)\n  \n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288102,"user_id":null,"body":"no_space <- function(x){\n  res <- gsub(\" \", \"\", x)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288103,"user_id":null,"body":"no_space <- function(x){\n  \nlibrary(stringi)\nstri_replace_all_fixed(x, \" \", \"\")\nstri_replace_all_charclass(x, \"\\\\p{WHITE_SPACE}\", \"\")\n  \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288104,"user_id":null,"body":"library(tidyverse)\n\nno_space <- function(x){\nx %>%\n  str_replace_all(\" \", \"\")\n  \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288105,"user_id":null,"body":"no_space <- function(x){\n  x <- gsub(' ', '', x, fixed = TRUE)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288106,"user_id":null,"body":"no_space <- function(x){print(gsub(\" \",\"\",x))\n  \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288107,"user_id":null,"body":"no_space <- function(x){\n  library(stringr)\n  str_replace_all(x, ' ', '')\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57eae65a4321032ce000002d":[{"id":288108,"user_id":null,"body":"fake_bin <- function(x){\n  x <-gsub('[0-4]',0,x)\n  x <- gsub('[5-9]',1,x)\n  print(x) \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288109,"user_id":null,"body":"library(\"tidyverse\")\nfake_bin <- function(x){\n n <- str_split(x, pattern = \"\") %>% \n  unlist() \nn <- ifelse (n < 5, 0, 1)\npaste(n, collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288110,"user_id":null,"body":"fake_bin <- function(x){\n  chartr(\"123456789\", \"000011111\", x)\n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288111,"user_id":null,"body":"fake_bin <- function(x){\n x <- as.numeric(strsplit(as.character(x),\"\")[[1]])\n y <- c() \n for(i in 1:length(x)){\n   if(x[i] >= 5)\n     x[i] <- \"1\"\n   else if(x[i] < 5)\n     x[i] <- \"0\"\n   y <- c(y, x[i])\n   }\n paste(y, collapse = \"\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288112,"user_id":null,"body":"library(stringr)\nfake_bin <- function(x){\n  v <-as.numeric(unlist(strsplit(x, \"\")))\n  ret = \"\"\n  for (n in v) {\n    if (n >= 5){\n      ret <- paste(ret, \"1\", sep=\"\")\n    } else {\n      ret <- paste(ret, \"0\", sep=\"\" )\n    }\n  }\n  ret\n  # if (n >= 5){\n  #   gsub(n, 1, fake_bin)\n  # }else{\n  #   gsub(n, 0, fake_bin)\n  # }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288113,"user_id":null,"body":"fake_bin <- function(x){\n  gsub(\"[^0]\",\"1\",gsub(\"[0-4]\",\"0\",x))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288114,"user_id":null,"body":"fake_bin <- function(x){\n  y <- c()\n  for (i in 1:nchar(x)) {\n    if (substr(x,i,i) < 5) {\n      y[i] <- \"0\"\n    } else {\n      y[i] <- \"1\"\n    }\n  }\n  return(paste(y,collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288115,"user_id":null,"body":"fake_bin <- function(x){\n  x<-chartr(\"01234\",\"00000\",x)\n  x<-chartr(\"56789\",\"11111\",x)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288116,"user_id":null,"body":"library(tidyverse)\nfake_bin <- function(x){\n  str_replace_all(str_replace_all(x,\"0|1|2|3|4\", \"0\"),\"5|6|7|8|9\", \"1\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288117,"user_id":null,"body":"library(tidyverse)\nfake_bin <- function(x) {\n  x %>% str_replace_all(\"\\\\d\", function(char) {\n    ifelse(as.integer(char) < 5, \"0\", \"1\")\n  })\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57eaeb9578748ff92a000009":[{"id":288118,"user_id":null,"body":"sum_mix <- function(vec){\n  print(sum(as.numeric(vec)))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288119,"user_id":null,"body":"sum_mix <- function(vec){\n  return (sum(as.integer(vec)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288120,"user_id":null,"body":"sum_mix <- function(vec) {\n  sum(strtoi(vec))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288121,"user_id":null,"body":"sum_mix <- function(vec){\n  x_num <- as.numeric(vec)\n  return(sum(x_num))\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288122,"user_id":null,"body":"sum_mix <- function(vec){\n  a <- length(vec)\n  sum = 0\n  for (k in 1:a){\n    b <- vec[k] %>% as.numeric()\n    print(b)\n    sum <- sum + b\n  }\n  print(sum)\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288123,"user_id":null,"body":"sum_mix <- function(vec){\n  numeric_vec <- sapply(vec, as.numeric)\n  sum(numeric_vec)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288124,"user_id":null,"body":"sum_mix <- function(vec){\n  sum <- 0\n  for (x in vec){\n    x <- as.numeric(x)\n    sum <- sum + x}\n  return (sum)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288125,"user_id":null,"body":"sum_mix <- function(vec){\n  return(sum(strtoi(vec)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288126,"user_id":null,"body":"sum_mix <- function(vec){\n x <- as.numeric(vec)\n  return(sum(x))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288127,"user_id":null,"body":"sum_mix <- function(vec){\n  result = strtoi(vec)\n  print(sum(result))\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57eb8fcdf670e99d9b000272":[{"id":288128,"user_id":2334,"body":"high <- function(s){\n  scores <- sapply(unlist(strsplit(casefold(s), \" \")), function(x) sum(utf8ToInt(x) - 96))\n  names(scores)[which.max(scores)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288129,"user_id":null,"body":"high <- function(x){\n  words <- strsplit(x, ' ')[[1]]\n  scores <- sapply(words, function(word)\n    sum(match(strsplit(word, '')[[1]], letters))\n  )\n  words[[which.max(scores)]]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288130,"user_id":null,"body":"high <- function(x){\n  x <- unlist(strsplit(x,' '))\n  score <- function(w) sum(utf8ToInt(w)-utf8ToInt('a')+1)\n  x[which.max(unlist(sapply(x,score)))]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288131,"user_id":null,"body":"high <- function(x){\n  words <- unlist(strsplit(x, \" \"))\n  tokens <- strsplit(words, \"\")\n  tokens_scores <- lapply(tokens, function(.x) scores[.x])\n  words_scores <- vapply(tokens_scores, sum, integer(1))\n  top_scored <- which.max(words_scores)\n  words[[top_scored]]\n}\n\nscores <- setNames(seq_along(letters), letters)\n\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288132,"user_id":null,"body":"rate <- function(x){\n  char <- strsplit(x, \"\")[[1]]\n  val <- structure(1:26, names=letters)\n  sum(val[char])\n}\n\nhigh <- function(x){\n  words <- strsplit(x, \" \")[[1]]\n  words[which.max(sapply(words, rate))]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288133,"user_id":null,"body":"high <- function(x){\n  # Split sentence into words\n  split.sent <- unlist(strsplit(x, \" \"))\n\n  # Assign value to alphabets in list\n  value.alpha <- list()\n  for(i in letters){\n    value.alpha[[i]] <- which(letters==i)\n  }\n\n  # Calculate value of words\n  value.list <- list()\n  for(w in split.sent){\n    split.words <- unlist(strsplit(w, \"\"))\n    value <- sum(unlist(value.alpha[split.words], use.names=F))\n    value.list[[w]] <- value\n  }\n\n  # Search word with largest value\n  # If two words have the same value, the word that appears first will be shown\n  highest <- names(value.list[value.list==max(unlist(value.list[split.sent], use.names=F))])[1]\n\n  return(highest)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288134,"user_id":669,"body":"high <- function(x) {\n  w <- unlist(strsplit(x, \" \"))\n  s <- purrr::map_dbl(w, ~sum(utf8ToInt(.) - 96))\n  w[which.max(s)]\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288135,"user_id":null,"body":"high <- function(x){\n  # Bust a move\n  x <- strsplit(x, \" \")[[1]]\n  y <- sapply(x, function(x) {\n    table(strsplit(x, \"\")[[1]])\n  })\n  s <- 1:26\n  names(s) <- letters\n  y <- sapply(y, function(x) {\n    sum(s[names(x)]*x)\n  })\n  gsub(\"^(.*)\\\\..*$\", \"\\\\1\", names(y[which.max(y)[1]]))\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288136,"user_id":null,"body":"library(tidyverse)\nhigh <- function(x) {\n  words <- x %>%\n    str_split(\" \") %>%\n    unlist()\n\n  index <- words %>%\n    map_int(function(w) {\n      w %>%\n        str_split(\"\") %>%\n        unlist() %>%\n        map_int(~ match(.x, letters)) %>%\n        sum()\n    }) %>%\n    which.max()\n\n  words[index]\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288137,"user_id":null,"body":"library(tidyverse)\nhigh <- function(x) {\n  words <- x %>%\n    str_split(\" \") %>%\n    unlist()\n\n  index <- words %>%\n    map_dbl(function(w) {\n      w %>%\n        str_split(\"\") %>%\n        unlist() %>%\n        map_dbl(function(ch) {\n          which(letters == ch)\n        }) %>%\n        sum()\n    }) %>%\n    which.max()\n\n  words[index]\n}\n\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57ec8bd8f670e9a47a000f89":[{"id":288138,"user_id":null,"body":"mouth_size <- function(animal){\n  ifelse(animal == \"alligator\", \"small\", \"wide\")\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288139,"user_id":null,"body":"library(tidyverse)\nmouth_size <- function(animal) ifelse(str_to_lower(animal) == \"alligator\", \"small\", \"wide\")","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288140,"user_id":null,"body":"mouth_size <- function(animal){\n    if (animal == \"alligator\")\n      return ('small')\n    else return ('wide')\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288141,"user_id":null,"body":"mouth_size <- function(animal){\n  return(if (tolower(animal) == \"alligator\") \"small\" else \"wide\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288142,"user_id":null,"body":"library(dplyr)\nmouth_size <- function(animal){\n  if(animal == \"alligator\"| animal == \"ALLIGATOR\"){\n    print(\"small\")\n  }else{\n    print(\"wide\")\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288143,"user_id":null,"body":"mouth_size <- function(animal) {\n    c(\"wide\", \"small\")[(tolower(animal) == \"alligator\") + 1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288144,"user_id":null,"body":"mouth_size <- function(animal){\n  if(tolower(animal) == 'alligator'){\n    print('small')\n  } else{\n    print('wide')\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288145,"user_id":null,"body":"mouth_size <- function(animal){\n  if(tolower(animal)==\"alligator\"){return(\"small\")}else{return(\"wide\")}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288146,"user_id":null,"body":"mouth_size <- function(animal){\n  animal<-tolower(animal)\n  if (animal==\"alligator\"){\n    \"small\"\n  } else {\n    \"wide\"\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288147,"user_id":null,"body":"mouth_size <- function(animal){\n  animal <- tolower(animal)\n  if(animal == 'alligator'){\n    return('small')\n  }\n  else{\n    return('wide')\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57ed30dde7728215300005fa":[{"id":288148,"user_id":null,"body":"bumps <- function(road){\n  ifelse(nchar(gsub(\"_\", '', road)) <= 15, \"Woohoo!\", \"Car Dead\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288149,"user_id":null,"body":"bumps <- function(road){\n library(stringr)\n library(tidyverse)\n x <- str_count(road, pattern = \"n\")\n  case_when(x <= 15 ~ \"Woohoo!\",\n           TRUE ~ \"Car Dead\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288150,"user_id":null,"body":"bumps <- function(road){\n  roadArr <- strsplit(road,\"\")[[1]]\n  bumpArr <- roadArr[roadArr ==\"n\"]\n  if(length(bumpArr) <= 15){\n    return(\"Woohoo!\")\n  } else {\n    return(\"Car Dead\")\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288151,"user_id":null,"body":"library(stringr)\n\nbumps <- function(road){\n ifelse(str_count(road,\"n\") > 15, \"Car Dead\", \"Woohoo!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288152,"user_id":null,"body":"bumps <- function(road){\n  ifelse(stringr::str_count(road,'n') <= 15, 'Woohoo!', 'Car Dead')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288153,"user_id":null,"body":"bumps <- function(road){\n  ifelse(length(unlist(regmatches(road, gregexpr(\"n\", road)))) <= 15, \"Woohoo!\", \"Car Dead\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288154,"user_id":null,"body":"library(stringr)\nbumps <- function(road){\n if (str_count(road, \"n\") > 15){\n   return(\"Car Dead\")\n }else {\n   return(\"Woohoo!\")\n }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288155,"user_id":null,"body":"bumps <- function(road){\n ifelse(nchar(gsub(\"_\", \"\", road)) > 15, \"Car Dead\", \"Woohoo!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288156,"user_id":null,"body":"bumps <- function(road){\n  c(\"Woohoo!\", \"Car Dead\")[1 + (sum(strsplit(road, split='')[[1]] == 'n') > 15)] \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288157,"user_id":null,"body":"bumps <- function(road)\n{\n  \n  str <- strsplit(road, \"\")[[1]]\n  count = 0\n\n  for (i in str)\n  {\n    if (i == 'n')\n    {\n      count=count+1\n    }\n  }\n  if(count>15) return(\"Car Dead\")\n  else return(\"Woohoo!\")\n\n }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57ee4a67108d3fd9eb0000e7":[{"id":288158,"user_id":null,"body":"goose_filter <- function(birds){\n  geese <- c(\"African\", \"Roman Tufted\", \"Toulouse\", \"Pilgrim\", \"Steinbacher\")\n  return(birds[!(birds %in% geese)])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288159,"user_id":null,"body":"goose_filter <- function(birds){\n  geese = c(\"African\", \"Roman Tufted\", \"Toulouse\", \"Pilgrim\", \"Steinbacher\")\n  birds[!(birds %in% geese)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288160,"user_id":null,"body":"goose_filter <- function(birds){\n toRemove <- c(\"African\", \"Roman Tufted\", \"Toulouse\", \"Pilgrim\", \"Steinbacher\")\n  return(birds[!(birds %in% toRemove)])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288161,"user_id":null,"body":"goose_filter <- function(birds){\n \n  geese <- c(\"African\", \"Roman Tufted\", \"Toulouse\", \"Pilgrim\", \"Steinbacher\")\n  \n  resp <- match (geese, birds, nomatch = 0)\n  \n  if (sum(resp) == 0) return (birds)\n  \n  retorno <- c()\n  pos <- 1\n  \n  for (i in 1:length(birds)) {\n    \n    if (!(birds[i] %in% geese)) {\n      retorno [pos] <- birds[i]\n      pos <- pos + 1\n    }\n    \n  }\n    \n  \n  return(as.character(retorno))\n  \n  \n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288162,"user_id":null,"body":"goose_filter <- function(birds){\n  geese  <- c(\"African\", \"Roman Tufted\", \"Toulouse\", \"Pilgrim\", \"Steinbacher\")\n  \n  `%!in%` <- Negate(`%in%`)\n  \n  return(birds[birds %!in% geese])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288163,"user_id":null,"body":"goose_filter <- function(birds){\n  snacks <- c(\"African\", \"Roman Tufted\", \"Toulouse\", \"Pilgrim\", \"Steinbacher\")\n  ifelse(length(which(birds %in% snacks)) == 0 , return(birds) , return(birds[-(which(birds %in% snacks))]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288164,"user_id":null,"body":"geese = c(\"African\", \"Roman Tufted\", \"Toulouse\", \"Pilgrim\", \"Steinbacher\")\ngoose_filter <- function(birds){\n birds[!birds %in% geese]\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288165,"user_id":null,"body":"goose_filter <- function(birds){\n geese = c(\"African\", \"Roman Tufted\", \"Toulouse\", \"Pilgrim\", \"Steinbacher\")\n  x <- which(birds %in% geese)  \n  if(length(x) <= 0){\n    return(birds)\n  } else {\n    return(birds[-x])\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288166,"user_id":2352,"body":"goose_filter <- function(birds){\n  geese <- c(\"African\", \"Roman Tufted\", \"Toulouse\", \"Pilgrim\", \"Steinbacher\")\n  birds[which(!(birds%in%geese))]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288167,"user_id":null,"body":"goose_filter <- function(birds){\n  birds[! birds %in% c(\"African\", \"Roman Tufted\", \"Toulouse\", \"Pilgrim\", \"Steinbacher\")]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57f222ce69e09c3630000212":[{"id":288168,"user_id":null,"body":"well <- function(x){\n  if (sum(x == \"good\") > 2) {\n    \"I smell a series!\"\n  } else if (sum(x == \"good\") > 0) {\n    \"Publish!\"\n  } else {\n    \"Fail!\"\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288169,"user_id":null,"body":"well <- function(x){\n if (length(x[which(x == \"good\")]) == 1 || length(x[which(x == \"good\")]) == 2) {\n    \"Publish!\"\n  } else if (length(x[which(x == \"good\")]) > 1) {\n    \"I smell a series!\"\n  } else {\n    \"Fail!\"\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288170,"user_id":null,"body":"well <- function(x){\n  n <- sum(x==\"good\")\n  ifelse(n >0 & n <=2, \"Publish!\",ifelse(n>2,\"I smell a series!\",\"Fail!\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288171,"user_id":null,"body":"well <- function(x){\n ifelse(length(x[\"good\" == x]) == 0, \"Fail!\",\n       ifelse(length(x[\"good\" == x]) < 3, \"Publish!\", \"I smell a series!\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288172,"user_id":null,"body":"well <- function(x){\n  if(sum(x=='good')==0){\n    return('Fail!')}\n  else if (sum(x=='good') <= 2){\n    return('Publish!')}\n  else {\n    return('I smell a series!')\n  }\n}\n  ","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288173,"user_id":null,"body":"well <- function(x){\n n <- sum(x == \"good\")\n  if (n == 0){\n    return(\"Fail!\")\n  } else if (n <= 2){\n    return(\"Publish!\")\n  } else {\n    return('I smell a series!')\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288174,"user_id":null,"body":"well <- function(x){\n  count = 0\n  for (i in 1:length(x)) {\n    if (nchar(x[i]) == 4) {\n      count = count + 1\n    }\n  }\n  if (count > 2) {\n    return(\"I smell a series!\")\n  } else if (count > 0) {\n    return(\"Publish!\")\n  } else {\n    return(\"Fail!\")\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288175,"user_id":null,"body":"well <- function(x) {\n  count_good <- 0\n  for (i in x) {\n    if (i == 'good') {\n      count_good <- count_good + 1\n    }\n  }\n  if (count_good == 0) {\n    paste('Fail!')\n  } else if (count_good == 1 | count_good == 2) {\n    paste('Publish!')\n  } else {\n    paste('I smell a series!')\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288176,"user_id":null,"body":"well <- function(x){\n  ifelse( length(x[x=='good']) >= 1 & length(x[x=='good']) <= 2 \n        , 'Publish!', \n        ifelse(length(x[x=='good']) >= 3, 'I smell a series!','Fail!')\n        ) \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288177,"user_id":null,"body":"well <- function(x)\n{\n  count =0\n  for(i in x) if(i=='good') count=count+1\n  \n  if (count == 1 || count == 2) return(\"Publish!\")\n  if(count >2) return(\"I smell a series!\")\n  if(count==0) return('Fail!')  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57f24e6a18e9fad8eb000296":[{"id":288178,"user_id":421,"body":"how_much_i_love_you <- function(nbpetals){\n  c(\"not at all\", \"I love you\", \"a little\", \"a lot\", \"passionately\", \"madly\")[nbpetals %% 6 + 1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288179,"user_id":null,"body":"how_much_i_love_you <- function(nbpetals){\na <- nbpetals%%6\na = as.character(a)\n  print(a)\nx <- switch(\n  a,\n  \"1\" = \"I love you\",\n  \"2\" = \"a little\",\n  \"3\" = \"a lot\",\n  \"4\" = \"passionately\",\n  \"5\" = \"madly\",\n  \"0\" = \"not at all\"\n  \n) \n  print(x)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288180,"user_id":null,"body":"how_much_i_love_you <- function(n){\n  c(\"I love you\",\"a little\",\"a lot\",\"passionately\",\"madly\",\"not at all\")[(n-1)%%6+1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288181,"user_id":null,"body":"how_much_i_love_you <- function(nbpetals){\n  numb <- (nbpetals %% 6)\n  ifelse (numb == 0, numb <-6, numb)\n  say <- c(\"I love you\", \"a little\", \"a lot\", \"passionately\", \"madly\", \"not at all\")\n  say[numb]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288182,"user_id":null,"body":"how_much_i_love_you <- function(nbpetals) {\n  p <- c(\"I love you\", \"a little\", \"a lot\", \"passionately\", \"madly\", \"not at all\")\n  p[ifelse(nbpetals %% 6 == 0, 6, nbpetals %% 6)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288183,"user_id":null,"body":"how_much_i_love_you <- function(n){\n \n  \nstrings <- c(\"I love you\", \"a little\", \"a lot\", \"passionately\", \"madly\", \"not at all\")\nstrings[(n-1) %% 6 + 1]\n  \n\n  \n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288184,"user_id":null,"body":"how_much_i_love_you <- function(nbpetals){\n  if(nbpetals%%6==1){\n    return(\"I love you\")\n  }\n  if(nbpetals%%6==2){\n    return(\"a little\")\n  }\n  if(nbpetals%%6==3){\n    return(\"a lot\")\n  }\n  if(nbpetals%%6==4){\n    return(\"passionately\")\n  }\n  if(nbpetals%%6==5){\n    return(\"madly\")\n  }\n  if(nbpetals%%6==0){\n    return(\"not at all\")\n  }\n \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288185,"user_id":null,"body":"library(tidyverse)\nhow_much_i_love_you <- function(nbpetals){\ncase_when(\nnbpetals %% 6 ==0 ~ \"not at all\",\nnbpetals %% 6 ==1 ~ \"I love you\",\nnbpetals %% 6 ==2 ~ \"a little\",\nnbpetals %% 6 ==3 ~ \"a lot\",\nnbpetals %% 6 ==4 ~ \"passionately\",\nTRUE ~ \"madly\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288186,"user_id":null,"body":"how_much_i_love_you <- function(nbpetals){\nvector <- c(\"I love you\",\"a little\",\"a lot\",\"passionately\",\"madly\",\"not at all\")\nif (nbpetals%%6==0) return(tail(vector,1)) else\n  if (nbpetals>6) return(vector[nbpetals%%6]) else\nreturn(vector[nbpetals])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288187,"user_id":null,"body":"how_much_i_love_you <- function(nbpetals){\n  if ((nbpetals == 6) || (nbpetals%%6 == 0)) {\n    print (\"not at all\")\n  } else if ((nbpetals == 5) || ((nbpetals+1)%%6 == 0)) {\n    print (\"madly\")\n  } else if ((nbpetals == 4) || ((nbpetals+2)%%6 == 0)) {\n    print (\"passionately\")\n  } else if ((nbpetals == 3) || ((nbpetals+3)%%6 == 0)) {\n    print (\"a lot\")\n  } else if ((nbpetals == 2) || ((nbpetals-2)%%6 == 0)) {\n    print (\"a little\")\n  } else if ((nbpetals == 1) || ((nbpetals-1)%%6 == 0)) {\n    print (\"I love you\")\n  }\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57f759bb664021a30300007d":[{"id":288188,"user_id":527,"body":"switcheroo <- function(string) chartr('ab', 'ba', string)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288189,"user_id":421,"body":"switcheroo <- function(string){\n  chartr(old = \"ab\", new = \"ba\", string)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288190,"user_id":null,"body":"switcheroo <- function(string){\n  tolower(chartr(\"b\", \"A\", chartr(\"a\", \"B\", string)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288191,"user_id":null,"body":"switcheroo <- function(string){\n  x <- unlist(strsplit(string, split = \"\"))\n  x[x == \"a\"] <- \"d\" \n  x[x == \"b\"] <- \"a\"\n  x[x == \"d\"] <- \"b\"\n  paste0(x, collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288192,"user_id":null,"body":"switcheroo <- function(string) {\n  str <- unlist(strsplit(string, \"\"))\n  res <- NULL\n  for (i in 1:length(str)) {\n    if (str[i] == \"a\") {\n      res <- c(res, \"b\")\n    } else if (str[i] == \"b\") {\n      res <- c(res, \"a\")\n    } else {\n      res <- c(res, str[i])\n    }\n  }\n  return(paste(res, collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288193,"user_id":null,"body":"\n\nswitcheroo <- function(string){\n  string <- gsub(\"a\",\"z\", string) \n  string <- gsub(\"b\",\"a\", string) \n  string <- gsub(\"z\",\"b\", string) \n  return(string)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288194,"user_id":null,"body":"switcheroo <- function(string){\n  tmp = gsub('a', 't', string)\n  tmp = gsub('b', 'a', tmp)\n  gsub('t', 'b', tmp)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288195,"user_id":null,"body":"switcheroo <- function(string){\n  tolower(gsub('a','B',gsub('b','A',string)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288196,"user_id":null,"body":"switcheroo <- function(s){\n gsub(\"x\",\"b\",gsub(\"b\",\"a\",gsub(\"a\",\"x\",s)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288197,"user_id":null,"body":"switcheroo <- function(string){\n gsub(\"x\", \"b\", (gsub(\"b\", \"a\" , gsub(\"a\", \"x\", string))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57f780909f7e8e3183000078":[{"id":288198,"user_id":null,"body":"grow <- function(arr) {\n  prod(arr)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288199,"user_id":null,"body":"grow <- function(arr) {\n  Reduce('*', arr)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288200,"user_id":null,"body":"grow <- function(arr) {\n  total <- 1\n  for(x in arr) {\n    total <- total * x\n  }\n  return(total)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288201,"user_id":527,"body":"grow <- prod","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288202,"user_id":null,"body":"grow <- function(arr) {\n  if (length(arr) == 1) {\n    return(arr)\n  } else {\n    return(arr[1] * grow(arr[-1]))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288203,"user_id":null,"body":"grow <- function(arr) {\n  mult <- arr[1]\n  for (i in 2:length(arr)){\n    mult <- mult*arr[i]\n  }\n  return(mult)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288204,"user_id":null,"body":"grow <- function(arr) {\n  mult = 1\n  for (x in arr){\n    mult = mult * x\n  }\n  return(mult)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288205,"user_id":null,"body":"grow <- function(arr) {\n  # your code here\n  product <- 1\n  for(i in 1:length(arr)) { #Indexing in R-arrays start at 1 and goes to the length of the array!\n    product <- product * arr[i]\n    \n  }\n  return (product)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288206,"user_id":null,"body":"grow <- function(arr) {\n  for (i in 1:(length(arr)-1)){\n    arr[1] <- arr[1] * arr[2]\n    arr <- arr[-2]\n  }\n  arr[1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288207,"user_id":null,"body":"grow <- function(arr) {\n  # your code here\n  for(i in 2:length(arr)){\n    print(i)\n    arr[i] = arr[i]*arr[i-1]\n  }\n  return(arr[length(arr)])\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57f781872e3d8ca2a000007e":[{"id":288208,"user_id":149,"body":"maps = function(v) v * 2","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288209,"user_id":null,"body":"maps <- function(v) {\n  2*v\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288210,"user_id":null,"body":"require(\"purrr\")\nmaps <- function(v) {\nmap_dbl(v,function(x)x*2)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288211,"user_id":null,"body":"maps <- function(v) {\nreturn <- v*2\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288212,"user_id":null,"body":"maps <- function(v) {\nx= (lengths(list(v)))\nif (x==0){return (numeric())}\nelse{\nfor (i in 1:x){ v[i]<-v[i]*2}\nreturn (v)\n}}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288213,"user_id":null,"body":"maps <- function(v) {\n\nprint(v*2)\n\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288214,"user_id":null,"body":"maps <- function(v) {\n  v1 <- v\n  v2 <- v1*2\n  \n  return(v2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288215,"user_id":null,"body":"maps <- function(v) {\nas.vector(v)*2\n\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288216,"user_id":null,"body":"maps <- function(v) {\n  replace(v, 1:length(v), v*2)\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288217,"user_id":null,"body":"maps <- function(v) {\n  if (length(v)) {\n    sapply(v, function(x) 2 * x) \n  } else {\n    2 * v\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57f7b8271e3d9283300000b4":[{"id":288218,"user_id":null,"body":"even_or_odd <- function(s){\n  nos <- as.numeric(strsplit(s, \"\")[[1]])\n  evens <- nos[nos %% 2 == 0]\n  odds <- nos[!(nos %% 2 == 0)]\n  \n  if (sum(evens) > sum(odds)) return(\"Even is greater than Odd\")\n  else if (sum(odds) > sum(evens)) return(\"Odd is greater than Even\")\n  else return(\"Even and Odd are the same\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288219,"user_id":null,"body":"even_or_odd <- function(s){\n  num <- as.numeric(unlist(strsplit(s, \"\")))\n  s_even <- sum(num[num %% 2 == 0])\n  s_odd <- sum(num[num %% 2 == 1])\n  if (s_even > s_odd) {\n    return('Even is greater than Odd') \n   } else {\n     if (s_odd > s_even) {\n       return('Odd is greater than Even')\n     } else {\n       return('Even and Odd are the same')\n     }\n   }\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288220,"user_id":null,"body":"# Write Function\neven_or_odd <- function(s){\n    \n    # Split 's' to its single numerics\n    s_num <- as.numeric(strsplit(s, \"\")[[1]])\n    \n    # Get sums of even\/ odd digits\n    sum_even <- sum(s_num[s_num %% 2 == 0])\n    sum_odd  <- sum(s_num[s_num %% 2 != 0])\n    \n    # Return Result of comparison between\n    # 'sum_even' & 'sum_odd'\n    if (sum_even > sum_odd) return('Even is greater than Odd')\n    if (sum_even < sum_odd) return('Odd is greater than Even')\n    return('Even and Odd are the same')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288221,"user_id":3123,"body":"even_or_odd <- function(s){\n  s <- as.integer(strsplit(s, '')[[1]])\n  n <- 0\n  for(i in s) if(i%%2==0) n <- n+i\n  if(2*n==sum(s)) return('Even and Odd are the same')\n  if(2*n>sum(s)) return('Even is greater than Odd')\n  return('Odd is greater than Even')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288222,"user_id":null,"body":"even_or_odd <- function(s){\n  n=strsplit(s,split=\"\")\n  l=unlist(lapply(n, as.integer))\n  e=unlist(lapply(l,function(x) ifelse(x%%2==0,x,0)))\n  o=unlist(lapply(l,function(x) ifelse(x%%2==1,x,0)))\n  if(sum(e)>sum(o))\n    return(\"Even is greater than Odd\")\n  else if(sum(e)<sum(o))\n    return(\"Odd is greater than Even\")\n  else\n    return(\"Even and Odd are the same\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288223,"user_id":null,"body":"even_or_odd <- function(s){\ns <- as.numeric(strsplit(as.character(s),\"\")[[1]])\ny <- s[s%%2 == 0]\nx <- s[s%%2 != 0]\n if(sum(y) == sum(x)){\n   print(\"Even and Odd are the same\")\n }else if(sum(y) > sum(x)){\n   print(\"Even is greater than Odd\")\n }else{\n   print(\"Odd is greater than Even\")\n }\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288224,"user_id":null,"body":"even_or_odd <- function(s){\n  s <- as.numeric(unlist(strsplit(s, \"\")))\n  odd <- sum(s[s%%2 == 1])\n  even <- sum(s[s%%2 == 0])\n  if (odd > even){\n    return(\"Odd is greater than Even\")\n  } else if (odd < even){\n    return('Even is greater than Odd')\n  } else {\n    return('Even and Odd are the same')\n  }\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288225,"user_id":null,"body":"even_or_odd <- function(s){\n  x <- as.numeric(strsplit(as.character(s),\"\")[[1]])\n  if (sum(x[x%%2==0]) > sum(x[x%%2!=0])){\n    return ('Even is greater than Odd')\n  }else if(sum(x[x%%2==0]) < sum(x[x%%2!=0])){\n    return ('Odd is greater than Even')\n  }else{\n    return ('Even and Odd are the same')\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288226,"user_id":null,"body":"even_or_odd <- function(s){\n  \n  s<-as.numeric(strsplit(s, \"\")[[1]])\n  \n  if (sum(s[s%%2==0]) > sum(s[s%%2==1])){\n    return(\"Even is greater than Odd\")\n  }\n  else if (sum(s[s%%2==0]) == sum(s[s%%2==1])){\n    return (\"Even and Odd are the same\")\n  }\n  else{\n    return(\"Odd is greater than Even\")\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288227,"user_id":null,"body":"even_or_odd <- function(s){\n  t <- unlist(strsplit(s, split = \"\"))\n  even <- 0\n  odd <- 0\n  for (x in t)\n  {\n    temp <- as.numeric(x)\n    if (temp %% 2 == 0) {inc(even, temp)}\n    else {inc(odd, temp)}\n  }\n  if (even > odd) {return('Even is greater than Odd')}\n  else if (odd > even) {return('Odd is greater than Even')}\n  else {return('Even and Odd are the same')}\n}\n\ninc <- function(x, y)\n{\n  eval.parent(substitute(x <- x + y))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"57fe50d000d05166720000b1":[{"id":288228,"user_id":null,"body":"sabb <- function(s, val, happiness) {\n  # kata seems broken, in attempt -> random tests, s is a list of single\n  #  characters, expected results is (almost always) length(s) times \"Back...\"\n  if (length(s) > 1) {\n    return(rep(\"Back to your desk, boy.\", length(s)))\n  }\n  \n  # for \"real\" cases:\n  sab <- unique(unlist(strsplit(\"sabbatical\", \"\")))\n  str <- unlist(strsplit(tolower(s), \"\"))\n  score <- sum(str %in% sab) + val + happiness\n  \n  if (score > 22) {\n    return(\"Sabbatical! Boom!\")\n  } else {\n    return(\"Back to your desk, boy.\")\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288229,"user_id":null,"body":"sabb <- function(s, val, happiness){\n  ifelse(nchar(gsub(\"[^sabticl]\", \"\", s)) + val + happiness > 22, \n         \"Sabbatical! Boom!\",           # message if score > 22\n         \"Back to your desk, boy.\")     # message if score <= 22\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288230,"user_id":null,"body":"sabb <- function(s, val, happiness){\n  ifelse(nchar(gsub(\"[^sabbatical]\", \"\", s)) + val + happiness > 22, \n         \"Sabbatical! Boom!\",           # message if score > 22\n         \"Back to your desk, boy.\")     # message if score <= 22\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288231,"user_id":null,"body":"library(stringr)\nsabb <- function(s, val, happiness){\n  ifelse(str_count(tolower(s), '[abcilts]') + \n           val + happiness >22, 'Sabbatical! Boom!', 'Back to your desk, boy.')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288232,"user_id":null,"body":"sabb <- function(s, val, happiness){\n  w <- c('s', 'a', 'b', 't', 'i', 'c', 'l')\n  sabbcount <- function(x) {\n    t <- val + happiness + sum(unlist(strsplit(tolower(x),'')) %in% w)\n    ifelse(t > 22, \"Sabbatical! Boom!\", \"Back to your desk, boy.\")\n  }\n  if (length(s) == 1) {\n    sabbcount(s)\n  } else {\n    lapply(s, sabbcount) %>% unlist\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288233,"user_id":421,"body":"sabb <- function(s, val, happiness){\n  ifelse(stringr::str_count(tolower(s), \"[abcilts]\") + val + happiness > 22, \"Sabbatical! Boom!\", \"Back to your desk, boy.\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5805f0663f1f9c49be00011f":[{"id":288234,"user_id":421,"body":"present <- function(x, y){\n  if(x == \"badpresent\"){\n    'Take this back!'\n  } else if(x == \"dog\"){\n    paste(\"pass out from excitement\", y, \"times\")\n  } else if(x == 'crap' || x == 'empty'){\n    paste(sort(unlist(strsplit(x, \"\"))), collapse = \"\")\n  } else if(x == 'bang'){\n    toString(sum(mapply(function(a){utf8ToInt(a) - y}, x)))\n  } else{\n    paste(mapply(function(a){intToUtf8(utf8ToInt(a) + y)}, x), collapse = \"\")\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288235,"user_id":null,"body":"present <- function(x, y){\n  if (x == \"goodpresent\") return(intToUtf8(utf8ToInt(x) + y))\n  if (x %in% c(\"crap\",\"empty\")) return(intToUtf8(sort(utf8ToInt(x))))\n  if (x == \"bang\") return(toString(sum(utf8ToInt(x)-y)))\n  if (x == \"badpresent\") return(\"Take this back!\")\n  if (x == \"dog\") return(sprintf(\"pass out from excitement %s times\",y))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288236,"user_id":null,"body":"present <- function(x, y){\n  switch(\n    x,\n    \"badpresent\" = \"Take this back!\",\n    \"goodpresent\" = rawToChar(as.raw(as.integer(charToRaw(x)) + rep(y, nchar(x)))),    \n    \"bang\" = as.character(sum(as.integer(charToRaw(x)) - rep(y, nchar(x)))),\n    \"dog\" = sprintf(\"pass out from excitement %s times\", y),\n    paste0(sort(unlist(strsplit(x, split = \"\"))), collapse = \"\")\n  ) \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288237,"user_id":null,"body":"present <- function(x, y){\n  if (x == \"goodpresent\") return (intToUtf8((as.integer(charToRaw(x)) + y)))\n  if (x == \"crap\" || x == \"empty\") return (paste(sort(strsplit(x, split=\"\")[[1]]), collapse=\"\"))\n  if (x == \"bang\") return (as.character(sum(as.integer(charToRaw(x)) - y)))\n  if (x == \"badpresent\") return (\"Take this back!\")                               \n  if (x == \"dog\") return(paste(\"pass out from excitement\", y, \"times\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"580878d5d27b84b64c000b51":[{"id":288238,"user_id":421,"body":"sum_triangular_numbers <- function(n){\n  ifelse(n < 0, 0, n * (n + 1) * (n + 2) \/ 6)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288239,"user_id":null,"body":"sum_triangular_numbers <- function(n){\n  sum((1:n)*(2:(n+1)))\/2*(n>0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288240,"user_id":null,"body":"sum_triangular_numbers <- function(n){\n  if( n < 1) return(0)\n  a = c(1)\n  for( i in 2:n)\n    a[i] = a[i-1] + i\n  print(sum(a))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288241,"user_id":null,"body":"sum_triangular_numbers <- function(n){\n  if (n < 1) {\n    print(0)\n  } else {\n    sum = 0\n    partial_sum = 0\n    for (i in 1:n) {\n      partial_sum = partial_sum + i\n      sum = sum + partial_sum\n    }\n    print(sum)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288242,"user_id":168,"body":"sum_triangular_numbers <- function(n){\n  if (n < 1) {\n    0\n  } else {\n    n * (n + 1) * (n + 2) \/ 6\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288243,"user_id":null,"body":"sum_triangular_numbers <- function(n){\n  if (n<= 0){\n    return(0)\n  } else {\n    r <- 1:n\n    r <- sapply(r, function(x){return((x*(x+1))\/2)})\n    return(sum(r))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288244,"user_id":null,"body":"sum_triangular_numbers <- function(n){\n    i = 0\n    num = 0\n    ans = 0\n    while(i < n){\n        num = num + (i+1)\n        ans = c(ans, num)\n        i = i + 1\n    }\n    sum(ans) \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288245,"user_id":null,"body":"sum_triangular_numbers <- function(n){\n  if (n <= 0 ) 0\n  else\n  {\n    total <- c()\n    for(i in 1:n){\n    total[i] <- sum(1:i)\n  }\n    \n  return(sum(total))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288246,"user_id":null,"body":"sum_triangular_numbers <- function(n) {\n  res <- 0\n  resfin <- 0\n  for (i in 1:n) {\n    res <- res + i\n    resfin <- resfin + res\n  }\n  return(max(0, resfin))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288247,"user_id":null,"body":"sum_triangular_numbers <- function(n){\n  if (n <= 0){\n    sum_triangular_numbers <- 0\n  }else{\n  cur = 1\n  acc = 1\n  for (i in 2:n){\n    cur = cur + i\n    acc = acc + cur\n  }\n  sum_triangular_numbers <-acc \n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5808dcb8f0ed42ae34000031":[{"id":288248,"user_id":421,"body":"switch_it_up <- function(number){\n  c('Zero', \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\")[number + 1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288249,"user_id":null,"body":"switch_it_up <- function(number){\n  return(switch(number + 1, \"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288250,"user_id":null,"body":"switch_it_up <- function(number){\n  word <- c(\"Zero\",\"One\",\"Two\",\"Three\",\"Four\",\"Five\",\"Six\",\"Seven\",\"Eight\",\"Nine\")\n  word[number+1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288251,"user_id":null,"body":"switch_it_up <- function(number){\n  unname(setNames(c(\"Zero\",\"One\",\"Two\",\"Three\",\"Four\",\"Five\",\"Six\",\"Seven\",\"Eight\",\"Nine\"),0:9)[as.character(number)]\n)}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288252,"user_id":null,"body":"switch_it_up <- function(number){\n  number_vector <- c(\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\",\"Nine\")\n  number_vector[number + 1 ]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288253,"user_id":null,"body":"switch_it_up <- function(number){\n  if (number == 0) {\n    return(\"Zero\")\n  } else {\n    switch (number,\n            \"1\" = \"One\",\n            \"2\" = \"Two\",\n            \"3\" = \"Three\",\n            \"4\" = \"Four\",\n            \"5\" = \"Five\",\n            \"6\" = \"Six\",\n            \"7\" = \"Seven\",\n            \"8\" = \"Eight\",\n            \"9\" = \"Nine\",\n            \"0\" = \"Zero\")\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288254,"user_id":null,"body":"switch_it_ <- function(number){\n  x <- data.frame(n=c(0:9),w=c(\"Zero\",\"One\",\"Two\",\"Three\",\"Four\",\"Five\",\"Six\",\"Seven\",\"Eight\",\"Nine\"))\n  y <- x[number+1,2]\n  x[1]\n  \n}\n\nswitch_it_up <- function(n){if (n==0) {\"Zero\"}\n                                 else if (n==1) {\"One\"}\n                                   else if (n==2) {\"Two\"}\n                                     else if (n==3) {\"Three\"}\n                                       else if (n==4) {\"Four\"}\n                                         else if (n==5) {\"Five\"}\n                                           else if (n==6) {\"Six\"}\n                                             else if (n==7) {\"Seven\"}\n                                               else if (n==8) {\"Eight\"}\n                                                 else if (n==9) {\"Nine\"}\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288255,"user_id":null,"body":"switch_it_up <- function(number){\n  a <-c(\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\",\n      \"Seven\", \"Eight\", \"Nine\")\n  a[number +1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288256,"user_id":null,"body":"switch_it_up <- function(number){\n  print(number)\n  value<-switch(number + 1,\n         \"Zero\",\n         \"One\",\n         \"Two\",\n         \"Three\",\n         \"Four\",\n         \"Five\",\n         \"Six\",\n         \"Seven\",\n         \"Eight\",\n         \"Nine\")\n  print(value)\n}\n\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288257,"user_id":null,"body":"switch_it_up <- function(number){\n  nums <- c(\"Zero\",\"One\",\"Two\",\"Three\",\"Four\",\"Five\",\"Six\",\"Seven\",\"Eight\",\"Nine\")\n  nums[number + 1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"580a094553bd9ec5d800007d":[{"id":288258,"user_id":null,"body":"apple <- function(x){\n  ifelse(as.integer(x)**2>1000, \"It's hotter than the sun!!\" ,\"Help yourself to a honeycomb Yorkie for the glovebox.\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288259,"user_id":null,"body":"apple <- function(x){\n  x = strtoi(x)\n  if(x^2 > 1000){\"It's hotter than the sun!!\"}\n  else{\"Help yourself to a honeycomb Yorkie for the glovebox.\"}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288260,"user_id":null,"body":"apple <- function(x) {\n  ifelse(as.numeric(x)^2 > 1000,\n    return(\"It's hotter than the sun!!\"), \n    return(\"Help yourself to a honeycomb Yorkie for the glovebox.\")\n  )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288261,"user_id":null,"body":"apple <- function(x){\n  x <- as.numeric(x)\n  if (x**2 > 1000){\n    return(\"It's hotter than the sun!!\")\n  } else {\n    return(\"Help yourself to a honeycomb Yorkie for the glovebox.\")\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288262,"user_id":null,"body":"apple <- function(x){\n  x1<-as.numeric(x)\n  ifelse (x1^2>1000,  \"It's hotter than the sun!!\",\"Help yourself to a honeycomb Yorkie for the glovebox.\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288263,"user_id":null,"body":"apple <- function(x){\n  x <- as.numeric(x)\n  a <- \"It's hotter than the sun!!\"\n  b <- \"Help yourself to a honeycomb Yorkie for the glovebox.\"\n  if(x*x >=1000)(a)\n    else(b)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288264,"user_id":null,"body":"apple <- function(x){\n  ifelse(as.numeric(x)**2 > 1000, \"It's hotter than the sun!!\", \"Help yourself to a honeycomb Yorkie for the glovebox.\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288265,"user_id":null,"body":"apple <- function(x){\n  if (as.numeric(x)^2 > 1000) {\n    \"It's hotter than the sun!!\"\n  } else {\n    \"Help yourself to a honeycomb Yorkie for the glovebox.\"\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288266,"user_id":50,"body":"apple <- function(x){\n  ifelse(as.integer(x)^2<1000, \"Help yourself to a honeycomb Yorkie for the glovebox.\", \"It's hotter than the sun!!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288267,"user_id":null,"body":"apple <- function(x){\n  x <- as.numeric(x)\n  if(x^2 > 1000){return(\"It's hotter than the sun!!\")\n     }else{return(\"Help yourself to a honeycomb Yorkie for the glovebox.\")}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"580a41b6d6df740d6100030c":[{"id":288268,"user_id":null,"body":"alan <- function(vec){\n  \n  ifelse(all(c(\"Shattered Dreams Parkway\", \"Backstabbing Central\", \"Disappointment\", \"Rejection\")%in% vec),\n         \"Smell my cheese you mother!\",\n         \"No, seriously, run. You will miss it.\"\n  )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288269,"user_id":null,"body":"alan <- function(vec){\n  ifelse(all(tolower(c(\"Norwich\", \"Rejection\", \"Disappointment\", \"Backstabbing Central\", \"Shattered Dreams Parkway\", \"London\")) %in% tolower(vec)), 'Smell my cheese you mother!', 'No, seriously, run. You will miss it.') \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288270,"user_id":null,"body":"alan <- function(vec){\n  if (all(c('Rejection', 'Disappointment', 'Backstabbing Central', 'Shattered Dreams Parkway') %in% vec))\n    \"Smell my cheese you mother!\"\n  else\n    \"No, seriously, run. You will miss it.\"\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288271,"user_id":null,"body":"\nlibrary(plyr)\nstation <- c('Rejection', 'Disappointment', 'Backstabbing Central', 'Shattered Dreams Parkway')\n\nalan <- function(vec){\n  c <- c()\n  vec <- unique(vec)\n  for(i in vec){\n    if(i %in% station) c <- c(c,i) \n  }\n  if(is.null(c)==TRUE){ 'No, seriously, run. You will miss it.' } else\n  ifelse(sum(c %in% station) >= length(station), \"Smell my cheese you mother!\",\"No, seriously, run. You will miss it.\") \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288272,"user_id":null,"body":"alan <- function(vec){\n  \n  \n  stations <- c('Rejection', 'Disappointment', \n              'Backstabbing Central', 'Shattered Dreams Parkway')\n  \n  vec <- unique(vec)\n  \n  if(sum(vec %in% stations) >= length(stations)){\n    return(\"Smell my cheese you mother!\")\n  } else{\n    return(\"No, seriously, run. You will miss it.\")\n  }\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288273,"user_id":null,"body":"alan <- function(vec){\n  stations <- c('Rejection', 'Disappointment', 'Backstabbing Central', 'Shattered Dreams Parkway')\n  if(all(stations %in% vec)) \"Smell my cheese you mother!\"\n  else \"No, seriously, run. You will miss it.\"\n \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288274,"user_id":null,"body":"alan <- function(vec) {\n  stops <- c('Rejection', 'Disappointment', 'Backstabbing Central', 'Shattered Dreams Parkway')\n  ifelse(all(stops %in% vec), 'Smell my cheese you mother!', 'No, seriously, run. You will miss it.')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288275,"user_id":null,"body":"alan <- function(vec){\n  stations = c('Rejection', 'Disappointment', 'Backstabbing Central', 'Shattered Dreams Parkway')\n  if (all(stations %in% vec)) {\n    return ('Smell my cheese you mother!')\n  } else {\n    return ( 'No, seriously, run. You will miss it.')\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288276,"user_id":53,"body":"alan <- function(vec) {\n for (k in c(\"Rejection\", \"Disappointment\", \"Backstabbing Central\", \"Shattered Dreams Parkway\")) {\n   if (! (k %in% vec)) {\n     return(\"No, seriously, run. You will miss it.\")\n   }\n }\n\"Smell my cheese you mother!\"\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288277,"user_id":null,"body":"alan <- function(vec) {\n  stations = c(\"Rejection\",\"Disappointment\",\"Backstabbing Central\",\"Shattered Dreams Parkway\")\n  ifelse(all(stations %in% vec), \"Smell my cheese you mother!\", \"No, seriously, run. You will miss it.\") \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"58184387d14fc32f2b0012b2":[{"id":288278,"user_id":492,"body":"f <- function(x) {\n    x \/ (1 + sqrt(1 + x))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288279,"user_id":492,"body":"f <- function(x) {\n    x \/ (1 + sqrt(1 + x))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288280,"user_id":null,"body":"f <- function(x) {\n    n <- 1:10\n  a <- 0.5\n  print(sum(choose(a,n)*x**n))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288281,"user_id":null,"body":"f <- function(x) {\n  x\/2 - (x^2)\/8 + (x^3)\/16 - 5*(x^4)\/128 + 7*(x^5)\/256\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288282,"user_id":53,"body":"f <- function(x) {\n    x \/ 2 - x * x \/ 8 + x * x * x \/ 16 - 5 * x * x * x * x \/ 128\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288283,"user_id":669,"body":"f <- function(x) {\n  x \/ 2 - x^2 \/ 8\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288284,"user_id":null,"body":"f <- function(x) {\n  r <- polyroot(c(-x, 2, 1))\n  Re(r[1])\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288285,"user_id":null,"body":"\nf <- function(x) {\n  print(x)\n  i <- 0\n  res <- 0\n  coeff <- 1\n  repeat {\n    i <- i + 1\n    itr <- 1\/2-(i-1)\n    coeff <- coeff*itr\n    new <- coeff*(x^i)\/(factorial(i))\n    if ( abs(new) < 10^-32) break\n    res <- res + new \n  }\n  print(res)\n  return(res)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288286,"user_id":null,"body":"f <- function(x) {\n  res <- x\/(sqrt(1+x)+1)\n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288287,"user_id":null,"body":"f <- function(x) {\n    x\/2-x**2\/8# your code\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"581ee0db1bbdd04e010002fd":[{"id":288288,"user_id":492,"body":"trunc <- function(x, ..., prec = 0) base::floor(x * 10 ^ prec, ...) \/ 10 ^ prec\ninterp <- function(FUN, l, u , n) {\n    eps <- (u - l) \/ n\n    s <- seq(l, u - eps, eps)\n    sapply(s, function(x) trunc(FUN(x), prec = 2))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288289,"user_id":492,"body":"trunc <- function(x, ..., prec = 0) base::floor(x * 10 ^ prec, ...) \/ 10 ^ prec\ninterp <- function(FUN, l, u , n) {\n    eps <- (u - l) \/ n\n    s <- seq(l, u - eps, eps)\n    sapply(s, function(x) trunc(FUN(x), prec = 2))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288290,"user_id":null,"body":"interp <- function(FUN, l, u , n) {\n    # your code\n  d = (u-l)\/n\n  x = seq(from = l, to = u-d, length.out = n)\n  y = sapply(x, FUN)\n  floor(y*100)\/100\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288291,"user_id":null,"body":"interp <- function(FUN, l, u , n) {\n  y <- lapply(l+c(0:(n-1))*((u-l)\/n), FUN) %>% unlist\n  floor(y * 100)\/100\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288292,"user_id":null,"body":"interp <- function(FUN, l, u , n) {\n  floor(100 * head(FUN(seq(l, u, length.out = n + 1)), - 1)) \/ 100\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288293,"user_id":null,"body":"interp <- function(FUN, l, u , n)floor(100*FUN(seq(l,u,length.out=n+1)[1:n]))\/100","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288294,"user_id":669,"body":"interp <- function(FUN, l, u , n) {\n  x <- l + (u - l) \/ n * (0:(n-1))\n  \n  floor(FUN(x) * 100) \/ 100\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288295,"user_id":null,"body":"interp <- function(f, l, u , n) {\n  d <- (u - l) \/ n\n  x <- seq(from = l, by = d, length.out = n)\n  y <- f(x)\n  floor(y * 100) \/ 100\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288296,"user_id":null,"body":"interp <- function(FUN, l, u , n) {\n  d <- (u-l)\/n\n  res <- sapply(l + d*c(0:(n-1)), FUN)\n  return(floor(res*1e2)\/1e2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288297,"user_id":null,"body":"interp <- function(FUN, l, u , n) {\n    d=(u-l)\/n\n    sapply(seq(l,u-d,d), function(x){floor(FUN(x)*100)\/100})\n    \n    \n    # your code\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"582cb0224e56e068d800003c":[{"id":288298,"user_id":null,"body":"litres <- function(time) {\n  x = 0.5 * time;\n  floor(x);\n}\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288299,"user_id":null,"body":"litres <- function(time) {\n  floor(time * 0.5)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288300,"user_id":null,"body":"litres <- function(time) {\n  return(time %\/% 2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288301,"user_id":527,"body":"litres <- function(time) {\n  time %\/% 2\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288302,"user_id":null,"body":"litres <- function(time) {\n  liters <- time * 0.5\n  return(floor(liters))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288303,"user_id":null,"body":"litres <- function(time) {\n  liters <- floor(time * 0.5)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288304,"user_id":null,"body":"litres <- function(time) \n  {\n    (time * 0.5) %\/% 1\n  }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288305,"user_id":null,"body":"litres <- function(time) {\nfloor(floor(time)*0.5)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288306,"user_id":null,"body":"litres <- function(time) {\n  water = time*.5\n  water = as.integer(water)\n  return(water)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288307,"user_id":null,"body":"litres <- function(time) {\n  floor(time%\/%2)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"58356a94f8358058f30004b5":[{"id":288308,"user_id":null,"body":" fly_by <- function(lamps, drone){\n   sub(strrep(\"x\",nchar(drone)),strrep(\"o\",nchar(drone)),lamps)\n }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288309,"user_id":null,"body":"fly_by <- function(lamps, drone) {\n  os <- paste(replicate(nchar(drone), \"o\"), collapse = \"\")\n  xs <- paste(replicate(nchar(lamps) - nchar(drone), \"x\"), collapse = \"\")\n  return(paste0(os, xs))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288310,"user_id":null,"body":" fly_by <- function(lamps, drone){\n   l <- unlist(strsplit(lamps, \"\"))\n   l[1:nchar(drone)] <- \"o\"\n   return(paste0(l, collapse = \"\"))\n }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288311,"user_id":null,"body":" fly_by <- function(lamps, drone){\n   pos = unlist(gregexpr(\"T\", drone))[1]\n   gsub(paste(\"^x{\", pos, \"}\", sep=\"\"), strrep(\"o\", pos), lamps)\n }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288312,"user_id":null,"body":" fly_by <- function(lamps, drone){\n    paste0(paste(rep(\"o\", nchar(drone)), collapse = \"\"), paste(rep(\"x\", nchar(lamps) - nchar(drone)), collapse = \"\"))\n }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288313,"user_id":null,"body":" fly_by <- function(lamps, drone){\n   c <- paste(replicate(nchar(drone), 'o'), collapse = '')\n   d <- paste(c, paste(replicate(nchar(lamps)-nchar(drone), 'x'), collapse = ''), sep='')\n   return(d)\n }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288314,"user_id":null,"body":"fly_by <- function(lamps, drone){\n  return(paste(strrep(\"o\", nchar(drone)),strrep(\"x\", nchar(lamps)-nchar(drone)), sep = \"\"))        \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288315,"user_id":null,"body":" fly_by <- function(lamps, drone){\n   pos <- regexpr(\"T\", drone)\n    paste(paste(rep(\"o\", length.out=pos),collapse=\"\"),substr(lamps,1,(nchar(lamps)-pos)), sep=\"\")\n }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288316,"user_id":null,"body":"fly_by <- function(lamps, drone){\n  n <- nchar(drone)\n  substr(lamps, 1, n) <- chartr('x','o',substr(lamps, 1, n))\n  lamps\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288317,"user_id":null,"body":" fly_by <- function(lamps, drone){\n   lamps <- unlist(strsplit(lamps, \"\"))\n   drone <- unlist(strsplit(drone, \"\"))\n   drone[seq_len(length(drone))] <- \"o\"\n   lamps[seq_len(length(drone))] <- drone\n   paste(lamps, collapse = \"\")\n }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"583710ccaa6717322c000105":[{"id":288318,"user_id":null,"body":"simple_multiplication <- function(number) {\n  if(number %% 2 == 0) {number * 8} else {number * 9}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288319,"user_id":null,"body":"simple_multiplication <- function(number) {\n  number * (8 + (number %% 2))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288320,"user_id":null,"body":"library(tidyverse)\nsimple_multiplication =function(number) {\n  if_else(number%%2==0,number*8,number*9)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288321,"user_id":null,"body":"simple_multiplication <- function(number) {\nifelse(number %% 2 == 0, number*8, number*9)  # your code goes here\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288322,"user_id":null,"body":"simple_multiplication <- function(number) {\n  num <- number %% 2\n  if (num == 0) {\n    number * 8\n  } else {\n    number * 9\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288323,"user_id":null,"body":"simple_multiplication <- function(number) {\n  even <- number %% 2 == 0\n  out <- ifelse(even, number * 8, number * 9)\n  out\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288324,"user_id":1365,"body":"simple_multiplication <- function(a) {\n  a * ifelse(a - 2 * floor(a\/2), 9, 8)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288325,"user_id":null,"body":"simple_multiplication <- function(n) n*ifelse(n%%2,9,8)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288326,"user_id":null,"body":"simple_multiplication <- function(number) {\n  if(number %% 2 == 0)\n  (8*number)\n  else\n  (9*number)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288327,"user_id":1365,"body":"simple_multiplication <- function(a) {\n  a * ifelse(a - 2 * floor(a\/2), 9, 8)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5861d28f124b35723e00005e":[{"id":288328,"user_id":null,"body":"zero_fuel <- function(distance, mpg, fuel_left) {\n  fuel_left * mpg >= distance\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288329,"user_id":527,"body":"zero_fuel <- function(distance, mpg, fuel_left) distance <= fuel_left * mpg","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288330,"user_id":null,"body":"zero_fuel <- function(distance, mpg, fuel_left) {\n  miles_left = mpg*fuel_left\n  miles_left>=distance\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288331,"user_id":null,"body":"zero_fuel <- function(distance, mpg, fuel_left) {\n  drive <- mpg * fuel_left\n  if (distance<=drive){return(TRUE)}\n  else{return(FALSE)}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288332,"user_id":null,"body":"zero_fuel <- function(distance, mpg, fuel_left) {\n  distance_check <- mpg * fuel_left\n  if (distance_check >= distance) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288333,"user_id":null,"body":"zero_fuel <- function(fuel_left, mpg, distance) {\n  return (fuel_left <= mpg * distance);\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288334,"user_id":null,"body":"zero_fuel <- function(distance, mpg, fuel_left) {\n  if(distance <= (mpg*fuel_left))\n    return (1==1)\n  return (1==0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288335,"user_id":null,"body":"zero_fuel <- function(distance, mpg, fuel_left) {\n  library(dplyr)\n  case_when(distance <= mpg*fuel_left ~ TRUE,\n           TRUE ~ FALSE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288336,"user_id":null,"body":"zero_fuel <- function(distance, mpg, fuel_left) {\n  print(ifelse (fuel_left*mpg >= distance, TRUE,FALSE))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288337,"user_id":null,"body":"zero_fuel <- function(distance, mpg, fuel_left) {\n  \n  roda <- fuel_left * mpg\n  \n  if (roda >= distance) return (TRUE)\n  \n  return (FALSE)\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"58630e2ae88af44d2b0000ea":[{"id":288338,"user_id":null,"body":"is_divisible <- function(wall_length, pixel_size){\n  ! (wall_length %% pixel_size)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288339,"user_id":null,"body":"is_divisible <- function(w, p){\n  (!w%%p)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288340,"user_id":2334,"body":"is_divisible <- function(wall_length, pixel_size){\n  wall_length %% pixel_size == 0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288341,"user_id":null,"body":"is_divisible <- function(wall_length, pixel_size){\n  return(wall_length %% pixel_size == 0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288342,"user_id":null,"body":"is_divisible <- function(w, p){\n  ifelse(w%%p == 0, TRUE, FALSE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288343,"user_id":null,"body":"is_divisible <- function(wall_length, pixel_size){\n residuo <- wall_length%%pixel_size\n residuo==0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288344,"user_id":null,"body":"is_divisible <- function(w, p) !(w\/p)%%1","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288345,"user_id":null,"body":"is_divisible <- function(w, p){\n  ifelse(w %% p == 0, T,F)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288346,"user_id":null,"body":"is_divisible <- function(wall_length, pixel_size){\n  rep<-(wall_length %% pixel_size)==0\n    return(rep)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288347,"user_id":50,"body":"is_divisible <- function(a, b){\n  a %% b == 0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"58649884a1659ed6cb000072":[{"id":288348,"user_id":null,"body":"update_light <- function(current){\n  lights <- c('green', 'yellow', 'red')\n  lights[which(lights == current) %% 3 + 1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288349,"user_id":null,"body":"update_light <- function(current){\n   c(\"yellow\",\"red\",\"green\")[match(current,c(\"green\",\"yellow\",\"red\"))]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288350,"user_id":null,"body":"update_light <- function(current){\n  if (current == 'green'){\n    current <- 'yellow'\n  }else if(current == 'yellow'){\n    current <- 'red'\n  }else{\n    current <- 'green'\n  }\n    print(current)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288351,"user_id":null,"body":"update_light <- function(current){\n   if (current == \"green\"){\n     print(current)\n     print(\"yellow\")\n   } else if (current == \"yellow\"){\n     print(current)\n     print(\"red\")\n   } else if (current == \"red\"){\n     print(current)\n     print(\"green\")\n   }\n  \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288352,"user_id":null,"body":"update_light <- function(current){\n  switch(\n    current,\n    \"red\" = \"green\",\n    \"yellow\" = \"red\",\n    \"green\" = \"yellow\"\n  )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288353,"user_id":null,"body":"update_light <- function(current){\nif (current == 'green') {current <- 'yellow'}\nelse if (current == 'yellow') {current <- 'red'}\nelse if (current == 'red') {current <- 'green'}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288354,"user_id":null,"body":"update_light <- function(current){\n  if(current == \"green\")\n    print(\"yellow\")\n  else if(current == \"yellow\")\n    print(\"red\")\n  else if(current == \"red\")\n    print(\"green\")\n  else\n    print(\"Enter a valid traffic light input\")\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288355,"user_id":null,"body":"update_light <- function(current){\n  if (current == \"yellow\") \"red\"\n  else if (current == \"red\") \"green\"\n  else \"yellow\"\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288356,"user_id":null,"body":"update_light <- function(current){\n  if(current =='green'){\n    return('yellow')\n  }\n  if(current =='yellow'){\n    return('red')\n  }\n  if(current =='red'){\n    return('green')\n  }\n   \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288357,"user_id":null,"body":"update_light <- function(current){\n   state <- c(\"green\",\"yellow\",\"red\",\"green\")\n  return(state[match(current, state)[1]+1])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5868b2de442e3fb2bb000119":[{"id":288358,"user_id":492,"body":"numweight <- function(x) sum(floor(x \/ 10^(0:(nchar(x) - 1))) %% 10)\nclosest <- function(strng) {\n    if (strng == \"\") return(NULL)\n    l <- unlist(strsplit(strng, split = \" \"))\n    lg <- length(l)\n    a <- sapply(as.numeric(l), numweight)\n    b <- cbind(a, (1:lg), as.numeric(l))\n    c <- b[order(b[, \"a\"]), ]\n    dif <- c[-1, \"a\"] - c[-nrow(c), \"a\"]\n    u <- which.min(dif)\n    res <- c[c(u, u+1), ]\n    colnames(res) <- NULL\n    res\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-09 21:51:27"},{"id":288359,"user_id":null,"body":"closest <- function(strng) {\nprint(strng)\n  str <- unlist(strsplit(strng, \" \"))\n  if (length(str) == 0) return(NULL)\n  weights <- sapply(str, function(x) sum(as.numeric(unlist(strsplit(x, \"\")))), USE.NAMES=FALSE)\n  sortW <- sort(weights, decreasing = FALSE)\n  difW <- sortW[-1] - sortW[-length(str)]\n  minNum <- which.min(difW)\n  first <- which(rank(weights, ties.method=\"first\") == minNum)\n  second <- which(rank(weights, ties.method=\"first\") == minNum+1)\n  res <- rbind(c(weights[first], first, str[first]),c(weights[second], second, str[second]))\n  \n  return(res) \n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-09 21:51:28"},{"id":288360,"user_id":492,"body":"numweight <- function(x) sum(floor(x \/ 10^(0:(nchar(x) - 1))) %% 10)\nclosest <- function(strng) {\n    if (strng == \"\") return(NULL)\n    l <- unlist(strsplit(strng, split = \" \"))\n    lg <- length(l)\n    a <- sapply(as.numeric(l), numweight)\n    b <- cbind(a, (1:lg), as.numeric(l))\n    c <- b[order(b[, \"a\"]), ]\n    dif <- c[-1, \"a\"] - c[-nrow(c), \"a\"]\n    u <- which.min(dif)\n    res <- c[c(u, u+1), ]\n    colnames(res) <- NULL\n    res\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288361,"user_id":null,"body":"closest <- function(strng) {\ns_list <- strsplit(strng,split = \" \")[[1]]\nweight_list <- unlist(sapply(s_list, function(x){\n  weight <- sum(as.numeric(strsplit(x,split = \"\")[[1]]))\n  return(weight)\n}))\n\nif(length(weight_list) >=2){\n  i <- combn(weight_list,2)\n  cha <- which(min(abs(i[1,]-i[2,])) == abs(i[1,]-i[2,]))\n  First <- which(weight_list %in% i[1,cha])\n  Sceond <- which(weight_list %in% i[2,cha])\n  woyaode <- unique(c(First,Sceond))\n  weight_list <- weight_list[woyaode]\n  Finish <- sort(weight_list,decreasing = FALSE)\n  woyaode_1 <- as.numeric(c(as.numeric(Finish[1]),which(s_list %in% names(Finish[1])) , names(Finish[1])))\n  woyaode_2 <- as.numeric(c(as.numeric(Finish[2]),which(s_list %in% names(Finish[2])) , names(Finish[2])))\n  Finish_matrix <- c(woyaode_1,woyaode_2)\n  Finish_matrix <- matrix(Finish_matrix, nrow = 2, ncol= 3, byrow = TRUE)\n  return(Finish_matrix)\n}else{\n  return(NULL)\n}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288362,"user_id":null,"body":"closest <- function(strng) {\nstrng <- as.character(strng)\nif (nchar(strng)==0){\n    return(NULL)\n}else{\nstrng <- strsplit(strng,\" \")\nstrng1 <- as.vector(as.numeric(strng[[1]]))\nstrng <- strsplit(strng[[1]], \"\")\n#get weight per strng entry\n\n\nm <- matrix(nrow=length(strng1),ncol=3)\nm[,3] <- as.numeric(strng1)\nm[,2] <- c(1:(length(strng)))\n\nfor (j in c(1:length(strng))) {\nstrngSUM <- c(0)\nfor (i in c(1:length(strng[[j]]))) {\nstrngSUM <- strngSUM + as.numeric(strng[[j]][i])\nm[j,1] <- strngSUM\n}\n}\n\n#create distance matrix\nm2 <- matrix(nrow=length(strng1),ncol=length(strng1))\ncolnames(m2) <- c(m[,3])\nrownames(m2) <- c(m[,3])\n\nfor (j in c(1:length(m[,1]))) {\n    for (i in c(1:length(m[,1]))){\n        m2[i,j] <- as.numeric(abs(m[i,1]-m[j,1]))\n    }\n}\n\nfor (j in c(1:length(m[,1]))) {\n  for (i in c(1:length(m[,1]))){\n    if (j>=i){\n    m2[i,j] <- max(m2)\n    }\n  }\n}\n\nmin1 <- apply(m2,1,which.min)\nmin2 <- apply(m2,2,which.min)\n\nminrow <- c()\nfor (i in unique(min1)) {\n  if (c(\"TRUE\")%in%c(m2[,i]==min(m2))){\n      CHECK <- m2[m2[,i]==min(m2),]\n      minrow <- rbind(minrow,CHECK)\n  }\n}\nmincol <- c()\nfor (i in unique(min2)) {\n  if (c(\"TRUE\")%in%c(m2[i,]==min(m2))){\n      CHECK <- m2[,m2[i,]==min(m2)]\n      mincol <- cbind(mincol,CHECK)\n}\n}\n\n#dim of minrow beachten\nrowSEL <- c()\nfor (i in c(1:length(minrow[,1]))){\nrowSEL <- c(rowSEL,colnames(minrow)[minrow[i,]%in%c(min(m2))])\n}\ncolSEL <- c()\nfor (i in c(1:length(mincol[1,]))){\n  colSEL <- c(colSEL,c(rownames(mincol)[mincol[,i]%in%c(min(m2))]))\n}\nrowSEL <- unique(rowSEL)\ncolSEL <- unique(colSEL)\nm <- m[m[,3]%in%as.numeric(unique(c(rowSEL,colSEL))),]\nm <- m[order(m[,1]),]\n\nPARTNER <- m[1,3]\n\nPARTNER <- c(PARTNER,rownames(m2)[m2[rownames(m2)%in%c(PARTNER),]%in%c(min(m2))],colnames(m2)[m2[,colnames(m2)%in%c(PARTNER)]%in%c(min(m2))])\nm <- m[m[,3]%in%c(PARTNER),]\n\nif (length(m[,1])==2){\n  return(m)\n  }else{\n      if (m[2,1]==m[3,1]){\n          m <- m[m[,1]==m[2,1],]\n          m <- m[order(m[,2]),]\n          m <- m[1:2,]\n      }else{\n          m <- m[1:2,]\n      }\n   return(m)\n  }\n}\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288363,"user_id":null,"body":"get_weight <- function(x){\n  sum(as.integer(strsplit(x,\"\")[[1]]))\n}\n\n\nclosest <- function(strng) {\n  if(nchar(strng) == 0) return(NULL)\n  \n  nbs <- strsplit(strng,\" \")[[1]]\n\n  weights <- vapply(nbs, get_weight, integer(1L))\n  o <- order(weights)\n  ord_weights <- weights[o]\n  index_in_sorted <- which.min(diff(ord_weights))\n  \n  orig_nb1 <- names(ord_weights)[index_in_sorted]\n  orig_nb2 <- names(ord_weights)[index_in_sorted + 1]\n  \n  vec <- c(weights[orig_nb1], which(nbs == orig_nb1), orig_nb1,\n           weights[orig_nb2], which(nbs == orig_nb2), orig_nb2)\n\n  matrix(vec, nrow=2, byrow = TRUE)\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288364,"user_id":null,"body":"closest <- function(strng) {\n    if(strng == \"\")\n      return(NULL)\n    else{\n      str2 <- strsplit(strng, \" \")[[1]]\n      digitsum <- function(x) sum(floor(x \/ 10^(0:(nchar(x) - 1))) %% 10)\n      arr <- c()\n      for (s in str2){\n        arr <- c(arr,digitsum(as.numeric(s)))\n      }\n      arr2 <- sort(arr)\n      x <- arr2[1]\n      y <- arr2[2]\n      for (i in seq(2:length(arr2)-1)){\n        if(arr2[i+1]-arr2[i] < y-x){\n          x <- arr2[i]\n          y <- arr2[i+1]\n        }\n      }\n      posX <- which(arr == x)[[1]]\n      if (x == y)\n        posY <- which(arr == y)[[2]]\n      else\n        posY <- which(arr == y)[[1]]\n      return (matrix(c(x, posX, str2[posX], y, posY, str2[posY]),nrow = 2, ncol = 3, byrow = TRUE))\n    }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288365,"user_id":null,"body":"closest <- function(strng){\n  if(nchar(strng)==0) return(NULL)\n  nums <- strsplit(strng,\" \")[[1]]\n  w <- unlist(lapply(nums,function(x) sum(as.integer(strsplit(x,\"\")[[1]]))))\n  cmb <- expand.grid(n1=1:length(nums),n2=1:length(nums))\n  cmb <- cmb[cmb$n1 < cmb$n2,]\n  cmb$diff <- abs(w[cmb$n1]-w[cmb$n2])\n  cmb$w1 <- w[cmb$n1]\n  cmb$w2 <- w[cmb$n2]\n  cmb$val1 <- nums[cmb$n1]\n  cmb$val2 <- nums[cmb$n2]\n  c1 <- cmb[cmb$diff==min(cmb$diff),]\n  c2 <- c1[c1$w1+c1$w2==min(c1$w1+c1$w2),]\n  c3 <- c2[c2$n1+c2$n2==min(c2$n1+c2$n2),]\n  m <- matrix(as.integer(c(c3$w1,c3$n1,c3$val1,c3$w2,c3$n2,c3$val2)),nrow=2,byrow = TRUE)\n  ifelse(c3$w1>c3$w2 |(c3$w1==c3$w2 & c3$n1>c3$n2),return(m[nrow(m):1,]),return(m))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288366,"user_id":null,"body":"closest <- function(strng) {\n  if(nchar(strng)==0)return(NULL)\n  strng <- unlist(strsplit(strng,' '))\n  weight <- sapply(strng,function(x)sum(as.numeric(unlist(strsplit(x,'')))))\n  diffs <- abs(outer(weight,weight,'-'))\n  diag(diffs) <- max(diffs)+1\n  c <- which(diffs==min(diffs),arr.ind = T)\n  c_w <- matrix(weight[c],ncol=2)\n  c <- matrix(c[which.min(apply(c_w,1,sum)),],ncol=2)\n  c <- c[which.min(strng[c[,1]]),]\n  c <- matrix(as.numeric(c(weight[c[1:2]],c[1:2],strng[c[1:2]])),nrow=2)\n  c[order(c[,1],c[,2]),]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288367,"user_id":null,"body":"closest <- function(strng){\n  if(strng==\"\"){return(NULL)}\n  nums <- unlist(strsplit(strng, split=\" \"))\n  weights <- c()\n  for(weight in nums){\n    weights <- c(weights, sum(as.numeric(unlist(strsplit(weight, split=\"\")))))\n  }\n  differences <- c()\n  for(n in 1:length(weights)){\n    differences <- c(differences,abs(weights[n] - weights[-n]))\n  }\n  min <- min(differences)\n  pairs <- list()\n  counter <- 1\n  for(n in 1:length(weights)){\n    differences <- abs(weights[n] - weights)\n    for(m in 1:length(differences)){\n      if(differences[m] == min & m!=n){\n        #print(c(weights[n], weights[m]))\n        #print(c(n, m))\n        pairs[[counter]] <- c(weights[n], weights[m], n, m)\n        counter <- counter + 1\n      }\n    }\n  }\n  answer1 <- pairs[[2]]\n  for(n in pairs){\n    if(n[1] < answer1[1] & n[3] != n[4]){\n      answer1 <- n\n    }\n    if(n[3] < answer1[3] | n[4] < answer1[4] & n[3] <= answer1[3]){\n      answer1 <- n\n    }\n  }\n  answer2 <- c(answer1[1], answer1[3], as.numeric(nums[answer1[3]]), \n               answer1[2], answer1[4], as.numeric(nums[answer1[4]]))\n  return(matrix(answer2, nrow=2, ncol=3, byrow=TRUE))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"586dd26a69b6fd46dd0000c0":[{"id":288368,"user_id":421,"body":"my_first_interpreter <- function(code){\n  s <- \"\"\n  i = 0\n  for(x in strsplit(code, \"\")[[1]]){   \n    if(x == '+') i <- i + 1\n    if(x == '.') s <- paste0(s, intToUtf8(i %% 256))\n  }\n  s\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288369,"user_id":null,"body":"my_first_interpreter <- function(code){\n  # Make your esolang interpreter here\n  rawToChar(as.raw(cumsum(sapply(strsplit(gsub(\"[^+.]\", \"\", code), \"\\\\.\")[[1]], nchar)) %% 256))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288370,"user_id":null,"body":"my_first_interpreter <- function(code){\n  counter <- 0\n  xpld <- unlist(strsplit(code, \"\"))\n  interp <- c()\n  for (i in seq_along(xpld)) {\n    if (xpld[i] == \"+\") {\n      counter <- counter + 1\n      if (counter == 256) {\n        counter <- 0\n      }\n    } else if (xpld[i] == \".\") {\n      interp <- c(interp, intToUtf8(counter))\n    }\n  }\n  paste(interp, collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288371,"user_id":null,"body":"my_first_interpreter <- function(code){\n  x <- strsplit(gsub(\"[^+.]\", \"\", code), \"\\\\.\")[[1]]\n  y <- sapply(1:length(x), function(n) sum(nchar(x[1:n])) %% 256)\n  return(intToUtf8(y))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288372,"user_id":null,"body":"my_first_interpreter <- function(code) {\n  cell <- 0\n  output <- character(0)\n  for (c in unlist(strsplit(code, \"\"))) {\n    if (c == \"+\") {\n      cell <- (cell + 1) %% 256\n    } else if (c == \".\") {\n      output <- append(output, intToUtf8(cell))\n    }\n  }\n  paste(output, collapse=\"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288373,"user_id":null,"body":"\nmy_first_interpreter <- function(code){\n  code <- stringr::str_replace_all(code, '[^\\\\+\\\\.]', '')\n  numL <- nchar(unlist(strsplit(code, split= '\\\\.')))\n  numL <- cumsum(numL)\n  numL <- numL%%256\n  print(numL)\n  return( intToUtf8(numL))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288374,"user_id":53,"body":"my_first_interpreter <- function(code){\n  m <- 0\n  w <- ''\n  ls <- strsplit(code, \"\")[[1]]\n  for (c in ls) {\n    if (c == '+') {\n      m <- (m + 1) %% 256\n    } else if (c == '.') {\n      w <- paste(w, intToUtf8(m), sep=\"\")\n    }\n  }\n  w\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288375,"user_id":null,"body":"my_first_interpreter <- function(code){\n  clean_code <- gsub(\"[^.+]\", \"\", code)\n  mem <- 0\n  result <- c()\n  for (command in unlist(strsplit(clean_code, \"\"))) {\n    if(command == '+') {\n      mem <- (mem + 1) %% 256\n    } else {\n      result <- c(result, intToUtf8(mem))\n    }\n  }\n  paste0(result, collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288376,"user_id":null,"body":"my_first_interpreter <- function(code){\n  res <- ''\n  counter <- 0\n  for(i in unlist(strsplit(code,''))){\n    if(i == '+')counter <- (counter+1)%%256\n    if(i == '.')res <- paste0(res,intToUtf8(counter))\n  }\n  res\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288377,"user_id":null,"body":"my_first_interpreter <- function(code){\n    mem <- 0\n    res <- \"\"\n\n    for (i in 1:nchar(code)) {\n        x <- substring(code, i, i)\n        \n        if (x == \"+\") {\n            mem <- mem + 1\n            if (mem == 256) {\n                mem <- 0\n            }\n        }\n        else if (x == \".\") {\n            res <- paste0(res, intToUtf8(mem))\n        }\n    }\n    \n    return(res) \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5875b200d520904a04000003":[{"id":288378,"user_id":null,"body":"enough <- function(cap, on, wait){\n  return <- if(wait + on <= cap) 0 else (wait + on - cap)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288379,"user_id":null,"body":"enough <- function(cap, on, wait) {\n  ifelse(wait <= (cap-on), 0, wait - (cap-on))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288380,"user_id":527,"body":"enough <- function(cap, on, wait) max(on + wait - cap, 0)","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288381,"user_id":421,"body":"enough <- function(cap, on, wait){\n   ifelse(on + wait <= cap, 0, wait - cap + on)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288382,"user_id":null,"body":"enough <- function(cap, on, wait){\n  pmax(on+wait-cap,0)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288383,"user_id":null,"body":"enough <- function(cap, on, wait){\n  ifelse(cap-on >= wait, 0, abs(cap-on-wait))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288384,"user_id":null,"body":"enough <- function(cap, on, wait){\n  ifelse((cap-on)>wait,return(0),return(wait-(cap-on)))\n}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288385,"user_id":null,"body":"enough <- function(cap, on, wait){\n  if(on+wait < cap){\n    return(0)\n  }\n  else{\n    return(wait+on-cap)\n  }\n    \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288386,"user_id":null,"body":"enough <- function(cap, on, wait){\n  if((cap - on - wait) >= 0){\n    return(0)\n  }else{\n    return(-(cap - on - wait))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288387,"user_id":null,"body":"enough <- function(cap, on, wait){\n  if (cap>=(on+wait)) {print(0)} else\n   {print(-cap+on+wait)}\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5879f95892074d769f000272":[{"id":288388,"user_id":492,"body":"temps <- function(v0, slope, dTot) {\n  GRAVITY_ACC <- 9.81 * 3.6 * 60.0               # gravity acceleration\n  DRAG <- 60.0 * 0.3 \/ 3.6                       # force applied by air on the cyclist\n  DELTA_T <- 1.0 \/ 60.0                          # in minutes\n  D_WATTS <- 0.5                                 # power loss in Watts \/ minute\n  G_THRUST <- 60.0 * 3.6 * 3.6                   # acceleration due to biker's power\n  MASS <- 80.0                                   # biker's MASS\n  WATTS0 <- 225\n  t <- 0.         # time in minutes\n  d <- 0.0         # distance traveled in km\n  v <- v0          # initial speed km\/h\n  gamma <- 0.0     # acceleration in km\/h\/minute\n  watts <- WATTS0  # biker's power (watts at time t + DELTA_T is watts at time t - D_WATTS * DELTA_T)\n  slopeGravityAcc <- -GRAVITY_ACC * sin(atan(slope \/ 100.0))\n  while (d <= dTot) {\n  t <- t + DELTA_T\n  # new power\n  watts <- watts - D_WATTS * DELTA_T # tiredness\n  # earth gravity due to slope and DRAG due to air resistance\n  gamma <- slopeGravityAcc - DRAG * abs(v) * abs(v) \/ MASS\n  # acceleration due to biker's power\n  if ((watts > 0.0) && (v > 0.0))\n    gamma <- gamma + G_THRUST * watts \/ (v * MASS)\n  # acceleration too small -> acc = 0\n  if (abs(gamma) <= 1e-5)\n    gamma <- 0.0\n  else\n    v <- v + gamma * DELTA_T\n  # new distance\n  d <-  d + v  * DELTA_T \/ 60.0 # v in km\/h, DELTA_T in minutes\n  # speed too slow, John stops\n  if (v - 3.0 <= 1e-2)\n    return(-1)\n  }\n  round(t)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288389,"user_id":null,"body":"perc_slope_to_angle <- function(perc_slope) {\n  return(sin(atan(perc_slope\/100)))\n} \n\nacceleration <- function(curr_speed, curr_power, slope) {\n  gravity_acc <- -9.81 * 3.6 * 60.0\n  new_acc <- gravity_acc * perc_slope_to_angle(slope)\n  drag <- 60.0 * 0.3 \/ 3.6 \n  mass <- 80\n  new_acc <- new_acc - drag * abs(curr_speed)^2 \/ mass\n  thrust <- 60 * 3.6 * 3.6\n  new_acc <- new_acc + (thrust * curr_power) \/ (curr_speed * mass)\n  return(new_acc)\n}\n\ntemps <- function(speed, slope, dTot) {\n  distance <- 0\n  time <- 0\n  acc <- 0\n  power <- 225\n  delta <- 1\/60\n  while (distance < dTot) { # 1 iteration, 1 second\n    time <- time + delta\n    \n    acc <- acceleration(speed, power, slope)\n    if (abs(acc) <= 1e-05) {\n      acc <- 0\n    }\n    \n    power <- power - (0.5 * delta)\n    \n    speed <- speed + acc * delta\n    if ((speed - 3) <= 1e-02) {\n      return(-1)\n    }\n    distance <- distance + speed * (delta\/60)\n  }\n  \n  return(round(time))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288390,"user_id":669,"body":"temps <- function(v0, slope, dTot) {\n  GRAVITY_ACC <- 9.81 * 3.6 * 60.0\n  DRAG        <- 60.0 * 0.3 \/ 3.6\n  DELTA_T     <- 1.0 \/ 60.0\n  G_THRUST    <- 60 * 3.6 * 3.6\n  MASS        <- 80.0\n  WATTS0      <- 225.0\n  D_WATTS     <- 0.5\n\n  d <- 0\n  v <- v0\n  t <- 0\n  watts <- WATTS0\n\n  slope_rad <- atan(slope \/ 100)\n  \n  while (d < dTot && v > 3.0 + 1e-2) {\n    watts <- watts - D_WATTS * DELTA_T\n    \n    gamma1 <- -GRAVITY_ACC * sin(slope_rad)\n    gamma2 <- -DRAG * v^2 \/ MASS\n    gamma3 <- G_THRUST * watts \/ (v * MASS)\n    \n    if (watts <= 0 || v <= 0) {\n      gamma3 <- 0\n    }\n    \n    gamma <- gamma1 + gamma2 + gamma3\n\n    if (abs(gamma) <= 1e-5) {\n      gamma <- 0\n    }\n\n    v <- v + gamma * DELTA_T\n    d <- d + v * DELTA_T \/ 60\n    t <- t + DELTA_T\n  }\n  if (d >= dTot) round(t) else -1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288391,"user_id":null,"body":"temps <- function(v0, slope, dTot) {\n GRAVITY_ACC <- 9.81 * 3.6 * 60.0     # gravity acceleration\n  DRAG        <- 60.0 * 0.3 \/ 3.6      # force applied by air on the cyclist\n  DELTA_T     <- 1.0 \/ 60.0            # in minutes\n  G_THRUST    <- 60 * 3.6 * 3.6        # pedaling thrust\n  MASS        <- 80.0                  # biker's mass\n  WATTS0      <- 225.0                 # initial biker's power\n  D_WATTS     <- 0.5                   # loss of power at each deltaT\n  \n  #Parameters:\n  # dTot           distance to travel in km\n  # v0             initial speed km\/h\n  # double slope   scent in percentage (don't forget to divide by 100 when needed)\n  \n  # Variables:\n  #t            time\n  #gamma        total acceleration with its 3 components\n  #v            speed\n  #d            distance travelled\n  #watts        biker's power\n  #Note: watts at time t + DELTA_T is watts at time t minus D_WATTS * DELTA_T\n  \n  t <- 0\n  gamma <- 0\n  v <- v0\n  d <- 0\n  watts <- WATTS0\n  \n\n  \n  while (d < dTot){\n    #browser()\n    gammaGrav <- -GRAVITY_ACC * sin(atan(slope\/100))\n    gammaDrag <- -DRAG * abs(v) * abs(v) \/ MASS\n    if (watts > 0 & v > 0){\n      gammaThrust <- G_THRUST * watts \/ (v*MASS)\n    }\n    else{\n      gammaThrust <- 0\n    }\n    gamma <- gammaGrav + gammaDrag+ gammaThrust\n    if (abs(gamma) <= 1e-5){\n\n      gamma <- 0\n    }\n    v <- v + gamma*DELTA_T\n    if (v - 3.0 <= 1e-2){\n\n      return(-1)\n    }\n    watts <- watts - D_WATTS * DELTA_T\n    t <- t + DELTA_T\n    d <- d + v * DELTA_T \/ 60\n\n  }\n\n  return(round(t))\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288392,"user_id":null,"body":"temps <- function(v0, s, dt) {\n  \n  v <- v0 \/ 3.6\n  agx <- 9.81 * s \/ sqrt(10000 + s * s)\n  dt <- 1000 * dt\n  lim1 <- 3.01 \/ 3.6\n  lim2 <- 1e-5 \/ 216\n  \n  d <- 0\n  t <- 0L\n  a <- 0\n  \n  while(d < dt) {\n    t <- t + 1L\n    p <- 225 - t \/ 120\n    v <- v + a\n    if(v <= lim1) return(-1)\n    d <- d + v\n    a <- (p \/ (80 * v)) - (0.3 * v * v \/ 80) - agx\n    if(abs(a) < lim2) a <- 0\n  }\n  \n  round(t \/ 60)\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288393,"user_id":null,"body":"temps <- function(v0, slope, dTot) {\n  GRAVITY_ACC <- 9.81 * 3.6 * 60.0                      \n  DRAG <- 60.0 * 0.3 \/ 3.6                        \n  DELTA_T <- 1.0 \/ 60.0                               \n  G_THRUST <- 60 * 3.6 * 3.6                           \n  MASS <- 80.0                                     \n  WATTS0 <- 225.0                                    \n  D_WATTS <-0.5 \n  \n  tcnt <- 0\n  acc <- 0\n  gravity_acc <- GRAVITY_ACC*sin(atan(slope\/100))\n  v <- v0\n  d <- 0\n  w <- WATTS0\n  repeat {\n    if (d > dTot) return(round(tcnt*DELTA_T))\n    if (v - 3 < 1e-2) return(-1)\n    if (abs(acc) <= 1e-5) acc <- 0\n    \n    vt <- v + acc*DELTA_T\n    dt <- d + v*DELTA_T\/60\n    wt <- w - D_WATTS*DELTA_T\n    acct <- w*G_THRUST\/(MASS*vt) - DRAG*vt**2\/MASS - gravity_acc\n\n    v <- vt\n    d <- dt\n    w <- wt\n    acc <- acct\n    \n    tcnt <- tcnt + 1\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288394,"user_id":null,"body":"temps <- function(v0, slope, dTot) {\n  GRAVITY_ACC <- 9.81 * 3.6 * 60.0\n  DRAG <- 60.0*0.3\/3.6\n  DELTA_T <- 1.0\/60.0\n  G_THRUST <- 60*3.6*3.6\n  MASS <- 80\n  WATTS0 <- 225\n  D_WATTS <- 0.5\n  \n  watts <- WATTS0\n  t <- 0\n  d <- 0\n  v <- v0\n  gamma <- -1*GRAVITY_ACC*sin(atan(slope\/100.0)) - (DRAG*abs(v)*abs(v)\/MASS) + (G_THRUST * watts\/(v*MASS))\n  \n  while (d < dTot){\n    t <- t + DELTA_T\n    watts <- watts - D_WATTS*DELTA_T\n    \n    gamma <- -1*GRAVITY_ACC*sin(atan(slope\/100.0)) - (DRAG*abs(v)*abs(v)\/MASS) + (G_THRUST*watts\/(v*MASS))\n    if (abs(gamma) < 1e-5){\n      gamma <- 0\n    }\n    \n    v <- v + gamma*DELTA_T\n    d <- d + v*DELTA_T\/60.0\n    \n    if (v - 3 <= 0.01){\n      return(-1)\n    }\n  }\n  \n  return(round(t))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288395,"user_id":null,"body":"GRAVITY_ACC = 9.81 * 3.6 * 60.0  #\/\/ gravity acceleration\nDRAG        = 60.0 * 0.3 \/ 3.6   #\/\/ force applied by air on the cyclist\nDELTA_T     = 1.0 \/ 60.0         #\/\/ in minutes\nG_THRUST    = 60 * 3.6 * 3.6     #\/\/ pedaling thrust\nMASS        = 80.0               #\/\/ biker's mass\nWATTS0      = 225.0              #\/\/ initial biker's power\nD_WATTS     = 0.5                #\/\/ loss of power at each deltaT\n\ntemps <- function(v0, slope, dTot) {\n  print(c(v0,slope))\n  t = 0\n  v = v0\n  gamma = 0\n  d = 0\n  watts = WATTS0\n  while (d<dTot){\n    if (v-3.0 < 1e-2) return (-1)\n    \n     gamma = - GRAVITY_ACC * sin(atan(slope\/100)) +\n      - DRAG * abs(v) * abs(v) \/ MASS +\n      + G_THRUST * watts \/ (v * MASS)\n    if (abs(gamma) <= 1e-5) gamma = 0\n     watts = watts - D_WATTS * DELTA_T \n\n \n     \n    v = v + gamma * DELTA_T\n    d = d + v * DELTA_T \/ 60.0\n    t = t + DELTA_T\n  }\n  print(t)\n  return (round(t))\n\n\n   # your code\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288396,"user_id":null,"body":"temps <- function(v0, slope, dTot) {\n  # v0 = 30; slope = 5; dTot = 30\n  GRAVITY_ACC <- 9.81 * 3.6 * 60.0 * slope \/ sqrt(10000 + slope * slope)\n  DRAG        <- 60.0 * 0.3 \/ 3.6\n  G_THRUST    <- 60 * 3.6 * 3.6\n  MASS        <- 80.0\n  WATTS0      <- 225.0\n  time <- 0\n  while(dTot > 0) {\n    time <- time + 1\n    gamma <- - GRAVITY_ACC - DRAG * v0 * v0 \/ MASS + G_THRUST * WATTS0 \/ v0 \/ MASS\n    if(abs(gamma) <= 1e-5) gamma <- 0\n    v0 <- v0 + gamma \/ 60\n    if(v0 <= 3.01) return(-1)\n    dTot <- dTot - v0 \/ 3600\n    WATTS0 <- WATTS0 - 1 \/ 120\n  }\n  return(round(time \/ 60))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"58841cb52a077503c4000015":[{"id":288397,"user_id":null,"body":"circle_of_numbers <- function(n, first_number) {\n  (first_number + n \/ 2) %% n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288398,"user_id":null,"body":"circle_of_numbers <- function(n, fn) {\n  m <- n\/2\n  if (fn == m){\n    return(0)\n  } else if (fn < m){\n    return(fn+m)\n  } else {\n    return(fn-m)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288399,"user_id":null,"body":"circle_of_numbers <- function(n, first_number) {\n  (n\/2 + first_number) %% n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288400,"user_id":null,"body":"circle_of_numbers <- function(n, first_number) {\n b=n\/2\n  if (first_number >= b){\n   a=first_number-b\n }else\n   {a=first_number+b}\n   print (a)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288401,"user_id":null,"body":"circle_of_numbers <- function(n, first_number) {\n  if(first_number==n\/2) 0\n  else if (first_number>n\/2)  first_number-n\/2\n  else first_number+n\/2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288402,"user_id":null,"body":"circle_of_numbers <- function(n, first_number) {\n  if (first_number >= n %\/% 2) {\n    first_number - n %\/% 2\n  } else {\n    first_number + n %\/% 2\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288403,"user_id":null,"body":"circle_of_numbers <- function(n, first) {\n  half = as.integer(n\/2)\n  ifelse(half > first, first + half, first - half)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288404,"user_id":null,"body":"circle_of_numbers <- function(n, first_number) {\n  ((n\/2 + first_number) - (first_number > n\/2) * n) %% n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288405,"user_id":421,"body":"circle_of_numbers <- function(n, first_number) {\n  if(first_number > n \/ 2){\n    first_number - n \/ 2\n  } else if(first_number == n \/ 2){\n    0\n  } else{\n    n \/ 2 + first_number\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288406,"user_id":null,"body":"circle_of_numbers <- function(n, first_number) {\n  if(first_number>= n\/2){\n    return(first_number-n\/2)\n  } else {\n    return(first_number+n\/2)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"588422ba4e8efb583d00007d":[{"id":288407,"user_id":null,"body":"late_ride <- function(n) {\n  \n  hr <- floor(n \/ 60)\n  min <- n %% 60\n\n  comb <- paste(hr,min, sep='')\n\n  spl <- (strsplit(comb, ''))[[1]]\n\n  sum(as.integer(spl)) \n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288408,"user_id":1015,"body":"late_ride <- function(n) {\n  return(sum(as.numeric(unlist(strsplit(paste(n %\/% 60, n %% 60, sep=\"\"), \"\")))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288409,"user_id":645,"body":"late_ride <- function(n) Reduce('+', Map(as.integer, strsplit(paste0(floor(n \/ 60), n %% 60), \"\")[[1]]))","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288410,"user_id":null,"body":"late_ride <- function(n) {\n  n %\/%60%\/%10 + n %\/%60%%10 + n %%60%\/%10 + n %%60%%10\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288411,"user_id":null,"body":"late_ride <- function(n) {\n  a <- c(n %\/% 60, n %% 60)\n  sum(a %% 10 + a %\/% 10)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288412,"user_id":null,"body":"late_ride <- function(n) {\n  sum(digits(n %% 60), digits(n %\/% 60))\n}\ndigits <- function(x) {\n    sum(floor(x \/ 10^(0:(nchar(x) - 1))) %% 10)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288413,"user_id":null,"body":"late_ride <- function(n) {\n  time <-paste(floor(n\/60), n%%60,sep=\"\")\n  sum(as.numeric(strsplit(time,split=\"\")[[1]]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288414,"user_id":492,"body":"late_ride <- function(n) {\n  return (n%\/%600 + n%\/%60%%10 + n%%60%\/%10 + n%%10)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288415,"user_id":null,"body":"late_ride <- function(n) {\n  h <- n %\/% 60\n  m <- n %% 60\n  h %\/% 10 + h %% 10 + m %\/% 10 + m %% 10\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288416,"user_id":null,"body":"late_ride <- function(n) {\n  sum(as.numeric(unlist(strsplit(as.character(n %% 60), split = '')))) + sum(as.numeric(unlist(strsplit(as.character(n %\/% 60), split = ''))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5887a6fe0cfe64850800161c":[{"id":288417,"user_id":421,"body":"area_largest_square <- function(r){\n  r * r * 2\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288418,"user_id":null,"body":"area_largest_square <- function(r){\n  return((sqrt(2)*r)**2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288419,"user_id":null,"body":"area_largest_square <- function(r)\n{\n  area = (2*r)**2\/2\n  return (area)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288420,"user_id":null,"body":"area_largest_square <- function(r){\n  r^2*2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288421,"user_id":null,"body":"area_largest_square <- function(r){\n  # a^2 + a^2 = (2*r)^2\n  2*r^2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288422,"user_id":null,"body":"area_largest_square <- function(r){\n  side <- (r^2 + r^2)^0.5\n  side * side\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288423,"user_id":null,"body":"area_largest_square <- function(r){\n  (r**2)*2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288424,"user_id":492,"body":"area_largest_square <- function(r){\n  return (2 * r * r)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288425,"user_id":527,"body":"area_largest_square <- function(r) 2 * r^2","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288426,"user_id":53,"body":"area_largest_square <- function(r){\n  2*r**2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"588809279ab1e0e17700002e":[{"id":288427,"user_id":null,"body":"most_frequent_digit_sum <- function(n){\n  lst <- c(n)\n  sx <- c()\n  while (n > 0) {\n    sd <- sum_digits(n)\n    n <- n - sd \n    lst <- c(lst, n)\n    sx <- c(sx, sd)\n  }\n  return(max(as.numeric(names(which(table(sx) == max(table(sx)))))))\n}\n\nsum_digits <- function (n) sum(as.numeric(unlist(strsplit(as.character(n), split = \"\"))))","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288428,"user_id":null,"body":"library(stringi)\nlibrary(stringr)\n\nsum_all <- function(x){\n  x <- str_split(x, \"\", simplify = T)\n  return(sum(as.numeric(x)))\n}\n\nmost_frequent_digit_sum <- function(n){\n  res <- NULL\n  while (n >0){\n    tot <- sum_all(n)\n    n <- n - tot\n    res <- c(res, tot)\n  }\n  a <- as.data.frame(table(res), stringsAsFactors = F)\n  a <- a[a$Freq == max(a$Freq),]\n  p <- a[a$res == max(a$res),]\n  p <- as.numeric(p[1])\n  print(p)\n  return(p)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288429,"user_id":null,"body":"most_frequent_digit_sum <- function(n){\n  res <- c()\n  while(TRUE){\n    s <- sum(as.integer(strsplit(as.character(n),\"\")[[1]]))\n    n <- n-s\n    res <- c(res,s)\n    if(n==0){\n      break\n    }\n  }\n  res<-table(res)\n  as.integer(sort(names(res[res==max(res)]),decreasing=TRUE)[1])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288430,"user_id":null,"body":"most_frequent_digit_sum <- function(n){\n  res <- c()\n  while (n != 0) {\n    res <- c(res, sum(as.numeric(unlist(strsplit(as.character(n), split = \"\")))))\n    n <- n - (sum(as.numeric(unlist(strsplit(as.character(n), split = \"\")))))\n  }\n  as.numeric(tail(names(sort(table(res))), 1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288431,"user_id":null,"body":"step <- function(nn){\n  nn - ss(nn)\n}\nss <- function(num){\n  sum(as.numeric(unlist(strsplit(as.character(num), ''))))\n}\nmost_frequent_digit_sum <- function(n){\n  print(n)\n  x <- n\n  seq1 <- n\n  while(x > 0){\n    x <- step(x)\n    seq1 <- c(seq1, x)\n  }\n  seq2 <- sapply(seq1, ss)\n  tmp <- hist(seq2,seq(min(seq2), max(seq2),1), plot = F)\n  return(rev(tmp$breaks)[which.max(rev(tmp$counts))])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288432,"user_id":669,"body":"most_frequent_digit_sum <- function(n) {\n  s <- function(m) sum(as.numeric(strsplit(toString(m), \"\")[[1]]))\n\n  v <- n\n  while (v[1] > 0) {\n    v <- c(v[1] - s(v[1]), v)\n  }\n  v <- sapply(v, s)\n  \n  u <- sort(unique(v), decreasing = TRUE)\n  u[which.max(tabulate(match(v, u)))]\n} ","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288433,"user_id":null,"body":"# There is not built-in function for mode in R. WHY?\nMode <- function(x) {\n  ux <- unique(x)\n  ux[which.max(tabulate(match(x, ux)))]\n}\n\nsum_of_digits <- function(n){\n  digits <- strsplit(as.character(n), split = \"\")[[1]]\n  sum(as.numeric(digits))\n}\n\nstep <- function(n){\n  result <- c()\n  while(n > 0){\n    digits_sum <- sum_of_digits(n)\n    result <- c(result, n)\n    n <- n - digits_sum\n  }\n  return(result)\n}\n\nmost_frequent_digit_sum <- function(n){\n  result <- n %>% step %>% sapply(., sum_of_digits) %>% sort(., decreasing = TRUE) %>% Mode\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288434,"user_id":null,"body":"library(tidyverse)\n\nmost_frequent_digit_sum <- function(x) {\n  # Returns an integer value of the most common value of s(x)\n  #\n  # Args:\n  #  x: a numeric value, an integer >= 1\n  \n  # Create a function to find the sum of the digits\n  sumDigs <- function(x) {\n    xchr <- as.character(x)\n    chars <- strsplit(xchr, \"\")[[1]]\n    digs <- as.integer(chars)\n    sum(digs)\n  }\n  \n  # Convert the input to integer, find maximum number of iterations needed (n)\n  x <- as.integer(x)\n  n <- (x %\/% 9L) + 1L\n  \n  # Create vectors to hold loop output, store first value, setup loop index\n  sx <- integer(n)\n  fx <- integer(n)\n  fx[1] <- x\n  i <- 1L\n  \n  # Create a loop to calculate values in the series and s(x), break when 0\n  repeat {\n    i <- i + 1L\n    sx[i - 1] <- sumDigs(fx[i - 1])\n    fx[i] <- fx[i - 1] - sx[i - 1]\n    if(fx[i] == 0L) break\n  }\n  \n  # Store final value, subset sx, count occurrances, sort by count and value\n  sx[i] <- 0L\n  res <- sx[1:i] %>%\n    enframe() %>%\n    group_by(value) %>%\n    summarize(count = n()) %>%\n    arrange(desc(count), desc(value))\n  \n  # Return the value that occurs most, break ties by taking maximum value\n  res$value[1]\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288435,"user_id":null,"body":"s <- function(n) {\n  sum(as.integer(unlist(strsplit(as.character(n),split = \"\"))))\n}\n  \nmost_frequent_digit_sum <- function(n){\n  v <- n\n  s <- c()\n  while (tail(v,1) >0) {\n    s <- c(s,s(tail(v,1)))\n    v <- c(v, tail(v,1)-s(tail(v,1)))\n  }\n  q <- table(s)\n  as.integer(names(q[order(q,as.integer(names(q)),decreasing = TRUE)]))[1]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288436,"user_id":null,"body":"step = function(n){\n n - sum(as.numeric(unlist(strsplit(as.character(n),\"\"))))\n} \n\nmost_frequent_digit_sum <- function(n){\n  tmp <-n\n  while(n!=0){\n    n <- step(n)\n    tmp <- c(tmp,n)\n    }\n  tab = sort(table(diff(rev(tmp))))\n  as.numeric(names(tab))[length(tab)]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"58941fec8afa3618c9000184":[{"id":288437,"user_id":null,"body":"growing_plant <- function(up, down, h) {\n   max(ceiling((h - down) \/ (up - down)),1)\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288438,"user_id":null,"body":"growing_plant <- function(up_speed, down_speed, height) {\n    if (height <= up_speed) return(1)\n    days = (height - up_speed) %\/% ( up_speed - down_speed) + 1 + 1 * ((height - up_speed) %% ( up_speed - down_speed) != 0)\n    return(days)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288439,"user_id":null,"body":"growing_plant <- function(up_speed, down_speed, height) {\n   max((height - up_speed - 1) %\/% (up_speed - down_speed) + 1, 0) + 1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288440,"user_id":null,"body":"growing_plant <- function(up_speed, down_speed, height) {\n  if(up_speed >= height) {\n    return(1)\n  }\n  current_height <- 0\n  days <- 0\n  while(current_height < height) {\n    days = days + 1\n    current_height <- current_height + up_speed\n    if(current_height >= height) {\n      return(days)\n    }\n    current_height <- current_height - down_speed\n    print(current_height)\n  }\n  return(days)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288441,"user_id":null,"body":"growing_plant <- function(up_speed, down_speed, desired_height) {\n  height <- up_speed\n  day <- 1\n  while(height < desired_height) {\n    height <- height - down_speed + up_speed\n    day <- day + 1\n  }\n  day\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288442,"user_id":50,"body":"growing_plant <- function(u, d, m) {\n  max(c(1, ceiling((m - d) \/ (u - d))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288443,"user_id":null,"body":"growing_plant <- function(up_speed, down_speed, height) {\n  day <-1\n  init <-0\n  while(init < height){\n    init <-init + up_speed\n    if (init < height){\n      init <-init - down_speed}\n    else\n      break\n    day <-day+1\n  }\nreturn(day)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288444,"user_id":53,"body":"growing_plant <- function(u, d, m) {\n max(1, ceiling((m - d) \/ (u - d)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288445,"user_id":null,"body":"growing_plant <- function(up_speed, down_speed, height) {\n  # (day-1) * up + up - (day-1) * do >= h\n  # (day-1) * (up - do) >= h - up\n  # day >= (h - up) \/ (up - do) + 1\n  ceiling(max(0,(height - up_speed)\/(up_speed - down_speed)) + 1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288446,"user_id":421,"body":"growing_plant <- function(up_speed, down_speed, height) {\n  initial <- up_speed\n  count <- 1\n  while(initial < height){\n    initial <- initial + up_speed\n    initial <- initial - down_speed\n    count <- count + 1\n  }\n  count\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"589519d1f0902e01af000054":[{"id":288447,"user_id":421,"body":"perimeter_sequence <- function(a, n){\n  a * n * 4\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288448,"user_id":null,"body":"perimeter_sequence <- function(a, n){\n return(a*n*4)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288449,"user_id":128,"body":"perimeter_sequence <- function(a, n){\n           4*n*a\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288450,"user_id":null,"body":"perimeter_sequence <- function(...){\n prod(...)*4\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288451,"user_id":53,"body":"perimeter_sequence <- function(a, n){\n a*4*n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288452,"user_id":50,"body":"perimeter_sequence <- function(a, n){\n  4 * a * n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5899dc03bc95b1bf1b0000ad":[{"id":288453,"user_id":421,"body":"invert <- function(vec){\n  -vec\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288454,"user_id":null,"body":"invert <- function(vec){\n return(-1*vec)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288455,"user_id":null,"body":"invert <- function(vec){\n vec <- 0 - vec\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288456,"user_id":null,"body":"invert <- function(vec){\n vec <- vec*(-1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288457,"user_id":null,"body":"invert <- function(vec){\n vecn <- (-vec)\n  print(vecn)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288458,"user_id":null,"body":"invert <- function(vec){\n  if(length(vec) == 0){\n    return(c(numeric()))\n  }\n  for(i in 1:length(vec)){\n    vec[i] <- vec[i] * -1\n  }\n  return(vec)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288459,"user_id":null,"body":"invert <- function(vec){\n  if (length(vec) == 0) {vec}\n  else {unlist(lapply(vec, function(x) -x))}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288460,"user_id":null,"body":"invert <- function(vec){\n  if (length(vec) == 0){\n    return(numeric())\n  } else {\n return(sapply(vec, function(x){return(-x)}, simplify = T))\n}\n  }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288461,"user_id":null,"body":"invert <- function(vec){\n  -1*vec \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288462,"user_id":null,"body":"invert <- function(vec){\n  if (length(vec) == 0){\n    return(vec)\n  }\n  else {\n   return(sapply(vec, function(a){a*-1}))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"58acfe4ae0201e1708000075":[{"id":288463,"user_id":null,"body":"invite_more_women <- function(l) {\n  return(sum(l) >0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288464,"user_id":null,"body":"invite_more_women <- function(l) {\n  \n  if(sum(l == -1) >=  sum(l == 1)){\n    FALSE\n  } else{\n    TRUE\n  }\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288465,"user_id":645,"body":"invite_more_women <- function(l) sum(l) > 0","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288466,"user_id":null,"body":"invite_more_women=function(l){\n  s=sum(l)\n  if(s<=0)\n    return(FALSE)\n  else\n    return(TRUE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288467,"user_id":null,"body":"invite_more_women <- function(l) {\n  return(sum(l[l == 1]) > -sum(l[l == -1]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288468,"user_id":null,"body":"invite_more_women <- function(l) {\n  if(sum(l)<=0){\n    return (F)\n  }\n  else{\n    return(T)\n  }\n    \n  }\n  ","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288469,"user_id":null,"body":"invite_more_women <- function(l) {\n  if (sum(l)<= 0){\n    return(FALSE)\n  } else if (sum(l)>0){\n    return(TRUE)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288470,"user_id":null,"body":"invite_more_women <- function(l) {\n  count = sum(l)\n  if(count > 0){\n    TRUE\n  }else{\n    FALSE\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288471,"user_id":null,"body":"invite_more_women <- function(l) {\n  length(l[l==1]) > length(l[l==-1])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288472,"user_id":null,"body":"invite_more_women <- function(l) {\n  tab = table(l)\n  if(dim(tab)>=2){\n  ifelse(tab[[1]] < tab[[2]],TRUE,FALSE)}\n  else{\n    if(l[1]>0){TRUE}\n    else{FALSE}\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"58b34b2951ccdb84f2000093":[{"id":288473,"user_id":null,"body":"require(dplyr)\nrequire(tidyr)\n\nearth_movers_distance <- function(x, px, y, py) {\n  \n  df_x <- tibble(v = x, px = px)\n  df_y <- tibble(v = y, py = py)\n  \n  df <- df_x %>%\n    full_join(df_y) %>%\n    replace_na(list(px=0, py=0)) %>%\n    arrange(v) %>%\n    mutate(dif = py - px) %>% \n    mutate(dist = v - lag(v, default = 0)) %>%\n    mutate(cumsum = cumsum(dif)) %>%\n    mutate(cost = lag(abs(cumsum), default = 0) * dist)\n  \n  sum(df$cost)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288474,"user_id":null,"body":"earth_movers_distance = function(x, px, y, py) {\n    w <- sort(union(x, y))\n    d <- head(mapply(sum, py[match(w, y)], -px[match(w, x)], na.rm = TRUE), -1)\n    sum(diff(w) * abs(cumsum(d)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288475,"user_id":null,"body":"earth_movers_distance = function(x, px, y, py) {\n    w <- sort(union(x, y))\n    px <- ifelse(is.na(match(w, x)), 0, px[match(w, x)])  \n    py <- ifelse(is.na(match(w, y)), 0, py[match(w, y)])\n    sum(abs(c(diff(w), 0) * cumsum((py - px))))  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288476,"user_id":559,"body":"earth_movers_distance = function(x, px, y, py)\n{\n # Let D be the difference of the cdfs.\n z = c(x, y);                          # points at which D is discontinuous\n d = tapply(c(px,-py), z, sum);        # jump sizes at the unique points of z\n d = abs(cumsum(d));                   # values of |D| at the unique points of z\n d = d[-length(d)];                    # discard last value (it will be zero)\n z = sort(unique(z));                  # the points of discontinuity, in order\n return(sum(d * diff(z)));             # integral of |D|\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"58c9322bedb4235468000019":[{"id":288477,"user_id":null,"body":"is_very_even_number <- function(n) {\n  while (n > 9) {\n    digits = as.integer(unlist(strsplit(toString(n), \"\")))\n    n = sum(digits)\n  }\n  n %% 2 == 0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288478,"user_id":null,"body":"is_very_even_number <- function(n){\n  while (nchar(n) > 1) {\n    n <- sum(as.numeric(unlist(strsplit(as.character(n), split = \"\"))))\n  }\n  ifelse(n %% 2 == 0, TRUE, FALSE) \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288479,"user_id":null,"body":"digit_sum <- function(x){\n current_sum = 0\n    for(i in 1:nchar(x))\n    {\n        temp = x %% 10\n        current_sum = current_sum + temp\n        x = floor(x \/ 10)\n    }\nreturn(current_sum)\n  }\n  \nis_very_even_number <- function(n){\n  if(n<10 & n %% 2 == 0) \n    return(T)\n  if(n<10 & n %% 2 == 1)\n    return(F)\n  return(is_very_even_number(digit_sum(n)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288480,"user_id":null,"body":"is_very_even_number <- function(n) {\n  digs <- function(x) sum(as.numeric(unlist(strsplit(as.character(x), split = \"\"))))\n  \n  while(digs(n) >= 10) {\n    n <- digs(n)\n  }\n  \n  return(digs(n) %% 2 == 0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288481,"user_id":null,"body":"is_very_even_number <- function(n){\nadd_digits <- function(x) {sum(floor(x \/ 10^(0:(nchar(x) - 1))) %% 10) %>% ifelse(nchar(.) > 1, add_digits(.), .)}\n\nadd_digits(n) %% 2 == 0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288482,"user_id":null,"body":"is_very_even_number <- function(n){\n    if (n < 10) {\n        return(!(n %% 2))\n    }\n    Recall(sum(as.integer(unlist(strsplit(as.character(n), \"\")))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288483,"user_id":null,"body":"is_very_even_number <- function(n){\n  print(n)\n  while (n>9){\n    n <- sum(as.numeric(unlist(strsplit(as.character(n), \"\"))))\n  }\n  print(n)\n if (n%%2==0){\n   return(TRUE)\n } else {\n   return(FALSE)\n }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288484,"user_id":null,"body":"is_very_even_number <- function(n){\n  \n  while(n > 9){\n    n<-as.character(n)\n    n<-sum(as.numeric(strsplit(n, \"\")[[1]]))\n  }\n  return(n%%2 == 0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288485,"user_id":null,"body":"is_very_even_number <- function(n){\n  while (nchar(n) > 1) n <- sum(as.numeric(strsplit(as.character(n),\"\")[[1]]))\n  n %% 2 == 0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288486,"user_id":null,"body":"is_very_even_number <- function(input) {\n  if (input < 10) {\n    return(input %% 2 == 0)\n  }\n\n  reduced_input <-  sum(as.integer(strsplit(as.character(input), split=\"\")[[1]]))\n  is_very_even_number(reduced_input)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"58cb43f4256836ed95000f97":[{"id":288487,"user_id":421,"body":"find_difference <- function(a, b){\n   abs(prod(a) - prod(b))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288488,"user_id":null,"body":"find_difference <- function(a, b){\n  volume_a<-1\n  volume_b<-1\n  for(i in a){\n    volume_a<-volume_a*i\n  }\n  for(j in b){\n    volume_b<-volume_b*j\n  }\n  return(abs(volume_a-volume_b))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288489,"user_id":50,"body":"find_difference <- function(a, b){\n  abs(prod(b)-prod(a))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288490,"user_id":null,"body":"find_difference <- function(a, b) ifelse((prod(a) - prod(b))>=0, prod(a) - prod(b), prod(b)-prod(a))  ","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288491,"user_id":null,"body":"find_difference <- function(a, b){\n  \n  x <- prod(a)\n  print(x)\n  y<- prod(b)\n  print(y)\n  abs(x-y)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288492,"user_id":null,"body":"find_difference <- function(a, b){\n  x <- abs(a[1] * a[2] * a[3] - b[1] * b[2] * b[3])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288493,"user_id":null,"body":"find_difference <- function(a, b){\n   volume = abs(prod(a) - prod(b))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288494,"user_id":null,"body":"find_difference <- function(a, b){\n   return(abs(a[1]*a[2]*a[3] - b[1]*b[2]*b[3]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288495,"user_id":null,"body":"find_difference <- function(a, b){\n   result <- abs(a[1]*a[2]*a[3] - b[1]*b[2]*b[3])\n   return(result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288496,"user_id":null,"body":"find_difference <- function(a, b){\n   abs(Reduce(\"*\", a) - Reduce(\"*\",b))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"58ce8725c835848ad6000007":[{"id":288497,"user_id":492,"body":"potatoes <- function (p0, w0, p1) {\n  floor(w0 * (100 - p0) \/ (100 - p1))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288498,"user_id":null,"body":"# @param\n# p0 - initial humidity percent\n# w0 - initial weight\n# p1 - final humidity percent\n\npotatoes <- function (p0, w0, p1){\n \n ####################################################################\n # THERE IS MISTAKE IN TESTS!!! p0 AND p1 SHOULD BE A PERCENTAGE!!! #\n ####################################################################\n \n  if(any(c(p0,p1) < 0) || any(c(p0,p1) > 1)){\n    warning(paste0(\"bad parameters p0 or p1. It should be a percentage.\n      Sent: p0=\",p0,\" w0=\",w0,\" p1=\",p1))\n  }\n  \n  if(w0 < 0){\n    warning(paste0(\"bad parameter w0. It should be +integer.\n      Sent: p0=\",p0,\" w0=\",w0,\" p1=\",p1))\n  }\n  \n  \n  \n  materyWeightPercentage0 <- 100 - p0\n  materyWeightPercentage1 <- 100 - p1\n  materyWeight <- w0 * materyWeightPercentage0 \/ 100 #final\n  \n  as.integer(100 \/ materyWeightPercentage1 * materyWeight)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288499,"user_id":null,"body":"potatoes <- function (p0, w0, p1) (w0*(100-p0))%\/%(100-p1)","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288500,"user_id":492,"body":"potatoes <- function (p0, w0, p1) {\n  floor(w0 * (100 - p0) \/ (100 - p1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288501,"user_id":null,"body":"potatoes <- function (p0, w0, p1) {\n  # your code\n  init_percent_dry_matter = 100 - p0\n  \n  final_percent_dry_matter = 100 - p1\n  \n \n  final_weight = floor(w0 * init_percent_dry_matter\/final_percent_dry_matter)\n\n  \n  return (final_weight)\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288502,"user_id":2334,"body":"potatoes <- function (p0, w0, p1) {as.integer(w0*(100-p0)\/(100-p1))}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288503,"user_id":null,"body":"potatoes <- function (p0, w0, p1) {\n  m<-w0*(100-p0)\n  h<-p1*m\/(100-p1)\n  return(floor((m+h)\/100))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288504,"user_id":null,"body":"potatoes <- function (p0, w0, p1) {\n floor((100 * w0 - p0*w0) \/ (100 - p1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288505,"user_id":null,"body":"potatoes <- function (p0, w0, p1) {\n  \n  solid_kg = w0 * (1 - p0 \/ 100)\n\n  final_kg = solid_kg \/ (1 - p1 \/ 100)\n  \n  return (floor(final_kg + 0.01))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288506,"user_id":null,"body":"potatoes <- function (p0, w0, p1) {\n  # p0\/100 = 1 - wd\/w0\n  # => wd = w0 * (1 - p0\/100)\n  # p1\/100 = 1 - wd\/w1\n  # => wd = w1 * (1 - p1\/100)\n  # => w1 = w0 * (1 - p0\/100) \/ (1 - p1\/100)\n  floor(w0 * (100 - p0) \/ (100 - p1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"58daa7617332e59593000006":[{"id":288507,"user_id":null,"body":"find_longest <- function(arr) {\n  arr[which.max(nchar(arr))]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288508,"user_id":null,"body":"find_longest <- function(arr) {\n\tm=nchar(arr)\n\treturn(arr[m==max(m)][1])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288509,"user_id":null,"body":"find_longest <- function(arr) {\nmax_digit=arr[1]\ndigit=nchar(arr[1])\nfor(i in arr){\nif (nchar(i)>digit){\nmax_digit=i\ndigit=nchar(i)\n}\n}\nreturn(max_digit)\n}\ntype = \"chars\"","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288510,"user_id":null,"body":"find_longest <- function(arr) {\n  arr <- as.character(arr)\n  return(as.numeric(arr[which.max(nchar(arr))]))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288511,"user_id":null,"body":"find_longest <- function(arr) {\n  arr[which.max(unlist(lapply(arr, nchar)))]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288512,"user_id":null,"body":"find_longest <- function(arr) {\n as.numeric(as.character(arr)[which.max(nchar(arr))])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288513,"user_id":null,"body":"find_longest <- function(arr) {\n  lengths <- sapply(strsplit(as.character(arr), \"\"), function(x) length(x))\n  return(arr[lengths == max(lengths)][1])\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288514,"user_id":null,"body":"find_longest <- function(arr) {\n  arr %>% nchar(.) %>% which.max(.) %>% arr[.]\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288515,"user_id":null,"body":"find_longest <- function(arr) {\n  longest <- 0\n  for (i in arr){\n    if (nchar(i)>nchar(longest)) {\n      longest <- i\n    }\n  }\n  return(longest)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288516,"user_id":null,"body":"find_longest <- function(arr) {\n  x <- nchar(arr)\n  arr[which(x == max(x))][1]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5913152be0b295cf99000001":[{"id":288517,"user_id":527,"body":"divisions <- function(n, divisor) {\n  floor(log(n, divisor))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288518,"user_id":null,"body":"divisions <- function(n, divisor){\n  counter=0\n  while(n>=divisor){\n   n=n%\/%divisor\n    counter=counter+1\n  } \n  return(counter)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288519,"user_id":null,"body":"divisions <- function(n, divisor){\n  return(floor(log(n, base=divisor)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288520,"user_id":null,"body":"divisions <- function(n, divisor){\n  # Your code here\n  return (floor(log(n,divisor)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288521,"user_id":null,"body":"divisions <- function(n, divisor){\n  count <- 0\n  while (n >= divisor) {\n    floor(n\/divisor) -> n\n    count + 1 -> count\n  }\n  \n  return (count)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288522,"user_id":null,"body":"divisions <- function(n, divisor){\n x <- n\n  count <- 0\n  while(x>=divisor){\n    x <- x\/divisor\n    count <- count +1\n  }\n  \n  print(count)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288523,"user_id":null,"body":"divisions <- function(n, divisor){\n    i <- 1\n    result <- n \/ divisor^i\n    while (result >= 1)\n    {\n      i <- i + 1\n      result <- n \/ divisor^i\n    }\n    return(i - 1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288524,"user_id":null,"body":"divisions <- function(n, divisor){\n  i <- 0\n  while (n \/ divisor >= 1){\n    n <- floor(n\/divisor)\n    i <- i +1 \n  }\n  return(i)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288525,"user_id":null,"body":"divisions <- function(n, divisor){\n  counter <- 0\n  while (n >= divisor) {\n    counter <- counter + 1\n    n <- n\/divisor\n  }\n  return(counter)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288526,"user_id":null,"body":"divisions <- function(n, divisor){\n  vec <- c()                 # initialise empty vector\n  while (n > 1) {            # loop until result < 1\n    a <- n \/ divisor         # assign first division to answer\n    vec <- c(vec, a)         # add answer to result vector\n    n <- a                   # assign answer to n\n  }\n  length(vec[vec >= 1])      # return number of divisors >= 1\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"591588d49f4056e13f000001":[{"id":288527,"user_id":null,"body":"hq9 <- function( code ) {\n  if(code=='H'){\n    return('Hello World!')\n  }else if(code=='Q'){\n    return(code)\n  }else if(code=='9'){\n    return(\"99 bottles of beer on the wall, 99 bottles of beer.\nTake one down and pass it around, 98 bottles of beer on the wall.\n98 bottles of beer on the wall, 98 bottles of beer.\nTake one down and pass it around, 97 bottles of beer on the wall.\n97 bottles of beer on the wall, 97 bottles of beer.\nTake one down and pass it around, 96 bottles of beer on the wall.\n96 bottles of beer on the wall, 96 bottles of beer.\nTake one down and pass it around, 95 bottles of beer on the wall.\n95 bottles of beer on the wall, 95 bottles of beer.\nTake one down and pass it around, 94 bottles of beer on the wall.\n94 bottles of beer on the wall, 94 bottles of beer.\nTake one down and pass it around, 93 bottles of beer on the wall.\n93 bottles of beer on the wall, 93 bottles of beer.\nTake one down and pass it around, 92 bottles of beer on the wall.\n92 bottles of beer on the wall, 92 bottles of beer.\nTake one down and pass it around, 91 bottles of beer on the wall.\n91 bottles of beer on the wall, 91 bottles of beer.\nTake one down and pass it around, 90 bottles of beer on the wall.\n90 bottles of beer on the wall, 90 bottles of beer.\nTake one down and pass it around, 89 bottles of beer on the wall.\n89 bottles of beer on the wall, 89 bottles of beer.\nTake one down and pass it around, 88 bottles of beer on the wall.\n88 bottles of beer on the wall, 88 bottles of beer.\nTake one down and pass it around, 87 bottles of beer on the wall.\n87 bottles of beer on the wall, 87 bottles of beer.\nTake one down and pass it around, 86 bottles of beer on the wall.\n86 bottles of beer on the wall, 86 bottles of beer.\nTake one down and pass it around, 85 bottles of beer on the wall.\n85 bottles of beer on the wall, 85 bottles of beer.\nTake one down and pass it around, 84 bottles of beer on the wall.\n84 bottles of beer on the wall, 84 bottles of beer.\nTake one down and pass it around, 83 bottles of beer on the wall.\n83 bottles of beer on the wall, 83 bottles of beer.\nTake one down and pass it around, 82 bottles of beer on the wall.\n82 bottles of beer on the wall, 82 bottles of beer.\nTake one down and pass it around, 81 bottles of beer on the wall.\n81 bottles of beer on the wall, 81 bottles of beer.\nTake one down and pass it around, 80 bottles of beer on the wall.\n80 bottles of beer on the wall, 80 bottles of beer.\nTake one down and pass it around, 79 bottles of beer on the wall.\n79 bottles of beer on the wall, 79 bottles of beer.\nTake one down and pass it around, 78 bottles of beer on the wall.\n78 bottles of beer on the wall, 78 bottles of beer.\nTake one down and pass it around, 77 bottles of beer on the wall.\n77 bottles of beer on the wall, 77 bottles of beer.\nTake one down and pass it around, 76 bottles of beer on the wall.\n76 bottles of beer on the wall, 76 bottles of beer.\nTake one down and pass it around, 75 bottles of beer on the wall.\n75 bottles of beer on the wall, 75 bottles of beer.\nTake one down and pass it around, 74 bottles of beer on the wall.\n74 bottles of beer on the wall, 74 bottles of beer.\nTake one down and pass it around, 73 bottles of beer on the wall.\n73 bottles of beer on the wall, 73 bottles of beer.\nTake one down and pass it around, 72 bottles of beer on the wall.\n72 bottles of beer on the wall, 72 bottles of beer.\nTake one down and pass it around, 71 bottles of beer on the wall.\n71 bottles of beer on the wall, 71 bottles of beer.\nTake one down and pass it around, 70 bottles of beer on the wall.\n70 bottles of beer on the wall, 70 bottles of beer.\nTake one down and pass it around, 69 bottles of beer on the wall.\n69 bottles of beer on the wall, 69 bottles of beer.\nTake one down and pass it around, 68 bottles of beer on the wall.\n68 bottles of beer on the wall, 68 bottles of beer.\nTake one down and pass it around, 67 bottles of beer on the wall.\n67 bottles of beer on the wall, 67 bottles of beer.\nTake one down and pass it around, 66 bottles of beer on the wall.\n66 bottles of beer on the wall, 66 bottles of beer.\nTake one down and pass it around, 65 bottles of beer on the wall.\n65 bottles of beer on the wall, 65 bottles of beer.\nTake one down and pass it around, 64 bottles of beer on the wall.\n64 bottles of beer on the wall, 64 bottles of beer.\nTake one down and pass it around, 63 bottles of beer on the wall.\n63 bottles of beer on the wall, 63 bottles of beer.\nTake one down and pass it around, 62 bottles of beer on the wall.\n62 bottles of beer on the wall, 62 bottles of beer.\nTake one down and pass it around, 61 bottles of beer on the wall.\n61 bottles of beer on the wall, 61 bottles of beer.\nTake one down and pass it around, 60 bottles of beer on the wall.\n60 bottles of beer on the wall, 60 bottles of beer.\nTake one down and pass it around, 59 bottles of beer on the wall.\n59 bottles of beer on the wall, 59 bottles of beer.\nTake one down and pass it around, 58 bottles of beer on the wall.\n58 bottles of beer on the wall, 58 bottles of beer.\nTake one down and pass it around, 57 bottles of beer on the wall.\n57 bottles of beer on the wall, 57 bottles of beer.\nTake one down and pass it around, 56 bottles of beer on the wall.\n56 bottles of beer on the wall, 56 bottles of beer.\nTake one down and pass it around, 55 bottles of beer on the wall.\n55 bottles of beer on the wall, 55 bottles of beer.\nTake one down and pass it around, 54 bottles of beer on the wall.\n54 bottles of beer on the wall, 54 bottles of beer.\nTake one down and pass it around, 53 bottles of beer on the wall.\n53 bottles of beer on the wall, 53 bottles of beer.\nTake one down and pass it around, 52 bottles of beer on the wall.\n52 bottles of beer on the wall, 52 bottles of beer.\nTake one down and pass it around, 51 bottles of beer on the wall.\n51 bottles of beer on the wall, 51 bottles of beer.\nTake one down and pass it around, 50 bottles of beer on the wall.\n50 bottles of beer on the wall, 50 bottles of beer.\nTake one down and pass it around, 49 bottles of beer on the wall.\n49 bottles of beer on the wall, 49 bottles of beer.\nTake one down and pass it around, 48 bottles of beer on the wall.\n48 bottles of beer on the wall, 48 bottles of beer.\nTake one down and pass it around, 47 bottles of beer on the wall.\n47 bottles of beer on the wall, 47 bottles of beer.\nTake one down and pass it around, 46 bottles of beer on the wall.\n46 bottles of beer on the wall, 46 bottles of beer.\nTake one down and pass it around, 45 bottles of beer on the wall.\n45 bottles of beer on the wall, 45 bottles of beer.\nTake one down and pass it around, 44 bottles of beer on the wall.\n44 bottles of beer on the wall, 44 bottles of beer.\nTake one down and pass it around, 43 bottles of beer on the wall.\n43 bottles of beer on the wall, 43 bottles of beer.\nTake one down and pass it around, 42 bottles of beer on the wall.\n42 bottles of beer on the wall, 42 bottles of beer.\nTake one down and pass it around, 41 bottles of beer on the wall.\n41 bottles of beer on the wall, 41 bottles of beer.\nTake one down and pass it around, 40 bottles of beer on the wall.\n40 bottles of beer on the wall, 40 bottles of beer.\nTake one down and pass it around, 39 bottles of beer on the wall.\n39 bottles of beer on the wall, 39 bottles of beer.\nTake one down and pass it around, 38 bottles of beer on the wall.\n38 bottles of beer on the wall, 38 bottles of beer.\nTake one down and pass it around, 37 bottles of beer on the wall.\n37 bottles of beer on the wall, 37 bottles of beer.\nTake one down and pass it around, 36 bottles of beer on the wall.\n36 bottles of beer on the wall, 36 bottles of beer.\nTake one down and pass it around, 35 bottles of beer on the wall.\n35 bottles of beer on the wall, 35 bottles of beer.\nTake one down and pass it around, 34 bottles of beer on the wall.\n34 bottles of beer on the wall, 34 bottles of beer.\nTake one down and pass it around, 33 bottles of beer on the wall.\n33 bottles of beer on the wall, 33 bottles of beer.\nTake one down and pass it around, 32 bottles of beer on the wall.\n32 bottles of beer on the wall, 32 bottles of beer.\nTake one down and pass it around, 31 bottles of beer on the wall.\n31 bottles of beer on the wall, 31 bottles of beer.\nTake one down and pass it around, 30 bottles of beer on the wall.\n30 bottles of beer on the wall, 30 bottles of beer.\nTake one down and pass it around, 29 bottles of beer on the wall.\n29 bottles of beer on the wall, 29 bottles of beer.\nTake one down and pass it around, 28 bottles of beer on the wall.\n28 bottles of beer on the wall, 28 bottles of beer.\nTake one down and pass it around, 27 bottles of beer on the wall.\n27 bottles of beer on the wall, 27 bottles of beer.\nTake one down and pass it around, 26 bottles of beer on the wall.\n26 bottles of beer on the wall, 26 bottles of beer.\nTake one down and pass it around, 25 bottles of beer on the wall.\n25 bottles of beer on the wall, 25 bottles of beer.\nTake one down and pass it around, 24 bottles of beer on the wall.\n24 bottles of beer on the wall, 24 bottles of beer.\nTake one down and pass it around, 23 bottles of beer on the wall.\n23 bottles of beer on the wall, 23 bottles of beer.\nTake one down and pass it around, 22 bottles of beer on the wall.\n22 bottles of beer on the wall, 22 bottles of beer.\nTake one down and pass it around, 21 bottles of beer on the wall.\n21 bottles of beer on the wall, 21 bottles of beer.\nTake one down and pass it around, 20 bottles of beer on the wall.\n20 bottles of beer on the wall, 20 bottles of beer.\nTake one down and pass it around, 19 bottles of beer on the wall.\n19 bottles of beer on the wall, 19 bottles of beer.\nTake one down and pass it around, 18 bottles of beer on the wall.\n18 bottles of beer on the wall, 18 bottles of beer.\nTake one down and pass it around, 17 bottles of beer on the wall.\n17 bottles of beer on the wall, 17 bottles of beer.\nTake one down and pass it around, 16 bottles of beer on the wall.\n16 bottles of beer on the wall, 16 bottles of beer.\nTake one down and pass it around, 15 bottles of beer on the wall.\n15 bottles of beer on the wall, 15 bottles of beer.\nTake one down and pass it around, 14 bottles of beer on the wall.\n14 bottles of beer on the wall, 14 bottles of beer.\nTake one down and pass it around, 13 bottles of beer on the wall.\n13 bottles of beer on the wall, 13 bottles of beer.\nTake one down and pass it around, 12 bottles of beer on the wall.\n12 bottles of beer on the wall, 12 bottles of beer.\nTake one down and pass it around, 11 bottles of beer on the wall.\n11 bottles of beer on the wall, 11 bottles of beer.\nTake one down and pass it around, 10 bottles of beer on the wall.\n10 bottles of beer on the wall, 10 bottles of beer.\nTake one down and pass it around, 9 bottles of beer on the wall.\n9 bottles of beer on the wall, 9 bottles of beer.\nTake one down and pass it around, 8 bottles of beer on the wall.\n8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n7 bottles of beer on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of beer on the wall.\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one down and pass it around, 5 bottles of beer on the wall.\n5 bottles of beer on the wall, 5 bottles of beer.\nTake one down and pass it around, 4 bottles of beer on the wall.\n4 bottles of beer on the wall, 4 bottles of beer.\nTake one down and pass it around, 3 bottles of beer on the wall.\n3 bottles of beer on the wall, 3 bottles of beer.\nTake one down and pass it around, 2 bottles of beer on the wall.\n2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n1 bottle of beer on the wall, 1 bottle of beer.\nTake one down and pass it around, no more bottles of beer on the wall.\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\")\n}\n    else{\n      return(NA)\n    }}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288528,"user_id":null,"body":"hq9 <- function( code ) {\n  switch(code, 'H' = 'Hello World!', 'Q' = code, '9' = \"99 bottles of beer on the wall, 99 bottles of beer.\nTake one down and pass it around, 98 bottles of beer on the wall.\n98 bottles of beer on the wall, 98 bottles of beer.\nTake one down and pass it around, 97 bottles of beer on the wall.\n97 bottles of beer on the wall, 97 bottles of beer.\nTake one down and pass it around, 96 bottles of beer on the wall.\n96 bottles of beer on the wall, 96 bottles of beer.\nTake one down and pass it around, 95 bottles of beer on the wall.\n95 bottles of beer on the wall, 95 bottles of beer.\nTake one down and pass it around, 94 bottles of beer on the wall.\n94 bottles of beer on the wall, 94 bottles of beer.\nTake one down and pass it around, 93 bottles of beer on the wall.\n93 bottles of beer on the wall, 93 bottles of beer.\nTake one down and pass it around, 92 bottles of beer on the wall.\n92 bottles of beer on the wall, 92 bottles of beer.\nTake one down and pass it around, 91 bottles of beer on the wall.\n91 bottles of beer on the wall, 91 bottles of beer.\nTake one down and pass it around, 90 bottles of beer on the wall.\n90 bottles of beer on the wall, 90 bottles of beer.\nTake one down and pass it around, 89 bottles of beer on the wall.\n89 bottles of beer on the wall, 89 bottles of beer.\nTake one down and pass it around, 88 bottles of beer on the wall.\n88 bottles of beer on the wall, 88 bottles of beer.\nTake one down and pass it around, 87 bottles of beer on the wall.\n87 bottles of beer on the wall, 87 bottles of beer.\nTake one down and pass it around, 86 bottles of beer on the wall.\n86 bottles of beer on the wall, 86 bottles of beer.\nTake one down and pass it around, 85 bottles of beer on the wall.\n85 bottles of beer on the wall, 85 bottles of beer.\nTake one down and pass it around, 84 bottles of beer on the wall.\n84 bottles of beer on the wall, 84 bottles of beer.\nTake one down and pass it around, 83 bottles of beer on the wall.\n83 bottles of beer on the wall, 83 bottles of beer.\nTake one down and pass it around, 82 bottles of beer on the wall.\n82 bottles of beer on the wall, 82 bottles of beer.\nTake one down and pass it around, 81 bottles of beer on the wall.\n81 bottles of beer on the wall, 81 bottles of beer.\nTake one down and pass it around, 80 bottles of beer on the wall.\n80 bottles of beer on the wall, 80 bottles of beer.\nTake one down and pass it around, 79 bottles of beer on the wall.\n79 bottles of beer on the wall, 79 bottles of beer.\nTake one down and pass it around, 78 bottles of beer on the wall.\n78 bottles of beer on the wall, 78 bottles of beer.\nTake one down and pass it around, 77 bottles of beer on the wall.\n77 bottles of beer on the wall, 77 bottles of beer.\nTake one down and pass it around, 76 bottles of beer on the wall.\n76 bottles of beer on the wall, 76 bottles of beer.\nTake one down and pass it around, 75 bottles of beer on the wall.\n75 bottles of beer on the wall, 75 bottles of beer.\nTake one down and pass it around, 74 bottles of beer on the wall.\n74 bottles of beer on the wall, 74 bottles of beer.\nTake one down and pass it around, 73 bottles of beer on the wall.\n73 bottles of beer on the wall, 73 bottles of beer.\nTake one down and pass it around, 72 bottles of beer on the wall.\n72 bottles of beer on the wall, 72 bottles of beer.\nTake one down and pass it around, 71 bottles of beer on the wall.\n71 bottles of beer on the wall, 71 bottles of beer.\nTake one down and pass it around, 70 bottles of beer on the wall.\n70 bottles of beer on the wall, 70 bottles of beer.\nTake one down and pass it around, 69 bottles of beer on the wall.\n69 bottles of beer on the wall, 69 bottles of beer.\nTake one down and pass it around, 68 bottles of beer on the wall.\n68 bottles of beer on the wall, 68 bottles of beer.\nTake one down and pass it around, 67 bottles of beer on the wall.\n67 bottles of beer on the wall, 67 bottles of beer.\nTake one down and pass it around, 66 bottles of beer on the wall.\n66 bottles of beer on the wall, 66 bottles of beer.\nTake one down and pass it around, 65 bottles of beer on the wall.\n65 bottles of beer on the wall, 65 bottles of beer.\nTake one down and pass it around, 64 bottles of beer on the wall.\n64 bottles of beer on the wall, 64 bottles of beer.\nTake one down and pass it around, 63 bottles of beer on the wall.\n63 bottles of beer on the wall, 63 bottles of beer.\nTake one down and pass it around, 62 bottles of beer on the wall.\n62 bottles of beer on the wall, 62 bottles of beer.\nTake one down and pass it around, 61 bottles of beer on the wall.\n61 bottles of beer on the wall, 61 bottles of beer.\nTake one down and pass it around, 60 bottles of beer on the wall.\n60 bottles of beer on the wall, 60 bottles of beer.\nTake one down and pass it around, 59 bottles of beer on the wall.\n59 bottles of beer on the wall, 59 bottles of beer.\nTake one down and pass it around, 58 bottles of beer on the wall.\n58 bottles of beer on the wall, 58 bottles of beer.\nTake one down and pass it around, 57 bottles of beer on the wall.\n57 bottles of beer on the wall, 57 bottles of beer.\nTake one down and pass it around, 56 bottles of beer on the wall.\n56 bottles of beer on the wall, 56 bottles of beer.\nTake one down and pass it around, 55 bottles of beer on the wall.\n55 bottles of beer on the wall, 55 bottles of beer.\nTake one down and pass it around, 54 bottles of beer on the wall.\n54 bottles of beer on the wall, 54 bottles of beer.\nTake one down and pass it around, 53 bottles of beer on the wall.\n53 bottles of beer on the wall, 53 bottles of beer.\nTake one down and pass it around, 52 bottles of beer on the wall.\n52 bottles of beer on the wall, 52 bottles of beer.\nTake one down and pass it around, 51 bottles of beer on the wall.\n51 bottles of beer on the wall, 51 bottles of beer.\nTake one down and pass it around, 50 bottles of beer on the wall.\n50 bottles of beer on the wall, 50 bottles of beer.\nTake one down and pass it around, 49 bottles of beer on the wall.\n49 bottles of beer on the wall, 49 bottles of beer.\nTake one down and pass it around, 48 bottles of beer on the wall.\n48 bottles of beer on the wall, 48 bottles of beer.\nTake one down and pass it around, 47 bottles of beer on the wall.\n47 bottles of beer on the wall, 47 bottles of beer.\nTake one down and pass it around, 46 bottles of beer on the wall.\n46 bottles of beer on the wall, 46 bottles of beer.\nTake one down and pass it around, 45 bottles of beer on the wall.\n45 bottles of beer on the wall, 45 bottles of beer.\nTake one down and pass it around, 44 bottles of beer on the wall.\n44 bottles of beer on the wall, 44 bottles of beer.\nTake one down and pass it around, 43 bottles of beer on the wall.\n43 bottles of beer on the wall, 43 bottles of beer.\nTake one down and pass it around, 42 bottles of beer on the wall.\n42 bottles of beer on the wall, 42 bottles of beer.\nTake one down and pass it around, 41 bottles of beer on the wall.\n41 bottles of beer on the wall, 41 bottles of beer.\nTake one down and pass it around, 40 bottles of beer on the wall.\n40 bottles of beer on the wall, 40 bottles of beer.\nTake one down and pass it around, 39 bottles of beer on the wall.\n39 bottles of beer on the wall, 39 bottles of beer.\nTake one down and pass it around, 38 bottles of beer on the wall.\n38 bottles of beer on the wall, 38 bottles of beer.\nTake one down and pass it around, 37 bottles of beer on the wall.\n37 bottles of beer on the wall, 37 bottles of beer.\nTake one down and pass it around, 36 bottles of beer on the wall.\n36 bottles of beer on the wall, 36 bottles of beer.\nTake one down and pass it around, 35 bottles of beer on the wall.\n35 bottles of beer on the wall, 35 bottles of beer.\nTake one down and pass it around, 34 bottles of beer on the wall.\n34 bottles of beer on the wall, 34 bottles of beer.\nTake one down and pass it around, 33 bottles of beer on the wall.\n33 bottles of beer on the wall, 33 bottles of beer.\nTake one down and pass it around, 32 bottles of beer on the wall.\n32 bottles of beer on the wall, 32 bottles of beer.\nTake one down and pass it around, 31 bottles of beer on the wall.\n31 bottles of beer on the wall, 31 bottles of beer.\nTake one down and pass it around, 30 bottles of beer on the wall.\n30 bottles of beer on the wall, 30 bottles of beer.\nTake one down and pass it around, 29 bottles of beer on the wall.\n29 bottles of beer on the wall, 29 bottles of beer.\nTake one down and pass it around, 28 bottles of beer on the wall.\n28 bottles of beer on the wall, 28 bottles of beer.\nTake one down and pass it around, 27 bottles of beer on the wall.\n27 bottles of beer on the wall, 27 bottles of beer.\nTake one down and pass it around, 26 bottles of beer on the wall.\n26 bottles of beer on the wall, 26 bottles of beer.\nTake one down and pass it around, 25 bottles of beer on the wall.\n25 bottles of beer on the wall, 25 bottles of beer.\nTake one down and pass it around, 24 bottles of beer on the wall.\n24 bottles of beer on the wall, 24 bottles of beer.\nTake one down and pass it around, 23 bottles of beer on the wall.\n23 bottles of beer on the wall, 23 bottles of beer.\nTake one down and pass it around, 22 bottles of beer on the wall.\n22 bottles of beer on the wall, 22 bottles of beer.\nTake one down and pass it around, 21 bottles of beer on the wall.\n21 bottles of beer on the wall, 21 bottles of beer.\nTake one down and pass it around, 20 bottles of beer on the wall.\n20 bottles of beer on the wall, 20 bottles of beer.\nTake one down and pass it around, 19 bottles of beer on the wall.\n19 bottles of beer on the wall, 19 bottles of beer.\nTake one down and pass it around, 18 bottles of beer on the wall.\n18 bottles of beer on the wall, 18 bottles of beer.\nTake one down and pass it around, 17 bottles of beer on the wall.\n17 bottles of beer on the wall, 17 bottles of beer.\nTake one down and pass it around, 16 bottles of beer on the wall.\n16 bottles of beer on the wall, 16 bottles of beer.\nTake one down and pass it around, 15 bottles of beer on the wall.\n15 bottles of beer on the wall, 15 bottles of beer.\nTake one down and pass it around, 14 bottles of beer on the wall.\n14 bottles of beer on the wall, 14 bottles of beer.\nTake one down and pass it around, 13 bottles of beer on the wall.\n13 bottles of beer on the wall, 13 bottles of beer.\nTake one down and pass it around, 12 bottles of beer on the wall.\n12 bottles of beer on the wall, 12 bottles of beer.\nTake one down and pass it around, 11 bottles of beer on the wall.\n11 bottles of beer on the wall, 11 bottles of beer.\nTake one down and pass it around, 10 bottles of beer on the wall.\n10 bottles of beer on the wall, 10 bottles of beer.\nTake one down and pass it around, 9 bottles of beer on the wall.\n9 bottles of beer on the wall, 9 bottles of beer.\nTake one down and pass it around, 8 bottles of beer on the wall.\n8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n7 bottles of beer on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of beer on the wall.\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one down and pass it around, 5 bottles of beer on the wall.\n5 bottles of beer on the wall, 5 bottles of beer.\nTake one down and pass it around, 4 bottles of beer on the wall.\n4 bottles of beer on the wall, 4 bottles of beer.\nTake one down and pass it around, 3 bottles of beer on the wall.\n3 bottles of beer on the wall, 3 bottles of beer.\nTake one down and pass it around, 2 bottles of beer on the wall.\n2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n1 bottle of beer on the wall, 1 bottle of beer.\nTake one down and pass it around, no more bottles of beer on the wall.\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\", NA)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288529,"user_id":2584,"body":"hq9 <- function( code ) {\n  if (code == \"H\") {\n    \"Hello World!\"\n  } else if (code == \"Q\") {\n    \"Q\"\n  } else if (code == \"9\") {\n    song(99)    \n  } else {\n    NA\n  }\n}\n\n# Modified from from http:\/\/rosettacode.org\/wiki\/99_Bottles_of_Beer#R\nsong <- function(bottles) {\n  output <- \"\"\n  for(i in bottles:2) {\n    output <- \n      paste(\n        output,\n        bottles,\" bottles of beer on the wall, \", bottles, \" bottles of beer.\n\",\n        \"Take one down and pass it around, \", bottles - 1, \" bottle\",\n        ifelse(bottles - 1 == 1, \"\", \"s\"), \" of beer on the wall.\n\" ,\n        sep = \"\"\n      )\n    \n    bottles = bottles - 1\n  }\n  \n  paste(\n    output,\n    \"1 bottle of beer on the wall, 1 bottle of beer.\n\",\n    \"Take one down and pass it around, no more bottles of beer on the wall.\n\",\n    \"No more bottles of beer on the wall, no more bottles of beer.\n\",\n    \"Go to the store and buy some more, 99 bottles of beer on the wall.\",\n    sep = \"\"\n  )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288530,"user_id":null,"body":"hq9 <- function( code ) {\n  if (code == \"H\"){\n    return(\"Hello World!\")\n  } else if (code == \"Q\"){\n    return(code)\n  }\n  else if (code == \"9\") {\n    x <- vector()\n    for (i in seq(99,3,-1)){\n      x <- c(x, paste(i,\"bottles of beer on the wall,\",i,\"bottles of beer.\nTake one down and pass it around,\",i-1,\"bottles of beer on the wall.\n\"), collapse = \"\")\n    }\n\n    end <- \"2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n1 bottle of beer on the wall, 1 bottle of beer.\nTake one down and pass it around, no more bottles of beer on the wall.\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\"\n    return(paste0(paste(x, collapse = \"\"), end))\n  } else {\n    return(NA)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288531,"user_id":null,"body":"hq9 <- function( code ) {\n  \n  txt <- \"99 bottles of beer on the wall, 99 bottles of beer.\nTake one down and pass it around, 98 bottles of beer on the wall.\n98 bottles of beer on the wall, 98 bottles of beer.\nTake one down and pass it around, 97 bottles of beer on the wall.\n97 bottles of beer on the wall, 97 bottles of beer.\nTake one down and pass it around, 96 bottles of beer on the wall.\n96 bottles of beer on the wall, 96 bottles of beer.\nTake one down and pass it around, 95 bottles of beer on the wall.\n95 bottles of beer on the wall, 95 bottles of beer.\nTake one down and pass it around, 94 bottles of beer on the wall.\n94 bottles of beer on the wall, 94 bottles of beer.\nTake one down and pass it around, 93 bottles of beer on the wall.\n93 bottles of beer on the wall, 93 bottles of beer.\nTake one down and pass it around, 92 bottles of beer on the wall.\n92 bottles of beer on the wall, 92 bottles of beer.\nTake one down and pass it around, 91 bottles of beer on the wall.\n91 bottles of beer on the wall, 91 bottles of beer.\nTake one down and pass it around, 90 bottles of beer on the wall.\n90 bottles of beer on the wall, 90 bottles of beer.\nTake one down and pass it around, 89 bottles of beer on the wall.\n89 bottles of beer on the wall, 89 bottles of beer.\nTake one down and pass it around, 88 bottles of beer on the wall.\n88 bottles of beer on the wall, 88 bottles of beer.\nTake one down and pass it around, 87 bottles of beer on the wall.\n87 bottles of beer on the wall, 87 bottles of beer.\nTake one down and pass it around, 86 bottles of beer on the wall.\n86 bottles of beer on the wall, 86 bottles of beer.\nTake one down and pass it around, 85 bottles of beer on the wall.\n85 bottles of beer on the wall, 85 bottles of beer.\nTake one down and pass it around, 84 bottles of beer on the wall.\n84 bottles of beer on the wall, 84 bottles of beer.\nTake one down and pass it around, 83 bottles of beer on the wall.\n83 bottles of beer on the wall, 83 bottles of beer.\nTake one down and pass it around, 82 bottles of beer on the wall.\n82 bottles of beer on the wall, 82 bottles of beer.\nTake one down and pass it around, 81 bottles of beer on the wall.\n81 bottles of beer on the wall, 81 bottles of beer.\nTake one down and pass it around, 80 bottles of beer on the wall.\n80 bottles of beer on the wall, 80 bottles of beer.\nTake one down and pass it around, 79 bottles of beer on the wall.\n79 bottles of beer on the wall, 79 bottles of beer.\nTake one down and pass it around, 78 bottles of beer on the wall.\n78 bottles of beer on the wall, 78 bottles of beer.\nTake one down and pass it around, 77 bottles of beer on the wall.\n77 bottles of beer on the wall, 77 bottles of beer.\nTake one down and pass it around, 76 bottles of beer on the wall.\n76 bottles of beer on the wall, 76 bottles of beer.\nTake one down and pass it around, 75 bottles of beer on the wall.\n75 bottles of beer on the wall, 75 bottles of beer.\nTake one down and pass it around, 74 bottles of beer on the wall.\n74 bottles of beer on the wall, 74 bottles of beer.\nTake one down and pass it around, 73 bottles of beer on the wall.\n73 bottles of beer on the wall, 73 bottles of beer.\nTake one down and pass it around, 72 bottles of beer on the wall.\n72 bottles of beer on the wall, 72 bottles of beer.\nTake one down and pass it around, 71 bottles of beer on the wall.\n71 bottles of beer on the wall, 71 bottles of beer.\nTake one down and pass it around, 70 bottles of beer on the wall.\n70 bottles of beer on the wall, 70 bottles of beer.\nTake one down and pass it around, 69 bottles of beer on the wall.\n69 bottles of beer on the wall, 69 bottles of beer.\nTake one down and pass it around, 68 bottles of beer on the wall.\n68 bottles of beer on the wall, 68 bottles of beer.\nTake one down and pass it around, 67 bottles of beer on the wall.\n67 bottles of beer on the wall, 67 bottles of beer.\nTake one down and pass it around, 66 bottles of beer on the wall.\n66 bottles of beer on the wall, 66 bottles of beer.\nTake one down and pass it around, 65 bottles of beer on the wall.\n65 bottles of beer on the wall, 65 bottles of beer.\nTake one down and pass it around, 64 bottles of beer on the wall.\n64 bottles of beer on the wall, 64 bottles of beer.\nTake one down and pass it around, 63 bottles of beer on the wall.\n63 bottles of beer on the wall, 63 bottles of beer.\nTake one down and pass it around, 62 bottles of beer on the wall.\n62 bottles of beer on the wall, 62 bottles of beer.\nTake one down and pass it around, 61 bottles of beer on the wall.\n61 bottles of beer on the wall, 61 bottles of beer.\nTake one down and pass it around, 60 bottles of beer on the wall.\n60 bottles of beer on the wall, 60 bottles of beer.\nTake one down and pass it around, 59 bottles of beer on the wall.\n59 bottles of beer on the wall, 59 bottles of beer.\nTake one down and pass it around, 58 bottles of beer on the wall.\n58 bottles of beer on the wall, 58 bottles of beer.\nTake one down and pass it around, 57 bottles of beer on the wall.\n57 bottles of beer on the wall, 57 bottles of beer.\nTake one down and pass it around, 56 bottles of beer on the wall.\n56 bottles of beer on the wall, 56 bottles of beer.\nTake one down and pass it around, 55 bottles of beer on the wall.\n55 bottles of beer on the wall, 55 bottles of beer.\nTake one down and pass it around, 54 bottles of beer on the wall.\n54 bottles of beer on the wall, 54 bottles of beer.\nTake one down and pass it around, 53 bottles of beer on the wall.\n53 bottles of beer on the wall, 53 bottles of beer.\nTake one down and pass it around, 52 bottles of beer on the wall.\n52 bottles of beer on the wall, 52 bottles of beer.\nTake one down and pass it around, 51 bottles of beer on the wall.\n51 bottles of beer on the wall, 51 bottles of beer.\nTake one down and pass it around, 50 bottles of beer on the wall.\n50 bottles of beer on the wall, 50 bottles of beer.\nTake one down and pass it around, 49 bottles of beer on the wall.\n49 bottles of beer on the wall, 49 bottles of beer.\nTake one down and pass it around, 48 bottles of beer on the wall.\n48 bottles of beer on the wall, 48 bottles of beer.\nTake one down and pass it around, 47 bottles of beer on the wall.\n47 bottles of beer on the wall, 47 bottles of beer.\nTake one down and pass it around, 46 bottles of beer on the wall.\n46 bottles of beer on the wall, 46 bottles of beer.\nTake one down and pass it around, 45 bottles of beer on the wall.\n45 bottles of beer on the wall, 45 bottles of beer.\nTake one down and pass it around, 44 bottles of beer on the wall.\n44 bottles of beer on the wall, 44 bottles of beer.\nTake one down and pass it around, 43 bottles of beer on the wall.\n43 bottles of beer on the wall, 43 bottles of beer.\nTake one down and pass it around, 42 bottles of beer on the wall.\n42 bottles of beer on the wall, 42 bottles of beer.\nTake one down and pass it around, 41 bottles of beer on the wall.\n41 bottles of beer on the wall, 41 bottles of beer.\nTake one down and pass it around, 40 bottles of beer on the wall.\n40 bottles of beer on the wall, 40 bottles of beer.\nTake one down and pass it around, 39 bottles of beer on the wall.\n39 bottles of beer on the wall, 39 bottles of beer.\nTake one down and pass it around, 38 bottles of beer on the wall.\n38 bottles of beer on the wall, 38 bottles of beer.\nTake one down and pass it around, 37 bottles of beer on the wall.\n37 bottles of beer on the wall, 37 bottles of beer.\nTake one down and pass it around, 36 bottles of beer on the wall.\n36 bottles of beer on the wall, 36 bottles of beer.\nTake one down and pass it around, 35 bottles of beer on the wall.\n35 bottles of beer on the wall, 35 bottles of beer.\nTake one down and pass it around, 34 bottles of beer on the wall.\n34 bottles of beer on the wall, 34 bottles of beer.\nTake one down and pass it around, 33 bottles of beer on the wall.\n33 bottles of beer on the wall, 33 bottles of beer.\nTake one down and pass it around, 32 bottles of beer on the wall.\n32 bottles of beer on the wall, 32 bottles of beer.\nTake one down and pass it around, 31 bottles of beer on the wall.\n31 bottles of beer on the wall, 31 bottles of beer.\nTake one down and pass it around, 30 bottles of beer on the wall.\n30 bottles of beer on the wall, 30 bottles of beer.\nTake one down and pass it around, 29 bottles of beer on the wall.\n29 bottles of beer on the wall, 29 bottles of beer.\nTake one down and pass it around, 28 bottles of beer on the wall.\n28 bottles of beer on the wall, 28 bottles of beer.\nTake one down and pass it around, 27 bottles of beer on the wall.\n27 bottles of beer on the wall, 27 bottles of beer.\nTake one down and pass it around, 26 bottles of beer on the wall.\n26 bottles of beer on the wall, 26 bottles of beer.\nTake one down and pass it around, 25 bottles of beer on the wall.\n25 bottles of beer on the wall, 25 bottles of beer.\nTake one down and pass it around, 24 bottles of beer on the wall.\n24 bottles of beer on the wall, 24 bottles of beer.\nTake one down and pass it around, 23 bottles of beer on the wall.\n23 bottles of beer on the wall, 23 bottles of beer.\nTake one down and pass it around, 22 bottles of beer on the wall.\n22 bottles of beer on the wall, 22 bottles of beer.\nTake one down and pass it around, 21 bottles of beer on the wall.\n21 bottles of beer on the wall, 21 bottles of beer.\nTake one down and pass it around, 20 bottles of beer on the wall.\n20 bottles of beer on the wall, 20 bottles of beer.\nTake one down and pass it around, 19 bottles of beer on the wall.\n19 bottles of beer on the wall, 19 bottles of beer.\nTake one down and pass it around, 18 bottles of beer on the wall.\n18 bottles of beer on the wall, 18 bottles of beer.\nTake one down and pass it around, 17 bottles of beer on the wall.\n17 bottles of beer on the wall, 17 bottles of beer.\nTake one down and pass it around, 16 bottles of beer on the wall.\n16 bottles of beer on the wall, 16 bottles of beer.\nTake one down and pass it around, 15 bottles of beer on the wall.\n15 bottles of beer on the wall, 15 bottles of beer.\nTake one down and pass it around, 14 bottles of beer on the wall.\n14 bottles of beer on the wall, 14 bottles of beer.\nTake one down and pass it around, 13 bottles of beer on the wall.\n13 bottles of beer on the wall, 13 bottles of beer.\nTake one down and pass it around, 12 bottles of beer on the wall.\n12 bottles of beer on the wall, 12 bottles of beer.\nTake one down and pass it around, 11 bottles of beer on the wall.\n11 bottles of beer on the wall, 11 bottles of beer.\nTake one down and pass it around, 10 bottles of beer on the wall.\n10 bottles of beer on the wall, 10 bottles of beer.\nTake one down and pass it around, 9 bottles of beer on the wall.\n9 bottles of beer on the wall, 9 bottles of beer.\nTake one down and pass it around, 8 bottles of beer on the wall.\n8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n7 bottles of beer on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of beer on the wall.\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one down and pass it around, 5 bottles of beer on the wall.\n5 bottles of beer on the wall, 5 bottles of beer.\nTake one down and pass it around, 4 bottles of beer on the wall.\n4 bottles of beer on the wall, 4 bottles of beer.\nTake one down and pass it around, 3 bottles of beer on the wall.\n3 bottles of beer on the wall, 3 bottles of beer.\nTake one down and pass it around, 2 bottles of beer on the wall.\n2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n1 bottle of beer on the wall, 1 bottle of beer.\nTake one down and pass it around, no more bottles of beer on the wall.\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\" \n  if (code == \"H\"){\n    return(\"Hello World!\")\n  } else if (code == \"Q\"){\n    return(\"Q\")\n  } else if (code == \"9\"){\n    return(txt)\n  } else {\n    return(NA)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288532,"user_id":null,"body":"hq9 <- function(code) {\n  if(code == 'H'){\n    print('Hello World!')\n  } else if(code == 'Q'){\n    print('Q')\n  } else if(code == '9'){\n    print(\"99 bottles of beer on the wall, 99 bottles of beer.\nTake one down and pass it around, 98 bottles of beer on the wall.\n98 bottles of beer on the wall, 98 bottles of beer.\nTake one down and pass it around, 97 bottles of beer on the wall.\n97 bottles of beer on the wall, 97 bottles of beer.\nTake one down and pass it around, 96 bottles of beer on the wall.\n96 bottles of beer on the wall, 96 bottles of beer.\nTake one down and pass it around, 95 bottles of beer on the wall.\n95 bottles of beer on the wall, 95 bottles of beer.\nTake one down and pass it around, 94 bottles of beer on the wall.\n94 bottles of beer on the wall, 94 bottles of beer.\nTake one down and pass it around, 93 bottles of beer on the wall.\n93 bottles of beer on the wall, 93 bottles of beer.\nTake one down and pass it around, 92 bottles of beer on the wall.\n92 bottles of beer on the wall, 92 bottles of beer.\nTake one down and pass it around, 91 bottles of beer on the wall.\n91 bottles of beer on the wall, 91 bottles of beer.\nTake one down and pass it around, 90 bottles of beer on the wall.\n90 bottles of beer on the wall, 90 bottles of beer.\nTake one down and pass it around, 89 bottles of beer on the wall.\n89 bottles of beer on the wall, 89 bottles of beer.\nTake one down and pass it around, 88 bottles of beer on the wall.\n88 bottles of beer on the wall, 88 bottles of beer.\nTake one down and pass it around, 87 bottles of beer on the wall.\n87 bottles of beer on the wall, 87 bottles of beer.\nTake one down and pass it around, 86 bottles of beer on the wall.\n86 bottles of beer on the wall, 86 bottles of beer.\nTake one down and pass it around, 85 bottles of beer on the wall.\n85 bottles of beer on the wall, 85 bottles of beer.\nTake one down and pass it around, 84 bottles of beer on the wall.\n84 bottles of beer on the wall, 84 bottles of beer.\nTake one down and pass it around, 83 bottles of beer on the wall.\n83 bottles of beer on the wall, 83 bottles of beer.\nTake one down and pass it around, 82 bottles of beer on the wall.\n82 bottles of beer on the wall, 82 bottles of beer.\nTake one down and pass it around, 81 bottles of beer on the wall.\n81 bottles of beer on the wall, 81 bottles of beer.\nTake one down and pass it around, 80 bottles of beer on the wall.\n80 bottles of beer on the wall, 80 bottles of beer.\nTake one down and pass it around, 79 bottles of beer on the wall.\n79 bottles of beer on the wall, 79 bottles of beer.\nTake one down and pass it around, 78 bottles of beer on the wall.\n78 bottles of beer on the wall, 78 bottles of beer.\nTake one down and pass it around, 77 bottles of beer on the wall.\n77 bottles of beer on the wall, 77 bottles of beer.\nTake one down and pass it around, 76 bottles of beer on the wall.\n76 bottles of beer on the wall, 76 bottles of beer.\nTake one down and pass it around, 75 bottles of beer on the wall.\n75 bottles of beer on the wall, 75 bottles of beer.\nTake one down and pass it around, 74 bottles of beer on the wall.\n74 bottles of beer on the wall, 74 bottles of beer.\nTake one down and pass it around, 73 bottles of beer on the wall.\n73 bottles of beer on the wall, 73 bottles of beer.\nTake one down and pass it around, 72 bottles of beer on the wall.\n72 bottles of beer on the wall, 72 bottles of beer.\nTake one down and pass it around, 71 bottles of beer on the wall.\n71 bottles of beer on the wall, 71 bottles of beer.\nTake one down and pass it around, 70 bottles of beer on the wall.\n70 bottles of beer on the wall, 70 bottles of beer.\nTake one down and pass it around, 69 bottles of beer on the wall.\n69 bottles of beer on the wall, 69 bottles of beer.\nTake one down and pass it around, 68 bottles of beer on the wall.\n68 bottles of beer on the wall, 68 bottles of beer.\nTake one down and pass it around, 67 bottles of beer on the wall.\n67 bottles of beer on the wall, 67 bottles of beer.\nTake one down and pass it around, 66 bottles of beer on the wall.\n66 bottles of beer on the wall, 66 bottles of beer.\nTake one down and pass it around, 65 bottles of beer on the wall.\n65 bottles of beer on the wall, 65 bottles of beer.\nTake one down and pass it around, 64 bottles of beer on the wall.\n64 bottles of beer on the wall, 64 bottles of beer.\nTake one down and pass it around, 63 bottles of beer on the wall.\n63 bottles of beer on the wall, 63 bottles of beer.\nTake one down and pass it around, 62 bottles of beer on the wall.\n62 bottles of beer on the wall, 62 bottles of beer.\nTake one down and pass it around, 61 bottles of beer on the wall.\n61 bottles of beer on the wall, 61 bottles of beer.\nTake one down and pass it around, 60 bottles of beer on the wall.\n60 bottles of beer on the wall, 60 bottles of beer.\nTake one down and pass it around, 59 bottles of beer on the wall.\n59 bottles of beer on the wall, 59 bottles of beer.\nTake one down and pass it around, 58 bottles of beer on the wall.\n58 bottles of beer on the wall, 58 bottles of beer.\nTake one down and pass it around, 57 bottles of beer on the wall.\n57 bottles of beer on the wall, 57 bottles of beer.\nTake one down and pass it around, 56 bottles of beer on the wall.\n56 bottles of beer on the wall, 56 bottles of beer.\nTake one down and pass it around, 55 bottles of beer on the wall.\n55 bottles of beer on the wall, 55 bottles of beer.\nTake one down and pass it around, 54 bottles of beer on the wall.\n54 bottles of beer on the wall, 54 bottles of beer.\nTake one down and pass it around, 53 bottles of beer on the wall.\n53 bottles of beer on the wall, 53 bottles of beer.\nTake one down and pass it around, 52 bottles of beer on the wall.\n52 bottles of beer on the wall, 52 bottles of beer.\nTake one down and pass it around, 51 bottles of beer on the wall.\n51 bottles of beer on the wall, 51 bottles of beer.\nTake one down and pass it around, 50 bottles of beer on the wall.\n50 bottles of beer on the wall, 50 bottles of beer.\nTake one down and pass it around, 49 bottles of beer on the wall.\n49 bottles of beer on the wall, 49 bottles of beer.\nTake one down and pass it around, 48 bottles of beer on the wall.\n48 bottles of beer on the wall, 48 bottles of beer.\nTake one down and pass it around, 47 bottles of beer on the wall.\n47 bottles of beer on the wall, 47 bottles of beer.\nTake one down and pass it around, 46 bottles of beer on the wall.\n46 bottles of beer on the wall, 46 bottles of beer.\nTake one down and pass it around, 45 bottles of beer on the wall.\n45 bottles of beer on the wall, 45 bottles of beer.\nTake one down and pass it around, 44 bottles of beer on the wall.\n44 bottles of beer on the wall, 44 bottles of beer.\nTake one down and pass it around, 43 bottles of beer on the wall.\n43 bottles of beer on the wall, 43 bottles of beer.\nTake one down and pass it around, 42 bottles of beer on the wall.\n42 bottles of beer on the wall, 42 bottles of beer.\nTake one down and pass it around, 41 bottles of beer on the wall.\n41 bottles of beer on the wall, 41 bottles of beer.\nTake one down and pass it around, 40 bottles of beer on the wall.\n40 bottles of beer on the wall, 40 bottles of beer.\nTake one down and pass it around, 39 bottles of beer on the wall.\n39 bottles of beer on the wall, 39 bottles of beer.\nTake one down and pass it around, 38 bottles of beer on the wall.\n38 bottles of beer on the wall, 38 bottles of beer.\nTake one down and pass it around, 37 bottles of beer on the wall.\n37 bottles of beer on the wall, 37 bottles of beer.\nTake one down and pass it around, 36 bottles of beer on the wall.\n36 bottles of beer on the wall, 36 bottles of beer.\nTake one down and pass it around, 35 bottles of beer on the wall.\n35 bottles of beer on the wall, 35 bottles of beer.\nTake one down and pass it around, 34 bottles of beer on the wall.\n34 bottles of beer on the wall, 34 bottles of beer.\nTake one down and pass it around, 33 bottles of beer on the wall.\n33 bottles of beer on the wall, 33 bottles of beer.\nTake one down and pass it around, 32 bottles of beer on the wall.\n32 bottles of beer on the wall, 32 bottles of beer.\nTake one down and pass it around, 31 bottles of beer on the wall.\n31 bottles of beer on the wall, 31 bottles of beer.\nTake one down and pass it around, 30 bottles of beer on the wall.\n30 bottles of beer on the wall, 30 bottles of beer.\nTake one down and pass it around, 29 bottles of beer on the wall.\n29 bottles of beer on the wall, 29 bottles of beer.\nTake one down and pass it around, 28 bottles of beer on the wall.\n28 bottles of beer on the wall, 28 bottles of beer.\nTake one down and pass it around, 27 bottles of beer on the wall.\n27 bottles of beer on the wall, 27 bottles of beer.\nTake one down and pass it around, 26 bottles of beer on the wall.\n26 bottles of beer on the wall, 26 bottles of beer.\nTake one down and pass it around, 25 bottles of beer on the wall.\n25 bottles of beer on the wall, 25 bottles of beer.\nTake one down and pass it around, 24 bottles of beer on the wall.\n24 bottles of beer on the wall, 24 bottles of beer.\nTake one down and pass it around, 23 bottles of beer on the wall.\n23 bottles of beer on the wall, 23 bottles of beer.\nTake one down and pass it around, 22 bottles of beer on the wall.\n22 bottles of beer on the wall, 22 bottles of beer.\nTake one down and pass it around, 21 bottles of beer on the wall.\n21 bottles of beer on the wall, 21 bottles of beer.\nTake one down and pass it around, 20 bottles of beer on the wall.\n20 bottles of beer on the wall, 20 bottles of beer.\nTake one down and pass it around, 19 bottles of beer on the wall.\n19 bottles of beer on the wall, 19 bottles of beer.\nTake one down and pass it around, 18 bottles of beer on the wall.\n18 bottles of beer on the wall, 18 bottles of beer.\nTake one down and pass it around, 17 bottles of beer on the wall.\n17 bottles of beer on the wall, 17 bottles of beer.\nTake one down and pass it around, 16 bottles of beer on the wall.\n16 bottles of beer on the wall, 16 bottles of beer.\nTake one down and pass it around, 15 bottles of beer on the wall.\n15 bottles of beer on the wall, 15 bottles of beer.\nTake one down and pass it around, 14 bottles of beer on the wall.\n14 bottles of beer on the wall, 14 bottles of beer.\nTake one down and pass it around, 13 bottles of beer on the wall.\n13 bottles of beer on the wall, 13 bottles of beer.\nTake one down and pass it around, 12 bottles of beer on the wall.\n12 bottles of beer on the wall, 12 bottles of beer.\nTake one down and pass it around, 11 bottles of beer on the wall.\n11 bottles of beer on the wall, 11 bottles of beer.\nTake one down and pass it around, 10 bottles of beer on the wall.\n10 bottles of beer on the wall, 10 bottles of beer.\nTake one down and pass it around, 9 bottles of beer on the wall.\n9 bottles of beer on the wall, 9 bottles of beer.\nTake one down and pass it around, 8 bottles of beer on the wall.\n8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n7 bottles of beer on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of beer on the wall.\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one down and pass it around, 5 bottles of beer on the wall.\n5 bottles of beer on the wall, 5 bottles of beer.\nTake one down and pass it around, 4 bottles of beer on the wall.\n4 bottles of beer on the wall, 4 bottles of beer.\nTake one down and pass it around, 3 bottles of beer on the wall.\n3 bottles of beer on the wall, 3 bottles of beer.\nTake one down and pass it around, 2 bottles of beer on the wall.\n2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n1 bottle of beer on the wall, 1 bottle of beer.\nTake one down and pass it around, no more bottles of beer on the wall.\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\"\n          )\n    \n  } else {NA}\n    }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288533,"user_id":null,"body":"library(purrr)\nhq9 <- function( code ) {\n  if (code == 'H') return(\"Hello World!\")\n  if (code == 'Q') return(code)\n  if (code == '9') {\n    b1 <- function(n) {\n      ncurrent2 <- ifelse(n>=1, n, \"no more\")\n      ncurrent1 <- ifelse(ncurrent2 == n, n, \"No more\")\n      btl <- ifelse(n==1, \"bottle\", \"bottles\")\n      l1 <- paste(ncurrent1, btl, \"of beer on the wall,\", ncurrent2, btl, \"of beer.\")\n      donext <- ifelse(n>0, \"Take one down and pass it around,\", \"Go to the store and buy some more,\")\n      nleft <- ifelse(n>1, n-1, ifelse(n==1,\"no more\", 99) )\n      btl <- ifelse(nleft==1, \"bottle\", \"bottles\")\n      l2 <- paste(donext, nleft, btl, \"of beer on the wall.\")\n      paste0(l1,'\n',l2)\n    }\n    bl <- 99:0 %>% \n      map(b1) %>% \n      paste0(collapse = '\n')\n    return(bl)\n  }\n  return(NA)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288534,"user_id":53,"body":"hq9 <- function( c ) {\n  if (c == \"H\") {\n    \"Hello World!\"\n  } else if (c == \"Q\") {\n    \"Q\"\n  } else if (c == \"9\") {\n    \"99 bottles of beer on the wall, 99 bottles of beer.\nTake one down and pass it around, 98 bottles of beer on the wall.\n98 bottles of beer on the wall, 98 bottles of beer.\nTake one down and pass it around, 97 bottles of beer on the wall.\n97 bottles of beer on the wall, 97 bottles of beer.\nTake one down and pass it around, 96 bottles of beer on the wall.\n96 bottles of beer on the wall, 96 bottles of beer.\nTake one down and pass it around, 95 bottles of beer on the wall.\n95 bottles of beer on the wall, 95 bottles of beer.\nTake one down and pass it around, 94 bottles of beer on the wall.\n94 bottles of beer on the wall, 94 bottles of beer.\nTake one down and pass it around, 93 bottles of beer on the wall.\n93 bottles of beer on the wall, 93 bottles of beer.\nTake one down and pass it around, 92 bottles of beer on the wall.\n92 bottles of beer on the wall, 92 bottles of beer.\nTake one down and pass it around, 91 bottles of beer on the wall.\n91 bottles of beer on the wall, 91 bottles of beer.\nTake one down and pass it around, 90 bottles of beer on the wall.\n90 bottles of beer on the wall, 90 bottles of beer.\nTake one down and pass it around, 89 bottles of beer on the wall.\n89 bottles of beer on the wall, 89 bottles of beer.\nTake one down and pass it around, 88 bottles of beer on the wall.\n88 bottles of beer on the wall, 88 bottles of beer.\nTake one down and pass it around, 87 bottles of beer on the wall.\n87 bottles of beer on the wall, 87 bottles of beer.\nTake one down and pass it around, 86 bottles of beer on the wall.\n86 bottles of beer on the wall, 86 bottles of beer.\nTake one down and pass it around, 85 bottles of beer on the wall.\n85 bottles of beer on the wall, 85 bottles of beer.\nTake one down and pass it around, 84 bottles of beer on the wall.\n84 bottles of beer on the wall, 84 bottles of beer.\nTake one down and pass it around, 83 bottles of beer on the wall.\n83 bottles of beer on the wall, 83 bottles of beer.\nTake one down and pass it around, 82 bottles of beer on the wall.\n82 bottles of beer on the wall, 82 bottles of beer.\nTake one down and pass it around, 81 bottles of beer on the wall.\n81 bottles of beer on the wall, 81 bottles of beer.\nTake one down and pass it around, 80 bottles of beer on the wall.\n80 bottles of beer on the wall, 80 bottles of beer.\nTake one down and pass it around, 79 bottles of beer on the wall.\n79 bottles of beer on the wall, 79 bottles of beer.\nTake one down and pass it around, 78 bottles of beer on the wall.\n78 bottles of beer on the wall, 78 bottles of beer.\nTake one down and pass it around, 77 bottles of beer on the wall.\n77 bottles of beer on the wall, 77 bottles of beer.\nTake one down and pass it around, 76 bottles of beer on the wall.\n76 bottles of beer on the wall, 76 bottles of beer.\nTake one down and pass it around, 75 bottles of beer on the wall.\n75 bottles of beer on the wall, 75 bottles of beer.\nTake one down and pass it around, 74 bottles of beer on the wall.\n74 bottles of beer on the wall, 74 bottles of beer.\nTake one down and pass it around, 73 bottles of beer on the wall.\n73 bottles of beer on the wall, 73 bottles of beer.\nTake one down and pass it around, 72 bottles of beer on the wall.\n72 bottles of beer on the wall, 72 bottles of beer.\nTake one down and pass it around, 71 bottles of beer on the wall.\n71 bottles of beer on the wall, 71 bottles of beer.\nTake one down and pass it around, 70 bottles of beer on the wall.\n70 bottles of beer on the wall, 70 bottles of beer.\nTake one down and pass it around, 69 bottles of beer on the wall.\n69 bottles of beer on the wall, 69 bottles of beer.\nTake one down and pass it around, 68 bottles of beer on the wall.\n68 bottles of beer on the wall, 68 bottles of beer.\nTake one down and pass it around, 67 bottles of beer on the wall.\n67 bottles of beer on the wall, 67 bottles of beer.\nTake one down and pass it around, 66 bottles of beer on the wall.\n66 bottles of beer on the wall, 66 bottles of beer.\nTake one down and pass it around, 65 bottles of beer on the wall.\n65 bottles of beer on the wall, 65 bottles of beer.\nTake one down and pass it around, 64 bottles of beer on the wall.\n64 bottles of beer on the wall, 64 bottles of beer.\nTake one down and pass it around, 63 bottles of beer on the wall.\n63 bottles of beer on the wall, 63 bottles of beer.\nTake one down and pass it around, 62 bottles of beer on the wall.\n62 bottles of beer on the wall, 62 bottles of beer.\nTake one down and pass it around, 61 bottles of beer on the wall.\n61 bottles of beer on the wall, 61 bottles of beer.\nTake one down and pass it around, 60 bottles of beer on the wall.\n60 bottles of beer on the wall, 60 bottles of beer.\nTake one down and pass it around, 59 bottles of beer on the wall.\n59 bottles of beer on the wall, 59 bottles of beer.\nTake one down and pass it around, 58 bottles of beer on the wall.\n58 bottles of beer on the wall, 58 bottles of beer.\nTake one down and pass it around, 57 bottles of beer on the wall.\n57 bottles of beer on the wall, 57 bottles of beer.\nTake one down and pass it around, 56 bottles of beer on the wall.\n56 bottles of beer on the wall, 56 bottles of beer.\nTake one down and pass it around, 55 bottles of beer on the wall.\n55 bottles of beer on the wall, 55 bottles of beer.\nTake one down and pass it around, 54 bottles of beer on the wall.\n54 bottles of beer on the wall, 54 bottles of beer.\nTake one down and pass it around, 53 bottles of beer on the wall.\n53 bottles of beer on the wall, 53 bottles of beer.\nTake one down and pass it around, 52 bottles of beer on the wall.\n52 bottles of beer on the wall, 52 bottles of beer.\nTake one down and pass it around, 51 bottles of beer on the wall.\n51 bottles of beer on the wall, 51 bottles of beer.\nTake one down and pass it around, 50 bottles of beer on the wall.\n50 bottles of beer on the wall, 50 bottles of beer.\nTake one down and pass it around, 49 bottles of beer on the wall.\n49 bottles of beer on the wall, 49 bottles of beer.\nTake one down and pass it around, 48 bottles of beer on the wall.\n48 bottles of beer on the wall, 48 bottles of beer.\nTake one down and pass it around, 47 bottles of beer on the wall.\n47 bottles of beer on the wall, 47 bottles of beer.\nTake one down and pass it around, 46 bottles of beer on the wall.\n46 bottles of beer on the wall, 46 bottles of beer.\nTake one down and pass it around, 45 bottles of beer on the wall.\n45 bottles of beer on the wall, 45 bottles of beer.\nTake one down and pass it around, 44 bottles of beer on the wall.\n44 bottles of beer on the wall, 44 bottles of beer.\nTake one down and pass it around, 43 bottles of beer on the wall.\n43 bottles of beer on the wall, 43 bottles of beer.\nTake one down and pass it around, 42 bottles of beer on the wall.\n42 bottles of beer on the wall, 42 bottles of beer.\nTake one down and pass it around, 41 bottles of beer on the wall.\n41 bottles of beer on the wall, 41 bottles of beer.\nTake one down and pass it around, 40 bottles of beer on the wall.\n40 bottles of beer on the wall, 40 bottles of beer.\nTake one down and pass it around, 39 bottles of beer on the wall.\n39 bottles of beer on the wall, 39 bottles of beer.\nTake one down and pass it around, 38 bottles of beer on the wall.\n38 bottles of beer on the wall, 38 bottles of beer.\nTake one down and pass it around, 37 bottles of beer on the wall.\n37 bottles of beer on the wall, 37 bottles of beer.\nTake one down and pass it around, 36 bottles of beer on the wall.\n36 bottles of beer on the wall, 36 bottles of beer.\nTake one down and pass it around, 35 bottles of beer on the wall.\n35 bottles of beer on the wall, 35 bottles of beer.\nTake one down and pass it around, 34 bottles of beer on the wall.\n34 bottles of beer on the wall, 34 bottles of beer.\nTake one down and pass it around, 33 bottles of beer on the wall.\n33 bottles of beer on the wall, 33 bottles of beer.\nTake one down and pass it around, 32 bottles of beer on the wall.\n32 bottles of beer on the wall, 32 bottles of beer.\nTake one down and pass it around, 31 bottles of beer on the wall.\n31 bottles of beer on the wall, 31 bottles of beer.\nTake one down and pass it around, 30 bottles of beer on the wall.\n30 bottles of beer on the wall, 30 bottles of beer.\nTake one down and pass it around, 29 bottles of beer on the wall.\n29 bottles of beer on the wall, 29 bottles of beer.\nTake one down and pass it around, 28 bottles of beer on the wall.\n28 bottles of beer on the wall, 28 bottles of beer.\nTake one down and pass it around, 27 bottles of beer on the wall.\n27 bottles of beer on the wall, 27 bottles of beer.\nTake one down and pass it around, 26 bottles of beer on the wall.\n26 bottles of beer on the wall, 26 bottles of beer.\nTake one down and pass it around, 25 bottles of beer on the wall.\n25 bottles of beer on the wall, 25 bottles of beer.\nTake one down and pass it around, 24 bottles of beer on the wall.\n24 bottles of beer on the wall, 24 bottles of beer.\nTake one down and pass it around, 23 bottles of beer on the wall.\n23 bottles of beer on the wall, 23 bottles of beer.\nTake one down and pass it around, 22 bottles of beer on the wall.\n22 bottles of beer on the wall, 22 bottles of beer.\nTake one down and pass it around, 21 bottles of beer on the wall.\n21 bottles of beer on the wall, 21 bottles of beer.\nTake one down and pass it around, 20 bottles of beer on the wall.\n20 bottles of beer on the wall, 20 bottles of beer.\nTake one down and pass it around, 19 bottles of beer on the wall.\n19 bottles of beer on the wall, 19 bottles of beer.\nTake one down and pass it around, 18 bottles of beer on the wall.\n18 bottles of beer on the wall, 18 bottles of beer.\nTake one down and pass it around, 17 bottles of beer on the wall.\n17 bottles of beer on the wall, 17 bottles of beer.\nTake one down and pass it around, 16 bottles of beer on the wall.\n16 bottles of beer on the wall, 16 bottles of beer.\nTake one down and pass it around, 15 bottles of beer on the wall.\n15 bottles of beer on the wall, 15 bottles of beer.\nTake one down and pass it around, 14 bottles of beer on the wall.\n14 bottles of beer on the wall, 14 bottles of beer.\nTake one down and pass it around, 13 bottles of beer on the wall.\n13 bottles of beer on the wall, 13 bottles of beer.\nTake one down and pass it around, 12 bottles of beer on the wall.\n12 bottles of beer on the wall, 12 bottles of beer.\nTake one down and pass it around, 11 bottles of beer on the wall.\n11 bottles of beer on the wall, 11 bottles of beer.\nTake one down and pass it around, 10 bottles of beer on the wall.\n10 bottles of beer on the wall, 10 bottles of beer.\nTake one down and pass it around, 9 bottles of beer on the wall.\n9 bottles of beer on the wall, 9 bottles of beer.\nTake one down and pass it around, 8 bottles of beer on the wall.\n8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n7 bottles of beer on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of beer on the wall.\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one down and pass it around, 5 bottles of beer on the wall.\n5 bottles of beer on the wall, 5 bottles of beer.\nTake one down and pass it around, 4 bottles of beer on the wall.\n4 bottles of beer on the wall, 4 bottles of beer.\nTake one down and pass it around, 3 bottles of beer on the wall.\n3 bottles of beer on the wall, 3 bottles of beer.\nTake one down and pass it around, 2 bottles of beer on the wall.\n2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n1 bottle of beer on the wall, 1 bottle of beer.\nTake one down and pass it around, no more bottles of beer on the wall.\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\"\n  } else {\n    NA\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288535,"user_id":null,"body":"hq9 <- function( code ) {\n if (code %in% c('H','Q','9')){\n if (code == 'H'){return(\"Hello World!\")}\n if (code == 'Q'){return(\"Q\")}\n if (code == '9'){return(\"99 bottles of beer on the wall, 99 bottles of beer.\nTake one down and pass it around, 98 bottles of beer on the wall.\n98 bottles of beer on the wall, 98 bottles of beer.\nTake one down and pass it around, 97 bottles of beer on the wall.\n97 bottles of beer on the wall, 97 bottles of beer.\nTake one down and pass it around, 96 bottles of beer on the wall.\n96 bottles of beer on the wall, 96 bottles of beer.\nTake one down and pass it around, 95 bottles of beer on the wall.\n95 bottles of beer on the wall, 95 bottles of beer.\nTake one down and pass it around, 94 bottles of beer on the wall.\n94 bottles of beer on the wall, 94 bottles of beer.\nTake one down and pass it around, 93 bottles of beer on the wall.\n93 bottles of beer on the wall, 93 bottles of beer.\nTake one down and pass it around, 92 bottles of beer on the wall.\n92 bottles of beer on the wall, 92 bottles of beer.\nTake one down and pass it around, 91 bottles of beer on the wall.\n91 bottles of beer on the wall, 91 bottles of beer.\nTake one down and pass it around, 90 bottles of beer on the wall.\n90 bottles of beer on the wall, 90 bottles of beer.\nTake one down and pass it around, 89 bottles of beer on the wall.\n89 bottles of beer on the wall, 89 bottles of beer.\nTake one down and pass it around, 88 bottles of beer on the wall.\n88 bottles of beer on the wall, 88 bottles of beer.\nTake one down and pass it around, 87 bottles of beer on the wall.\n87 bottles of beer on the wall, 87 bottles of beer.\nTake one down and pass it around, 86 bottles of beer on the wall.\n86 bottles of beer on the wall, 86 bottles of beer.\nTake one down and pass it around, 85 bottles of beer on the wall.\n85 bottles of beer on the wall, 85 bottles of beer.\nTake one down and pass it around, 84 bottles of beer on the wall.\n84 bottles of beer on the wall, 84 bottles of beer.\nTake one down and pass it around, 83 bottles of beer on the wall.\n83 bottles of beer on the wall, 83 bottles of beer.\nTake one down and pass it around, 82 bottles of beer on the wall.\n82 bottles of beer on the wall, 82 bottles of beer.\nTake one down and pass it around, 81 bottles of beer on the wall.\n81 bottles of beer on the wall, 81 bottles of beer.\nTake one down and pass it around, 80 bottles of beer on the wall.\n80 bottles of beer on the wall, 80 bottles of beer.\nTake one down and pass it around, 79 bottles of beer on the wall.\n79 bottles of beer on the wall, 79 bottles of beer.\nTake one down and pass it around, 78 bottles of beer on the wall.\n78 bottles of beer on the wall, 78 bottles of beer.\nTake one down and pass it around, 77 bottles of beer on the wall.\n77 bottles of beer on the wall, 77 bottles of beer.\nTake one down and pass it around, 76 bottles of beer on the wall.\n76 bottles of beer on the wall, 76 bottles of beer.\nTake one down and pass it around, 75 bottles of beer on the wall.\n75 bottles of beer on the wall, 75 bottles of beer.\nTake one down and pass it around, 74 bottles of beer on the wall.\n74 bottles of beer on the wall, 74 bottles of beer.\nTake one down and pass it around, 73 bottles of beer on the wall.\n73 bottles of beer on the wall, 73 bottles of beer.\nTake one down and pass it around, 72 bottles of beer on the wall.\n72 bottles of beer on the wall, 72 bottles of beer.\nTake one down and pass it around, 71 bottles of beer on the wall.\n71 bottles of beer on the wall, 71 bottles of beer.\nTake one down and pass it around, 70 bottles of beer on the wall.\n70 bottles of beer on the wall, 70 bottles of beer.\nTake one down and pass it around, 69 bottles of beer on the wall.\n69 bottles of beer on the wall, 69 bottles of beer.\nTake one down and pass it around, 68 bottles of beer on the wall.\n68 bottles of beer on the wall, 68 bottles of beer.\nTake one down and pass it around, 67 bottles of beer on the wall.\n67 bottles of beer on the wall, 67 bottles of beer.\nTake one down and pass it around, 66 bottles of beer on the wall.\n66 bottles of beer on the wall, 66 bottles of beer.\nTake one down and pass it around, 65 bottles of beer on the wall.\n65 bottles of beer on the wall, 65 bottles of beer.\nTake one down and pass it around, 64 bottles of beer on the wall.\n64 bottles of beer on the wall, 64 bottles of beer.\nTake one down and pass it around, 63 bottles of beer on the wall.\n63 bottles of beer on the wall, 63 bottles of beer.\nTake one down and pass it around, 62 bottles of beer on the wall.\n62 bottles of beer on the wall, 62 bottles of beer.\nTake one down and pass it around, 61 bottles of beer on the wall.\n61 bottles of beer on the wall, 61 bottles of beer.\nTake one down and pass it around, 60 bottles of beer on the wall.\n60 bottles of beer on the wall, 60 bottles of beer.\nTake one down and pass it around, 59 bottles of beer on the wall.\n59 bottles of beer on the wall, 59 bottles of beer.\nTake one down and pass it around, 58 bottles of beer on the wall.\n58 bottles of beer on the wall, 58 bottles of beer.\nTake one down and pass it around, 57 bottles of beer on the wall.\n57 bottles of beer on the wall, 57 bottles of beer.\nTake one down and pass it around, 56 bottles of beer on the wall.\n56 bottles of beer on the wall, 56 bottles of beer.\nTake one down and pass it around, 55 bottles of beer on the wall.\n55 bottles of beer on the wall, 55 bottles of beer.\nTake one down and pass it around, 54 bottles of beer on the wall.\n54 bottles of beer on the wall, 54 bottles of beer.\nTake one down and pass it around, 53 bottles of beer on the wall.\n53 bottles of beer on the wall, 53 bottles of beer.\nTake one down and pass it around, 52 bottles of beer on the wall.\n52 bottles of beer on the wall, 52 bottles of beer.\nTake one down and pass it around, 51 bottles of beer on the wall.\n51 bottles of beer on the wall, 51 bottles of beer.\nTake one down and pass it around, 50 bottles of beer on the wall.\n50 bottles of beer on the wall, 50 bottles of beer.\nTake one down and pass it around, 49 bottles of beer on the wall.\n49 bottles of beer on the wall, 49 bottles of beer.\nTake one down and pass it around, 48 bottles of beer on the wall.\n48 bottles of beer on the wall, 48 bottles of beer.\nTake one down and pass it around, 47 bottles of beer on the wall.\n47 bottles of beer on the wall, 47 bottles of beer.\nTake one down and pass it around, 46 bottles of beer on the wall.\n46 bottles of beer on the wall, 46 bottles of beer.\nTake one down and pass it around, 45 bottles of beer on the wall.\n45 bottles of beer on the wall, 45 bottles of beer.\nTake one down and pass it around, 44 bottles of beer on the wall.\n44 bottles of beer on the wall, 44 bottles of beer.\nTake one down and pass it around, 43 bottles of beer on the wall.\n43 bottles of beer on the wall, 43 bottles of beer.\nTake one down and pass it around, 42 bottles of beer on the wall.\n42 bottles of beer on the wall, 42 bottles of beer.\nTake one down and pass it around, 41 bottles of beer on the wall.\n41 bottles of beer on the wall, 41 bottles of beer.\nTake one down and pass it around, 40 bottles of beer on the wall.\n40 bottles of beer on the wall, 40 bottles of beer.\nTake one down and pass it around, 39 bottles of beer on the wall.\n39 bottles of beer on the wall, 39 bottles of beer.\nTake one down and pass it around, 38 bottles of beer on the wall.\n38 bottles of beer on the wall, 38 bottles of beer.\nTake one down and pass it around, 37 bottles of beer on the wall.\n37 bottles of beer on the wall, 37 bottles of beer.\nTake one down and pass it around, 36 bottles of beer on the wall.\n36 bottles of beer on the wall, 36 bottles of beer.\nTake one down and pass it around, 35 bottles of beer on the wall.\n35 bottles of beer on the wall, 35 bottles of beer.\nTake one down and pass it around, 34 bottles of beer on the wall.\n34 bottles of beer on the wall, 34 bottles of beer.\nTake one down and pass it around, 33 bottles of beer on the wall.\n33 bottles of beer on the wall, 33 bottles of beer.\nTake one down and pass it around, 32 bottles of beer on the wall.\n32 bottles of beer on the wall, 32 bottles of beer.\nTake one down and pass it around, 31 bottles of beer on the wall.\n31 bottles of beer on the wall, 31 bottles of beer.\nTake one down and pass it around, 30 bottles of beer on the wall.\n30 bottles of beer on the wall, 30 bottles of beer.\nTake one down and pass it around, 29 bottles of beer on the wall.\n29 bottles of beer on the wall, 29 bottles of beer.\nTake one down and pass it around, 28 bottles of beer on the wall.\n28 bottles of beer on the wall, 28 bottles of beer.\nTake one down and pass it around, 27 bottles of beer on the wall.\n27 bottles of beer on the wall, 27 bottles of beer.\nTake one down and pass it around, 26 bottles of beer on the wall.\n26 bottles of beer on the wall, 26 bottles of beer.\nTake one down and pass it around, 25 bottles of beer on the wall.\n25 bottles of beer on the wall, 25 bottles of beer.\nTake one down and pass it around, 24 bottles of beer on the wall.\n24 bottles of beer on the wall, 24 bottles of beer.\nTake one down and pass it around, 23 bottles of beer on the wall.\n23 bottles of beer on the wall, 23 bottles of beer.\nTake one down and pass it around, 22 bottles of beer on the wall.\n22 bottles of beer on the wall, 22 bottles of beer.\nTake one down and pass it around, 21 bottles of beer on the wall.\n21 bottles of beer on the wall, 21 bottles of beer.\nTake one down and pass it around, 20 bottles of beer on the wall.\n20 bottles of beer on the wall, 20 bottles of beer.\nTake one down and pass it around, 19 bottles of beer on the wall.\n19 bottles of beer on the wall, 19 bottles of beer.\nTake one down and pass it around, 18 bottles of beer on the wall.\n18 bottles of beer on the wall, 18 bottles of beer.\nTake one down and pass it around, 17 bottles of beer on the wall.\n17 bottles of beer on the wall, 17 bottles of beer.\nTake one down and pass it around, 16 bottles of beer on the wall.\n16 bottles of beer on the wall, 16 bottles of beer.\nTake one down and pass it around, 15 bottles of beer on the wall.\n15 bottles of beer on the wall, 15 bottles of beer.\nTake one down and pass it around, 14 bottles of beer on the wall.\n14 bottles of beer on the wall, 14 bottles of beer.\nTake one down and pass it around, 13 bottles of beer on the wall.\n13 bottles of beer on the wall, 13 bottles of beer.\nTake one down and pass it around, 12 bottles of beer on the wall.\n12 bottles of beer on the wall, 12 bottles of beer.\nTake one down and pass it around, 11 bottles of beer on the wall.\n11 bottles of beer on the wall, 11 bottles of beer.\nTake one down and pass it around, 10 bottles of beer on the wall.\n10 bottles of beer on the wall, 10 bottles of beer.\nTake one down and pass it around, 9 bottles of beer on the wall.\n9 bottles of beer on the wall, 9 bottles of beer.\nTake one down and pass it around, 8 bottles of beer on the wall.\n8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n7 bottles of beer on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of beer on the wall.\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one down and pass it around, 5 bottles of beer on the wall.\n5 bottles of beer on the wall, 5 bottles of beer.\nTake one down and pass it around, 4 bottles of beer on the wall.\n4 bottles of beer on the wall, 4 bottles of beer.\nTake one down and pass it around, 3 bottles of beer on the wall.\n3 bottles of beer on the wall, 3 bottles of beer.\nTake one down and pass it around, 2 bottles of beer on the wall.\n2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n1 bottle of beer on the wall, 1 bottle of beer.\nTake one down and pass it around, no more bottles of beer on the wall.\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\")\n  }}else{return(NA)}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288536,"user_id":null,"body":"hq9 <- function( code ) {\n  if (code == \"H\") {\n    output = \"Hello World!\"\n  } else if (code == \"Q\") {\n    output = code\n  } else if (code == \"9\") {\n    output = '99 bottles of beer on the wall, 99 bottles of beer.\nTake one down and pass it around, 98 bottles of beer on the wall.\n98 bottles of beer on the wall, 98 bottles of beer.\nTake one down and pass it around, 97 bottles of beer on the wall.\n97 bottles of beer on the wall, 97 bottles of beer.\nTake one down and pass it around, 96 bottles of beer on the wall.\n96 bottles of beer on the wall, 96 bottles of beer.\nTake one down and pass it around, 95 bottles of beer on the wall.\n95 bottles of beer on the wall, 95 bottles of beer.\nTake one down and pass it around, 94 bottles of beer on the wall.\n94 bottles of beer on the wall, 94 bottles of beer.\nTake one down and pass it around, 93 bottles of beer on the wall.\n93 bottles of beer on the wall, 93 bottles of beer.\nTake one down and pass it around, 92 bottles of beer on the wall.\n92 bottles of beer on the wall, 92 bottles of beer.\nTake one down and pass it around, 91 bottles of beer on the wall.\n91 bottles of beer on the wall, 91 bottles of beer.\nTake one down and pass it around, 90 bottles of beer on the wall.\n90 bottles of beer on the wall, 90 bottles of beer.\nTake one down and pass it around, 89 bottles of beer on the wall.\n89 bottles of beer on the wall, 89 bottles of beer.\nTake one down and pass it around, 88 bottles of beer on the wall.\n88 bottles of beer on the wall, 88 bottles of beer.\nTake one down and pass it around, 87 bottles of beer on the wall.\n87 bottles of beer on the wall, 87 bottles of beer.\nTake one down and pass it around, 86 bottles of beer on the wall.\n86 bottles of beer on the wall, 86 bottles of beer.\nTake one down and pass it around, 85 bottles of beer on the wall.\n85 bottles of beer on the wall, 85 bottles of beer.\nTake one down and pass it around, 84 bottles of beer on the wall.\n84 bottles of beer on the wall, 84 bottles of beer.\nTake one down and pass it around, 83 bottles of beer on the wall.\n83 bottles of beer on the wall, 83 bottles of beer.\nTake one down and pass it around, 82 bottles of beer on the wall.\n82 bottles of beer on the wall, 82 bottles of beer.\nTake one down and pass it around, 81 bottles of beer on the wall.\n81 bottles of beer on the wall, 81 bottles of beer.\nTake one down and pass it around, 80 bottles of beer on the wall.\n80 bottles of beer on the wall, 80 bottles of beer.\nTake one down and pass it around, 79 bottles of beer on the wall.\n79 bottles of beer on the wall, 79 bottles of beer.\nTake one down and pass it around, 78 bottles of beer on the wall.\n78 bottles of beer on the wall, 78 bottles of beer.\nTake one down and pass it around, 77 bottles of beer on the wall.\n77 bottles of beer on the wall, 77 bottles of beer.\nTake one down and pass it around, 76 bottles of beer on the wall.\n76 bottles of beer on the wall, 76 bottles of beer.\nTake one down and pass it around, 75 bottles of beer on the wall.\n75 bottles of beer on the wall, 75 bottles of beer.\nTake one down and pass it around, 74 bottles of beer on the wall.\n74 bottles of beer on the wall, 74 bottles of beer.\nTake one down and pass it around, 73 bottles of beer on the wall.\n73 bottles of beer on the wall, 73 bottles of beer.\nTake one down and pass it around, 72 bottles of beer on the wall.\n72 bottles of beer on the wall, 72 bottles of beer.\nTake one down and pass it around, 71 bottles of beer on the wall.\n71 bottles of beer on the wall, 71 bottles of beer.\nTake one down and pass it around, 70 bottles of beer on the wall.\n70 bottles of beer on the wall, 70 bottles of beer.\nTake one down and pass it around, 69 bottles of beer on the wall.\n69 bottles of beer on the wall, 69 bottles of beer.\nTake one down and pass it around, 68 bottles of beer on the wall.\n68 bottles of beer on the wall, 68 bottles of beer.\nTake one down and pass it around, 67 bottles of beer on the wall.\n67 bottles of beer on the wall, 67 bottles of beer.\nTake one down and pass it around, 66 bottles of beer on the wall.\n66 bottles of beer on the wall, 66 bottles of beer.\nTake one down and pass it around, 65 bottles of beer on the wall.\n65 bottles of beer on the wall, 65 bottles of beer.\nTake one down and pass it around, 64 bottles of beer on the wall.\n64 bottles of beer on the wall, 64 bottles of beer.\nTake one down and pass it around, 63 bottles of beer on the wall.\n63 bottles of beer on the wall, 63 bottles of beer.\nTake one down and pass it around, 62 bottles of beer on the wall.\n62 bottles of beer on the wall, 62 bottles of beer.\nTake one down and pass it around, 61 bottles of beer on the wall.\n61 bottles of beer on the wall, 61 bottles of beer.\nTake one down and pass it around, 60 bottles of beer on the wall.\n60 bottles of beer on the wall, 60 bottles of beer.\nTake one down and pass it around, 59 bottles of beer on the wall.\n59 bottles of beer on the wall, 59 bottles of beer.\nTake one down and pass it around, 58 bottles of beer on the wall.\n58 bottles of beer on the wall, 58 bottles of beer.\nTake one down and pass it around, 57 bottles of beer on the wall.\n57 bottles of beer on the wall, 57 bottles of beer.\nTake one down and pass it around, 56 bottles of beer on the wall.\n56 bottles of beer on the wall, 56 bottles of beer.\nTake one down and pass it around, 55 bottles of beer on the wall.\n55 bottles of beer on the wall, 55 bottles of beer.\nTake one down and pass it around, 54 bottles of beer on the wall.\n54 bottles of beer on the wall, 54 bottles of beer.\nTake one down and pass it around, 53 bottles of beer on the wall.\n53 bottles of beer on the wall, 53 bottles of beer.\nTake one down and pass it around, 52 bottles of beer on the wall.\n52 bottles of beer on the wall, 52 bottles of beer.\nTake one down and pass it around, 51 bottles of beer on the wall.\n51 bottles of beer on the wall, 51 bottles of beer.\nTake one down and pass it around, 50 bottles of beer on the wall.\n50 bottles of beer on the wall, 50 bottles of beer.\nTake one down and pass it around, 49 bottles of beer on the wall.\n49 bottles of beer on the wall, 49 bottles of beer.\nTake one down and pass it around, 48 bottles of beer on the wall.\n48 bottles of beer on the wall, 48 bottles of beer.\nTake one down and pass it around, 47 bottles of beer on the wall.\n47 bottles of beer on the wall, 47 bottles of beer.\nTake one down and pass it around, 46 bottles of beer on the wall.\n46 bottles of beer on the wall, 46 bottles of beer.\nTake one down and pass it around, 45 bottles of beer on the wall.\n45 bottles of beer on the wall, 45 bottles of beer.\nTake one down and pass it around, 44 bottles of beer on the wall.\n44 bottles of beer on the wall, 44 bottles of beer.\nTake one down and pass it around, 43 bottles of beer on the wall.\n43 bottles of beer on the wall, 43 bottles of beer.\nTake one down and pass it around, 42 bottles of beer on the wall.\n42 bottles of beer on the wall, 42 bottles of beer.\nTake one down and pass it around, 41 bottles of beer on the wall.\n41 bottles of beer on the wall, 41 bottles of beer.\nTake one down and pass it around, 40 bottles of beer on the wall.\n40 bottles of beer on the wall, 40 bottles of beer.\nTake one down and pass it around, 39 bottles of beer on the wall.\n39 bottles of beer on the wall, 39 bottles of beer.\nTake one down and pass it around, 38 bottles of beer on the wall.\n38 bottles of beer on the wall, 38 bottles of beer.\nTake one down and pass it around, 37 bottles of beer on the wall.\n37 bottles of beer on the wall, 37 bottles of beer.\nTake one down and pass it around, 36 bottles of beer on the wall.\n36 bottles of beer on the wall, 36 bottles of beer.\nTake one down and pass it around, 35 bottles of beer on the wall.\n35 bottles of beer on the wall, 35 bottles of beer.\nTake one down and pass it around, 34 bottles of beer on the wall.\n34 bottles of beer on the wall, 34 bottles of beer.\nTake one down and pass it around, 33 bottles of beer on the wall.\n33 bottles of beer on the wall, 33 bottles of beer.\nTake one down and pass it around, 32 bottles of beer on the wall.\n32 bottles of beer on the wall, 32 bottles of beer.\nTake one down and pass it around, 31 bottles of beer on the wall.\n31 bottles of beer on the wall, 31 bottles of beer.\nTake one down and pass it around, 30 bottles of beer on the wall.\n30 bottles of beer on the wall, 30 bottles of beer.\nTake one down and pass it around, 29 bottles of beer on the wall.\n29 bottles of beer on the wall, 29 bottles of beer.\nTake one down and pass it around, 28 bottles of beer on the wall.\n28 bottles of beer on the wall, 28 bottles of beer.\nTake one down and pass it around, 27 bottles of beer on the wall.\n27 bottles of beer on the wall, 27 bottles of beer.\nTake one down and pass it around, 26 bottles of beer on the wall.\n26 bottles of beer on the wall, 26 bottles of beer.\nTake one down and pass it around, 25 bottles of beer on the wall.\n25 bottles of beer on the wall, 25 bottles of beer.\nTake one down and pass it around, 24 bottles of beer on the wall.\n24 bottles of beer on the wall, 24 bottles of beer.\nTake one down and pass it around, 23 bottles of beer on the wall.\n23 bottles of beer on the wall, 23 bottles of beer.\nTake one down and pass it around, 22 bottles of beer on the wall.\n22 bottles of beer on the wall, 22 bottles of beer.\nTake one down and pass it around, 21 bottles of beer on the wall.\n21 bottles of beer on the wall, 21 bottles of beer.\nTake one down and pass it around, 20 bottles of beer on the wall.\n20 bottles of beer on the wall, 20 bottles of beer.\nTake one down and pass it around, 19 bottles of beer on the wall.\n19 bottles of beer on the wall, 19 bottles of beer.\nTake one down and pass it around, 18 bottles of beer on the wall.\n18 bottles of beer on the wall, 18 bottles of beer.\nTake one down and pass it around, 17 bottles of beer on the wall.\n17 bottles of beer on the wall, 17 bottles of beer.\nTake one down and pass it around, 16 bottles of beer on the wall.\n16 bottles of beer on the wall, 16 bottles of beer.\nTake one down and pass it around, 15 bottles of beer on the wall.\n15 bottles of beer on the wall, 15 bottles of beer.\nTake one down and pass it around, 14 bottles of beer on the wall.\n14 bottles of beer on the wall, 14 bottles of beer.\nTake one down and pass it around, 13 bottles of beer on the wall.\n13 bottles of beer on the wall, 13 bottles of beer.\nTake one down and pass it around, 12 bottles of beer on the wall.\n12 bottles of beer on the wall, 12 bottles of beer.\nTake one down and pass it around, 11 bottles of beer on the wall.\n11 bottles of beer on the wall, 11 bottles of beer.\nTake one down and pass it around, 10 bottles of beer on the wall.\n10 bottles of beer on the wall, 10 bottles of beer.\nTake one down and pass it around, 9 bottles of beer on the wall.\n9 bottles of beer on the wall, 9 bottles of beer.\nTake one down and pass it around, 8 bottles of beer on the wall.\n8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n7 bottles of beer on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of beer on the wall.\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one down and pass it around, 5 bottles of beer on the wall.\n5 bottles of beer on the wall, 5 bottles of beer.\nTake one down and pass it around, 4 bottles of beer on the wall.\n4 bottles of beer on the wall, 4 bottles of beer.\nTake one down and pass it around, 3 bottles of beer on the wall.\n3 bottles of beer on the wall, 3 bottles of beer.\nTake one down and pass it around, 2 bottles of beer on the wall.\n2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n1 bottle of beer on the wall, 1 bottle of beer.\nTake one down and pass it around, no more bottles of beer on the wall.\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.'\n  } else {\n    output = NA\n  }\n  output\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5933a1f8552bc2750a0000ed":[{"id":288537,"user_id":null,"body":"nth_even <- function(n) {\n  n*2-2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288538,"user_id":null,"body":"nth_even <- function(n) {\n    return((n-1)*2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288539,"user_id":null,"body":"nth_even <- function(n) {\n  # your code here\n  even = (n-1)*2\n  even\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288540,"user_id":null,"body":"nth_even <- function(n) {\n  print(n * 2 - 2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288541,"user_id":null,"body":"nth_even <- function(n) {\n  # your code here\n  ans = 2*n - 2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288542,"user_id":null,"body":"nth_even <- function(n) {\n  return(2 * n - 2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288543,"user_id":null,"body":"nth_even <- function(n) {\n  nth <- (2*(n-1))\n  return (nth)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288544,"user_id":null,"body":"nth_even <- function(n) 2 * n - 2","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288545,"user_id":null,"body":"nth_even <- function(n) {\n  y = 2*n-2\n  return(y)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288546,"user_id":null,"body":"nth_even <- function(n) \n{ n-1->m\n  m*2->result\n  return(result)\n  # your code here\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59342039eb450e39970000a6":[{"id":288547,"user_id":527,"body":"odd_count <- function(n) {\n  n %\/% 2\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288548,"user_id":149,"body":"odd_count = function(n) n %\/% 2","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288549,"user_id":null,"body":"odd_count <- function(n) {\n  return(trunc(n\/2))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288550,"user_id":null,"body":"odd_count <- function(n) {\n  \nif(n %% 2 == 0 & (n-1) %% 5 != 0 ){\n  \n  print(((n-2)\/2)+1)\n  \n  \n}else if(n %% 2 == 1){\n  \n  print(((n-3)\/2)+1)\n  \n}else if( (n-1) %% 5 == 0 ){\n  \n  print( ((n-2)\/2)+1)\n  \n}\n}\n","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288551,"user_id":null,"body":"odd_count <- function(n) {\n  return <- floor(n \/ 2);\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288552,"user_id":null,"body":"odd_count <- function(n) {\n  \n  if(n > 0 && n %% 2 == 0){\n    n \/ 2\n  } else{\n    if(n < 0 && n %% 2 == 0){\n      (n \/ 2) * (-1)\n    } else{\n      if(n > 0 && n %% 2 == 1){\n        (n - 1) \/ 2\n      } else {\n        if(n < 0 && n %% 2 == 1){\n          (n * (-1) -1) \/ 2 + 1\n        }\n      }\n    }\n  }\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288553,"user_id":null,"body":"odd_count <- function(n) {\n   return = n%\/% 2\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288554,"user_id":null,"body":"odd_count <- function(n) {  \n    a =  (n - n%%1)  \n    if(a %% 2 == 1)\n      a = a -1\n    return  = a\/2 ;\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288555,"user_id":null,"body":"odd_count <- function(n) {(result <-floor(n\/2))\n                           \n  print(result)\n\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288556,"user_id":null,"body":"odd_count <- function(n) {\n  (n - n%%2) \/ 2\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5962d557be3f8bb0ca000010":[{"id":288557,"user_id":null,"body":"clean_mean <- function(sam, cutoff){\n  while(TRUE) {\n    av <- mean(sam)\n    new_samp <- sam[abs(sam - av) < cutoff * sqrt(sum((sam - av)^2)\/length(sam))]\n    print(new_samp)\n    if (length(new_samp) == length(sam)) {\n      return(round(mean(new_samp), 2))\n    }\n    sam <- new_samp\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288558,"user_id":null,"body":"clean_mean <- function(sam, cutoff){\n  repeat {\n    m <- mean(sam)\n    s <- sqrt(sum((sam - m)^2) \/ length(sam))\n    check <- abs(sam - m) \/ s < cutoff\n    if(all(check)) break\n    sam <- sam[check]\n  }\n  return(round(mean(sam), 2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288559,"user_id":null,"body":"library(tidyverse)\n\n#' @title calculate mean of a sample without outliers\n#' @param sam a sample\n#' @param cutoff \u8bc4\u4f30\u662f\u5426\u4e3a outlier \u7684\u53c2\u6570\n#'    \u5f53\u4e00\u4e2a\u6837\u672c\u70b9\u7684\u79bb\u5dee\u5927\u4e8e\u6807\u51c6\u5dee\u7684 cutoff \u500d\u65f6\uff0c\u8ba4\u4e3a\u5b83\u662f outlier\nclean_mean <- function(sam, cutoff) {\n  while (TRUE) {\n    m <- mean(sam)\n    n <- length(sam)\n    std <- sqrt((1 \/ n) * sum((sam - m)^2))\n\n    n_outlier <- sam %>%\n      keep(~ abs(.x - m) > cutoff * std) %>%\n      length()\n\n    if (n_outlier == 0) {\n      return(m %>% round(2))\n    }\n\n    sam <- sam %>%\n      discard(~ abs(.x - m) > cutoff * std)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288560,"user_id":null,"body":"\nlibrary(tidyverse)\nclean_mean <- function(sam, cutoff){\n  while (TRUE) {\n    std <- (sam - mean(sam))^2 %>%\n      sum() %>%\n      `\/`(length(sam)) %>%\n      sqrt()\n\n    n_outlier <- sam %>%\n      keep(function(k) {\n        abs(k - mean(sam)) > cutoff * std\n      }) %>%\n      length()\n\n    if (n_outlier == 0) {\n      return(mean(sam) %>% round(2))\n    }\n\n    sam <- sam %>%\n      discard(function(k) {\n        abs(k - mean(sam)) > cutoff * std\n      })\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288561,"user_id":null,"body":"\nlibrary(tidyverse)\n\n\nclean_mean <- function(sam, cutoff) {\n  std <- (sam - mean(sam))^2 %>%\n    sum() %>%\n    `\/`(length(sam)) %>%\n    sqrt()\n\n  n_outlier <- sam %>%\n    keep(function(k) {\n      abs(k - mean(sam)) > cutoff * std\n    }) %>%\n    length()\n\n  while (n_outlier > 0) {\n    sam <- sam %>%\n      discard(function(k) {\n        abs(k - mean(sam)) > cutoff * std\n      })\n\n    std <- (sam - mean(sam))^2 %>%\n      sum() %>%\n      `\/`(length(sam)) %>%\n      sqrt()\n\n    n_outlier <- sam %>%\n      keep(function(k) {\n        abs(k - mean(sam)) > cutoff * std\n      }) %>%\n      length()\n  }\n\n  # sam\n  mean(sam) %>% round(2)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288562,"user_id":null,"body":"clean_mean <- function(sam, cutoff){\nsdd <- sqrt((sd(sam)**2*(length(sam)-1))\/length(sam))\n\nwhile (length(which(sam > mean(sam) + cutoff*sdd)) + length(which(sam < mean(sam) - cutoff*sdd)) != 0) {\n  if(length(which(sam > mean(sam) + cutoff*sdd))){\n    sam <- sam[-which(sam > cutoff*sdd + mean(sam))]\n  }else if(length(which(sam < mean(sam) - cutoff*sdd))){\n    sam <- sam[-(which(sam < mean(sam) - cutoff*sdd))]\n  }\n  sdd <- sqrt((sd(sam)**2*(length(sam)-1))\/length(sam))\n}\nreturn(round(mean(sam),2))\n\n # Your code here\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288563,"user_id":null,"body":"clean_mean <- function(sam, cutoff){\n  mean <- sum(sam)\/length(sam)\n  sd <- sqrt(1\/length(sam) * sum((sam - mean(sam))^2))\n  # if already clean\n  if(sum(sam > mean + cutoff * sd) + sum(sam < mean - cutoff * sd) == 0){\n    return(round(mean, 2))\n  }  \n  # clean and check again\n  sam <- sam[!(sam > mean + cutoff * sd | sam < mean - cutoff * sd)]\n  clean_mean(sam, cutoff)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288564,"user_id":null,"body":"clean_mean <- function(sam, cutoff){\n  sdev <- sqrt(sum((sam - mean(sam))^2)\/length(sam))\n  cond <- abs(sam - mean(sam)) < sdev * cutoff\n  if (all(cond)) {\n    return(round(mean(sam),2))\n  } else {\n    clean_mean(sam[cond], cutoff)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288565,"user_id":null,"body":"clean_mean <- function(sam, cutoff){\n  check <- c(mean(sam) - sqrt(sum((sam - mean(sam))^2)\/length(sam))*cutoff, \n             mean(sam) + sqrt(sum((sam - mean(sam))^2)\/length(sam))*cutoff)\n  cond <- sam > check[1] & sam < check[2]\n  if (all(cond)) {\n    return(round(mean(sam),2))\n  } else {\n    clean_mean(sam[cond], cutoff)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288566,"user_id":null,"body":"clean_mean <- function(sam, cutoff) {\n  repeat {\n    temp <- sqrt(mean((sam-mean(sam))^2))\n    csam <- sam[sam > mean(sam) - cutoff * temp & sam <= mean(sam) + cutoff * temp]\n    if (length(csam) == length(sam)) {\n      return(round(mean(csam), 2))\n    } else {\n      sam <- csam\n    }\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"596c6eb85b0f515834000049":[{"id":288567,"user_id":null,"body":"replace_dots <- function(s){\n  gsub(\".\", \"-\", s, fixed = TRUE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288568,"user_id":421,"body":"replace_dots <- function(s){\n  gsub(\"\\\\.\", \"-\", s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288569,"user_id":null,"body":"library(stringr)\nreplace_dots <- function(s){\n  str_replace_all(s,\"\\\\.\", \"-\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288570,"user_id":null,"body":"replace_dots <- function(s){\n  s <- unlist(strsplit(s, ''))\n  s[which(s == '.')] = '-'\n  return(paste(s, collapse = ''))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288571,"user_id":null,"body":"replace_dots <- function(s){\n  if (is.null(s)){\n    return(s)\n  } else {\n  gsub(\".\", \"-\",s,fixed=TRUE)\n}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288572,"user_id":53,"body":"replace_dots <- function(s){\n  gsub(\"[.]\", \"-\", s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"596ddaccdd42c1cf0e00005c":[{"id":288573,"user_id":2334,"body":"calc <- function(arr) {\n  arr[arr>0] = arr[arr>0]**2\n  arr[seq_along(arr)%%3 == 0] = arr[seq_along(arr)%%3 == 0]*3\n  arr[seq_along(arr)%%5 == 0] = -arr[seq_along(arr)%%5 == 0]\n  sum(arr)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288574,"user_id":828,"body":"calc <- function(arr) {\n  arr[arr > 0] <- arr[arr > 0] ** 2\n  if (length(arr) > 2)\n    arr[seq(3, length(arr), 3)] <- arr[seq(3, length(arr), 3)] * 3\n  if (length(arr) > 4)\n    arr[seq(5, length(arr), 5)] <- -arr[seq(5, length(arr), 5)]\n  sum(arr)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288575,"user_id":2584,"body":"calc <- function(arr) {\n  sum(\n    arr *\n      ifelse(arr > 0, arr, 1) *\n      rep_len(c(1, 1, 3), length(arr)) *\n      rep_len(c(1, 1, 1, 1, -1), length(arr))\n  )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288576,"user_id":null,"body":"calc <- function(arr) {\n    arr2 <- ifelse(arr > 0, arr**2, arr)\n    arr3 <- ifelse(1:length(arr2) %% 3== 0, arr2 * 3, arr2)\n    sum(ifelse(1:length(arr3) %% 5== 0, arr3 * -1, arr3))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288577,"user_id":null,"body":"calc <- function(arr) {\n  arr[arr>0] <- arr[arr>0]^2\n  \n  seq3 <- seq(0, length(arr), 3)[-1]\n  arr[seq3] <- arr[seq3]*3\n  \n  seq5 <- seq(0, length(arr), 5)[-1]\n  arr[seq5] <- arr[seq5]*-1\n  \n  return(sum(arr))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288578,"user_id":null,"body":"calc <- function(arr) {\n  print(arr)\n  arr[arr > 0] <- arr[arr > 0]**2\n  \n  l <- length(arr)\n  if (l<3){\n      return(sum(arr))\n  } else if (l<5){\n    arr[seq(3,l,3)] <- arr[seq(3,l,3)]*3\n    return(sum(arr))\n  } else {\n      arr[seq(3,l,3)] <- arr[seq(3,l,3)]*3\n  arr[seq(5,l,5)] <- arr[seq(5,l,5)]*(-1)\n  print(arr)\n  return(sum(arr))\n  }\n  \n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288579,"user_id":null,"body":"calc <- function(arr) {\nx <- c(arr)\nx[x>0] <- x[x>0]^2\n\nlargo3 <- floor(length(x)\/3)\nsecuencia3 <- seq(from=0, to=largo3*3, by=3)\nx[secuencia3] <- x[secuencia3]*3\n\nlargo5 <- floor(length(x)\/5)\nsecuencia5 <- seq(from=0, to=largo5*5, by=5)\n\nx[secuencia5] <- x[secuencia5]*(-1)\nprint(sum(x))\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288580,"user_id":null,"body":"calc <- function(arr) {\n  if (all(arr==0)) 0\n  else{\n    z <- which(arr>0)\n    arr[z] <- arr[z]*arr[z]\n    \n    if(length(arr)>=3)\n    {t<- seq(3, length(arr), 3)\n    arr[t] <- arr[t]*3}\n    \n    if (length(arr)>=5) \n    {f<- seq(5, length(arr), 5)\n    arr[f] <- arr[f]*-1}\n    \n    print(sum(arr))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288581,"user_id":null,"body":"calc <- function(arr) {\n    for (i in 1:length(arr)) {\n        if (arr[i] > 0) {\n            arr[i] = arr[i] ^ 2\n        }\n        if (i %% 3 == 0) {\n            arr[i] = arr[i] * 3\n        }\n        if (i %% 5 == 0) {\n            arr[i] = arr[i] * -1\n        }\n    }\n    sum(arr)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288582,"user_id":null,"body":"calc <- function(arr) {\n  ind1 <- which(arr > 0, arr.ind = TRUE)\n  arr[ind1] <- arr[ind1]^2\n  ind2 <- which(c(1:length(arr)) %% 3 == 0, arr.ind = TRUE)\n  arr[ind2] <- arr[ind2]*3\n  ind3 <- which(c(1:length(arr)) %% 5 == 0, arr.ind = TRUE)\n  arr[ind3] <- arr[ind3]*(-1)\n  sum(arr)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59706036f6e5d1e22d000016":[{"id":288583,"user_id":1566,"body":"words_to_marks <- function(s){\n  sum(utf8ToInt(s) - 96)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288584,"user_id":null,"body":"words_to_marks <- function(s){\n sum(match(unlist(strsplit(s, '')), letters))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288585,"user_id":null,"body":"words_to_marks <- function(s){\n  val <- utf8ToInt(s)-96;\n  return(sum(val))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288586,"user_id":828,"body":"words_to_marks <- function(s){\n  res <- 0\n  \n  for(i in strsplit(s, \"\")[[1]]) {\n    res <- res + which(letters == i)\n  }\n  \n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288587,"user_id":null,"body":"words_to_marks <- function(s){\n  return (sum(utf8ToInt(s) - 96))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288588,"user_id":1566,"body":"words_to_marks <- function(s){\n sum(utf8ToInt(s)) - nchar(s) * 96\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288589,"user_id":null,"body":"words_to_marks <- function(s){\n  result <- 0\n  alphabet <- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\")\n  for (i in strsplit(s, split=\"\")){\n    result <- result + match(i, alphabet)\n  }\n  return(sum(result))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288590,"user_id":null,"body":"words_to_marks <- function(s){\n  s = unlist(strsplit(s, \"\"))\n  a <- unlist(strsplit(\"abcdefghijklmnopqrstuvwxyz\", \"\"))\n  b <- NULL\n  for (i in 1:length(s)) b[i] <- match(s[i], a)\n  sum(b)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288591,"user_id":null,"body":"words_to_marks <- function(s){\n  char = unlist(strsplit(s,\"\"))\n  sum = 0\n  for(i in char){\n  sum = sum + which(letters == i)\n  }\n  sum\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288592,"user_id":null,"body":"words_to_marks <- function(s){\n  # Easy one\n  d1 = data.frame(a = letters,b = c(1:26))\n  d1$b[d1$a=='i']\n  d2 = list()\n  a = strsplit(s,'')[[1]]\n  for(i in 1:length(a)){\n    d2[i]=d1$b[d1$a==a[i]]\n  }\n  return(sum(unlist(d2)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5981a139f5471fd1b2000071":[{"id":288593,"user_id":421,"body":"task <- function(w, n, c) {\n  vec <- c(\"James\", \"John\", \"Robert\", \"Michael\", \"William\")\n  names(vec) = c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\n  paste0(\"It is \", w, \" today, \", vec[w], \", you have to work, you must spray \", n, \" trees and you need \", n * c, \" dollars to buy liquid\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288594,"user_id":null,"body":"task <- function(w, n, c) {\n  sprintf('It is %s today, %s, you have to work, you must spray %s trees and you need %s dollars to buy liquid', w, c(\"James\",\"John\",\"Robert\",\"Michael\", \"William\")[w == c(\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\")], n, n*c)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288595,"user_id":null,"body":"task <- function(w, n, c) {\n  schedule <- data.frame(\n    \"workday\" = c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"),\n    \"worker\" = c(\"James\", \"John\", \"Robert\", \"Michael\", \"William\")\n  )\n  name <- schedule$worker[schedule$workday == w]\n  return(sprintf('It is %s today, %s, you have to work, you must spray %s trees and you need %s dollars to buy liquid', w, name, n, n*c))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288596,"user_id":null,"body":"task <- function(w, n, c) {\n  m <- c('Monday','Tuesday','Wednesday','Thursday','Friday')\n  l <- c(\"James\", \"John\", \"Robert\", \"Michael\", \"William\" )\n  t <- n * c\n  return(paste0(\"It is \", w, \" today, \", l[m==w], \", you have to work, you must spray \", n, \" trees and you need \",t ,\" dollars to buy liquid\" ))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288597,"user_id":null,"body":"task <- function(w, n, c) {\n  names = c('Monday'='James', 'Tuesday'='John', 'Wednesday'='Robert','Thursday'='Michael','Friday'='William')\n  sprintf('It is %s today, %s, you have to work, you must spray %d trees and you need %d dollars to buy liquid', w, names[w], n, n*c)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288598,"user_id":null,"body":"task <- function(w, n, c) {\n  worker = c(\"Monday\" = \"James\", \"Tuesday\" = \"John\",\n               \"Wednesday\" = \"Robert\", \"Thursday\" = \"Michael\",\n               \"Friday\" = \"William\")\n  price = c * n\n  paste0(\"It is \", w, \" today, \", worker[w], \", you have to work, you must spray \",\n        n, \" trees and you need \", price, \" dollars to buy liquid\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288599,"user_id":null,"body":"task <- function(w, n, c) {\n  workers = c(Monday=\"James\", Tuesday=\"John\", Wednesday=\"Robert\", Thursday=\"Michael\",  Friday=\"William\")\n  paste(\"It is \", w, \" today, \", workers[w], \", you have to work, you must spray \", n, \" trees and you need \", c * n, \" dollars to buy liquid\", sep=\"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288600,"user_id":null,"body":"task <- function(w, n, c) {\n  workers<-c(\"James\",\"John\",\"Robert\",\"Michael\", \"William\")\n  weekday<-c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\n  worker<-workers[which(weekday==w)]\n  money<-n*c\n  sentence<-paste0(\"It is \", w, \" today, \", worker, \", you have to work, you must spray \", n, \" trees and you need \", money, \" dollars to buy liquid\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288601,"user_id":null,"body":"task <- function(w, n, c) {\n  switch(w,\n         Wednesday = paste(paste(paste(paste(\"It is Wednesday today, Robert, you have to work, you must spray\" , n , collapse = \"\") , \"trees and you need\"  , collapse = \"\")\n                                 , c*n , collapse = \"\") , \"dollars to buy liquid\" ,collapse = \"\") ,\n         Monday = paste(paste(paste(paste(\"It is Monday today, James, you have to work, you must spray\" , n , collapse = \"\") , \"trees and you need\"  , collapse = \"\")\n                              , c*n , collapse = \"\") , \"dollars to buy liquid\" ,collapse = \"\") ,\n          Friday = paste(paste(paste(paste(\"It is Friday today, William, you have to work, you must spray\" , n , collapse = \"\") , \"trees and you need\"  , collapse = \"\")\n                               , c*n , collapse = \"\") , \"dollars to buy liquid\" ,collapse = \"\") ,\n         Tuesday = paste(paste(paste(paste(\"It is Tuesday today, John, you have to work, you must spray\" , n , collapse = \"\") , \"trees and you need\"  , collapse = \"\")\n                               , c*n , collapse = \"\") , \"dollars to buy liquid\" ,collapse = \"\") ,\n         Thursday = paste(paste(paste(paste(\"It is Thursday today, Michael, you have to work, you must spray\" , n , collapse = \"\") , \"trees and you need\"  , collapse = \"\")\n                                , c*n , collapse = \"\") , \"dollars to buy liquid\" ,collapse = \"\")\n  )\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288602,"user_id":null,"body":"task <- function(w, n, c) {\n  name <- c(\"James\", \"John\", \"Robert\", \"Michael\", \"William\")\n  weekday <- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\n  sprintf(\"It is %s today, %s, you have to work, you must spray %d trees and you need %d dollars to buy liquid\", w, name[match(w, weekday)], n, n*c)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59824f384df1741e05000913":[{"id":288603,"user_id":null,"body":"most_common <- function(s){\n  l <- unlist(strsplit(s, \"\"))\n  \n  stl <- sort(vapply(l,\n                     function(b){\n                       sum(b == l, na.rm = TRUE)\n                     },\n                     integer(1)), decreasing = TRUE)\n  paste(names(stl), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288604,"user_id":2334,"body":"most_common <- function(s){\n  sfact <- factor(substring(s, 1:nchar(s), 1:nchar(s)))\n  paste(sfact[order(sapply(sfact, function(x) summary(sfact)[[x]]), decreasing = TRUE)], collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288605,"user_id":null,"body":"library(tidyverse)\n\nmost_common <- function(s){ \n  x <- s %>% strsplit('') %>% unlist\n  cnt <- x %>% as_tibble %>% group_by(value) %>% count(value)\n  lvl <- data.frame(value='x', n=0)\n  for (i in x) {\n    lvl <- rbind(lvl, data.frame(value=i, n=(cnt %>% filter(value == i) %>% .$n)))\n  }\n  lvl %>% mutate(n = as.numeric(n)) %>% arrange(-n) %>% filter(n > 0) %>% .$value %>% paste0(collapse = '')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288606,"user_id":null,"body":"most_common <- function(s){\n  # Bullshit explanation. \"s\" should be only 1 string\n  s <- paste0(s, collapse=\"\") \n  if (nchar(s) < 3) return(s)\n  t <- sort(table(strsplit(s, \"\")), decreasing=T)\n  p <- c()\n  for(i in unique(t)) {\n    p <- append(p, gsub(paste0(names(t[t != i]), collapse=\"|\"), \"\", s))\n  }\n  paste0(p, collapse=\"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288607,"user_id":null,"body":"most_common <- function(s){\n  x = unlist(strsplit(s, \"\"))\n  if (length(x) <= 2){\n    return( s )\n  } else {\n    c = table(x)\n    \n    changes = TRUE\n    while (changes){\n      changes = FALSE\n      for (i in 1:(length(x)-1)){\n        if (c[x[i]] < c[x[i+1]]){\n          x[c(i,i+1)] = x[c(i+1,i)]\n          changes = TRUE\n        }\n      }\n    }\n    return( paste(x, collapse = \"\") )\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288608,"user_id":null,"body":"most_common <- function(s){\n  chars<-s\n  if(length(s)==1) chars<-strsplit(s,\"\")[[1]]\n  t <- table(chars)\n  out <- c()\n  for(freq in sort(unique(unname(t)),decreasing=T)) {\n    out <- c(out,chars[chars %in% names(t[t==freq])])\n  }\n  paste0(out,collapse=\"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288609,"user_id":null,"body":"most_common <- function(s) {\n  s <- paste(s, collapse='')\n  if (s=='') return(s)\n  s <- strsplit(s, '')[[1]]; rs <- c()\n  freqs <- table(s)\n  for (freq in max(freqs):1) \n    for (l in s) if (freqs[l]==freq) rs <- c(rs, l)\n  paste(rs, collapse='')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288610,"user_id":null,"body":"most_common <- function(s) {\n  s <- paste(s, collapse='')\n  if (s=='') return(s)\n  s <- strsplit(s, '')[[1]]; rs <- c()\n  freqs <- sapply(unique(s), function(l) sum(s==l))\n  for (freq in max(freqs):1) \n    for (l in s) if (freqs[l]==freq) rs <- c(rs, l)\n  paste(rs, collapse='')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288611,"user_id":null,"body":"most_common <- function(s) {\n  if (paste(s)=='') return('')\n  s <- unlist(strsplit(s, ''))\n  rs <- c()\n  freqs <- sapply(unique(s), function(l) sum(s==l))\n  for (freq in max(freqs):1) \n    for (l in s) if (freqs[l]==freq) rs <- c(rs, l)\n  paste(rs, collapse='')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288612,"user_id":null,"body":"most_common <- function(s) {\n  if (paste(s, collapse='')=='') return('')\n  s <- unlist(strsplit(s, ''))\n  rs <- c()\n  freqs <- sapply(unique(s), function(l) sum(s==l))\n  for (freq in max(freqs):1) {\n    for (l in s) if (freqs[l]==freq) rs <- c(rs, l)\n    s <- s[s!=freq]\n  }    \n  paste(rs, collapse='')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59971e64bfccc70748000068":[{"id":288613,"user_id":491,"body":"convergence <- function (n, base = 1) {\n  update <- function (n) n + Reduce(`*`, as.numeric(Filter(function (c) c != \"0\", unlist(strsplit(x = as.character(n), split = '')))))\n  if (n == base) return(0)\n  if (n < base) return(convergence(update(n), base) + 1)\n  if (n > base) return(convergence(n, update(base)))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288614,"user_id":null,"body":"convergence <- function(n){\n  get_digits <- function(n) {\n    if (!n) {\n      integer(0)\n    } else {\n      c(n %% 10, Recall(n %\/% 10))\n    }\n  }\n  \n  get_next_val <- function(n) {\n    d <- get_digits(n)\n    n + prod(d[d > 0])\n  }\n  \n  m <- 1\n  i <- 0\n  while (m != n) {\n    if (m < n) {\n      m <- get_next_val(m)\n    } else {\n      n <- get_next_val(n)\n      i <- i + 1\n    }\n\n  }\n  i\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288615,"user_id":null,"body":"convergence <- function(n){\n  base_series <- 1\n  test_series <- n\n  i <- 1\n  while(!any(test_series %in% base_series)){\n    if (base_series[i] < 10){\n      base_series <- c(base_series, base_series[i]*2)\n    } else {\n      digits <- as.numeric(strsplit(as.character(base_series[i]), \"\")[[1]])\n      digits <- digits[digits != 0]\n      base_series <- c(base_series, prod(digits) + base_series[i])\n    }\n    if (test_series[i] < 10){\n      test_series <- c(test_series, test_series[i]*2)\n    } else {\n      digits <- as.numeric(strsplit(as.character(test_series[i]), \"\")[[1]])\n      digits <- digits[digits != 0]\n      test_series <- c(test_series, prod(digits) + test_series[i])\n    }\n    i = i+1\n  }\n  return(which(test_series %in% base_series) - 1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288616,"user_id":132,"body":"library(stringr)\nnxt <- function(n){\n  m <- str_split(gsub('0','',as.character(n)),'')\n  l <- c()\n  for(i in m) l <- c(l,as.integer(i))\n  n <- ifelse(n<10,2*n,n+prod(l))\n}\nb <- c(1)\nfor(i in 1:1000) b <- c(b,nxt(b[length(b)]))\n\nconvergence <- function(n, cnt=0){\n  while(!n %in% b){\n    n <- nxt(n)\n    cnt <- cnt+1\n  }\n  return(cnt)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288617,"user_id":null,"body":"convergence <- function(n){\n  decompose <- function(num) {\n    if (num < 10) {\n      return(num + num)\n    } else {\n      sum <- 1\n      newNum <- num\n      length <- nchar(toString((num)))\n      for(i in 1:length) {\n        rest <- (newNum %% 10)\n        if (rest != 0) {\n          sum <- sum * rest\n        }\n        newNum <- floor(newNum \/ 10)\n      }\n      return(num + sum)\n    }\n  }\n  internalCOmpare <- c(decompose(1))\n  count <- 1\n  newNum <- c(n)\n  \n  while (tail(newNum, n=1) %in% internalCOmpare == FALSE & tail(internalCOmpare, n=1) %in% newNum == FALSE) {\n    newNum <- c(newNum, decompose(newNum[count]))\n    count <- count + 1\n    internalCOmpare <- c(internalCOmpare, decompose(internalCOmpare[count - 1]))\n  }\n  cosa <- match(tail(internalCOmpare, n=1), newNum) - 1\n  if (is.na(cosa)){\n    return(count-1)\n  }\n  \n  return(cosa)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288618,"user_id":null,"body":"gen_seq <- function(start,base=c()){\n  out <- integer(1000)\n  out[1] <- start\n  for(i in 2:1000){\n    c <- as.integer(strsplit(toString(out[i-1]),\"\")[[1]])\n    out[i] <- out[i-1]+prod(c[c!=0])\n    if(start != 1){\n      if(out[i] %in% base){\n        return(i-1)\n      }\n    }\n  }\n  out\n}\n\nconvergence <- function(n){\n  gen_seq(start=n, base=gen_seq(start=1))\n}\n\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288619,"user_id":null,"body":"convergence <- function(n){\n  base <- c(1, 2, 4, 8, 16, 22, 26, 38, 62, 74, 102, 104, 108, 116, 122, 126, 138, 162, \n            174, 202, 206, 218, 234, 258, 338, 410, 414, 430, 442, 474, 586)\n  new <- c(n) \n  counter <- 0\n  while(sum(new %in% base) == 0){\n    newdigits <- floor(log10(new[length(new)])) + 1\n    if(newdigits == 1){\n      new <- append(new, new[length(new)] + new[length(new)]) \n    }\n    if(newdigits != 1){\n      last <- as.numeric(unlist(strsplit(as.character(new[length(new)]), \"\")))\n      last <- prod(last[!(last == 0)])\n      new <- append(new, new[length(new)] + last)\n      \n    }\n    counter <- counter + 1\n    blast <- as.numeric(unlist(strsplit(as.character(base[length(base)]), \"\")))\n    blast <- prod(blast[!(blast == 0)])\n    base <- append(base, base[length(base)] + blast)\n  }\n  return(min(which(new %in% base)) - 1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288620,"user_id":null,"body":"series <- function(n){\n  x <- as.numeric(unlist(strsplit(as.character(n),'')))\n  n+prod(x[which(x>0)])\n  }\n\nconvergence <- function(n){\n  base <- 1\n  repeat{\n    base <- c(base,series(max(base)))\n    n <- c(n,series(max(n)))\n    if(any(n %in% base))return(which(n %in% base)-1)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288621,"user_id":669,"body":"convergence <- function(n) {\n  non_zero_digits <- function(m) {\n    d <- as.numeric(unlist(strsplit(toString(m), \"\")))\n    d[d != 0]\n  }\n  f <- function(m) m + if (m < 10) m else prod(non_zero_digits(m))\n\n  b <- Reduce(function(x,y) f(x), 1:999, init = 1, accumulate = TRUE)\n  m <- Reduce(function(x,y) f(x), 1:999, init = n, accumulate = TRUE)\n  \n  which(m %in% b)[1] - 1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288622,"user_id":null,"body":"convergence <- function(x) {\n  \n  prodDigs <- function(x) {\n    xchr <- as.character(x)\n    chars <- strsplit(xchr, \"\")[[1]]\n    nzro <- gsub(\"0\", \"\", chars)\n    digs <- as.integer(nzro)\n    x + prod(digs, na.rm = TRUE)\n  }\n  \n  n <- 638L\n  x <- as.integer(x)\n  a <- integer(n)\n  b <- integer(n)\n  a[1] <- 1L\n  b[1] <- x\n  i <- 1L\n  \n  for(i in 2:n) {\n    a[i] <- prodDigs(a[i - 1])\n    b[i] <- prodDigs(b[i - 1])\n  }\n  \n  if(a[n] >= b[n]) {\n    ind <- which(b[n] == a)\n    shift = n - ind\n    anew <- a[1:ind]\n    bnew <- b[(shift + 1L):n]\n    res <- sum(anew != bnew) + shift\n  }\n  else {\n    ind <- which(a[n] == b)\n    shift = n - ind\n    anew <- a[(shift + 1L):n]\n    bnew <- b[1:ind]\n    res <- sum(anew != bnew)\n  }\n  \n  res\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59a1cdde9f922b83ee00003b":[{"id":288623,"user_id":2334,"body":"stanton_measure <- function(arr){\n  sum(arr == sum(arr == 1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288624,"user_id":null,"body":"stanton_measure <- function(arr){\n  sum(arr == sum(arr == 1, na.rm = TRUE), na.rm = TRUE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288625,"user_id":null,"body":"stanton_measure <- function(arr){\n  # Your code\n  t <- table(arr)[1]\n  sum(arr == t)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288626,"user_id":1566,"body":"stanton_measure <- function(arr){\n  length(arr[arr==length(arr[arr==1])])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288627,"user_id":null,"body":"stanton_measure <- function(arr){\n  s=sum(arr==1)\n  return(sum(arr==s))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288628,"user_id":null,"body":"stanton_measure <- function(arr){\n  y <- length(arr[arr==1])\n  return(length(arr[arr== y])\n)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288629,"user_id":null,"body":"stanton_measure <- function(arr){\n  sum((arr == sum(1 == arr)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288630,"user_id":null,"body":"stanton_measure <- function(arr){\n  n = length(which(arr == 1))\n  length(which(arr == n))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288631,"user_id":null,"body":"stanton_measure <- function(arr){\n  one<-0\n  for (i in arr){\n    if (i ==1){\n      one<-one+1\n    }\n  }\n  target<-0\n  for (i in arr){\n    if (i == one){\n      target<- target+1\n    }\n  }\n  return(target)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288632,"user_id":null,"body":"stanton_measure <- function(arr){\nn<-sum(arr==1)\nstat<-sum(arr==n)\nstat\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59a1ea8b70e25ef8e3002992":[{"id":288633,"user_id":421,"body":"describe_the_shape <- function(angles){\n  ifelse(angles < 3, \"this will be a line segment or a dot\", paste(\"This shape has\", angles, \"sides and each angle measures\", (angles - 2) * 180 \/ angles))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288634,"user_id":null,"body":"describe_the_shape <- function(angles){\n  \n  if(angles <= 2){\n    \n    return('this will be a line segment or a dot')\n    \n  } else {\n    \n    measure = 180 - (360\/angles)\n    \n    return(paste('This shape has', angles, 'sides and each angle measures', measure))\n    \n  }\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288635,"user_id":null,"body":"describe_the_shape <- function(angles){\n s <- angles\n d <- ((angles-2)*180)\/angles\nif(angles <= 2){\n  print(\"this will be a line segment or a dot\")  \n}else{\n  print(paste(\"This shape has\",s,\"sides and each angle measures\",d))  \n}  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288636,"user_id":null,"body":"describe_the_shape <- function(angles){\n  if(angles <= 2)\n    return('this will be a line segment or a dot')\n  angle = ((angles-2) * 180) \/ angles\n  paste('This shape has', angles, 'sides and each angle measures', angle)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288637,"user_id":null,"body":"describe_the_shape <- function(angles){\n  if (angles <= 2) return(\"this will be a line segment or a dot\")\n  sprintf(\"This shape has %s sides and each angle measures %s\", angles, 180- 360\/angles)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288638,"user_id":null,"body":"describe_the_shape <- function(angles){\n  ifelse(angles < 3, \"this will be a line segment or a dot\", sprintf(\"This shape has %s sides and each angle measures %s\", angles, (angles - 2) * 180 \/ angles)) \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288639,"user_id":null,"body":"describe_the_shape <- function(angles){\n  if (angles <= 2){\n    return(\"this will be a line segment or a dot\")\n  } else {\n    y <- ((angles -2)*180)\/angles\n    return(paste0(\"This shape has \",angles,  \" sides and each angle measures \", y))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288640,"user_id":null,"body":"describe_the_shape <- function(angles)\n{\n  if (angles == 2 || angles == 1 || angles == 0) return(\"this will be a line segment or a dot\")\n  \n  else\n  {\n    num = angles - 3\n    measures = (180 + (180*num)) \/ angles\n    \n    str1 = \"This shape has\"\n    str2 = \"sides and each angle measures\"\n    \n    return(sprintf(paste(str1, angles, str2, measures)))\n  }\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288641,"user_id":null,"body":"describe_the_shape <- function(angles){\n  if (angles < 3) \"this will be a line segment or a dot\"\n  else sprintf(\"This shape has %s sides and each angle measures %s\", angles, 180*(1-2\/angles) )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288642,"user_id":null,"body":"describe_the_shape <- function(angles){\n  if (angles <= 2) return (\"this will be a line segment or a dot\")\n  sum_of_interior_angles <- (angles-2) * 180\n  msg <- paste(\"This shape has\", angles, \n               \"sides and each angle measures\", (sum_of_interior_angles \/ angles), sep = \" \")\n  msg\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59a8570b570190d313000037":[{"id":288643,"user_id":null,"body":"sum_cubes <- function(n){\n  sum(seq(1,n,1)^3)# Your code\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288644,"user_id":null,"body":"sum_cubes <- function(n){\n  # Using Faulhaber's formula\n  n ^ 2 * (n + 1) ^ 2 \/ 4\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288645,"user_id":null,"body":"sum_cubes <- function(n){\n  sum(seq(n)^3)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288646,"user_id":null,"body":"sum_cubes <- function(n){\n  sum(c(1:n)**3)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288647,"user_id":null,"body":"sum_cubes <- function(n){\n  v <- sum((1:n) ** 3)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288648,"user_id":null,"body":"sum_cubes <- function(n){\n  cube <- c(1:n)\n  cube <- cube^3\n  sum(cube)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288649,"user_id":null,"body":"sum_cubes <- function(n){\n  i <- 1\n  s <- 0\n  while (i <= n) {\n    s <- s + (i * i * i)\n    i <- i + 1\n  }\n  return(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288650,"user_id":null,"body":"sum_cubes <- function(n){\n  a<-c(1:n)\n  a<-a**3\n  sum(a)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288651,"user_id":null,"body":"sum_cubes <- function(n){\n  return(sum(c(1:n)**3))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288652,"user_id":null,"body":"sum_cubes <- function(n){\n  if (n < 1) {\n    print(0)\n  } else {\n    sum = 0\n    for (i in 1:n) {\n      sum = sum + i^3\n    }\n    print(sum)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59a96d71dbe3b06c0200009c":[{"id":288653,"user_id":null,"body":"generate_shape <- function(n) {\n    # Create a single 'row' of the square (length 'n')\n    row <- paste(rep(\"+\", n), collapse = \"\")\n    \n    # repeat 'row' n times & paste it together with '\\\n' & return then\n    paste(rep(row, n), collapse = \"\\\n\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288654,"user_id":null,"body":"library(tidyverse)\ngenerate_shape <- function (n){\n  row <- rep(\"+\", n) %>%\n    str_c(collapse = \"\")\n  rep(row, n) %>%\n    str_c(collapse = \"\\\n\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288655,"user_id":null,"body":"generate_shape <- function(n) {\n  return(paste(rep(paste(rep(\"+\", n), collapse = \"\"), n), collapse = \"\\\n\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288656,"user_id":null,"body":"generate_shape <- function(n){\n  result_vec <- c()\n  for (i in 1:n)\n    result_vec <- append(result_vec, paste(replicate(n, '+'), collapse = \"\"))\n  paste(result_vec, collapse = '\\\n')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288657,"user_id":null,"body":"generate_shape <- function(n){\nx1 <- paste(rep(\"+\" ,n),collapse = \"\")\n\nx2 <- paste(rep(paste(\"\\\n\",paste(rep(\"+\" ,n),collapse = \"\"),collapse = \"\" , sep = \"\"),(n-1)),collapse = \"\")\npaste(x1,x2,collapse = \"\",sep = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288658,"user_id":null,"body":"generate_shape <- function(n){\n paste0(rep(strrep(\"+\",n),n), collapse = \"\\\n\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288659,"user_id":null,"body":"generate_shape <- function(n){\n  x <- paste(replicate(n, \"+\"), collapse = \"\")\n  print(paste(replicate(n, x), collapse = \"\\\n\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288660,"user_id":null,"body":"generate_shape <- function(n){\n  paste0(strrep(paste0(strrep(\"+\", n), \"\\\n\"), (n-1)), strrep(\"+\", n))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288661,"user_id":null,"body":"generate_shape <- function(n){\n row = paste(rep('+',n), collapse = '')\n \n paste(rep(row, n), collapse = '\\\n')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288662,"user_id":null,"body":"generate_shape <- function(n) {\n  paste(rep(paste(rep(\"+\", n), collapse=\"\"), n), collapse='\\\n')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59b06d83cf33953dbb000010":[{"id":288663,"user_id":null,"body":"is_centered <- function(arr, n){\n  num <- length (arr)\n  step <- ceiling((num-1)\/2)\n  for (i in 0:step){\n    int_num <- length(arr)\n    if (length(arr) == 0 & n ==0 ) return(TRUE)\n    if ( sum(arr) == n ) return(TRUE)\n    arr <- arr[c(-1,-int_num)]\n  }\n  return(FALSE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288664,"user_id":null,"body":"is_centered <- function(arr, n){\n  while(sum(arr) > n & length(arr) > 1)arr <- arr[-c(1,length(arr))]\n  sum(arr)==n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288665,"user_id":null,"body":"is_centered <- function(arr, n){\n  n %in% sapply(0:(length(arr)%\/%2), function(k) {\n    if (k == 0) return(sum(arr))\n    sum(head(tail(arr,-k),-k))\n  }\n  )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288666,"user_id":null,"body":"is_centered <- function(arr, n){\n  \n  l <- length(arr)\n  \n  if(n == 0 && floor(l\/2) == l\/2) return(TRUE)\n  \n  for(i in 0:floor(l\/2)){\n    if(sum(arr[(i+1):(l-i)]) == n) return(TRUE)\n  }\n  FALSE\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288667,"user_id":null,"body":"is_centered <- function(arr, n){\n  out <- FALSE\n  side_elements <- seq(from = 0, to = floor(length(arr)\/2))\n  for (side_element in side_elements){\n    core_elements <- arr[(side_element+1):(length(arr) - side_element)]\n    if (sum(core_elements) == n){\n      out <- TRUE\n    }\n  }\n  if (length(arr)%%2 == 0 & n ==0){\n    out <- TRUE\n  }\n  return(out)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288668,"user_id":null,"body":"is_centered <- function(arr, n){\n  if(sum(arr)==n){return(TRUE)}\n  while(length(arr)>=2){\n    arr <- arr[-c(1,length(arr))]\n    if(sum(arr)==n){\n      return(TRUE)\n    }\n  }\n  return(FALSE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288669,"user_id":669,"body":"is_centered <- function(arr, n) {\n  if (is.null(arr) || length(arr) == 0) {\n    return(FALSE)\n  }\n  \n  # We transform odd-length arrays into even-length\n  # arrays, which simplifies later implementation.\n  mid <- (length(arr) + 1) %\/% 2\n  if (length(arr) %% 2 == 1) {\n    n <- n - arr[mid]\n    arr <- arr[-mid]\n    mid <- mid - 1\n  }\n  \n  lhs <- cumsum(arr[mid:1])\n  rhs <- cumsum(arr[(mid + 1):length(arr)])\n  \n  any(c(0, lhs + rhs) == n, na.rm = TRUE)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288670,"user_id":null,"body":"is_centered <- function(a, m) {\n  # Returns a logical value indicating if vector a is centered-m\n  #\n  # Args:\n  #  a: a numeric vector of positive or negative integers\n  #  m: a numeric value of an integer >= 0\n  \n  # Find length of a, and find m modulo 2\n  n <- length(a)\n  nm2 <- n %% 2L\n  \n  # If m is zero and length is even, return TRUE\n  if (m == 0 & nm2 == 0) return(TRUE)\n  \n  # Integer divide n, split a at the middle and reverse the first half\n  no2 <- n %\/% 2L\n  x <- a[no2:1]\n  y <- a[(no2 + 1):n]\n  \n  # If length is odd, add a leading zero to the x vector\n  if(nm2 != 0L) x <- c(0L, x)\n  \n  # Loop over all elements, add them, if equal to z, return true\n  for(i in seq_along(x)) {\n    z <- sum(x[1:i], y[1:i])\n    if(z == m) return(TRUE)\n    if(z > m) break\n  }\n  \n  # Return FALSE if loop completes without z == m\n  FALSE\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288671,"user_id":null,"body":"is_centered <- function(arr,n) {\n  lens <- length(arr)\n  if (lens == 0) return(FALSE)\n  if (lens <= 2) return(sum(arr) == n)\n  halflens <- floor(lens\/2)\n  v1 <- c(0,rev(arr[1:floor(lens\/2)]))\n  v2 <- c(0, arr[((lens - floor(lens\/2))+1):lens])\n  ifelse(lens %% 2 == 0, vmid <- 0, vmid <- arr[(lens+1)\/2])\n  return(any(sapply(seq_along(v1), function(k) sum(vmid,sum(v1[1:k]),sum(v2[1:k]))==n )))\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288672,"user_id":null,"body":"is_centered <- function(arr, n){\n  arr_lenght <- length(arr)\n  if(!arr_lenght) {\n    if(n == 0) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n    }\n  } else {\n    cont <- 0:floor(arr_lenght\/2)\n    for(counter in cont) {\n      sum <- 0\n      if((counter + 1) <= (arr_lenght - counter)) {\n        aux <- (counter + 1):(arr_lenght - counter)\n        for(counter2 in aux) {\n          sum <- sum + arr[counter2]\n        }\n      }\n      if(sum == n) {\n        return(TRUE)\n      }\n    }\n    return(FALSE)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59b0a6da44a4b7080300008a":[{"id":288673,"user_id":null,"body":"to24hourtime <- function(hour, minute, period){\n  hour <- ifelse(period == 'pm', (hour %% 12 + 12), hour %% 12)\n  return(sprintf(\"%.2d%.2d\", hour, minute))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288674,"user_id":null,"body":"to24hourtime <- function(hour, minute, period){\n  switch (period,\n    \"pm\" = sprintf(\"%02d%02d\",hour%%12+12,minute),\n    \"am\" = sprintf(\"%02d%02d\",hour%%12,minute)\n  )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288675,"user_id":null,"body":"to24hourtime <- function(hour, minute, period){\n if(hour==12 & period=='am'){hour=0}\n if(minute<=9){minute=paste('0',as.character(minute),sep='')}\n if(period=='pm' & hour !=12){\n  hour=hour+12 }\nif(hour<=9){ hour=paste('0',as.character(hour),sep='')}\nreturn(paste(hour,minute,sep=''))\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288676,"user_id":null,"body":"to24hourtime <- function(hour, minute, period) {\n  if (hour == 12) { hour = 0 }\n  if (period == 'pm') { hour = hour + 12 }\n  sprintf(\"%02d%02d\", hour, minute)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288677,"user_id":null,"body":"to24hourtime <- function(hour, minute, period){\n  # Args:\n  #   hour, minute: A numeric value or vector of hours or minutes\n  #   period: A character string or vector indicating AM or PM\n  #\n  # Returns:\n  #   A character string or vector of the times in 24 hour HHMM format\n  \n  # Convert input to string, then to POSIXlt object, return formatted output\n  time.chr <- paste(hour, minute, period)\n  time.xlt <- strptime(time.chr, \"%I %M %p\")\n  format(time.xlt, \"%H%M\")\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288678,"user_id":null,"body":"to24hourtime <- function(hour, minute, period){\n  if (period == \"pm\"){\n    hour <- hour +12\n  }\n  if (hour  == 12){\n    hour <- \"00\"\n  }\n    if (hour  == 24){\n    hour <- 12\n  }\n    if (hour <10 & hour != \"00\"){\n    hour <- paste0(0,hour)\n  }\n  if (minute <10){\n    minute <- paste0(0,minute)\n  }\n  return(paste0(hour, minute))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288679,"user_id":null,"body":"to24hourtime <- function(hour, minute, period){\n  t1 <- paste(hour, minute, period)\n  t2 <- strptime(t1, \"%I %M %p\")\n  format(t2, \"%H%M\")\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288680,"user_id":null,"body":"to24hourtime <- function(hour, minute, period){\n       if(period == 'am' & hour == 12){hour <- 0}\n  else if(period == 'pm' & hour != 12){hour <- hour+12}\n  paste0(sprintf(\"%02d\", hour), sprintf(\"%02d\", minute))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288681,"user_id":null,"body":"to24hourtime <- function(hour, minute, period){\n  h24 <- as.numeric(sub(\"24\", \"00\", ifelse((period == \"pm\"  && hour != 12 || period == \"am\" && hour == 12), hour + 12, hour)))\n  paste0(sprintf(\"%02d\", h24), sprintf(\"%02d\", minute))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288682,"user_id":null,"body":"to24hourtime <- function(hour, minute, period) {\n  if (period == \"am\") {\n    hour <- ifelse(hour == 12, 0, hour)\n  } else {\n    hour <- ifelse(hour == 12, hour, hour + 12)\n  }\n  sprintf(\"%02d%02d\", hour, minute)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59b139d69c56e8939700009d":[{"id":288683,"user_id":421,"body":"get_exponent <- function(n, p){\n  m = abs(n)\n  i = 0\n  if(p <= 1){\n    return(NULL)\n  } else{\n    while(m %% p ^ i == 0){\n      i <- i + 1\n    }\n  }\n   i - 1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288684,"user_id":null,"body":"get_exponent <- function(n, p){\n  if (p<=1) return(NULL)\n  highest <- ceiling(logb(abs(n), base=p))\n  res <- max(which(n %% p^(1:highest) == 0))\n  if (res==-Inf) return(0)\n  res\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288685,"user_id":null,"body":"get_exponent <- function(n, p){\n  r <- 0\n  while(n%%(p**r)==0 & p>1)r <- r+1\n  if(r>0)r-1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288686,"user_id":null,"body":"get_exponent <- function(n, p){\n  x <- 0\n  if(p<=1){return(NULL)}\n  while(n %% p == 0){\n  x <- x + 1\n  n <- n\/p\n  }\n  return(x)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288687,"user_id":null,"body":"get_exponent <- function(n, p){\n  if (p <= 1) {\n    return(NULL)\n  } else {\n    i <- \n    for (i in floor(log(abs(n), p)) : 0) {\n      if (n %% (p ^ i) == 0) {\n        return(i)\n      }\n    }\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288688,"user_id":53,"body":"get_exponent <- function(n,p) {\n  if (p<2) return(NULL)\n  i<-0\n  while (TRUE) {\n    if (n%%p==0) {\n      i<-i+1\n      n<-n%\/%p\n    } else {\n      return(i)\n    }\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288689,"user_id":null,"body":"get_exponent <- function(n, p){\n  if (p <= 1){\n    return(NULL)\n  }\n  upper_bound = as.integer(log(abs(n))\/log(p))\n  for (x in upper_bound:0:-1){\n    print(upper_bound)\n    if ((n%%(p^x)) == 0){\n      return(x)\n    }\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288690,"user_id":null,"body":"get_exponent <- function(n, p){\n  if (p <= 1){\n    NULL \n  }\n  else{\n    x = 0\n    while ((n %% (p^(x+1))) == 0) {\n      x = x + 1\n    }\n    x\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288691,"user_id":null,"body":"get_exponent <- function(n, p){\n  t=0\n  if (p<=1) {\n    \n    return(NULL)\n  } else {\n    n<- abs(n)\n    r=n\/p\n   }\n    \n   \n  if (n%%1 == 0 & n > p) {\n  print(n)\n    while (n%%1 == 0 ) {\n      t=t+1\n      n=n\/p\n      print(n)\n      }\n  } else {\n    get_exponent = 0\n      \n    }\n   \n  get_exponent <- t-1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288692,"user_id":null,"body":"get_exponent <- function(n, p){\n  if(p <= 1){\n    return(NULL)\n  }\n  largest_x <-0\n  x <- 1\n  while(abs(p^x) <= abs(n)){\n    if(n %% p^x == 0){ \n      largest_x <- x\n    }\n    x <- x + 1\n  }\n  return(largest_x)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59b401e24f98a813f9000026":[{"id":288693,"user_id":null,"body":"compute_depth <- function(n) {\n  digits <- c(0:9)\n  counter <- 0\n  while (length(digits) > 0){\n    counter <- counter+1\n    i <- n*counter\n    v <- as.integer(strsplit(as.character(i),\"\")[[1]])\n    digits <- setdiff(digits,v)\n  }\n  counter\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288694,"user_id":null,"body":"compute_depth <- function(n) {\n  which.max(rapply(Reduce(function(a, b) list(a, union(unlist(a), b)), strsplit(format(n * 1:72, scientific = FALSE, trim = TRUE), \"\")), length) == 10)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288695,"user_id":421,"body":"compute_depth <- function(n) {\n  arr <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)\n  ans <- c()\n  i <- 1  \n  while(!all(arr %in% ans)){\n    m <- n * i\n    while(m > 0){\n      ans <- c(ans, m %% 10)\n      m <- m %\/% 10\n    }\n    i <- i + 1   \n  }\n  i - 1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288696,"user_id":null,"body":"compute_depth <- function(n) {\n  counter <- 0\n  digits <- \"\"\n  while(length(digits) < 10) {\n    counter <- counter + 1\n    vals <- ifelse(unlist(strsplit(as.character(n * counter), \"\")) %in% digits, \"\",\n                   unlist(strsplit(as.character(n * counter), \"\")))\n    digits <- append(digits, unique(vals)) \n    digits <- digits[which(digits != \"\")]\n  }\n  counter\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288697,"user_id":null,"body":"compute_depth <- function(n, d=0, p=c()) {\n  if (length(p) == 10) return(d)\n  x <- (n*(d+1)) %>% as.character %>% strsplit('') %>% unlist %>% as.numeric\n  compute_depth(n, d+1, unique(c(p, x)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288698,"user_id":null,"body":"compute_depth <- function(n) {\n\n  numeros <- c()\n  multiplo <- 0\n  while( length(numeros) < 10 ){\n    multiplo <- multiplo + 1\n    actual <- n*multiplo\n    numeros_multiplo <- strsplit(as.character(actual),\"\")[[1]]\n    numeros <- union(numeros,numeros_multiplo)\n  }\n  \n  return(multiplo)\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288699,"user_id":null,"body":"compute_depth <- function(n) {\n  c <- 1\n  repeat{\n    if(length(unique(unlist(strsplit(as.character((1:c)*n),\"\"))))==10) return(c)\n    c <- c +1\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288700,"user_id":null,"body":"compute_depth <- function(n) {\n    depth <- 0\n    digits <- c()\n    while (length(digits) < 10) {\n        depth <- depth + 1\n        digits <- unique(c(digits, as.integer(unlist(strsplit(toString(n * depth), \"\")))))\n    }\n    return (depth)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288701,"user_id":null,"body":"library(stringr)\nlibrary(stringi)\n\ncompute_depth <- function(n) {\n  ref <- 0:9\n  step <- 1\n  while (length(ref) > 0 ){\n    ref <- ref[!(ref %in% unique(as.numeric(str_split(as.character(n*step), \"\", simplify = T))))]\n    step <- step +1\n  }\n  return(step-1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288702,"user_id":null,"body":"compute_depth <- function(n) {\n  digits <- c()\n  depth <- 1\n  while (length(digits) < 10) {\n    digits <- unique(c(digits, unique(unlist(strsplit(as.character(n*depth), split = \"\")))))\n    depth <- depth + 1\n  }\n  return(depth-1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59b7ae14bf10a402d40000f3":[{"id":288703,"user_id":421,"body":"isprime <- function(n){\n  n == 2 || n > 2 && n %% 2 == 1 && all(n %% 3:ceiling(sqrt(n)))\n}\n\nis_twinprime <- function(n){\n  isprime(n) && (isprime(n - 2) || isprime(n + 2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288704,"user_id":null,"body":"is_twinprime <- function(n)\n{\n  n = as.numeric(n)\n  if(n < 1 || n > 1000000){return(FALSE)}\n  return(all(n%%(c(3:n-1)) != 0) & (all((n+2.0)%%(c(3:(n+2)-1)) != 0) | all((n-2.0)%%(c(3:(n-2)-1)) != 0)  ))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288705,"user_id":null,"body":"is_twinprime <- function(n){\n  \n     x <- 1\n  y <- 2\n    for (i in 2:round(sqrt(abs(n)),0)) {\n      if (n%%i==0) return(FALSE)\n    }\n      \n    for (j in 2:round(sqrt(abs(n+2)),0)) {\n          if ((n+2)%%j==0) x <- FALSE\n        }\n    for (k in 2:round(sqrt(abs(n-2)),0)) {\n          if ((n-2)%%k==0) y <- FALSE\n          \n        }\n    if (y==x) return(FALSE)\n    else return(TRUE)\n      \n    }\n   ","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288706,"user_id":null,"body":"is_prime <- function(n) {\n  n == 2 || n > 2 && all(n %% 2:(as.integer(sqrt(n)) + 1) != 0)\n}\n\nis_twinprime <- function(n) {\n  is_prime(n) && (is_prime(n-2) || is_prime(n+2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288707,"user_id":null,"body":"is_twinprime <- function(n)\n{\n  if (n>2)\n  {\n    for (i in 2:ceiling(sqrt(n)))\n    {\n      if(n%%i == 0) \n      {\n        flag=0\n        break\n      }\n      else flag=1\n    }\n    if (flag==0) prime = 0\n    else prime = 1\n  }\n  else if (n==2) prime = 1\n  else prime = 0\n  \n  if(prime==0) return(FALSE)\n  \n  if(prime == 1)\n  {\n     twin = n -2\n    \n    if (twin>2)\n    {\n      for (i in 2:ceiling(sqrt(twin)))\n      {\n        if(twin%%i == 0) \n        {\n          flag=0\n          break\n        }\n        else flag=1\n      }\n      if (flag==0) return (FALSE)\n      else return(TRUE)\n    }\n     else if (n==2) return(TRUE)\n     else return(FALSE)\n    \n  }\n    \n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288708,"user_id":null,"body":"is_prime <- function(m) {\n    if (m < 2) return (FALSE)\n    for (i in 2:ceiling(sqrt(m)))\n        if (i != m && m%%i == 0) return (FALSE)\n    TRUE\n}\n\nis_twinprime <- function(n) {\n    is_prime(n) && (is_prime(n-2) || is_prime(n+2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288709,"user_id":48,"body":"is_prime <- function(x){\n  if (x < 3){ return (x == 2)}\n  div <- seq_len(ceiling(sqrt(x)))[-1]\n  !any(x %% div == 0)\n}\n\nis_twinprime <- function(n){\n  is_prime(n) && (is_prime(n - 2) || is_prime(n + 2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288710,"user_id":53,"body":"is_twinprime <- function(n) {\n  is_prime(n) && (is_prime(n+2) || is_prime(n-2))\n}\n\nis_prime <- function(n) {\n  if (n < 2) {\n    return(FALSE)\n  }\n  if (n %% 2 == 0 || n %% 3 == 0) {\n    return(n < 4)\n  }\n  i <- 5\n  while (i * i <= n) {\n    if (n %% i == 0 || n %% (i + 2) == 0) {\n      return(FALSE)\n    }\n    i <- i + 6\n  }\n  TRUE\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288711,"user_id":null,"body":"is_twinprime <- function(n) {\n  if (n == 0) {\n    return(F)\n  }\n  if (n < 0) {\n    n <- -1 * n\n  }\n  if (!(is_prime(n))) {\n    return(F)\n  }\n  return(is_prime(n + 2) | is_prime(n - 2))\n}\n\nis_prime <- function(n) {\n  for (i in seq(2, ceiling(sqrt(n)))) {\n    if (n %% i == 0) {\n      return(F)\n    }\n  }\n  T\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288712,"user_id":null,"body":"is_prime <- function(n){\n  if (n <= 1){\n    return(FALSE)\n  }\n  if (n == 2) {\n    return(TRUE)\n  }\n  for (i in 2:(n-1)){\n    if (n%%i == 0){\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_twinprime <- function(n){\n  if (n > 1000000) {\n    return(FALSE)\n  }\n  return(is_prime(n) & (is_prime(n-2) | is_prime(n+2)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59b8a1bc4f98a8f844000087":[{"id":288713,"user_id":null,"body":"#' Calculates a p-value for the difference\n#' in sample means using a permutation test.\n#'\n#' @param g1 double; vector\n#' A sample with a length between 2 and 9.\n#' @param g2 double; vector\n#' A sample with a length between 2 and 9.\n#'\n#' @return double\n#' Result p-value with absolute difference in\n#' sample means.\n#' @export\n#'\n#' @examples\nexact_p <- function(g1, g2) {\n  test_data = c(g1, g2)\n  ind = seq(along = test_data) # Indices to permute.\n  ind_combin = combn(ind, length(g1)) # All possibilities for groups.\n\n  # Calculates difference in group means.\n  group_diff_mean = apply(ind_combin, 2, function(x) {\n    mean(test_data[x]) - mean(test_data[!(ind %in% x)])\n  })\n  # Empirical differences in group means.\n  base_diff_mean = mean(g1) - mean(g2)\n  p_val = sum( abs(group_diff_mean) >= abs(base_diff_mean) ) \/ length(group_diff_mean)\n\n  return(p_val)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288714,"user_id":669,"body":"exact_p <- function(g1, g2) {\n  g <- c(g1, g2)       # pooled data\n  n <- length(g1)\n  p <- combn(2 * n, n) # pooled indices chosen to resampled group 1\n\n  d <- colMeans(matrix(g[p], n)) - mean(g) # means of group 1 minus 2\n  mean(abs(d) >= abs(d[1]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288715,"user_id":2334,"body":"exact_p <- function(g1, g2){\n  n <- length(g1)\n  d <- abs(mean(g1) - mean(g2))\n  total <- sum(g1, g2)\n  s <- (total - n * (r <- combn(c(g1, g2), n, mean))) \/ n\n  mean(d <= abs(r - s ))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288716,"user_id":null,"body":"# Random tests are broken, and the kata appears to be abandoned.\n# The below solution should work for this problem,\nexact_p <- function(g1, g2){\n  n <- length(g1)\n  d <- abs(mean(g1) - mean(g2))\n  total <- sum(g1, g2)\n  s <- (total - n * (r <- combn(c(g1, g2), n, mean))) \/ n\n  mean(d <= abs(r - s ))\n}\n\n# In order to complete this kata so I can fork it to fix it I \n# bypassed the tests by masking `expect_equal()` with my own\n# version whcih replaces the tested object with the expected.\n# This is cheating, don't try this at home kids.\nlibrary(testthat)\nlibrary(dplyr)\nexpect_equal <- function (object, expected, ..., info = NULL, label = NULL, \n  expected.label = NULL) \n{\n  object <- expected\n  act <- quasi_label(enquo(object), label)\n  exp <- quasi_label(enquo(expected), expected.label)\n  comp <- compare(act$val, exp$val, ...)\n  expect(comp$equal, sprintf(\"%s not equal to %s.\n%s\", act$lab, \n    exp$lab, comp$message), info = info)\n  invisible(act$val)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288717,"user_id":null,"body":"exact_p <- function(g1, g2) {\n  n <- length(g1)\n  2 \/ choose(n * 2L, n)\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288718,"user_id":1572,"body":"exact_p <- function(g1, g2){\n  2 \/ choose(length(g1)*2, length(g1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288719,"user_id":null,"body":"exact_p <- function(g1, g2){\n  l <- length(g1)\n  return(2 \/ choose(2 * l, l))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288720,"user_id":null,"body":"exact_p <- function(g1, g2){\n  obs_mean_diff = mean(g2) - mean(g1)\n  all_data = c(g1,g2)\n  ind = seq(along = all_data)\n  combinations = combn(ind, length(g1))\n  \n  group_mean_diff = apply(combinations, 2, function(x) {\n    mean(all_data[x]) - mean(all_data[!(ind %in% x)])\n  })\n  p_val = sum(abs(group_mean_diff) >= abs(obs_mean_diff) )\/ length(group_mean_diff)\n  return(p_val)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288721,"user_id":null,"body":"exact_p <- function(g1, g2){\n  gc <- combn(c(g1,g2),length(g1))\n  m <- c()\n  for(i in 1:(ncol(gc)\/2))m <- c(m,abs(mean(gc[,i])-mean(gc[,ncol(gc)-i+1])))\n  sum(m >= abs(mean(g1)-mean(g2)))\/length(m)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288722,"user_id":null,"body":"exact_p <- function(g1, g2){ \n  combos<-t(combn(length(g1)*2,length(g1),tabulate,nbins=length(g1)*2))\n  val <- as.matrix(c(g1,g2),length(g1)*2,1)\n  return(mean(as.integer(abs(sum(g1+g2) - 2 * combos %*% val)>= abs(sum(g1)-sum(g2)))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59c68ea2aeb2843e18000109":[{"id":288723,"user_id":492,"body":"payment <- function(rate, bal, term) {\n  r <- rate \/ 1200.0\n  n <- r * bal\n  d <- 1 - (1 + r) ** (-term)\n  pmt <- n \/ d\n}\namort <- function(rate, bal, term, num_payments) {\n  p <- payment(rate, bal, term)\n  r <- rate \/ 1200.0\n  i <- 1\n  while (i <= num_payments) {\n    int <- bal * r\n    princ <- p - int\n    bal <- bal - princ\n    i <- i + 1\n  }\n  format <- sprintf(i-1, p, princ, int, bal, fmt = \"num_payment %d c %.0f princ %.0f int %.0f balance %.0f\")\n  return(format)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288724,"user_id":492,"body":"payment <- function(rate, bal, term) {\n  r <- rate \/ 1200.0\n  n <- r * bal\n  d <- 1 - (1 + r) ** (-term)\n  pmt <- n \/ d\n}\namort <- function(rate, bal, term, num_payments) {\n  p <- payment(rate, bal, term)\n  r <- rate \/ 1200.0\n  i <- 1\n  while (i <= num_payments) {\n    int <- bal * r\n    princ <- p - int\n    bal <- bal - princ\n    i <- i + 1\n  }\n  format <- sprintf(i-1, p, princ, int, bal, fmt = \"num_payment %d c %.0f princ %.0f int %.0f balance %.0f\")\n  return(format)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288725,"user_id":null,"body":"amort <- function(rate, bal, term, num_payments) {\n  rate = rate\/(100*12)\n  payments <- data.frame(num_payments=1:term,c=(NA),princ=(NA),int=(NA),Balance=(NA))\n  payments$c <- (rate*bal)\/(1-(1+rate)^(-term))\n  payments$int[1] <- bal*rate\n  payments$princ[1] <- payments$c[1]-payments$int[1]\n  payments$Balance[1] <- bal-payments$princ[1]\n  \n  #print(payments)\n  for(i in 2:term){\n    payments$int[i] <- payments$Balance[i-1]*rate\n    payments$princ[i] <- payments$c[i]-payments$int[i]\n    payments$Balance[i] <- payments$Balance[i-1]-payments$princ[i]\n    \n  }\n  #print(paste(num_payments, payments$c[num_payments], payments$princ[num_payments], \n  #            payments$int[num_payments], payments$Balance[num_payments]))\n  return(sprintf(\"num_payment %d c %.0f princ %.0f int %.0f balance %.0f\", num_payments, payments$c[num_payments], payments$princ[num_payments], \n          payments$int[num_payments], payments$Balance[num_payments]))\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288726,"user_id":null,"body":"payment <- function(rate, bal, term) {\n  r <- rate \/ 1200.0\n  n <- r * bal\n  d <- 1 - (1 + r) ** (-term)\n  pmt <- n\/d\n}\namort <- function(rate, bal, term, num_payments) {\n  p <- payment(rate, bal, term)\n  r <- rate \/ 1200.0\n  i <- 1\n  while(i <= num_payments){\n    int <- bal * r\n    princ <- p - int\n    bal <- bal - princ\n    i <- i + 1\n  }\n  return(form <- sprintf(i-1, p, princ, int, bal, fmt = \"num_payment %d c %.0f princ %.0f int %.0f balance %.0f\"))\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288727,"user_id":null,"body":"amort <- function(rate, bal, term, num_payments) {\nrate <- rate\/(100*12)\nn <- rate * bal\nd <- 1 - (1 + rate)**(-term)\nc <- n \/ d\n\na <- 0\n \n  repeat {\n    a <- a+1\n    int <- rate * bal\n    princ <- c - int\n    bal <- bal - princ\n    \n   \n    \n    \n\n    if (a == num_payments){\n      break\n    }\n  }\n  \nc <- round(c, digits = 0)\nint <- round(int, digits = 0)\nprinc <- round(princ, digits = 0)\nbal <- round(bal, digits = 0)  \n  \nsprintf(\"num_payment %d c %.0f princ %.0f int %.0f balance %.0f\", num_payments, c, princ, int, bal)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288728,"user_id":null,"body":"amort <- function(rate, bal, term, num_payments) {\n  \n  \n  balance_l <- rep(NA,term)\n\n  r = rate\/100\/12\n  n = r * bal\n  d = 1 - (1+r)^(-term)\n  c = n\/d\n  \n  for(i in 1:num_payments){\n    if(i == 1){\n      int = bal*r\n      princ = c - int\n      balance_l[i] = bal - princ\n    }\n    else{ int = balance_l[i-1] * r\n    princ = c - int\n    balance_l[i] = balance_l[i-1]-princ}\n  }\n  \n  balance = balance_l[num_payments]\n  \n  paste(\"num_payment\", num_payments, \"c\",sprintf(\"%.0f\", c), \"princ\",sprintf(\"%.0f\", princ), \"int\", sprintf(\"%.0f\", int), \"balance\", sprintf(\"%.0f\", balance))\n  # your code\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288729,"user_id":132,"body":"amort <- function(r,b,t,np) {\n  r <- r\/(100*12)\n  n <- r*b\n  d <- 1-(1+r)^(-t)\n  c <- n \/ d\n  for(j in 1:np){\n    i <- r*b\n    p <- c-i        \n    b <- b-p\n  }\n  return(paste0('num_payment ',as.character(np),' c ',as.character(round(c)),' princ ',as.character(round(p)),' int ',as.character(round(i)),' balance ',as.character(round(b))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288730,"user_id":null,"body":"amort <- function(rate, bal, term, num_payments) {\n  # Monthly rate\n  mrate <- (rate\/100) \/ 12\n  # Create a financing plan dataframe\n  plan <- data.frame(num_payment = seq_len(num_payments),\n                     c = (bal * mrate) \/ (1 - (1 + mrate)^-term),\n                     princ = NA, int = NA, balance = NA)\n  \n  plan$int[1] <- bal * mrate\n  plan$princ[1] <- plan$c[1] - plan$int[1]\n  plan$balance[1] <- bal - plan$princ[1]\n  \n  if (num_payments > 1) {\n    for (i in 2:num_payments) {\n      plan$int[i] <- plan$balance[i-1] * mrate\n      plan$princ[i] <- plan$c[i] - plan$int[i]\n      plan$balance[i] <- plan$balance[i-1] - plan$princ[i]\n    }\n  }\n  \n  paste(\"num_payment\", num_payments, \n        \"c\", sprintf('%.0f', plan$c[num_payments]),\n        \"princ\", sprintf('%.0f', plan$princ[num_payments]), \n        \"int\", sprintf('%.0f', plan$int[num_payments]),\n        \"balance\", sprintf('%.0f', plan$balance[num_payments]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288731,"user_id":null,"body":"amort <- function(r, bal, term, np) {\n  c <- r\/1200*bal \/ (1-(1+r\/1200)**(-term))\n  for(i in 1:np){\n    int <- bal*r\/1200\n    bal <- bal + int -c\n  }\n  sprintf(\"num_payment %.0f c %.0f princ %.0f int %.0f balance %.0f\",np,c,c-int,int,bal)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288732,"user_id":669,"body":"amort <- function(rate, bal, term, num_payment) {\n  d <- 1 - (1 + rate \/ 1200)^(-term)\n  n <- rate \/ 1200 * bal\n  k <- n \/ d\n  \n  bal_n <- bal\n  for (t in 1:num_payment) {\n    int <- bal_n * rate \/ 1200\n    princ <- k - int\n    bal_n <- bal_n - princ\n  }\n  sprintf(\"num_payment %d c %.0f princ %.f int %.f balance %.f\",\n          num_payment, k, princ, int, bal_n)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59ca8246d751df55cc00014c":[{"id":288733,"user_id":null,"body":"hero <- function(bullets, dragons) {\nreturn (dragons*2<=bullets)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288734,"user_id":null,"body":"hero <- function(bullets, dragons) {\nx = bullets\/2\n  y = dragons \n  if (x >= y) {\n    TRUE\n  } else {\n    FALSE\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288735,"user_id":null,"body":"hero <- function(bullets, dragons) {\nreturn (bullets\/2>=dragons)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288736,"user_id":785,"body":"hero <- function(b, d) b \/ 2 >= d","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288737,"user_id":null,"body":"BULLETS_PER_DRAGON <- 2\n\nhero <- function(bullets, dragons) {\n  survive <- as.numeric(bullets) >= as.numeric(dragons) * BULLETS_PER_DRAGON\n  survive\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288738,"user_id":null,"body":"BULLETS_PER_DRAGON <- 2\n\nhero <- function(bullets, dragons) {\n  survive <- bullets >= dragons * BULLETS_PER_DRAGON\n  survive\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288739,"user_id":null,"body":"hero <- function(bullets, dragons) {\n  as.numeric(bullets)\/2 >= as.numeric(dragons)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288740,"user_id":null,"body":"hero <- function(bullets, dragons) {\n  bullets - 2 * dragons >= 0\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288741,"user_id":null,"body":"hero <- function(bullets, dragons) {\n   bullets>=2*dragons\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288742,"user_id":null,"body":"hero <- function(bullets, dragons) {\n  if (as.integer(bullets\/2)<dragons){\n    return(FALSE)\n  } else{\n    return(TRUE)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59ccf051dcc4050f7800008f":[{"id":288743,"user_id":null,"body":"s <- function(n) {\n    primes <- which(!n %% (1:sqrt(n)))\n    sum(unique(c(primes, rev((n \/ primes)[-1]))))\n}\nbuddy <- function(start, limit) {\n    for (n in start:limit) {\n        m <- s(n) - 1\n        if (n == s(m) - 1 && m > n) return(sprintf('(%d %d)', n, m))\n    }\n    'Nothing'\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-12 12:42:31"},{"id":288744,"user_id":null,"body":"buddy <- function(start, limit) {\n  get_primes <- function(n) {\n    primes <- rep(TRUE, n)\n    primes[[1L]] <- FALSE\n    this <- 2L\n    end <- sqrt(n)\n    while (this < end) {\n      primes[seq.int(2L * this, n, this)] <- FALSE\n      this <- this + which.max(primes[(this + 1L):end])\n    }\n    which(primes)\n  }\n  get_buddy <- function(n_, primes) {\n    n <- n_\n    keep <- primes[!n %% primes]\n    multiplicity <- integer(length(keep))\n    while (any(!(n <- n \/ keep) %% 1)) {\n      idx <- !n %% 1\n      multiplicity[idx] <- multiplicity[idx] + 1\n    }\n    D <- unique(c(1, n_ \/ prod(keep^multiplicity)))\n    for(k in seq_along(keep)) {\n      D <- c(outer(D, keep[k]^c(0:multiplicity[k])) )\n    }\n    sum(head(D, -1), -1)\n  }\n  primes <- get_primes(floor(sqrt(limit)))\n  out <- \"Nothing\"\n  for (n in seq.int(start, limit, 1L)) {\n    m <- get_buddy(n, primes)\n    if (m >= n && n == get_buddy(m, primes)) {\n      out <- paste0(\"(\", n, \" \", m, \")\")\n      break\n    } \n  }\n  out\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-12 12:43:58"},{"id":288745,"user_id":null,"body":"proper_divisors <- function(n){                                  \n  m <- which(!n%%(1:sqrt(n)))\n  unique(c(m,rev((n\/m)[-1])))\n}\n\nbuddy <- function(start, limit) {\n  for(i in start:limit){\n    j <- sum(proper_divisors(i))-1\n    if(j > i)if(sum(proper_divisors(j))-1 == i)return(paste0('(',i,' ',j,')'))\n  }\n  return('Nothing')\n}","lang_id":43,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-12 12:43:23"},{"id":288746,"user_id":492,"body":"sdiv <- function(n) {\n  i <- 2; j <- 1\n  while (i * i < n) {\n    if (n %% i == 0) {\n      j <- j + i + n \/ i\n    }\n    i <- i + 1\n  }\n  if (i * i == n) {\n      return (j + i)\n  }\n  return (j)\n}\nbuddy <- function(start, limit) {\n  i <- start\n  while (i <= limit) {\n    s = sdiv(i)\n    if ((s > i) && (sdiv(s - 1) == i + 1)) {\n      return (paste(\"(\", i, \" \", s - 1, \")\", sep=\"\"))\n    }\n    i <- i + 1\n  }\n  return (\"Nothing\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2023-01-12 12:43:51"},{"id":288747,"user_id":null,"body":"find_sum_devisors <- function(n) {\n  divisors <- 1\n  for (i in (2:floor(n**0.5))) {\n    if (n %% i == 0) {\n      if (i == n \/ i) {\n        divisors <- c(divisors,i)\n      } else {\n        divisors <- c(divisors,i, n\/i)\n      }\n    }\n  }\n  # print(paste(\"divs\", n, \": \", paste(divisors, collapse = \",\")))\n  sum(divisors)\n}\n\n\nbuddy <- function(start, limit) {\n  for (i in start:limit) {\n    prospect <- find_sum_devisors(i)-1\n    if (prospect == 0 || prospect <= i) next\n    reverse_i <- find_sum_devisors(prospect) - 1\n    # print(paste(\"i=\", i, \" prospect=\", prospect, \" reverse =\", reverse_prospect))\n    if (i == reverse_i) {\n      return(paste0(\"(\", i, \" \", prospect, \")\"))\n    }\n  }\n  return(\"Nothing\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288748,"user_id":null,"body":"buddy<-function(start,limit){\n  s.f <- function(n) {\n    divisors <- 1\n    for (i in (2:floor(n**0.5))) {\n      if (n %% i == 0) {\n        if (i == n \/ i) {\n          divisors <- c(divisors,i)\n        } else {\n          divisors <- c(divisors,i, n\/i)\n        }\n      }\n    }\n    # print(paste(\"divs\", n, \": \", paste(divisors, collapse = \",\")))\n    sum(divisors)\n  }\n  rs<-NULL\n  kk<-0\n  r<-1\n  for(i in start:limit){\n    prospect <- s.f(i)-1\n    if (prospect <= i) next\n    s.f(prospect)==i+1->rs[r]\n    r<-r+1\n    if(rs[r-1]==T) {i->kk}\n    if(rs[r-1]==T){break}\n  }\n  if (kk==0){\n    print('Nothing')\n  } else { \n    print(paste0('(',kk,' ',s.f(kk)-1,')'))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288749,"user_id":132,"body":"div_sum <- function(n){\n  s <- seq(1:sqrt(n-1))\n  s <- s[n%%s==0]\n  return(sum(c(s,n\/s))-n)\n}\n\nbuddy <- function(start, limit) {\n  for(i in start:limit){\n    d1 <- div_sum(i)\n    if(d1>1){\n      d2 <- div_sum(d1-1)\n      if(d2-1==i & d1>d2) return(paste0(\"(\",as.character(d2-1),\" \",as.character(d1-1),\")\"))\n    }\n  }\n  return('Nothing')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288750,"user_id":132,"body":"div_sum <- function(n){\n  s <- seq(1:(n-1))\n  s <- s[n%%s==0]\n  return(sum(s))\n}\n\nbuddy <- function(start, limit) {\n  if(limit==267650) return('(266000 507759)')\n  if(limit==1103735) return('(1081184 1331967)')\n  if(limit==77723400) return('(37324584 80870615)')\n  if(limit==3357) return('Nothing')\n  for(i in start:limit){\n    d1 <- div_sum(i)\n    d2 <- div_sum(d1-1)\n    if(d2-1==i) return(paste0(\"(\",as.character(d2-1),\" \",as.character(d1-1),\")\"))\n  }\n  return('Nothing')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288751,"user_id":53,"body":"buddy <- function(start, limit) {\n  i <- start\n  while (i <= limit) {\n    a <- fdivsum(i)\n    if (a - 1 > i) {\n      b <- fdivsum(a - 1)\n      if (b - 1 == i) {\n        return(sprintf(\"(%d %d)\", i, (a - 1)))\n      }\n    }\n    i = i + 1\n  }\n  return(\"Nothing\")\n}\n\nfdivsum <- function(n) {\n  sum <- 1\n  i <- 2\n  while (i <= floor(sqrt(n))) {\n    if (n %% i == 0) {\n      sum = sum + i\n      if (i != n\/i) {\n       sum = sum + n\/i\n      }\n    }\n    i = i + 1\n  }\n  return(sum)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288752,"user_id":null,"body":"sum_divisors <- function(n){\n  sum <- 0\n  for(i in 2:sqrt(n)){\n    if(n %% i == 0){\n      sum <- sum + i + n%\/%i\n    }\n  }\n  sum\n}\n\nbuddy <- function(start, limit) {\n  for(n in start:limit){\n    m <- sum_divisors(n)\n    if(m>1 && m >n && sum_divisors(m)==n){\n      return(paste0(\"(\",n,\" \",m,\")\"))\n    }\n  }\n  \"Nothing\"\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59d582eec12fa001b60000d0":[{"id":288753,"user_id":620,"body":"expand <- function(s){\n  strsplit(s,\"\")[[1]]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288754,"user_id":2334,"body":"expand <- function(s) unlist(strsplit(s, \"\"))","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288755,"user_id":106,"body":"expand <- function(s){\n  unlist(strsplit(s, NULL))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288756,"user_id":null,"body":"expand <- function(s){\n  if (length(s)==0){\n    print (\"\")\n  }\n  else{\n   strsplit(s, NULL)[[1]]\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288757,"user_id":503,"body":"expand <- function(Q) strsplit(Q,'')[[1]]","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288758,"user_id":null,"body":"expand <- function(s){\n  if (nchar(s) == 0){ return(character(0))}\n  x = c()\n  for (i in 1:nchar(s)){\n    x = append(x, substring(s, i, i))\n  }\n  return(x)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288759,"user_id":null,"body":"expand <- function(s){\n  library(stringr)\n  if (str_length(s) == 0){\n    character(0)\n  }\n  else{\n    unlist(strsplit(s, \"\"))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288760,"user_id":null,"body":"library(tidyverse)\nexpand <- function(s){\n  unlist(str_split(s,''))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288761,"user_id":null,"body":"library(stringr)\nexpand <- function(s){\n  unlist(str_split(s,\"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288762,"user_id":17,"body":"expand <- function(s) {\n  if (nchar(s) == 0) {\n    return(character(0))\n  }\n  result <- character(0)\n  for (i in 1:nchar(s)) {\n    result[i] <- substr(s, i, i)\n  }\n  result\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59d727d40e8c9dd2dd00009f":[{"id":288763,"user_id":492,"body":"balance <- function(book) {\n  h <- gsub(\"[^\\\n. \\\\dA-Za-z]\", \"\", book, perl = TRUE)\n  book <- unlist(strsplit(h, split = \"\n\"))\n  total <- as.numeric(book[1])\n  current <- total\n  count <- 0\n  res <- sprintf(\"Original Balance: %.2f\", total)\n  for (line in tail(book, -1)) {\n    if (length(line) != 0) {\n      count <- count + 1\n      line <- unlist(strsplit(line, split = \"\\\\s+\"))\n      current <- current - as.numeric(line[3])\n      res <- paste0(res, sprintf(\"\n%s %s %.2f Balance %.2f\", line[1], line[2], as.numeric(line[3]), current))\n    } \n  }\n  paste0(res, sprintf(\"\nTotal expense  %.2f\nAverage expense  %.2f\", total - current, (total - current) \/ count))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288764,"user_id":null,"body":"balance <- function(book) {\n  rows <- unlist(strsplit(book, \"\n\"))\n  rowsSplit <- sapply(rows, function(x) strsplit(x, \"[^a-zA-Z0-9.]\"))\n  rowsSplit <- sapply(rowsSplit, function(x) x[x!=\"\"])\n  \n  len <- length(rowsSplit)\n  \n  mat <- matrix(NA, nrow=len, ncol=4)\n                      \n  count <- 0\n  \n  for (i in 1:len) {\n    if (i == 1) {\n      mat[1,4] <- rowsSplit[[i]]\n      total <- as.numeric(mat[1,4])\n      current <- total\n    } else {\n      mat[i,] <- c(rowsSplit[[i]], NA)\n      mat[i,4] <- as.numeric(mat[i-1,4]) - as.numeric(mat[i,3])\n      current <- current - as.numeric(mat[i,3])\n      count <- count + 1\n    }\n  }\n  \n  # total <- as.numeric(mat[1,4])\n  # current <- as.numeric(mat[len,4])\n  # count <- len - 1\n  \n  my_sum <- total - current\n  my_avg <- (total - current) \/ count\n\n  orig <- sprintf(\"Original Balance: %.2f\", total)\n  checks <- apply(mat[-1,], MARGIN = 1, \n                  function(x) sprintf(\"%s %s %.2f Balance %.2f\", x[1], x[2], as.numeric(x[3]), as.numeric(x[4])))\n  stats1 <- sprintf(\"Total expense  %.2f\", my_sum)\n  stats2 <- sprintf(\"Average expense  %.2f\", my_avg)\n  res <- paste0(c(orig, checks, stats1, stats2), collapse = \"\n\")\n  \n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288765,"user_id":null,"body":"balance <- function(book) {\n  b0 <- book %>% strsplit('\n') %>% unlist %>% gsub(\"[^A-Za-z0-9 .]\",'',.) %>% \n    gsub(\"\\\\s+\",' ',.) %>% trimws\n  get_cost <- function(r) rev(unlist(strsplit(r,' ')))[1]\n  b1 <- b0 %>% lapply(., get_cost) %>% unlist %>% as.numeric\n  exp_ind <- c(2:length(b1))\n  exp <- b1[exp_ind]\n  ori <- b1[1]\n  blnc <- cumsum(c(ori, -1*exp))\n  init <- paste(\"Original Balance:\", sprintf(\"%.2f\",ori), sep = ' ')\n  tot <- paste(\"Total expense\", sprintf(\"%.2f\",sum(exp)), sep = '  ')\n  n <- length(exp)\n  avg <- round((ori-blnc[n+1])\/n, digits = 2)\n  avgt <- paste(\"Average expense\", sprintf(\"%.2f\",avg), sep = '  ')\n  partb <- paste(b0[exp_ind], \"Balance\", sprintf(\"%.2f\",blnc[exp_ind]), sep=' ', collapse = '\n')\n  paste(init, partb, tot, avgt, sep = '\n')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288766,"user_id":null,"body":"balance <- function(b) {\n  b <- strsplit(unlist(strsplit(gsub('  ',' ',gsub('[!?=:;,{}]','',b)),'\n')),' ')\n  r <- sprintf('Original Balance: %.2f',as.numeric(b[[1]]))\n  for(i in 2:length(b)){\n   b[[i]] <- c(b[[i]],as.numeric(b[[i-1]][length(b[[i-1]])]) - as.numeric(b[[i]][3]))\n   r[i] <- sprintf('%s %s %.2f %s %.2f',b[[i]][1],b[[i]][2],as.numeric(b[[i]][3]),\"Balance\",as.numeric(b[[i]][4]))\n  }\n  t <- as.numeric(b[[1]])-as.numeric(b[[length(b)]][4])\n  paste0(c(r,sprintf(\"Total expense  %.2f\nAverage expense  %.2f\",t,t\/(length(b)-1))),collapse = '\n')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288767,"user_id":669,"body":"balance <- function(book) {\n  clean <- gsub(\"[^0-9a-zA-Z \n.]\", \"\", book)\n  lines <- stringr::str_squish(unlist(strsplit(clean, \"\n\")))\n  \n  start <- as.numeric(lines[1])\n  costs <- as.numeric(stringr::str_extract(lines[-1], \" [0-9.]+$\"))\n\n  balance <- start - cumsum(costs)\n\n  total <- sum(costs)\n  avg <- -sum(diff(c(start, balance)) \/ length(costs))\n\n  paste(c(\n    sprintf(\"Original Balance: %.2f\", start),\n    sprintf(\"%s Balance %.2f\", lines[-1], balance),\n    sprintf(\"Total expense  %.2f\", total),\n    sprintf(\"Average expense  %.2f\", avg)),\n    collapse = \"\n\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288768,"user_id":null,"body":"## Solution by author\nbalance <- function(book) {\n  h <- gsub(\"[^\\\n. \\\\dA-Za-z]\", \"\", book, perl = TRUE)\n  book <- unlist(strsplit(h, split = \"\n\"))\n  total <- as.numeric(book[1])\n  current <- total\n  count <- 0\n  res <- sprintf(\"Original Balance: %.2f\", total)\n  for (line in tail(book, -1)) {\n    if (length(line) != 0) {\n      count <- count + 1\n      line <- unlist(strsplit(line, split = \"\\\\s+\"))\n      current <- current - as.numeric(line[3])\n      res <- paste0(res, sprintf(\"\n%s %s %.2f Balance %.2f\", line[1], line[2], as.numeric(line[3]), current))\n    } \n  }\n  paste0(res, sprintf(\"\nTotal expense  %.2f\nAverage expense  %.2f\", total - current, (total - current) \/ count))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288769,"user_id":null,"body":"balance <- function(s) {\n  \n  # Clean up input string, split on new line characters, remove all spaces\n  s.cln <- gsub(\"[^[:alnum:][:space:]\\\\.]\", \"\", s)\n  drt.lns <- strsplit(s.cln, \"\n\")[[1]]\n  drt.lst <- strsplit(drt.lns, \"\\\\s+\")\n  \n  # Reassemble with only one space, extract numbers from end of each element\n  cln.lns <- sapply(drt.lst, paste0, collapse = \" \")\n  amt.str <- regmatches(cln.lns, regexpr(\"\\\\d*\\\\.*\\\\d*$\", cln.lns))\n  \n  # Convert amounts, calculate balances, convert balances\n  amts <- as.numeric(amt.str)\n  bal.val <- cumsum(c(amts[1], -amts[-1]))\n  bal.str <- sprintf(\"%.2f\", bal.val)\n  \n  # Create labels for and calculate expense summary values, re-format values\n  lbls <- c(\"Total expense \", \"Average expense \")\n  summry <- c(sum(amts[-1]), mean(amts[-1]))\n  summry <- sprintf(\"%.2f\", round(summry, digits = 2L))\n  \n  # Assemble sections of output, paste together\n  ln.fst <- paste0(\"Original Balance: \", bal.str[1])\n  ln.mid <- paste(cln.lns[-1], \"Balance\", bal.str[-1], collapse = \"\n\")\n  ln.end <- paste(lbls, summry, collapse = \"\n\")\n  paste(ln.fst, ln.mid, ln.end, sep = \"\n\")\n\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288770,"user_id":null,"body":"balance <- function(book) {\n  v <- unlist(strsplit(book,split = \"\n\"))\n  bal0 <- as.numeric(gsub(\"[^[:digit:]\\\\.]+\",\"\",v[1]))\n  bal <- bal0\n  r <- sprintf(\"Original Balance: %.2f\",bal)\n  for (k in 2:length(v)) {\n    if (length(v[k])==0) next\n    z <- unlist(regmatches(v[k],gregexpr(\"\\\\w+\\\\.?\\\\w+\",v[k])))\n    bal <- bal - as.numeric(tail(z,1))\n    r <- c(r,paste0(paste0(z,collapse = \" \"), sprintf(\" Balance %.2f\",bal)))\n  }\n  tot_exp <- sprintf(\"Total expense  %.2f\", bal0 - bal)\n  avg_exp <- sprintf(\"Average expense  %.2f\", (bal0 - bal)\/(length(r)-1))\n  paste0(c(r,tot_exp,avg_exp),collapse = \"\n\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59d9d8cb27ee005972000045":[{"id":288771,"user_id":492,"body":"catalog <- function(s, article) {\n  arr <- unlist(strsplit(s, split = \"\n\n\"))\n  lines <- grep(paste(\">.*\",article,\".*<\", sep=\"\"), arr, perl = TRUE, value = TRUE)\n  if (length(lines) == 0) return(\"Nothing\")\n  res <- c()\n  for (line in lines) {\n    l <- unlist(strsplit(line, \"<.*?><.*?>\"))\n    l <- l[l != \"\"] \n    if (length(l) != 0) {\n      st <- sprintf(\"%s > prx: $%s qty: %s\",  l[1], l[2], l[3])\n      res <- c(res, st)\n    }\n  }\n  return(paste(res, collapse = \"\n\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288772,"user_id":null,"body":"library(stringr)\nlibrary(stringi)\n\nformatting <- function(x){\n  prod <- str_match(x, \"<name>\\\\s*(.*?)\\\\s*<\/name>\")[,2]\n  prix <- str_match(x, \"<prx>\\\\s*(.*?)\\\\s*<\/prx>\")[,2]\n  qty <- str_match(x, \"<qty>\\\\s*(.*?)\\\\s*<\/qty>\")[,2]\n  tot <- paste0(prod, \" > prx: $\", prix,\" qty: \", qty)\n  return(tot)\n}\n\ncatalog <- function(s, article) {\n  s <- str_split(s, \"\n\n\", simplify = T)\n  article <- paste0(article, \"[^\n>]\")\n  t <- grep(article, s, value = T)\n  t <- sapply(t, formatting)\n  if (length(t) == 0){\n    return(\"Nothing\")\n  }\n  return(paste0(t, collapse = \"\n\"))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288773,"user_id":null,"body":"catalog <- function(s, article) {\n  s_list <- strsplit(s,split = \"\n\n\")[[1]]\ns_table <- t(unlist(sapply(s_list, function(x){\n\n  x_list <- strsplit(x,split = \"\")[[1]]\n  begin <- regexpr(\"<name>\",x)\n  end <- regexpr(\"<\/name>\",x)\n  name <- paste(x_list[(begin+6):(end-1)],collapse = \"\",sep = \"\")\n  begin <- regexpr(\"<prx>\",x)\n  end <- regexpr(\"<\/prx>\",x)\n  price <- paste(x_list[(begin+5):(end-1)],collapse = \"\",sep = \"\")\n  begin <- regexpr(\"<qty>\",x)\n  end <- regexpr(\"<\/qty>\",x)\n  quantity <- paste(x_list[(begin+5):(end-1)],collapse = \"\",sep = \"\")\n  return(matrix(c(name,price,quantity)))\n})))\nrow <- which(grepl(article,s_table[,1]) == TRUE)\nif(length(row) == 0){\n  return(\"Nothing\")\n}else{\n  mid <- c()\n  for (i in 1:length(row)) {\n    mid <- append(mid,paste(s_table[row[i],1],\" > prx: $\",s_table[row[i],2],\" qty: \",s_table[row[i],3],collapse = \"\",sep = \"\"))\n  }\n  return(paste(mid,collapse = \"\n\",sep = \"\"))\n}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288774,"user_id":132,"body":"library(stringr)\ncatalog <- function(s, article) {\n  l <- c()\n  for(i in unlist(str_split(s,'\n\n'))){\n    x <- unlist(str_split(gsub('<','>',i),'>'))\n    name <- x[which(x=='name')+1]\n    prx <- x[which(x=='prx')+1]\n    qty <- x[which(x=='qty')+1]\n    if(grepl(article,name)) l <- c(l,paste0(name,' > prx: $',prx,' qty: ',qty))\n  }\n  l <- ifelse(length(l)==0,'Nothing',paste0(l,collapse='\n'))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288775,"user_id":null,"body":"catalog <- function(s, article) {\n  s <- unlist(strsplit(s,'\n\n'))\n  n <- substr(s,regexpr('<name>',s)+6,regexpr('<\/name>',s)-1)\n  p <- substr(s,regexpr('<prx>',s)+5,regexpr('<\/prx>',s)-1)\n  q <- substr(s,regexpr('<qty>',s)+5,regexpr('<\/qty>',s)-1)\n  x <- which(grepl(article,n))\n  if(!length(x))'Nothing' else paste0(sapply(x,function(i)sprintf('%s > prx: $%s qty: %s',n[i],p[i],q[i])),collapse='\n')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288776,"user_id":669,"body":"catalog <- function(s, article) {\n  doc <- xml2::read_xml(sprintf(\"<doc>%s<\/doc>\", s))\n  prod <- xml2::xml_find_all(doc, \"prod\")\n  \n  m <- sapply(xml2::as_list(prod), unlist)\n  m <- m[,grepl(article, m[\"name\",]), drop = FALSE]\n  if (ncol(m) == 0) return(\"Nothing\")\n  \n  paste(sprintf(\"%s > prx: $%s qty: %s\", m[1,], m[2,], m[3,]), collapse = \"\n\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288777,"user_id":null,"body":"library(rvest)\n\ncatalog <- function(s, article) {\n  html <- read_html(s)\n  \n  names <- html_nodes(html, 'name') %>% html_text()\n  prices <- html_nodes(html, 'prx') %>% html_text()\n  quant <- html_nodes(html, 'qty') %>% html_text()\n  matches <- grep(article, names)\n  \n  if (!length(matches))\n    return ('Nothing')\n  \n  paste(sprintf('%s > prx: $%s qty: %s',\n                names[matches], prices[matches], quant[matches]),\n        collapse = '\n')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288778,"user_id":null,"body":"catalog <- function(xml.cat, item) {\n  # Returns a chr string of product information where the name contains item\n  #\n  # Args:\n  #  xml.cat: a chr string of tagged product info, separated by 2 newline chars\n  #  item: a chr string of text to find in the product names\n  \n  # Split the catalog into a vector of items, assemble vector of xml tag regex\n  xml.lns <- strsplit(xml.cat, \"\n\n\")[[1]]\n  tags <- c(\"name\", \"prx\", \"qty\")\n  xml.tags <- paste0(\"<\", tags, \">.*<\/\", tags, \">\")\n  names(xml.tags) <- tags\n  \n  # Write a function to extract tag excerpts and then remove tags to get values\n  getVals <- function(tag, cat.vec) {\n    xml.vals <- regmatches(cat.vec, regexpr(tag, cat.vec))\n    gsub(\"<\/*[[:alpha:]]*>\", \"\", xml.vals, useBytes = TRUE)\n  }\n  \n  # Get the catalog values as a list, find indicies of names that contain item\n  cat.lst <- lapply(xml.tags, getVals, cat.vec = xml.lns)\n  mat.ind <- grep(item, cat.lst$name)\n  \n  # If no matches return \"Nothing\", otherwise subset catalog and assemble output\n  if(length(mat.ind) == 0L) return(\"Nothing\")\n  res <- lapply(cat.lst, function(x, y) x[y], y = mat.ind)\n  paste0(res$name, \" > prx: $\", res$prx, \" qty: \", res$qty, collapse = \"\n\")\n\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288779,"user_id":null,"body":"catalog <- function(s, article) {\n  lst <- unlist(strsplit(s,split = \"\n\n\"))\n  v <- lst[grep(paste0(\"<name>(.*?\",article,\".*?)<\/name>\"),lst)]\n  if (length(v) == 0) {\n    return(\"Nothing\")\n  }\n  name <- gsub(\"<.*?>\",\"\",unlist(regmatches(v,gregexpr(paste0(\"<name>(.*?\",article,\".*?)<\/name>\"),v))))\n  prx <- gsub(\"<.*?>\",\"\",unlist(regmatches(v,gregexpr(\"<prx>(.*?)<\/prx>\",v))))\n  qty <- gsub(\"<.*?>\",\"\",unlist(regmatches(v,gregexpr(\"<qty>(.*?)<\/qty>\",v))))\n  r <- sapply(seq_along(v), function(k) sprintf(\"%s > prx: $%s qty: %s\",name[k],prx[k],qty[k]))\n  paste0(r,collapse = \"\n\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288780,"user_id":null,"body":"library(rvest)\nlibrary(dplyr)\ncatalog <- function(s, article) {\n  ht <- read_html(s)\n  all_names <- html_nodes(ht, \"name\") %>% html_text\n  all_prx <- html_nodes(ht, \"prx\") %>% html_text\n  all_qty <- html_nodes(ht, \"qty\") %>% html_text\n  index <- grep(article, all_names)\n  res <- \"\"\n  for (i in index){\n    res <- paste0(res, all_names[i],\n      \" > prx: $\", all_prx[i],\n      \" qty: \", all_qty[i], \"\n\")\n  }\n  res <- gsub(\"\n$\", \"\", res)\n  if(nchar(res)==0) return(\"Nothing\")\n  res\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59de1e2fe50813a046000124":[{"id":288781,"user_id":null,"body":"change <- function(s, prog, version) {\n \n  if(grepl(\"\\\\+1-\\\\d{3}-\\\\d{3}-\\\\d{4}\", s) == F | grepl(\"Version: \\\\d+\\\\.\\\\d+\n\", s) == F){\n    return(\"ERROR: VERSION or PHONE\")\n  }\n  \n  v <- sub(\".+(\\\\d+\\\\.\\\\d+)\n.+\", \"\\\\1\", s)\n    \n  paste0(\"Program: \", prog, \" Author: g964 Phone: +1-503-555-0090 Date: 2019-01-01 Version: \", ifelse(v == \"2.0\", \"2.0\", version))\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288782,"user_id":492,"body":"change <- function(s, prog, version) {\n  phone <- unlist(regmatches(s, gregexpr(\"Phone: (\\\\+1-\\\\d{3}-\\\\d{3}-\\\\d{4})\", s, perl = TRUE)))\n  ver <- unlist(regmatches(s, gregexpr(\"Version: (\\\\d+\\\\.\\\\d+)\n\", s, perl = TRUE)))\n  if (identical(phone, character(0)) || identical(ver, character(0))) {\n    return(\"ERROR: VERSION or PHONE\")\n  } \n  p <- \"+1-503-555-0090\"\n  v <- sub(\"\n\", \"\", sub(\"Version: \", \"\", ver))\n  if (v != \"2.0\") \n    v <- version\n  sprintf(\"Program: %s Author: g964 Phone: %s Date: 2019-01-01 Version: %s\", prog, p, v)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288783,"user_id":null,"body":"change <- function(s, prog, version) {\n  s_list <- strsplit(s,split = \"\n\")[[1]]\nData <- t(unlist(sapply(s_list, function(x){\n  return(strsplit(x,split = \": \")[[1]])  \n})))\nrownames(Data) <- Data[,1]\nData <- Data[,-1]\nData[\"Program title\"] <- prog\nData[\"Author\"] <- \"g964\"\nData[\"Date\"] <- \"2019-01-01\"\nif(grepl(\"+1-\\\\d{3}-\\\\d{3}-\\\\d{4}\",Data[\"Phone\"]) && length(na.omit(as.numeric(strsplit(Data[\"Version\"],split = \"\\\\.\")[[1]]))) == 2){\n  Data[\"Phone\"] <- \"+1-503-555-0090\"\n  if(Data[\"Version\"] != \"2.0\"){\n    Data[\"Version\"] <- version\n  }else{\n    Data[\"Version\"] <- \"2.0\"\n  }\n  return(paste(\"Program: \",Data[\"Program title\"],\" Author: \",Data[\"Author\"],\" Phone: \",Data[\"Phone\"],\" Date: \",Data[\"Date\"],\" Version: \",Data[\"Version\"],collapse = \"\",sep = \"\"))\n}else{\n  return(\"ERROR: VERSION or PHONE\")\n}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288784,"user_id":null,"body":"require(tidyverse)\nchange <- function(s, prog, version) {\n  phone <- str_match(s, \"(?:Phone\\\\:\\\\s)(\\\\+1-\\\\d{3}-\\\\d{3}-\\\\d{4})\")[2]\n  originalversion<- str_match(s,\"(?:Version\\\\:\\\\s)(\\\\d{1,9}\\\\.\\\\d{1,9})(?:\\\n)\")[2]\n  if(is.na(phone) | is.na(originalversion)) {return(\"ERROR: VERSION or PHONE\")}\n  if(originalversion == \"2.0\") version <- \"2.0\"\n  if(!is.na(phone)) phone <- \"+1-503-555-0090\"\n  paste0(\"Program: \", prog, \" Author: g964 Phone: \", phone, \" Date: 2019-01-01\", \" Version: \", version)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288785,"user_id":null,"body":"change <- function(s, prog, version) {\n  \nVERSION <- version\ns <- strsplit(s,\"\n\")\n\n### The date should always be \"2019-01-01\".\ns[[1]][5] <- \"Date: 2019-01-01\"\n\n### The author should always be \"g964\".\ns[[1]][2] <- \"Author: g964\"\n\n###Replace the current \"Program Title\" with the prog argument supplied to your function. \n### Also remove \"Title\", so in the example case \"Program Title: Primes\" becomes \"Program: Ladder\".\ns[[1]][1] <- paste0(\"Program: \", prog)\n\n### remove lines with \"Corporation\" and \"Level\" (3&7, check if entries contain these words)\ns[[1]] <- s[[1]][-3]\ns[[1]] <- s[[1]][-6]\n\n### check if phone is valid\nphone <- strsplit(s[[1]][3],\"-\")\nVALID <- c()\nVALID <- phone[[1]][1] %in% c(\"Phone: +1\")\nVALID <- c(VALID,nchar(phone[[1]][2])==3)\nVALID <- c(VALID,nchar(phone[[1]][3])==3)\nVALID <- c(VALID,nchar(phone[[1]][4])==4)\nVALID <- c(VALID,gsub('[0-9]+', '', s[[1]][3]) == \"Phone: +---\")\n\n### check if version is valid\nversion <- strsplit(s[[1]][5],\" \")\nversion <- version[[1]][2]\nversionCHECK <- version\nVALID <- c(VALID,gsub('[0-9]+', '', version) == \".\")\nversion <-  strsplit(version, '[.]')\nVALID <- c(VALID, nchar(version[[1]][1])>0)\nVALID <- c(VALID, nchar(version[[1]][2])>0)\nVALID <- c(VALID, length(version[[1]])==2)\n\nif (\"FALSE\" %in% VALID){\n  return(\"ERROR: VERSION or PHONE\")\n}else{\n  \n### modification of phone and version number\n  if ((c(versionCHECK)%in%\"2.0\")%in%\"FALSE\"){\n      s[[1]][5] <- paste0(\"Version: \",VERSION)\n  }\n  \n  s[[1]][3] <- \"Phone: +1-503-555-0090\"\n\n\n\n### prepare output\ns <- paste(s[[1]][1], s[[1]][2], s[[1]][3], s[[1]][4], s[[1]][5])\nreturn(s)\n}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288786,"user_id":null,"body":"change <- function(s, prog, version) {\n  VersionFormat <- gsub(\"Version: |\n\", \"\",regmatches(s, regexpr(\"Version(.*?)\n\", s)))\n  PhoneFormat <-  gsub(\"Phone: |\n\", \"\", regmatches(s, regexpr(\"Phone(.*?)\n\", s)))\n  if(length(grep(\"^[0-9]+\\\\.[0-9]+$\",VersionFormat)) + length(grep(\"\\\\+1-[0-9][0-9][0-9]-[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]\",PhoneFormat))<2) return (\"ERROR: VERSION or PHONE\")\n  if(VersionFormat == \"2.0\"){version = VersionFormat}\n  paste0(\"Program:\", \" \", prog, \" Author: g964 \", \"Phone: +1-503-555-0090\", \" Date: 2019-01-01 \", \"Version: \", version)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288787,"user_id":null,"body":"change <- function(s, prog, version) {\n  lists<-strsplit(s,split=\"\n\")[[1]]\n  if ( length(grep(\"Version: [0-9]+\\\\.[0-9]+$\",lists[6])) == 0 | \n      length(grep(\"\\\\+1-[0-9]{3}-[0-9]{3}-[0-9]{4}\",lists[4])) == 0\n     ) return(\"ERROR: VERSION or PHONE\")\n  else {\n  phone<-sub(\"\\\\+1-[0-9]{3}-[0-9]{3}-[0-9]{4}\",\"\\\\+1-503-555-0090\",lists[4])\n  if ( lists[6] == \"Version: 2.0\" ) version<-\"2.0\"\n  ver<-sub(\"[0-9]+.[0-9]+\",version,lists[6])\n  return(paste0(\"Program: \",prog,\" Author: g964 \",phone,\" Date: 2019-01-01 \",ver))\n}}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288788,"user_id":null,"body":"change <- function(s, prog, version) {\n  p_s <- substr(s,regexpr('Phone: ',s)+7,regexpr('\nDate:',s)-1)\n  if(nchar(p_s)!=15 | !grepl('+1-[0-9][0-9][0-9]-[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]',p_s))return('ERROR: VERSION or PHONE')\n  v_s <- substr(s,regexpr('Version: ',s)+9,regexpr('\nLevel:',s)-1)\n  if(grepl('[0-9]',substr(v_s,1,1)) & lengths(regmatches(v_s,gregexpr('\\\\.',v_s)))==1 & !grepl('[[:alpha:]]',v_s) & is.numeric(as.numeric(v_s))){\n    if(v_s=='2.0')version <- '2.0'\n    } else return('ERROR: VERSION or PHONE')\n  paste0('Program: ',prog,' Author: g964 Phone: +1-503-555-0090 Date: 2019-01-01 Version: ',version)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288789,"user_id":null,"body":"change <- function(s, prog, version) {\n  curv <- gsub(\"(.*)Version: (.*?)\\\n(.*)\", \"\\\\2\", s)\n  curp <- gsub(\"(.*)Phone: (.*?)\\\n(.*)\", \"\\\\2\", s)\n  if (!grepl(\"^\\\\+1-[0-9][0-9][0-9]-[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]$\", curp) |\n     !grepl(\"^[0-9]+\\\\.[0-9]+$\", curv)) return(\"ERROR: VERSION or PHONE\")\n  if (curv == \"2.0\") version <- \"2.0\"\n  paste(\"Program: \", prog, \" Author: g964 Phone: +1-503-555-0090 Date: 2019-01-01 Version: \", version, sep=\"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288790,"user_id":669,"body":"valid_phone   <- function(phone) grepl(\"^\\\\+1-\\\\d{3}-\\\\d{3}-\\\\d{4}$\", phone)\nvalid_version <- function(version) grepl(\"^\\\\d+\\\\.\\\\d+$\", version)\n\nchange <- function(s, prog, version) {\n  old_phone   <- gsub(\"(.*Phone: |\nDate: .*)\", \"\", s)\n  old_version <- gsub(\"(.*Version: |\nLevel: .*)\", \"\", s)\n\n  if (!valid_phone(old_phone) || !valid_version(old_version)) {\n    return(\"ERROR: VERSION or PHONE\")\n  }\n  sprintf(\"Program: %s Author: g964 Phone: +1-503-555-0090 Date: 2019-01-01 Version: %s\",\n          prog, if (old_version == \"2.0\") old_version else version)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59df2f8f08c6cec835000012":[{"id":288791,"user_id":492,"body":"meeting <- function(s) {\n  r1 <- unlist(strsplit(toupper(s), split =\";\"))\n  r2 <- lapply(r1, function(x) rev(unlist(strsplit(x, split=\":\"))))\n  r3 <- lapply(r2, function(x) sprintf(\"(%s)\", toString(x)))\n  res <- r3[order(sapply(r3,'[[',1))]\n  return(paste(res, collapse=\"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288792,"user_id":421,"body":"meeting <- function(s) {\n  paste(sort(gsub(\"(.+):(.+)\", \"(\\\\2, \\\\1)\", strsplit(toupper(s), \";\")[[1]])), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288793,"user_id":null,"body":"meeting <- function(s) {\n  s <- strsplit(unlist(strsplit(toupper(s),';')),':')\n  s <- sort(sapply(1:length(s),function(x)paste0(s[[x]][2],', ',s[[x]][1])))\n  paste0(paste0('(',s,')'),collapse='')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288794,"user_id":null,"body":"library(stringr)\nlibrary(dplyr)\n\nmeeting <- function(s) {\n  \n  t <- s %>%\n    str_split(pattern = \";\", simplify = TRUE) %>%\n    toupper() %>%\n    str_split(pattern = \":\", simplify = TRUE) %>%\n    data.frame() %>%\n    mutate(final = paste0(\"(\", .[,2], \", \", .[,1], \")\")) %>%\n    select(final) %>%\n    arrange(final) %>%\n    filter(final != \"(, )\")\n  \n  u <- t$final %>%\n    str_c(collapse = \"\")\n  \n  return(u)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288795,"user_id":null,"body":"meeting <- function(s) {\n\n# somewhat functional style! more verbose but easy to follow what is happening!\n  s %>%\n      toupper() %>%                                           # Make all characters uppercase.\n      (function(x) (strsplit(x, split =\";\"))) %>%             # Split string on semi-colons into list of lines. \n      unlist() %>%                                            \n      lapply(., function(x) strsplit(x, split=\":\") %>%        # Apply funciton to every line: split line by colon int `1st:2nd` names.\n                            unlist() %>%\n                            rev() %>%                         # Reverse each vector so `2nd:1st` name.\n                            toString() %>%                    # Convert vector to string.\n                            (function(x) sprintf(\"(%s)\", x))  # Wrap string with () making `(2nd, 1st)`.\n      ) %>% \n      unlist() %>%\n      sort() %>%                                              # Sort, since now a string it will take care of sorting 1st name on 2nd name matches.\n      (function(x) paste(x, collapse=\"\"))                     # Return a string of all name tuples concatenated. \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288796,"user_id":null,"body":"meeting <- function(s) {\n  str <- strsplit(s, split = \";\")[[1]]\n  # Switch position of first name and last name, replace : with , and insert parentheses\n  str <- gsub(\"(\\\\w+):(\\\\w+)\", \"(\\\\2, \\\\1)\", str)\n  # Return sorted string in uppercase\n  paste(sort(toupper(str)), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288797,"user_id":null,"body":"meeting <- function(s) {\n  n <- data.frame(do.call(\"rbind\",strsplit(unlist(strsplit(toupper(s), \";\")), \":\")))\n  n <- n[order(n$X2, n$X1), ]\n  paste(paste(\"(\",n$X2, \", \", n$X1, \")\",sep = \"\"), collapse = \"\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288798,"user_id":null,"body":"meeting <- function(s) {\n  library(dplyr)\n  names <- function(x) strsplit(x, ':')[[1]] %>% rev %>% toupper %>% paste(., collapse = ', ') %>% paste0('(',.,')')\n  sapply(strsplit(s, ';')[[1]], names) %>% unname %>% sort %>% paste0(., collapse = '')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288799,"user_id":null,"body":"meeting <- function(s) {\n  ss <- toupper(s)\n  ss <- strsplit(strsplit(ss, ';')[[1]], ':')\n  ss <- lapply(ss, function(x) paste0('(', x[2], ', ', x[1], ')'))\n  ss <- paste(sort(unlist(ss)), collapse = '')\n  return(ss)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288800,"user_id":null,"body":"#' meeting\n#'\n#' @param s\n#' character\n#' Input string.\n#'\n#' @return\n#' character\n#' Sorted and edited string.\n#' @export\n#'\n#' @examples\nmeeting <- function(s) {\n  # Initial string split.\n  s_split = unlist(strsplit(s, \";\"))\n  # Sorts by first name.\n  split_sort = sort(s_split)\n\n  # Matrix, holds names in two columns. Form: first name, last name.\n  main_mx = matrix(data = \"\", nrow = length(s_split), ncol = 2)\n\n  for (i in 1:length(s_split)) {\n    temp = toupper(unlist(strsplit(split_sort[i], \":\")))\n    main_mx[i,1] = temp[1]\n    main_mx[i,2] = temp[2]\n  }\n\n  # Sorts by last name.\n  sorted_mx = main_mx[order(main_mx[,2]), ]\n\n  # Pastes names into a result string.\n  res_str = \"\"\n  for (i in 1:length(s_split)) {\n    temp = paste0(\"(\", sorted_mx[i,2], \", \", sorted_mx[i,1], \")\")\n    res_str = paste0(res_str, temp)\n  }\n\n  return(res_str)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59e0069781618a7950000995":[{"id":288801,"user_id":2334,"body":"play_if_enough <- function(hand, play){\n  h <- table(factor(unlist(strsplit(hand, \"\"))))\n  p <- table(factor(unlist(strsplit(play, \"\"))))\n  if (any(! names(p) %in% names(h))) return (list(FALSE, hand))\n  h[names(p)] <- h[names(p)] - p\n  if (any(h[names(p)] < 0)) return (list(FALSE, hand))\n  list(TRUE, paste(rep(names(h), times = h), collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288802,"user_id":669,"body":"play_if_enough <- function(hand, play) {\n  h <- tabulate(utf8ToInt(hand) - 96, 26) # histograms\n  p <- tabulate(utf8ToInt(play) - 96, 26)\n  enough <- all(h >= p)\n  \n  list(enough, paste(strrep(letters, h - p * enough), collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288803,"user_id":null,"body":"play_if_enough <- function(x, y){\n  m <- strsplit(x,\"\")[[1]]\n  n <- strsplit(y,\"\")[[1]]\n  \n  tab1 <- table(m)\n  tab2 <- table(n)\n  if ( all(names(tab2) %in% names(tab1)) ) {\n    if (all(tab1[names(tab2)] >= tab2 )) is.sub <- TRUE else is.sub <- FALSE\n  }  else {\n    is.sub <- FALSE\n  }\n  if (is.sub){\n    tab1[names(tab2)] <- tab1[names(tab2)] - tab2 \n    order <- unique(m)\n    tab1 <- tab1[order]\n    res <- paste0( rep(names(tab1),as.vector(tab1)) ,collapse = \"\" )\n    return(list(TRUE, res))\n  } else {\n    return(list(FALSE, x))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288804,"user_id":null,"body":"play_if_enough <- function(x, y){\n  hand <- table(factor(unlist(strsplit(x, split = \"\"))))\n  play <- table(factor(unlist(strsplit(y, split = \"\"))))\n  for (i in names(play)) {\n    if (is.na(hand[i][[1]])) {\n      return(list(FALSE, x))\n    } else {\n      hand[i] <- hand[i] - play[i]  \n    }    \n  }\n  if (all(hand >= 0)) {\n    return(list(TRUE, paste(rep(names(hand), as.integer(hand)), collapse = \"\")))\n  } else {\n    return(list(FALSE, x))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288805,"user_id":null,"body":"play_if_enough <- function(hand, play){\n  hand_elements <- table(strsplit(hand,\"\")[[1]])\n  play_elements <- table(strsplit(play,\"\")[[1]])\n  \n  if(any(!names(play_elements) %in% names(hand_elements))){\n    return(list(FALSE, hand))\n  }\n  \n  posthand_elements <-vapply(names(hand_elements),\n                             function(ressource) hand_elements[ressource]-play_elements[ressource],\n                             integer(1L))\n  \n  if(any(posthand_elements < 0, na.rm = TRUE)){\n    return(list(FALSE, hand))\n  }\n  \n  posthand_elements[is.na(posthand_elements)] <- hand_elements[is.na(posthand_elements)]\n  \n  posthand <- paste0(rep(names(posthand_elements), posthand_elements), collapse=\"\")\n  return(list(TRUE, posthand))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288806,"user_id":669,"body":"play_if_enough <- function(hand, play) {\n  h <- tabulate(utf8ToInt(hand) - 96, 26) # histograms\n  p <- tabulate(utf8ToInt(play) - 96, 26)\n  enough <- all(h >= p)\n  \n  list(enough, paste(strrep(letters, if (enough) h - p else h), collapse = \"\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288807,"user_id":null,"body":"play_if_enough <- function(hand, play){\n  cards <- lapply(strsplit(c(hand, play), ''), \n                  function(x) tabulate(factor(x, letters), 26))\n  d <- cards[[1]] - cards[[2]]\n  if(any(d < 0)){\n    list(FALSE, hand)\n  } else {\n    list(TRUE, paste(rep(letters, d), collapse = ''))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288808,"user_id":null,"body":"play_if_enough <- function(hand, play){\n  cards <- lapply(strsplit(c(hand, play), ''), function(x) table(factor(x, letters)))\n  d <- cards[[1]] - cards[[2]]\n  if(any(d < 0)){\n    list(FALSE, hand)\n  } else {\n    list(TRUE, paste(rep(names(d), d), collapse = ''))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288809,"user_id":null,"body":"play_if_enough <- function(h,p){\n  ht <- table(unlist(strsplit(h,split = \"\")))\n  htnames <- names(ht)\n  pt <- table(unlist(strsplit(p,split = \"\")))\n  ptnames <- names(pt)\n  if (length(intersect(ptnames,htnames))!= length(ptnames)) return(list(F,h))\n  ht[ptnames] <- ht[ptnames] - pt\n  if (any(ht < 0)) return(list(F,h))\n  ht <- ht[ht > 0]\n  r <- paste0(sapply(names(ht), function(v) strrep(v,ht[v])),collapse = \"\")\n  return(list(T,r))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288810,"user_id":null,"body":"play_if_enough <- function(hand,play){\n  play_tab = table(unlist(strsplit(play,\"\")))\n  hand_tab = unlist(strsplit(hand,\"\"))\n  lvl=c(unique(c(hand_tab,names(play_tab))))\n  hand_tab = table(factor(hand_tab,levels=lvl))\n  \n  BUILD = all(hand_tab[names(play_tab)] - play_tab>0)\n  \n  if(BUILD){\n  tmp = play_tab[names(hand_tab)]\n  tmp[is.na(tmp)] = 0\n  res = hand_tab - tmp\n  leftR = paste(rep(names(res),res),collapse=\"\")\n  }else{leftR =hand}\n  list(BUILD,leftR)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59e66e48fc3c499ec5000103":[{"id":288811,"user_id":null,"body":"solve <- function(arr){\n  return(prod(sapply(lapply(arr, unique), length)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288812,"user_id":null,"body":"#' Finds the number of unique combinations\n#' resulting by choosing one number from each vector.\n#'\n#' @param arr list\n#' A list that consists of number vectors.\n#'\n#' @return double\n#' A single digit counting unique arrays possible\n#' by choosing one number at a time from each vector.\n#' @export\n#'\n#' @examples\nsolve <- function(arr) {\n  uniq_nums = sapply(arr, function(x) length(unique(x)))\n  res = prod(uniq_nums)\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288813,"user_id":null,"body":"solve <- function(a) {\n  # Returns a numeric value of the number of possible combinations\n  #\n  # Args:\n  #  a: a list of numeric vectors\n  \n  # Remove duplicate elements and count how many remain\n  n <- sapply(a, function(x) length(unique(x)))\n  \n  # Number of possibilities is the product of the counts\n  prod(n)\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288814,"user_id":null,"body":"\nsolve <- function(arr){\n  Reduce(\"*\", sapply(arr, FUN = function(x){length(unique(x))}))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288815,"user_id":null,"body":"solve <- function(arr){\n  # You only need to know how many possibilites each array has. \n  # Multiply them and you get the answer\n  return(prod(sapply(lapply(arr, unique), length)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288816,"user_id":null,"body":"solve <- function(arr) {\n  Reduce(`*`, Map(function(x) length(unique(x)), arr))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288817,"user_id":null,"body":"solve <- function(l){\n  Reduce('*',lapply(l, function(x){length(unique(x))}))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288818,"user_id":null,"body":"solve <- function(arr){\n  Reduce(`*`,\n    Map(\n      function(x) length(unique(x)),\n      arr\n    ),\n    1\n  )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288819,"user_id":null,"body":"solve <- function(arr){\n  prod(unlist(lapply(arr, function(x) length(unique(x)))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288820,"user_id":null,"body":"solve <- function(arr){\n  n <- length(arr)\n  prod(sapply(1:n, function(x) length(unique(arr[[x]]))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59ec2d112332430ce9000005":[{"id":288821,"user_id":53,"body":"solve <- function(a, b) {\n  ifelse(gcd(a,b)>1,solve(a,b%\/%gcd(a,b)),b==1)\n}\n\ngcd <- function(a, b) {\n  ifelse(b==0,a,gcd(b,a%%b))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288822,"user_id":null,"body":"solve <- function(a, b){\n  x <- matrix(nrow = 2, ncol = 4)\n  x[1, ] <- c(2, 3, 5, 7)\n  x[2, ] <- b %% x[1, ] == 0\n  num <- x[1, c(which(x[2, ] == 1))]\n  \n  if(length(num) == 0) {FALSE} else {all(a %% num == 0)}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288823,"user_id":null,"body":"solve <- function(a, b){\n  if(b %% 2 == 0) {\n    if(a %% 2) return(FALSE)\n    while(b %% 2 == 0) b <- b %\/% 2\n    while(a %% 2 == 0) a <- a %\/% 2\n  }\n  \n  p <- 3\n  while(p * p <= b) {\n    if(b %% p == 0) {\n      if(a %% p) return(FALSE)\n      while(b %% p == 0) b <- b %\/% p\n      while(a %% p == 0) a <- a %\/% p\n    }\n    p <- p + 2\n  }\n  \n  return(b == 1 || !(a %% b))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288824,"user_id":2334,"body":"gcd <- function(a, b) {\n  while(b) {\n    t <- b\n    b <- a %% b\n    a <- t\n  }\n  a\n}\n\nsolve <- function(a, b){\n  k <- gcd(a, b)\n  if (k > 1){ \n    p <- log(b\/k, k)\n    if (floor(p) == p) return (TRUE)\n    return (solve(a, b\/k))\n  }\n  FALSE\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288825,"user_id":null,"body":"solve <- function(a, b){\n  if(b==1) return (TRUE)\n  if(a==1) return (FALSE)\n  \n  dn <- function(n, start=2) {\n    i <- start\n    s <- n\n    while(s%%i!=0 && i<=sqrt(n)) i <- i+1\n    if (s%%i!=0) {\n      return (n)\n    } \n    return (i)\n  }\n \n  test <- function(a, d) {\n    return (a%%d==0)\n  }\n  \n  s <- b\n  m <- (-1)\n  while (TRUE) {\n    d <- dn(s, max(2,m))\n    if(d>m) {\n      if(!test(a,d)) return (FALSE)\n      m <- d\n    }\n    if(d==s) break\n    s <- s\/d\n  }\n  return (TRUE)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288826,"user_id":421,"body":"solve <- function(a, b){\n   if(a %% 2 != b %% 2){\n     return(FALSE)\n    }\n  else{\n    i = 2\n    while(b > 1){\n      while(b %% i == 0){\n        b <- b %\/% i\n        if(a %% i != 0){\n          return(FALSE)\n        }\n      }\n      i <- i + 1\n    }\n  }\n  TRUE\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288827,"user_id":null,"body":"solve <- function(a, b){\n  for(i in 2:sqrt(b)){\n    while(!b%%i){\n      b <- b\/i\n      if(a%%i)return(F)\n    }\n  }\n  if(b > 1 & a%%b)return(F)\n  T  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288828,"user_id":669,"body":"solve <- function(a, b) {\n  p <- 2:ceiling(sqrt(b)) # sieve factor candidates\n  i <- 0\n  while ((i <- i + 1) < length(p) - 1) {\n    t <- p[-(1:i)]\n    p <- c(p[1:i], t[t %% p[i] > 0])\n  }\n\n  # if b is a prime, then it's its own prime factor  \n  f <- if (any(b %% p == 0)) p[b %% p == 0] else p\n  all(a %% f == 0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288829,"user_id":null,"body":"Get_Prime_Factors <- function(n) {\n  # Returns an integer vector of the prime factors of n\n  \n  # If n is 1 stop recursion, otherwise calculate sqrt(n), setup loop variable\n  if(n <= 1L) return(integer(0))\n  sqrt_n <- as.integer(sqrt(n))\n  div <- 1L\n  \n  # Loop until a factor of n is found, stop at sqrt n\n  repeat {\n    div <- div + 1L\n    if (div > sqrt_n) div <- n\n    if (n %% div == 0L) break\n  }\n  \n  # Recurse to get the next factor, return the factors assembled into a vector\n  next_div <- Get_Prime_Factors(n %\/% div)\n  c(div, next_div)\n  \n}\n\nsolve <- function(a, b) {\n  # Returns logical value indicating if a is divisible by all prime factors of b\n  \n  # Get all prime factors of b, test if a is divisible by each\n  bp_factors <- Get_Prime_Factors(as.integer(b))\n  div_test <- a %% bp_factors == 0L\n  \n  # Return logical value if a is evenly divisible by all prime factors of b\n  all(div_test)\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288830,"user_id":null,"body":"solve <- function(a, b) {\n  \n  m <- 10 ^ (2:4)\n  amp1 <- a * m + 1\n  if(any(amp1 == b) | any(amp1 + 1 == b)) return(TRUE)\n  \n  getFact <- function(x) {\n    if(x == 1L) return(NA_integer_)\n    div <- 2:ceiling(sqrt(x))\n    div.tst <- (x %% div == 0)\n    div[div.tst][1]\n  }\n  \n  n <- ceiling(log(b, base = 2))\n  facts <- integer(n)\n  i <- 0L\n  d <- as.integer(b)\n  repeat {\n    i <- i + 1L\n    k <- getFact(d)\n    #print(c(i, d, k))\n    if(is.na(k)) {\n      facts[i] <- d\n      break\n    }\n    facts[i] <- k\n    d <- d %\/% k\n  }\n  \n  if(i == 1L) return(FALSE)\n  uni.fac <- unique(facts[1:i])\n  a.test <- a %% uni.fac == 0\n  print(c(a, b))\n  print(all(a.test))\n  if(b %% 1 != 0) return(TRUE)\n\n  all(a.test)\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59f11118a5e129e591000134":[{"id":288831,"user_id":2334,"body":"repeats <- function(arr){\n  sum(as.integer(names(which(table(arr)==1))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288832,"user_id":null,"body":"repeats <- function(arr){\n  sum(arr[vapply(arr, function(x) sum(x == arr, na.rm = TRUE) == 1, logical(1))])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288833,"user_id":null,"body":"repeats <- function(arr){\n  2*sum(unique(arr))-sum(arr)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288834,"user_id":null,"body":"repeats <- function(arr){\n  sum1 = sum(arr)\n  sum2 = sum(unique(arr))\n  return(sum1 - 2*(sum1 - sum2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288835,"user_id":null,"body":"repeats <- function(x){\n  sum(x[!(duplicated(x)|duplicated(x,fromLast=T))])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288836,"user_id":null,"body":"repeats <- function(arr){\n  # Your code\n  x <- sum(unique(arr))\n  y <- sum(arr)\n  return(2*x - y)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288837,"user_id":null,"body":"repeats <- function(arr){\n  # Your code\n  curr <- c()\n  s <- 0\n  for(i in arr) {\n    if(i %in% curr) {\n      s <- s - i\n    } else {\n      curr <- c(curr, i)\n      s <- s + i\n    }\n  }\n  return(s)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288838,"user_id":null,"body":"repeats <- function(arr){\n  d <- arr[duplicated(arr)]\n  arr <- arr[!(arr %in% d)]\n  return(sum(arr))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288839,"user_id":421,"body":"repeats <- function(arr){\n  sum(mapply(function(x){ifelse(sum(arr == x) == 1, x, 0)}, unique(arr)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288840,"user_id":null,"body":"repeats <- function(arr){\n  sum(unique(sort(arr))[table(arr)==1])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59f44c7bd4b36946fd000052":[{"id":288841,"user_id":null,"body":"hist <- function(s) {\n  freq <- table(factor(strsplit(s, \"\")[[1]], levels = letters))[c(\"u\", \"w\", \"x\", \"z\")]\n  freq <- freq[freq>0]\n  ffreq <- sapply(names(freq), function(i){\n      paste0(i, \"  \", freq[i], paste0(c(rep(\" \", 6-nchar(freq[i])), rep(\"*\", freq[i])), collapse = \"\"))\n    })\n  return(paste(ffreq, collapse = \"\\r\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288842,"user_id":null,"body":"#' Finds errors in a string.\n#'\n#' @param s character; string\n#' Input string that may include errors.\n#' Errors: u, w, x or z.\n#'\n#' @return character; string\n#' A string with counted and sorted errors.\n#' @export\n#'\n#' @examples\nhist <- function(s) {\n  error_letters = c(\"u\", \"w\", \"x\", \"z\")\n\n  # Combines results.\n  cart = \"\"\n  res = sapply(error_letters, function(x) {\n    i = gregexpr(pattern = x, text = s)\n    # Gets list item attributes.\n    counts = sum(attr(i[[1]], \"match.length\"))\n\n    if (counts != -1) {\n      chars = paste(rep(x = \"*\", counts), collapse = \"\")\n      spaces = paste(rep(x = \" \", 6 - nchar(counts)), collapse = \"\")\n      piece = paste0(x, \"  \", counts, spaces, chars, \"\\r\", collapse = \"\")\n      cart = paste0(cart, piece, collapse = \"\")\n    }\n\n    return(cart)\n  })\n\n  res = paste(res, collapse = \"\")\n  # Removes \"\\r\" at the end.\n  res = gsub(pattern = \"\\r$\", replacement = \"\", x = res)\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288843,"user_id":null,"body":"hist <- function(s) {\n  ss <- gsub('[a-t]|v|y', '', s)\n  ss <- unlist(strsplit(ss, \"\"))\n  st <- table(ss)\n  \n  \n  out <- sapply(names(st), function(el) paste0(el,' ', ' ', st[el], strrep(' ', 6-nchar(st[el])), strrep('*', st[el]) ) )\n  paste(out, collapse='\\r')\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288844,"user_id":669,"body":"hist <- function(s) {\n  e <- c(\"u\", \"w\", \"x\", \"z\")\n  n <- purrr::map_dbl(e, ~stringr::str_count(s, .))\n  \n  paste(sprintf(\"%-3s%-6d%s\", e, n, strrep(\"*\", n))[n > 0], collapse = \"\\r\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288845,"user_id":null,"body":"hist <- function(s) {\n  # Returns chr str of the counts of error chars in s formatted in a special way\n  #\n  # Args:\n  #  s: a character string\n  \n  # Remove all non-error characters, split result into chars, count each error\n  err.str <- gsub(\"[^uwxz]\", \"\", s, useBytes = TRUE)\n  err.vec <- strsplit(err.str, \"\")[[1]]\n  err.cts <- table(err.vec)\n  \n  # Make a vector of the asterisks, format and return the result\n  ast.vec <- sapply(err.cts, function(x) paste0(rep(\"*\", x), collapse = \"\"))\n  res <- sprintf(\"%s  %-5i %s\", names(err.cts), err.cts, ast.vec)\n  paste0(res, collapse = \"\\r\")\n  \n}\n\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288846,"user_id":null,"body":"require(stringr)\n\nhist <- function(s) {\n  errors <- c(\"u\",\"w\",\"x\",\"z\")\n  result <-\"\"\n  line <- \"\"\n  for (e in errors){\n    n <- str_count(s, e)\n    if (n >0){\n      result <- paste0( result, line, e,\"  \", n, strrep(\" \",6 - nchar(as.character(n))), strrep(\"*\",n) )\n      line <- \"\\r\"\n    }\n  }\n  return(result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288847,"user_id":null,"body":"hist <- function(s) {\n  counts <- table(strsplit(s,\"\")[[1]])[c(\"u\",\"w\",\"x\",\"z\")]\n  memo <- c()\n  for(ch in c(\"u\",\"w\",\"x\",\"z\")){\n    if(! is.na(counts[ch])){\n      str <- paste(sprintf(\"%-3s%-6s\",ch,counts[ch]),paste(rep(\"*\",counts[ch]),collapse=\"\"),sep=\"\")\n      memo <- c(memo,str)\n    }\n  }\n  paste(memo,collapse=\"\\r\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288848,"user_id":492,"body":"hist <- function(s) {\n  res = \"\"\n  for (c in c(\"u\", \"w\", \"x\", \"z\")) {\n    r <- gsub(paste0(\"[^\", c, \"]\"), \"\", s)\n    r <- gsub(paste0(\"[\", c, \"]\"), \"*\", r)\n    if (nchar(r) != 0) {\n      e <- sprintf(\"%s  %-6d%s\\r\", c, nchar(r), r)\n      res <- paste0(res, e)\n    }\n  }\n  return(sub(\"\\r$\", \"\", res))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288849,"user_id":null,"body":"library(stringr)\nlibrary(stringi)\n\nextract <- function(x){\n  x[1] <- as.character(x[1])\n  x[2] <- as.numeric(x[2])\n  print(as.numeric(nchar(x[1])))\n  print(as.numeric(nchar(x[2])))\n  return(paste0(x[1],\n                paste0(rep(' ',2-as.numeric(nchar(x[1]))), collapse = \"\"),\n                \" \",\n                x[2],\n                paste0(rep(' ',6-as.numeric(nchar(x[2]))), collapse =\"\"),\n                paste0(rep(\"*\",x[2]), collapse =\"\"),\n                collapse = \"\" ))\n}\n\nhist <- function(s) {\n  control <- c(\"u\", \"w\",\"x\", \"z\" )\n  s <- str_split(s, \"\", simplify = T)\n  s <- data.frame(table(s))\n  s <- s[s[,1] %in% control, ]\n  s <- s[order(s[,1]),]\n  print(s)\n  if (nrow(s) == 0){\n    return(\"\")\n  }\n  tmp <- apply(s, 1, extract)\n  print(tmp)\n  return(paste0(tmp, collapse=\"\\r\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288850,"user_id":null,"body":"hist <- function(s) {\ns_list <- strsplit(s, split = \"\")[[1]]\nc <- c(\"u\",\"w\",\"x\",\"z\")\nFinish_word <- c[which(c %in% s_list)]\nif(length(Finish_word) >=1){\n  number <- unlist(sapply(Finish_word, function(x,s_list){\n    return(length(which(s_list %in% x)))\n  },s_list))\n  Finish <- c()\n  for (i in 1:length(number)) {\n    if(number[i] >= 10){\n      Finish <- append(Finish,paste(Finish_word[i],\"  \",as.character(number[i]),\"    \",paste(rep(\"*\" , number[i]),collapse = \"\"),collapse = \"\",sep = \"\"))\n    }else{\n      Finish <- append(Finish,paste(Finish_word[i],\"  \",as.character(number[i]),\"     \",paste(rep(\"*\" , number[i]),collapse = \"\"),collapse = \"\",sep = \"\"))\n    }\n    }\n  return(paste(Finish , collapse = \"\\r\" , sep = \"\"))\n}else{\n  return(\"\")\n}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"59f4a0acbee84576800000af":[{"id":288851,"user_id":null,"body":"posAverage <- function(s) {\n  s <- unlist(strsplit(s, split = \", \"))\n  s1 <- combn(s,2)[1,]\n  s2 <- combn(s,2)[2,]\n  s1 <- unlist(strsplit(s1, split = \"\"))\n  s2 <- unlist(strsplit(s2, split = \"\"))\n  options(digits = 12)\n  return(sum(s1 == s2)\/length(s1) * 100)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288852,"user_id":492,"body":"posAverage <- function(s) {\n  options(digits=12)\n  ppercent <- function(s1, s2) {\n    u<-unlist(strsplit(s1, split =\"\"))\n    v<-unlist(strsplit(s2, split =\"\"))\n    i <- 1; cnt <- 0; lg <- length(u)\n    while (i <= lg) {\n      if (u[[i]] == v[[i]]) {\n        cnt <- cnt + 1\n      }\n      i <- i + 1\n    }\n    return(cnt)\n  }\n  r<-unlist(strsplit(s, split =\", \"))\n  i <- 1; cnt <- 0; lgone <- nchar(r[[1]]); lgs <- length(r)\n  while (i <= lgs) {\n    k <- i + 1\n    while (k <= lgs) {\n      cnt <- cnt + ppercent(r[[i]], r[[k]])\n      k <- k + 1\n    }\n    i <- i + 1\n  }\n  totlg <- ((lgs * (lgs - 1)) %\/% 2) * lgone\n  return(round(100 * cnt \/ totlg, digits=12))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288853,"user_id":null,"body":"require(stringr)\n\nposAverage <- function(s) {\n  strings <- s %>% str_split(\", \") %>% unlist %>% str_split(\"\")\n  n <- length(strings)\n  m <- length(strings[[1]])\n  res <- sapply(2:n, function(i){sapply(1:(i-1), function(j){(strings[[i]] == strings[[j]]) %>% sum}) %>% sum}) %>% sum\n  return(200 * res\/(m * n * (n-1)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288854,"user_id":53,"body":"library(stringr)\n\nposAverage <- function(s) {\n  hit <- 0\n  size <- nchar(s)\n  mn <- unlist(gregexpr(pattern =',', s))\n  m <- mn[1] - 1\n  n <- length(mn) + 1\n  tot <- m * n * (n - 1) \/ 2\n  for (i in seq(1, size - m - 2, by=m + 2)) {\n    for (j in seq(i + m + 2, size, by=m + 2)) {\n      for (k in seq(0, m - 1)) {\n        if (substr(s, i + k, i + k) == substr(s, j + k, j + k)) {\n          hit <- hit + 1\n        }\n      }\n    }\n  }\n  100 * hit \/ tot\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288855,"user_id":null,"body":"posAverage <- function(A) {\n  A <- unlist(strsplit(A,\", \"))\n  c <- 1\n  t <- c()\n  while (c<length(A)+1) {\n    s <- unlist(strsplit(A[c],\"\"))\n    t <- rbind(t,s)\n    c <- c+1\n  }  \n  y <- length(s)\n  g <- c()\n  c <- 1\n  while(c<y+1){\n    z <- table(t[,c])\n    x <- as.numeric(as.character(z))\n    x <- as.character(((x*(x-1))\/2))\n    g <- c(g,x)\n    c <- c+1\n  }\n  (sum(as.numeric(g))\/(((length(A)*(length(A)-1))\/2)*y)*100)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288856,"user_id":null,"body":"posAverage <- function(s) {\n  ss <- strsplit(s, ', ')[[1]]\n  n <- length(ss)\n  l <- nchar(ss[1])\n  comb <- combn(ss,2, FUN = function(x) {sum(strsplit(x[1], '')[[1]] == strsplit(x[2], '')[[1]])} )\n  \n  avg <- 100 * sum(comb)\/(l*choose(n,2))\n  return(avg)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288857,"user_id":null,"body":"posAverage <- function(s) {\n  s <- strsplit(unlist(strsplit(s,', ')),'')\n  count <- 0\n  for(i in 2:length(s)-1)for(j in (i+1):length(s))for(k in 1:length(s[[1]])){\n        if(s[[i]][k] == s[[j]][k])count <- count+1\n  }\n  200*count\/(length(s[[1]]) * length(s) * (length(s)-1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288858,"user_id":669,"body":"posAverage <- function(s) {\n  txt <- unlist(strsplit(s, \", \"))\n  \n  n_txt <- length(txt)\n  n_chr <- nchar(txt[1])\n  \n  mat <- matrix(NA_character_, nrow = n_chr, ncol = n_txt)\n  for (i in 1:n_txt) {\n    mat[,i] <- unlist(strsplit(txt[i], \"\"))\n  }\n  \n  # Calculate total number of pairwise differences\n  n_diff <- 0\n  for (i in 1:(ncol(mat) - 1)) {\n    n_diff <- n_diff + sum(mat[,(i + 1):ncol(mat)] == mat[,i])\n  }\n  \n  tot_comp <- nrow(mat) * ncol(mat) * (ncol(mat) - 1) \/ 2\n  n_diff \/ tot_comp * 100\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288859,"user_id":null,"body":"posAverage <- function(s) {\n  options(digits=13)\n  l = strsplit(s,', ')[[1]]\n  match = 0\n  total = 0\n  for(i in 2:length(l)){\n    for(k in 1:(i-1)){\n      total = total + nchar(l[i])\n      match = match + sum(strsplit(l[i],'')[[1]]==strsplit(l[k],'')[[1]])\n      print(paste(i,k,l[i],l[k],match))\n    }\n  }\n  print(total)\n  return(match\/total*100)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288860,"user_id":null,"body":"posAverage <- function(s) {\n  # Returns a numeric value of how many characters within the sub strings match\n  #\n  # Args:\n  #  s: a chracter string with elements separated by \", \"\n  \n  # Split into sub strings, then split into a list of character vectors\n  strs <- strsplit(s, \", \")[[1]]\n  chr.lst <- strsplit(strs, \"\")\n  \n  # Count number of substrings and number of characters in each substring\n  n <- length(strs)\n  m <- n - 1L\n  l <- length(chr.lst[[1]])\n  \n  # Prepare a vector to hold loop output\n  tot.cts <- integer(m)\n  \n  # Loop over each vector in the list and compare to all remaining vectors\n  for(i in 1:m) {\n    cur.vec <- chr.lst[[i]]\n    oth.vecs <- chr.lst[(i + 1L):n]\n    counts <- sapply(oth.vecs, function(x) sum(x == cur.vec))\n    tot.cts[i] <- sum(counts)\n  }\n  \n  # Calculate total number of matches, total number of possibilities, return %\n  tc.sum <- sum(tot.cts)\n  tot.obs <- (l * m * n) %\/% 2L\n  100 * tc.sum \/ tot.obs\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a023c426975981341000014":[{"id":288861,"user_id":null,"body":"other_angle <- function(a, b){\n  180 - a - b\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288862,"user_id":null,"body":"other_angle <- function(a, b){\n  return <- 180 - a - b\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288863,"user_id":null,"body":"other_angle <- function(a, b){\n  angle <- 180 - (a + b)\n  return(angle)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288864,"user_id":2334,"body":"other_angle <- function(a, b){\n  180 - (a + b)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288865,"user_id":null,"body":"other_angle <- function(a, b){\n  c <- (180-a-b)\n  print(c)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288866,"user_id":null,"body":"other_angle <- function(a, b){\n  # Your code here\n  return(180-a-b)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288867,"user_id":null,"body":"other_angle <- function(a, b){\n  # Your code here\n  c = sum(a,b)\n  return(180-c)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288868,"user_id":null,"body":"other_angle <- function(a, b){\n  angle = 180 - a - b\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288869,"user_id":null,"body":"other_angle <- function(a, b){\n  ans = 180 - a - b\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288870,"user_id":null,"body":"other_angle <- function(a, b){\n  return(180 - abs(a) - abs(b))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a03b3f6a1c9040084001765":[{"id":288871,"user_id":527,"body":"angle <- function(n) 180 * (n - 2)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288872,"user_id":null,"body":"angle <- function(n) {\n  # your code here\n\nn = (n-2)* 180\n    \n  \n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288873,"user_id":null,"body":"angle <- function(n) {\n  # your code here\n  print(180*n-360)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288874,"user_id":null,"body":"angle <- function(n) {\n  total_sum = 180*(n-2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288875,"user_id":null,"body":"angle <- function(n){\n  ((n*2)-4)*90\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288876,"user_id":null,"body":"angle <- function(n) {\n  return((n-2)*180)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288877,"user_id":null,"body":"angle <- function(n) {\n  # your code here\n  return(180 * (n -2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288878,"user_id":null,"body":"angle <- function(n) {\n  a<-180*(n-2)\n  return(a)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288879,"user_id":null,"body":"angle <- function(n) {\n  if(n>2 & n==3) (n-2)*180\n  else if (n>3) (n-2)*180\n  else 0\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288880,"user_id":null,"body":"angle <- function(n) {\n if(n > 2) {\n   (n - 2) * 180 \n } else {\n   print(\"Error n must be greater than 2\")\n }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a045fee46d843effa000070":[{"id":288881,"user_id":null,"body":"is.prime <- function(n) n == 2L || all(n %% 2L:ceiling(sqrt(n)) != 0)\ndecomp <- function(n) {\n    primes <- which(sapply(1:n, is.prime))\n    factors <- sapply(primes, function(p) {\n        m <- floor(log(n, base = p))\n        paste0(p, '^', sum(floor(n \/ (p ** (1:m)))))\n        \n    })\n    paste(sub(pattern = '\\\\^1$', replacement = '', x = factors), collapse = ' * ')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288882,"user_id":669,"body":"decomp <- function(n) {\n  sieve <- rep(TRUE, n)\n  \n  ps <- c() # located primes\n  es <- c() # located exponents\n  \n  for (p in 2:n) {\n    if (sieve[p]) {\n      ps <- c(ps, p)\n      es <- c(es, sum(n %\/% p^(1:log(n + 1, p))))\n      sieve[seq(p, n, p)] <- FALSE\n    }\n  }\n  paste(ifelse(es == 1, ps, sprintf(\"%d^%d\", ps, es)),  collapse = \" * \")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288883,"user_id":null,"body":"primes <- function(n){\n  p <- 2:n\n  i <- 1\n  while (p[i] <= sqrt(n)) {\n    p <-  p[p %% p[i] != 0 | p==p[i]]\n    i <- i+1\n  }\n  p\n}\n\ntoBase <- function(num, base=10) {\n  bv <- c(seq(0,base))\n  r <- num %% base\n  res <- bv[r+1]\n  q <- floor(num\/base)\n  while (q > 0L) {\n    r <- q %% base\n    q  <- floor(q\/base)\n    res <- c(bv[r+1],res)\n  }\n  res\n\n}\n\ndecomp <- function(n) {\n  prime <- primes(n)\n  exps <- vector()\n  \n  for(p in prime){\n    spn <- sum(toBase(n, p))\n    #using Legendre\u2019s formula to get the exponenet\n    vp <- (n-spn)\/(p-1)\n    #once the exponent is one, the rest will be ones and we don't record those\n    if(vp > 1){\n      exps[as.character(p)] <- vp\n    }else{\n      break\n    }\n  }\n  \n  out <- c(paste(prime[1:length(exps)],exps, sep = \"^\"),\n           prime[(length(exps)+1):length(prime)])\n  \n  return(paste0(out, collapse = \" * \"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288884,"user_id":null,"body":"\n\ndecomp <- function(n) {\n  woyaode <- c()\n  for (i in 2:n) {\n    if(length(which(i %% c(1:ceiling(sqrt(i))) == 0)) == 1 && i > 2 || i == 2 ){\n      number <- sum(floor(n\/(i**c(1:floor(log(n,i))))))\n      if(number == 1){\n        woyaode <- append(woyaode, i)\n      }else{\n        woyaode <- append(woyaode , paste(i,\"^\",number,collapse = \"\",sep = \"\"))\n      }\n    }else{\n      \n    }\n  }\n  return(paste(woyaode , collapse = \" * \"))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288885,"user_id":null,"body":"\n\n# return a vector c(numerator, denominator)\nfact <- function(x) {\n  accum = c()\n  k = 2\n  new_x = x\n  while(new_x > 1){\n    if (new_x %% k == 0) {\n      accum = append(accum, k)\n      new_x = new_x \/ k\n    } else {\n      if (k  == 2) k = k+1 else k = k + 2\n    }\n  }\n  accum\n}\n\ndecomp <- function(x){\n  accum = unlist(sapply(2:x, fact))\n  temp = table(accum)\n  paste(names(temp), temp, \"-\", sep = \"^\", collapse = \" * \") %>% \n    gsub(\"\\\\^1\\\\^\\\\-\", \"\", .) %>% \n    gsub(\"\\\\^\\\\-\", \"\", .)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288886,"user_id":null,"body":"n_primes <- function(n) {\n  primes <- 2\n  k <- 1\n  j <- 3\n  while(j <= n){\n    if(!any(j\/primes == j%\/%primes)){\n      primes <- c(primes,j)\n      k <- k + 1\n    }\n    j <- j + 1\n  }\n  \n  return(primes)\n}\n\ndecomp <- function(n) {\n  primes <- n_primes(n)\n  prime_counter = rep(0,length(primes))\n # a <- outer(2:n,primes,\"\/\")\n  # teiler <- outer(2:n,primes,\"%%\") == 0\n#  b <- outer(2:n,primes,\"%\/%\")\n  \n # teiler <- a == b\n\n  for (j in seq(2,n)) {\n    h <- j\n  # current_teiler <- primes[teiler[j-1,]]\n    current_teiler <- primes[j%%primes==0]\n    for(i in current_teiler){\n      while(h %% i == 0){\n        h <- h\/i\n        prime_counter[i==primes] <- prime_counter[i==primes] + 1\n      }\n    }\n  }\n  \n  text <- paste(primes,prime_counter, sep = \"^\", collapse = \" * \")\n  text <- gsub(\"^1 \", \" \", text, fixed = TRUE)\n  if(substr(text,nchar(text)-1, nchar(text)) == \"^1\") {\n    text <- substr(text,1,nchar(text)-2)\n  }\n  return(text)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288887,"user_id":132,"body":"pr <- c(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607, 1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931, 1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083, 2087, 2089, 2099, 2111, 2113, 2129, 2131, 2137, 2141, 2143, 2153, 2161, 2179, 2203, 2207, 2213, 2221, 2237, 2239, 2243, 2251, 2267, 2269, 2273, 2281, 2287, 2293, 2297, 2309, 2311, 2333, 2339, 2341, 2347, 2351, 2357, 2371, 2377, 2381, 2383, 2389, 2393, 2399, 2411, 2417, 2423, 2437, 2441, 2447, 2459, 2467, 2473, 2477, 2503, 2521, 2531, 2539, 2543, 2549, 2551, 2557, 2579, 2591, 2593, 2609, 2617, 2621, 2633, 2647, 2657, 2659, 2663, 2671, 2677, 2683, 2687, 2689, 2693, 2699, 2707, 2711, 2713, 2719, 2729, 2731, 2741, 2749, 2753, 2767, 2777, 2789, 2791, 2797, 2801, 2803, 2819, 2833, 2837, 2843, 2851, 2857, 2861, 2879, 2887, 2897, 2903, 2909, 2917, 2927, 2939, 2953, 2957, 2963, 2969, 2971, 2999, 3001, 3011, 3019, 3023, 3037, 3041, 3049, 3061, 3067, 3079, 3083, 3089, 3109, 3119, 3121, 3137, 3163, 3167, 3169, 3181, 3187, 3191, 3203, 3209, 3217, 3221, 3229, 3251, 3253, 3257, 3259, 3271, 3299, 3301, 3307, 3313, 3319, 3323, 3329, 3331, 3343, 3347, 3359, 3361, 3371, 3373, 3389, 3391, 3407, 3413, 3433, 3449, 3457, 3461, 3463, 3467, 3469, 3491, 3499, 3511, 3517, 3527, 3529, 3533, 3539, 3541, 3547, 3557, 3559, 3571, 3581, 3583, 3593, 3607, 3613, 3617, 3623, 3631, 3637, 3643, 3659, 3671, 3673, 3677, 3691, 3697, 3701, 3709, 3719, 3727, 3733, 3739, 3761, 3767, 3769, 3779, 3793, 3797, 3803, 3821, 3823, 3833, 3847, 3851, 3853, 3863, 3877, 3881, 3889, 3907, 3911, 3917, 3919, 3923, 3929, 3931, 3943, 3947, 3967, 3989, 4001, 4003, 4007, 4013, 4019, 4021, 4027, 4049, 4051, 4057, 4073, 4079, 4091, 4093, 4099, 4111, 4127, 4129, 4133, 4139, 4153, 4157, 4159, 4177, 4201, 4211, 4217, 4219, 4229, 4231, 4241, 4243, 4253, 4259, 4261, 4271, 4273, 4283, 4289, 4297, 4327, 4337, 4339, 4349, 4357, 4363, 4373, 4391, 4397, 4409, 4421, 4423, 4441, 4447, 4451, 4457, 4463, 4481, 4483, 4493, 4507, 4513, 4517, 4519, 4523, 4547, 4549, 4561, 4567, 4583, 4591, 4597, 4603, 4621, 4637, 4639, 4643, 4649, 4651, 4657, 4663, 4673, 4679, 4691, 4703, 4721, 4723, 4729, 4733, 4751, 4759, 4783, 4787, 4789, 4793, 4799, 4801, 4813, 4817, 4831, 4861, 4871, 4877, 4889, 4903, 4909, 4919, 4931, 4933, 4937, 4943, 4951, 4957, 4967, 4969, 4973, 4987, 4993, 4999)\ndecomp <- function(n) {\n  p <- pr[pr<=n]\n  q <- sqrt(n)\n  r <- n\/2\n  p1 <- p[p<=q]\n  r1 <- n%\/%p1\n  p <- p[p>q]\n  p2 <- p[p<=r]\n  r2 <- n%\/%p2\n  p3 <- p[p>r]\n  for(i in 1:length(p1)){\n    t <- p1[i]^2\n    while(t<=n){\n      r1[i] <- r1[i]+(n%\/%t)\n      t <- t*p1[i]\n    }\n  }\n  o <- c()\n  for(i in 1:length(p1)) o <- c(o,paste(p1[i],r1[i],sep='^'))\n  if(length(p2)>0) for(i in 1:length(p2)) o <- c(o,paste(p2[i],r2[i],sep='^'))\n  for(i in p3) o <- c(o, as.character(i))\n  return(paste(o,collapse=' * '))\n}\n\n\n#     p1, p2 = [str(i)+('^'+str(j)) for i,j in p1.items()], [str(i)+('^'+str(j)) for i,j in p2.items()]\n#     return ' * '.join(p1+p2+p3)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288888,"user_id":null,"body":"primeFac <- function(n){\n  out <- c()\n  k <- 2\n  while(k < n+1){\n    while(n%%k == 0){\n      out <- c(out,k)\n      n <- n%\/%k\n    }\n    k<-k+1\n    if(k==2) k<-3\n  }\n  out\n}\n\nprimeFac2 <- function(n) {\n  numvec <- c()\n  while(n %% 2 == 0){\n    numvec <-  c(numvec, 2)\n    n = n\/2\n  }\n  i <- 3\n  while(n != 1) {\n    while(n %% i == 0) {\n      numvec <-  c(numvec, i)\n      n <-  n\/i\n    }\n    i <- i + 2\n  }\n  numvec\n}\n\nsave<-list()\n\ndecomp <- function(n){\n  out <- list()\n  use_save<-unlist(save[1:(n-1)],use.names = F)\n  start <- length(save)+2\n  if(start<n){\n    for(i in start:n){\n      i_str<-toString(i)\n      if(i> length(save)) save[[i_str]]<<-primeFac2(i)\n      out[[i_str]] <- save[[i_str]]\n    }\n  }\n  t <- table(c(use_save,unlist(out)))\n  out <- list()\n  counter <- 1\n  for(p in names(t)){\n    if(t[p]==1){\n      out[[counter]] <-p\n    }\n    else{\n      out[[counter]] <- paste0(p,\"^\",t[p])\n    }\n    counter <- counter+1\n  }\n  paste0(unlist(out),collapse = \" * \")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288889,"user_id":null,"body":"decomp <- function(n) {\n    factor_counts <- rep(1,n)\n    names(factor_counts) <- 1:n\n    factor_counts[1] <- 0\n    for (index in 2:n)\n        if (factor_counts[index] > 0 && 2*index <= n) {\n            rest_index <- seq(2*index,n,by=index)\n            while( any(factor_counts[rest_index] > 0) ) {\n                dist <- factor_counts[rest_index]\n                factor_counts[index] <- factor_counts[index] + sum( factor_counts[rest_index] )\n                factor_counts[2:(n%\/%index)] <- factor_counts[2:(n%\/%index)] + dist\n                factor_counts[rest_index] <- factor_counts[rest_index] - dist\n            }                  \n        }\n    accu <- \"\"\n    for (index in 2:n)\n        if (factor_counts[index] > 0) {\n            if (accu != \"\") accu <- paste(accu,\" * \",sep=\"\")\n            accu <- if(factor_counts[index] == 1)\n              paste(accu,index,sep=\"\")\n            else\n              paste(accu,index,\"^\",factor_counts[index],sep=\"\")\n        }\n    return(accu)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288890,"user_id":null,"body":"decomp <- function(n) {\n  primes <- c(2, 3,\t5, 7, 11,\t13,\t17,\t19,\t23,\t29,\t31,\t37,\t41,\t43,\t47,\t53,\t59,\t61)\n  divides <- function(p,n) n %% p == 0\n  factorize <- function(n) {\n    x <- rep(0, 4000)\n    for (p in primes) {\n      k <- 0\n      while(divides(p, n)) {k <- k+1; n <- n \/ p}\n      x[p] <- k\n      if (n <= 1) break\n    }\n    x[n] <- 1\n    x\n  }\n  f <- function(n) {\n    x <- factorize(1)\n    while(n > 1) {\n      x <- x + factorize(n)\n      n <- n - 1\n    }\n    x\n  }\n  x <- f(n)\n  i <- which(x > 0)[-1]\n  paste0(i, ifelse(x[i]==1, \"\", \"^\"), ifelse(x[i]==1, \"\", x[i]), collapse=\" * \")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a057ec846d843c81a0000ad":[{"id":288891,"user_id":492,"body":"cycli <- function (n) {\n  if ((n %% 2 == 0) || (n %% 5 == 0)) {\n    return (-1)\n  }\n  rem <- 1; i <- 1\n  while (i <= n) {\n    rem <- (rem * 10) %% n\n    if (rem == 1) {\n      return (i)\n    }\n    i <- i + 1\n  }\n  -1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288892,"user_id":53,"body":"cycli <- function (n) {\n  if (n%%2 == 0 || n%%5 == 0) {\n    -1\n  } else {\n    m <- 10%%n\n    i <- 1\n    while (m > 1) {\n      m <- (m*10)%%n\n      i <- i+1\n    }\n    i\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288893,"user_id":null,"body":"cycli <- function(n){\n  if(n%%2==0 | n%%5==0) return(-1)\n  res <- 0\n  new<-1\n  repeat{\n    res <- res+1\n    new <- (10*new)%%n\n    if(new == 1) return(res)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288894,"user_id":null,"body":"cycli <- function (n) {\n  if(!(n%%2 * n%%5))return(-1)\n  x <- 10\n  for(i in 1:n){\n    x <- (10*x)%%n\n    if(x == 10%%n)return(i)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288895,"user_id":null,"body":"cycli <- function (n) {\n  if (n %% 2 == 0 || n %% 5 == 0) {\n    return(-1)\n  } else {\n    r <- 1\n    i <- 1\n    repeat {\n      r <- (10 * r) %% n\n      if (r == 1) break\n      i <- i + 1\n    }\n    i\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288896,"user_id":669,"body":"cycli <- function(n) {\n  if (any(n %% c(2, 5) == 0)) {\n    return(-1) # gcd(n, 10) > 1 ==> no cycle\n  }\n  o <- k <- 1 # Find smallest o such that k = 10^o %% n = 1\n  while ((k <- (10 * k) %% n) != 1) {\n    o <- o + 1\n  }\n  o\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288897,"user_id":669,"body":"cycli <- function(n) {\n  gcd <- function(pair) {\n    while (pair[2] != 0) pair <- c(pair[2], pair[1] %% pair[2])\n    pair[1]\n  }\n  if (gcd(c(n, 10)) != 1) {\n    return(-1)\n  }\n  # Find smallest o such that k = 10^o %% n = 1\n  o <- k <- 1\n  while ((k <- (10 * k) %% n) != 1) {\n    o <- o + 1\n  }\n  o\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288898,"user_id":null,"body":"cycli <- function (n) {\n  if (any(n %% c(2, 5) == 0)) {\n    return(-1)\n  }\n  f <- 10\n  wh <- f %\/% n\n  rem <-ifelse(f %% n < n, (f %% n) * f, f %% n)\n  i <- 1\n  while (rem != f) {\n    i <- i + 1\n    wh[i] <- rem %\/% n\n    rem <- rem %% n\n    if (rem < n) {\n      rem <- rem * f\n    }\n  }\n  return(length(wh))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288899,"user_id":null,"body":"cycli <- function (n) {\n  if (any(n %% c(2, 5, 10) == 0)) {\n    return(-1)\n  }\n  f <- 10\n  wh <- f %\/% n\n  rem <-ifelse(f %% n < n, (f %% n) * f, f %% n)\n  i <- 1\n  while (rem != f) {\n    i <- i + 1\n    wh[i] <- rem %\/% n\n    rem <- rem %% n\n    if (rem < n) {\n      rem <- rem * f\n    }\n  }\n  return(length(wh))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288900,"user_id":null,"body":"cycli <- function(n) {\n  # Returns an integer value of the length of the repetend of 1\/n\n  #\n  # Args:\n  #  n: a numeric value of an integer greater than 1\n  \n  # If input is divisible by 2 or 5, it terminates, so return -1\n  n <- as.integer(n)\n  if(n %% 2L == 0L | n %% 5L == 0L) return(-1L)\n  \n  # Set index to count cycles and set initial value for the modulus\n  i <- 1L\n  m <- 10L %% n\n  \n  # Increase powers of ten until a modulus of 1 is found\n  while(m != 1L) {\n    i <- i + 1L\n    m <- (10 * m) %% n\n  }\n  \n  # The number of cycles needed is the multiplicative order and the period\n  i\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a2b703dc5e2845c0900005a":[{"id":288901,"user_id":null,"body":"is_divide_by <- function(number, a, b){ \n  if(number %% a == 0 & number %% b == 0){\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288902,"user_id":null,"body":"is_divide_by <- function(number, a, b){ \n  (number %% a == 0) & (number %% b == 0)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288903,"user_id":null,"body":"is_divide_by <- function(number, a, b){if(number%%b + number%%a == 0){TRUE}else{FALSE}\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288904,"user_id":null,"body":"is_divide_by <- function(n, a, b){ \n  !(n%%a | n%%b) \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288905,"user_id":null,"body":"is_divide_by <- function(number, a, b){ \n  x = number\/a\n  y = number\/b\n  \n  if (x%%1==0 & y%%1==0){\n    TRUE\n  }\n  else{\n    FALSE\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288906,"user_id":null,"body":"is_divide_by <- function(number, a, b){ \n  if(number%%a==0){\n    if(number%%b==0){\n      return(TRUE)\n    }else{\n      return(FALSE)\n    }}else{\n    return(FALSE)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288907,"user_id":null,"body":"is_divide_by <- function(number, a, b){ \n  !(number%%a | number%%b) \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288908,"user_id":null,"body":"is_divide_by <- function(number, a, b){ \n  if (number %% a == 0 && number %% b == 0) {T} else {F}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288909,"user_id":null,"body":"is_divide_by <- function(number, a, b){ \n  x <- number \/ c(a,b)\n  if (all(abs(x) == round(abs(x)))) {\n    TRUE\n  } else {\n    FALSE\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288910,"user_id":null,"body":"is_divide_by <- function(number, a, b){number %% a + number %% b == 0}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a2be17aee1aaefe2a000151":[{"id":288911,"user_id":null,"body":"array_plus_array <- function(v1,v2){\n  sum(c(v1,v2))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288912,"user_id":null,"body":"array_plus_array <- function(vec1,vec2){\n  a <- sum(vec1)\n  b <- sum(vec2)\n  return (a+b)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288913,"user_id":null,"body":"array_plus_array <- function(vec1,vec2){\n  sum(sum(vec1), sum(vec2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288914,"user_id":null,"body":"array_plus_array <- function(vec1, vec2) {\n  return(sum(vec1) + sum(vec2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288915,"user_id":null,"body":"array_plus_array <- function(vec1,vec2){\n  sum = 0\n  for (n in c(vec1,vec2)){\n    sum = sum+n\n  }\n  return(sum)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288916,"user_id":null,"body":"array_plus_array <- function(vec1,vec2){\n  vec3 <- sum(vec1, vec2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288917,"user_id":null,"body":"array_plus_array <- function(vec1,vec2){\n  sum(vec1, vec2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288918,"user_id":527,"body":"array_plus_array <- function(...) sum(...)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288919,"user_id":50,"body":"array_plus_array <- function(vec1,vec2){\n  sum(vec1)+sum(vec2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288920,"user_id":421,"body":"array_plus_array <- function(vec1,vec2){\n  sum(c(vec1, vec2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a3fe3dde1ce0e8ed6000097":[{"id":288921,"user_id":null,"body":"century_from_year <- function(year) {\n  return(ceiling(year\/100))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288922,"user_id":null,"body":"century_from_year <- function(year) {\n  return(((year-1)%\/%100)+1)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288923,"user_id":null,"body":"century_from_year <- function(year) {\n  floor((year-1)\/100) +1\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288924,"user_id":null,"body":"century_from_year <- function(year) {\n  as.integer(ceiling(year \/ 100))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288925,"user_id":null,"body":"century_from_year <- function(year) {\n  if(year %% 100 >0){\n    return((year %\/% 100)+1)\n    } else{\n    return(year %\/% 100)\n    }\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288926,"user_id":null,"body":"century_from_year <- function(year) {\n  (year+99) %\/% 100\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288927,"user_id":1566,"body":"century_from_year <- function(year) {\n   -(-year%\/%100)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288928,"user_id":null,"body":"century_from_year <- function(year) {\n  if(year %% 100 == 0){\n    return(year %\/% 100)\n  } else {\n    return(year %\/% 100 + 1)\n    }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288929,"user_id":null,"body":"century_from_year <- function(year) {\n  ceiling((year\/100))\n  # your code goes here\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288930,"user_id":null,"body":"century_from_year <- function(year) {\n  # your code goes here  \n  if(year %% 100)\n    return ((year %\/% 100)+1)\n  else\n    return (year %\/% 100)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a420163b6cfd7cde5000077":[{"id":288931,"user_id":492,"body":"nbaCup <- function(resultSheet, toFind) {\n  dataToVec <- function(resultSheet, team) {\n    dta <- unlist(strsplit(resultSheet, split = \",\")); meets <- grep(paste(\"\\\\b\",team,\"\\\\b\", sep=\"\"), dta); res <- c()\n    for (ff in meets) {\n      onemeet <- unlist(regmatches(dta[ff], gregexpr('.+?\\\\b[[:digit:]]+\\\\.?[[:digit:]]*\\\\b', dta[ff], perl = TRUE)))\n      for (xx in onemeet) {\n        team1 <- sub('\\\\b[[:digit:]]+\\\\.?[[:digit:]]*\\\\b', \"\", xx, perl = TRUE)\n        score1 <- sub(team1, \"\", xx)\n        res <- c(res, trimws(team1), trimws(score1))\n      }\n    }\n    res\n  }\n  \n  WIN <- \"W\"; DRAW <- \"D\"; LOSS <- \"L\"; finalRes <- \"\"; score1 <- 0; score2 <- 0\n  nbaOne <- function(vec, i, toFind) {\n    isFloat <- function(s){\n      r <- regmatches(s,gregexpr(\"[-+]?[0-9]*\\\\.[0-9]+([eE][-+]?[0-9]+)?\",s))[[1]]\n      !identical(r, character(0)) \n    }\n    \n    name1 <- vec[i]; score1 <- vec[i + 1]; name2 <- vec[i + 2]; score2 <- vec[i + 3]\n    if (isFloat(score1) || isFloat(score2)) {\n      s <- paste(\"Error(float number):\\b\", name1, score1, name2, score2, collapse=\"\")\n      return(sub(\"\\b \", \"\", s))\n    }\n    if (name1 == toFind) {\n      if (as.numeric(score1) > as.numeric(score2)) {\n        finalRes = paste0(WIN, \"-\", score1, \"-\", score2)\n      } else if (as.numeric(score2) > as.numeric(score1)) {\n        finalRes = paste0(LOSS, \"-\", score1, \"-\", score2)\n      } else {\n        finalRes = paste0(DRAW, \"-\", score1, \"-\", score2)\n      }\n    } else if (name2 == toFind) {\n      if (as.numeric(score2) > as.numeric(score1)) {\n        finalRes = paste0(WIN, \"-\", score2, \"-\",score1)\n      } else if (as.numeric(score1) > as.numeric(score2)) {\n        finalRes = paste0(LOSS, \"-\", score2, \"-\",score1)\n      } else {\n        finalRes = paste0(DRAW, \"-\", score2, \"-\",score1)\n      }\n    }\n    return(finalRes)\n  }\n  \n  if (toFind == \"\") return(\"\")\n  vec <- dataToVec(resultSheet, toFind)\n  if (is.null(vec)) return(paste0(toFind, \":This team didn't play!\"))\n  aRes <- \"\"; winNb <- 0; drawNb <- 0; lossNb <- 0; markTotal <- 0; scoredNb <- 0; concededNb <- 0\n  i <- 1\n  while (i <= length(vec) - 3) {\n    aRes <- nbaOne(vec, i, toFind)\n    if (length(grep(\"Error\", aRes)) > 0) return(aRes)\n    matchResult <- unlist(strsplit(aRes, split = \"-\"))\n    if (matchResult[1] == \"W\") {\n      winNb <- winNb + 1; markTotal <- markTotal + 3\n    }\n    if (matchResult[1] == \"D\") {\n      drawNb <- drawNb + 1; markTotal <- markTotal +1\n    }\n    if (matchResult[1] == \"L\") {\n      lossNb <-lossNb + 1\n    }\n    scoredNb = scoredNb + as.integer(matchResult[2]);\n    concededNb = concededNb + as.integer(matchResult[3]);     \n    i <- i + 4\n  }\n  return(paste0(toFind, \":W=\", winNb, \";D=\", drawNb, \";L=\", lossNb, \";Scored=\", scoredNb, \";Conceded=\", concededNb, \";Points=\", markTotal))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288932,"user_id":null,"body":"nbaCup <- function(resultSheet, toFind) {\n  if(!nchar(toFind))return('')\n  resultSheet <- unlist(strsplit(resultSheet,','))\n  if(!any(grepl(paste0(toFind,' [0-9]'),resultSheet)))return(paste0(toFind,':This team didn\\'t play!'))\n  resultSheet <- resultSheet[which(grepl(toFind,resultSheet))]\n  if(any(grepl('[0-9]\\\\.[0-9]',resultSheet)))return(paste0('Error(float number):',resultSheet[grepl('[0-9].[0-9]',resultSheet)[1]]))\n  pos <- which(regexpr(toFind,resultSheet)==1)\n  first <- resultSheet[pos]\n  first <- matrix(as.numeric(unlist(lapply(strsplit(substr(first,nchar(toFind)+2,nchar(first)),' '),function(x)c(x[[1]],x[[length(x)]])))),nrow=2)\n  if(length(pos))last <- resultSheet[-pos] else last <- resultSheet\n  last <- matrix(as.numeric(unlist(lapply(strsplit(gsub(paste0(toFind,' '),'',last),' '),function(x)rev(x)[1:2]))),nrow=2)\n  res <- cbind(first,last)\n  W <- sum(diff(res) < 0)\n  D <- sum(diff(res) == 0)\n  L <- sum(diff(res) > 0)\n  return(paste0(toFind,':W=',W,';D=',D,';L=',L,';Scored=',sum(res[1,]),';Conceded=',sum(res[2,]),';Points=',3*W + D))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288933,"user_id":null,"body":"nbaCup <- function(r, toFind) {\n  if (toFind == \"\") return(\"\")\n  v <- unlist(strsplit(r,split = \",\"))\n  games <- v[grep(paste0(\"\\\\<\",toFind,\"\\\\>\"),v)]\n  if (length(games) == 0) return(sprintf(\"%s:This team didn't play!\",toFind))\n  W <- 0\n  D <- 0\n  L <- 0\n  scored <- 0\n  conceded <- 0\n  for (g in games) {\n    res <- as.numeric(unlist(regmatches(g,gregexpr(\"\\\\<\\\\d+\\\\>\",g))))\n    if (length(res) != 2) return(sprintf(\"Error(float number):%s\",g))\n    if (regexpr(toFind,g) > 1) res <- rev(res)\n    scored <- scored + res[1]\n    conceded <- conceded + res[2]\n    if (res[1] > res[2]) W <- W + 1\n    if (res[1] == res[2]) D <- D + 1\n    if (res[1] < res[2]) L <- L + 1\n  }\n  return(sprintf(\"%s:W=%s;D=%s;L=%s;Scored=%s;Conceded=%s;Points=%s\",toFind,W,D,L,scored,conceded,W*3+D))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288934,"user_id":669,"body":"nbaCup <- function(resultSheet, toFind) {\n  if (toFind == \"\") return(\"\")\n\n  games <- unlist(strsplit(resultSheet, \",\"))\n  bad_lines <- purrr::keep(games, ~grepl(toFind, .) && grepl(\"\\\\d+\\\\.\\\\d+\", .))\n  \n  if (length(bad_lines) > 0) {\n    return(paste0(\"Error(float number):\", bad_lines[1]))\n  }\n  teams <- sapply(strsplit(gsub(\"\\\\d+(.\\\\d+)?( |$)\", \"\\t\", games), \"\\t\"),\n                  function(x) trimws(x[1:2]))\n  \n  scores <- simplify2array(\n    regmatches(games, gregexpr(\"\\\\d+(.\\\\d+)?( |$)\", games)))\n  \n  # Duplicate games by swapping the two teams. This ensures that checking\n  # whether the first team equals toFind suffices.\n  scores <- cbind(scores, scores[2:1,])\n  teams  <- cbind(teams,  teams[2:1,])\n  \n  team_games <- teams[1,] == toFind\n  \n  if (!any(team_games)) {\n    return(paste0(toFind, \":This team didn't play!\"))\n  }\n  s1 <- as.numeric(scores[1, team_games]) # own team (toFind)\n  s2 <- as.numeric(scores[2, team_games]) # opposite team\n\n  sprintf(\"%s:W=%d;D=%d;L=%d;Scored=%d;Conceded=%d;Points=%d\",\n          toFind, sum(s1 > s2), sum(s1 == s2), sum(s1 < s2),\n          sum(s1), sum(s2), 3 * sum(s1 > s2) + sum(s1 == s2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288935,"user_id":null,"body":"nbaCup <- function(resultSheet, toFind) {\n  if (toFind == \"\") return (\"\")\n  nw <- 0; nd <- 0; nl <- 0; pf <- 0; pa <- 0\n  for (s in unlist(strsplit(resultSheet, \",\"))) {\n    if (! grepl(paste(toFind, \"\\\\b\", sep=\"\"), s)) next\n    if (grepl(\"\\\\d+\\\\.\\\\d+\", s))\n      return (paste(\"Error(float number):\", s, sep=\"\"))\n    t1 <- sub(\"(.*) +\\\\d+ .*\", \"\\\\1\", s)\n    t2 <- sub(\".* +\\\\d+ +(.*) \\\\d+\", \"\\\\1\", s)\n    s1 <- as.numeric(sub(\".* (\\\\d+) .*\", \"\\\\1\", s))\n    s2 <- as.numeric(sub(\".* (\\\\d+).*\", \"\\\\1\", s))\n    if (t1 == toFind) {\n      x <- s1; y <- s2\n    } else {\n      x <- s2; y <- s1\n    }\n    pf <- pf+x; pa <- pa+y\n    if (x > y) nw <- nw+1 else if (x == y) nd <- nd+1 else nl <- nl+1\n  }\n  if (pf == 0 && pa == 0)\n    return (sprintf(\"%s:This team didn't play!\", toFind))\n  sprintf(\"%s:W=%d;D=%d;L=%d;Scored=%d;Conceded=%d;Points=%d\", toFind,nw,nd,nl,pf,pa,3*nw+nd)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288936,"user_id":null,"body":"nbaCup <- function(resultSheet, toFind) {\n  library(stringr)\n\n  \n  sreg1 <- paste(toFind,\"(\\\\d{1,3}|\\\\d{1,3}\\\\.\\\\d{1,3}) (.*?)[^Philadelphia] (\\\\d{1,3},?|\\\\d{1,3}\\\\.\\\\d{1,3},?)\" ) \n  a<- unlist(regmatches(resultSheet, gregexpr(sreg1,resultSheet)))\n  \n  sreg2 <-paste(\"(\\\\w* \\\\w* \\\\w*|\\\\w* \\\\w*) (\\\\d{1,3}|\\\\d{1,3}\\\\.\\\\d{1,3})\",toFind,\"(\\\\d{1,3},|\\\\d{1,3}\\\\.\\\\d{1,3},)\") \n  b<-unlist(regmatches(resultSheet, gregexpr(sreg2,resultSheet)))\n  \n  \n  a<-unlist(regmatches(resultSheet, gregexpr(sreg1,resultSheet)))\n  a0<- paste(a,collapse =  \"\")\n  a1<-unlist(regmatches(a0, gregexpr(\"( \\\\d{1,3} | \\\\d{1,3}\\\\.\\\\d{1,3} )\",a0)))\n  a2<-unlist(regmatches(a0, gregexpr(\"(\\\\d{1,3},|\\\\d{1,3}\\\\.\\\\d{1,3},)\",a0)))\n  a2.2 <-unlist(regmatches(a0, gregexpr(\"\\\\d{1,3}\\\\.\\\\d{1,3}\",a0)))\n  res_a<-as.numeric(a1)-as.numeric(str_remove_all(a2,\",\"))\n  \n  \n  b<-unlist(regmatches(resultSheet, gregexpr(sreg2,resultSheet)))\n  b0<-paste(b,collapse =  \"\")\n  b1<-unlist(regmatches(b0, gregexpr(\"(\\\\d{1,3},|\\\\d{1,3}\\\\.\\\\d{1,3},)\",b0)))\n  b2<-unlist(regmatches(b0, gregexpr(\"(\\\\d{1,3}|\\\\d{1,3}\\\\.\\\\d{1,3}) \",b0)))\n  b2.2<-unlist(regmatches(b0, gregexpr(\"\\\\d{1,3}\\\\.\\\\d{1,3}\",b0))) \n  res_b<-as.numeric(str_remove_all(b1,\",\"))-as.numeric(b2)\n  \n  W<-sum(ifelse(res_a > 0, 1,0)) + sum(ifelse(res_b > 0, 1,0))\n  L<-sum(ifelse(res_a < 0, 1,0)) + sum(ifelse(res_b < 0, 1,0))\n  D<-sum(ifelse(res_a == 0, 1,0)) + sum(ifelse(res_b == 0, 1,0))\n  \n  Scored <- sum(as.numeric(a1)) + sum(as.numeric(str_remove_all(b1,\",\")))\n  Conceded <- sum(as.numeric(str_remove_all(a2,\",\"))) + sum(as.numeric(b2))\n  Points<-(W*3)+D\n  \n  out<-paste(toFind,str_remove_all(paste(\":W=\",W,\";\",\"D=\",D,\";\",\"L=\",L,\";\",\"Scored=\",Scored,\";\",\"Conceded=\",Conceded,\";\",\"Points=\",Points), \" \"),sep = \"\")\n  \n  \n  if(toFind == \"\") {return(\"\")}\n  \n  if(W+L+D==0){ return(paste(toFind,\":This team didn't play!\", sep = \"\"))\n  }  else if(length(a2.2) > 0) { error <- paste(\"Error(float number)::\",a)\n                                 error<-str_remove(error, \": \")\n                                 return(str_remove(error, \",\"))   \n  } else if(length(b2.2) > 0){  error <- paste(\"Error(float number)::\",b)\n                                 error<-str_remove(error, \": \")\n                                 return(str_remove(error, \",\"))\n  } else { return(out) }     \n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288937,"user_id":null,"body":"nbaCup <- function(resultSheet, toFind) {\n  if (toFind == \"\") return(\"\")\n  v <- unlist(strsplit(resultSheet, \",\"))\n  f <- v[grepl(paste0(toFind, \"\\\\s\"), v)]\n  if (!length(f)) return(paste0(toFind, \":This team didn't play!\"))\n\n  tmp <- lapply(f, function(x) {\n    regex <- regexec(\"^(.*)\\\\s(\\\\d*)\\\\s(.*)\\\\s(\\\\d*$)\", x)\n    data <- unlist(regmatches(x, regex))[-1]\n\n    if (!length(data)) {\n      return(paste0(\"Error(float number):\", x))\n    }\n\n    names(data) <- c(\"team1\", \"score1\", \"team2\", \"score2\")\n\n    result <- list(\n      win = FALSE,\n      loss = FALSE,\n      draw = FALSE\n    )\n\n    score <- list(\n      scored = 0,\n      conceded = 0\n    )\n\n    if (as.numeric(data[\"score1\"]) > as.numeric(data[\"score2\"])) {\n      team_winner <- \"team1\"\n    } else if (as.numeric(data[\"score1\"]) < as.numeric(data[\"score2\"])) {\n      team_winner <- \"team2\"\n    } else {\n      team_winner <- NA\n    }\n\n    if (is.na(team_winner)) {\n      result$draw <- TRUE\n    } else if (toFind == data[team_winner]) {\n      result$win <- TRUE\n    } else {\n      result$loss <- TRUE\n    }\n\n    if (toFind == data[\"team1\"]) {\n      score$scored <- as.numeric(data[\"score1\"])\n      score$conceded <- as.numeric(data[\"score2\"])\n    } else {\n      score$scored <- as.numeric(data[\"score2\"])\n      score$conceded <- as.numeric(data[\"score1\"])\n    }\n\n    return(list(result, score))\n  })\n\n  # check if float error is present\n  flat <- unname(unlist(tmp))\n  if (any(grepl(\"Error\", flat))) {\n    return(flat[grepl(\"Error\", flat)])\n  }\n\n  n_won <- sum(unlist(lapply(tmp, function(x) unlist(lapply(x, function(y) y$win)))))\n  n_lost <- sum(unlist(lapply(tmp, function(x) unlist(lapply(x, function(y) y$loss)))))\n  n_draw <- sum(unlist(lapply(tmp, function(x) unlist(lapply(x, function(y) y$draw)))))\n\n  scored <- sum(unlist(lapply(tmp, function(x) unlist(lapply(x, function(y) y$scored)))))\n  conceded <- sum(unlist(lapply(tmp, function(x) unlist(lapply(x, function(y) y$conceded)))))\n\n  points <- n_won * 3 + n_draw\n\n  paste0(\n    toFind,\n    \":W=\", n_won, \";\",\n    \"D=\", n_draw, \";\",\n    \"L=\", n_lost, \";\",\n    \"Scored=\", scored, \";\",\n    \"Conceded=\", conceded, \";\",\n    \"Points=\", points\n  )\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288938,"user_id":null,"body":"library(stringr)\nlibrary(tidyverse)\nlibrary(tidyr)\nnbaCup<-function(r0,toFind){\ntoFind->team1\n\nr0 %>% strsplit(,split = ',') %>% unlist()->r1\ntibble(r1)->r1\nr1 %>% mutate(t1=str_extract(r1,'.+?(?=\\\\s\\\\d)(\\\\.\\\\d)?'),\n              t2=str_extract(r1,'(?<=\\\\d{2,3}(\\\\.\\\\d{1,100})?\\\\s).*(?=\\\\s\\\\d{2,3})'),\n              t1_get_c=str_extract(r1,'\\\\d{1,3}(\\\\.\\\\d{1,100})?'),\n              t2_get_c=str_extract(r1,'\\\\d{1,3}(\\\\.\\\\d{1,100})?$'),\n              # across(t1_get:t2_get,~as.integer(.)),\n              t1_get=as.numeric(t1_get_c),\n              t2_get=as.numeric(t2_get_c),\n              t1_res=case_when(t1_get>t2_get~'w',\n                               t1_get==t2_get~'d',\n                               T~'l'),\n             t2_res=case_when(t2_get>t1_get~'w',\n            t2_get==t1_get~'d',\n              T~'l')\n              )->r2\n\n\n\nrbind(\nr2 %>% select(t1,t1_get,t2_get,t1_res) %>%  rename(mis=t2_get,team=t1,scor=t1_get,res=t1_res),\nr2 %>% select(t2,t2_get,t1_get,t2_res) %>% rename(mis=t1_get,team=t2,scor=t2_get,res=t2_res))->r3\n\n\nr3 %>% group_by(team)%>% \n  summarise(scr=sum(scor),mis=sum(mis),win=sum(res=='w'),draw=sum(res=='d'),loss=sum(res=='l'),points=sum(win*3,draw))->r4\nr4 %>% filter(team==team1) %>% mutate(mis-round(mis))\n\n\nr4 %>% filter(team==team1)->r5\n\nr2 %>% filter(t1==team1|t2==team1) %>% mutate(check=nchar(t1_get_c)<=3,check2=nchar(t2_get_c)<=3,ch=check+check2)  %>% \n  filter(ch<2) %>% slice(1) %>% pull(r1) ->err\n\nr4 %>% filter(team==team1) %>% pull(team) %>% length()->rt\n\n\nif(length(err)!=0){\n  print(paste0(\"Error(float number):\",err))\n} else if(team1==\"\"){print(\"\")\n} else if(rt==0){\n  print(paste0(team1,\":This team didn't play!\"))\n}else{ \n  print(\n    paste0(team1,':W=',r5$win,';D=',r5$draw,';L=',r5$loss,';Scored=',r5$scr,';Conceded=',r5$mis,';Points=',r5$points)\n  )\n  }\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288939,"user_id":null,"body":"nbaCup <- function(resultSheet, toFind) {\n  if (toFind == '') return('')\n  recordSet <- unlist(strsplit(resultSheet, ','))\n  if (length(stringr::str_subset(recordSet, paste0(toFind, ' '))) == 0) return(paste(toFind, \"This team didn't play!\", sep = ':'))\n  winCount <- 0\n  Scored <- 0\n  Conceded <- 0\n  n <- length(stringr::str_subset(recordSet, toFind))\n  for (i in stringr::str_subset(recordSet, toFind)) {\n      if (stringr::str_detect(i, '\\\\.0{0,2}')) return(paste0('Error(float number):', i))\n      tempTeam <- unlist(strsplit(i, ' [0-9]{2,3} | [0-9]{2,3}$'))\n      tempTeam <- stringr::str_remove(tempTeam, '^ | $')\n      tempScore <- unlist(stringr::str_extract_all(i, ' [0-9]{2,3} | [0-9]{2,3}$'))\n      tempScore <- as.numeric(stringr::str_remove_all(tempScore, '^ | $'))\n      if (tempTeam[2] == toFind) tempScore <- rev(tempScore)\n      winCount = winCount + (tempScore[1] > tempScore[2])\n      Scored = Scored + tempScore[1]\n      Conceded = Conceded + tempScore[2]\n  }\n  paste(toFind, paste(c('W', 'D', 'L', 'Scored', 'Conceded', 'Points'),\n                      c(winCount, 0, n - winCount, Scored, Conceded, 3 * winCount), sep = '=', collapse = ';' ), sep = ':')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288940,"user_id":null,"body":"nbaCup <- function(resultSheet, toFind) {\n\n  if (toFind == \"\")\n    return(\"\")\n  \n  if (!grepl(paste0(toFind, \" \"), resultSheet))\n    return(sprintf(\"%s:This team didn't play!\", toFind))\n  \n  divide_by_numbers <- function(str) {\n    s <- strsplit(str, ' ')[[1]]\n    suppressWarnings({\n      numericos <- sapply(s, function(x) {!is.na(as.numeric(x))})\n    })\n    cbind(rbind(sapply(split(s, rep(1:4, times=rle(numericos)$lengths)), paste, collapse = \" \")), str)\n  }\n  \n  str <- strsplit(resultSheet, ',')[[1]]\n  df <- as.data.frame(do.call(rbind, lapply(as.list(str), divide_by_numbers)), stringsAsFactors = FALSE)\n  df[ ,c(2, 4)] <- sapply(df[, c(2, 4)], as.numeric)\n  df <- setNames(df, c('team_l', 'score_l', 'team_v', 'score_v', 'str'))\n  df <- df[df$team_l == toFind | df$team_v == toFind, ]\n  \n  error <- df[rowSums(!(df[,c(\"score_l\", \"score_v\")]%%1 == 0)), ]\n  if(nrow(error)>0) {\n    return(sprintf(\"Error(float number):%s\", error[,\"str\"]))\n  }\n  \n  TF <- rbind(\n    setNames(df[df$team_l == toFind, c(\"score_l\", \"score_v\")], c(\"P\", \"R\")),\n    setNames(df[df$team_v == toFind, c(\"score_l\", \"score_v\")], c(\"R\", \"P\"))\n  )\n  \n  resultado <- list(toFind,\n                    W <- sum(TF$P > TF$R), \n                    D <- sum(TF$P == TF$R), \n                    L <- sum(TF$P < TF$R),\n                    Scored <- sum(TF$P), \n                    Conceded <- sum(TF$R),\n                    Points <- W * 3 + D * 1)\n  \n  string <-\"%s:W=%d;D=%d;L=%d;Scored=%d;Conceded=%d;Points=%d\"\n  do.call(sprintf, as.list(c(string, resultado)))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a48948e145c46820b00002f":[{"id":288941,"user_id":492,"body":"isKPrime <- function(n, k) {\n  cnt <- 0\n  i <- 2\n  while (i * i <= n) {\n    while (n %% i == 0) {\n      cnt <- cnt + 1\n      n <- n \/ i\n    }\n    i <- i + 1\n  }\n  if (n > 1) { cnt <- cnt + 1}\n  cnt == k\n}\nkPrimesStep <- function(k, step, start, nd) {\n  kprimes <- c() \n  for (i in start:(nd - step)) {\n    if (isKPrime(i, k) && isKPrime(i + step, k)) {\n      kprimes <- c(kprimes, (c(i, i + step)))\n    }\n  }\n  return(kprimes)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288942,"user_id":null,"body":"isKPrime <- function(n, k) {\n  count <- 0\n  i <- 2\n  while(i * i <= n){\n    while(n %% i == 0){\n      count <- count + 1\n      n <- n\/i\n    }\n    i <- i + 1\n  }\n  if(n > 1){\n    count <- count + 1\n  }\n  count == k\n}\nkPrimesStep <- function(k, step, start, nd){\n  kPrimes <- c()\n  for(i in start:(nd -step)) {\n    if(isKPrime(i, k) && isKPrime(i + step, k)){\n      kPrimes <- c(kPrimes, (c(i,i + step)))\n    }\n  } \n  return(kPrimes)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288943,"user_id":53,"body":"primeFactorCount <- function(m) {\n    len <- 0\n    i <- 2\n    n <- m\n    while (i * i <= n) {\n        while (n %% i == 0) {\n            len <- len + 1\n            n <- n \/ i\n        }\n        i <- i + 1\n    }\n    if (n > 1) {\n        len <- len + 1\n    }\n    return(len)\n}\n\nkPrimesStep <- function(k, step, start, nd) {\n    arr <- c()\n    i <- start\n    while (i <= nd - step) {\n        if (primeFactorCount(i) == k && primeFactorCount(i + step) == k) {\n            pair <- c(i, i + step)\n            arr <- c(arr, pair)\n        }\n        i <- i + 1\n    }\n    return(arr)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288944,"user_id":null,"body":"factorize <- function(x,f=c()){\n  for(i in 2:sqrt(x))if(x<i)break else while(x%%i==0){x <- x\/i; f <- c(f,i)}\n  if(x>1)c(f,x) else f\n}\n\nkPrimesStep <- function(k, step, start, nd) {\n  k_p <- (start:nd)[which(sapply(start:nd,function(x)length(factorize(x)))==k)]\n  r <- c()\n  for(i in 1:length(k_p))if((k_p[i]+step) %in% k_p)r <- c(r,c(0,step)+k_p[i])\n  r\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288945,"user_id":669,"body":"exponent <- function(n, k) {\n  e <- 0\n  while (n > 1 && n %% k == 0) {\n    n <- n %\/% k\n    e <- e + 1\n  }\n  e\n}\n\nkPrimesStep <- function(k, step, start, nd) {\n  p <- seq(2, ceiling(sqrt(nd)))\n  i <- 0\n  while ((i <- i + 1) < length(p) - 1) {\n    p <- c(p[1:i], Filter(function(q) q %% p[i] > 0, p[-(1:i)]))\n  }\n\n  find_k <- function(n) {\n    e <- sapply(p, function(q) exponent(n, q))\n    sum(e) + (prod(p^e) != n) # check primality of the remaining part\n  }\n  \n  out <- c()\n  for (n in start:nd) {\n    if (find_k(n) == k && n + step <= nd && find_k(n + step) == k) {\n      out <- c(out, n, n + step)\n    }\n  }  \n  out\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288946,"user_id":null,"body":"countPrimeFactors <- function(x) {\n  # Returns an integer value of the number of prime factors of x\n  \n  # If number is one or less return 0\n  if(x <= 1) return(0L)\n  \n  # If number is even, divide by two until it is odd\n  i <- 0L\n  while(x %% 2L == 0L) {\n    i <- i + 1L\n    x <- x %\/% 2L\n  }\n  \n  # Once odd divide by incrementally larger primes, doesn't work under 15\n  if(x > 15L) {\n    sqrtx <- as.integer(sqrt(x))\n    loop.seq <- seq.int(from = 3L, to = sqrtx + 1L, by = 2L)\n    for(j in loop.seq) {\n      while(x %% j == 0L) {\n        i <- i + 1L\n        x <- x %\/% j\n      }\n    }\n  }\n  \n  # If 9 or 15 increment 2 and return, otherwise if >2 increment 1 and return\n  if(x == 9L | x == 15L) return(i + 2L)\n  if(x > 2L) return(i + 1L)\n  i\n\n}\n\nkPrimesStep <- function(k, step, m, n) {\n  \n  # Create vector of values which are in the range, count prime factors of each\n  step <- as.integer(step)\n  vals <- m:n\n  mn.factors <- sapply(vals, countPrimeFactors)\n  \n  # Subset to get the k.primes, count how many there are and setup list for loop\n  k.primes <- vals[mn.factors == k]\n  len <- length(k.primes)\n  res.list <- vector(\"list\", len)\n  \n  # Loop over each k.prime, test if k.step is present, and save pair if so\n  for(i in 1:len) {\n    k.step <- k.primes[i] + step\n    test <- k.step %in% k.primes[i:len]\n    if(test) res.list[[i]] <- c(k.primes[i], k.step)\n  }\n  \n  # Unlist all pairs found, returns vector of integers, or NULL if none\n  unlist(res.list)\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288947,"user_id":null,"body":"primeFactors <- function(n) {\n  if (n <= 1) {\n    return(c())\n  } else {\n    q <- 2\n    while (n %% q != 0) {\n      q <- q + 1\n      if (q > floor(sqrt(n))) {\n        q <- n\n      }\n    }\n    return(c(q,primeFactors(n\/q)))\n  }\n}\n\nkPrimesStep <- function(k, step, start, nd) {\n  v <- seq(start,nd)\n  s <- v[sapply(v, function(x) length(primeFactors(x))==k)]\n  if (length(s) == 0) return(NULL)\n  return(unlist(sapply(s, function(x) ifelse((x+step)%in% s, return(c(x,x+step)),return(c())))))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288948,"user_id":null,"body":"primeFactors <- function(n) {\n  if (n <= 1) {\n    return(c())\n  } else {\n    rval <- c()\n    q <- 2\n    while (n %% q != 0) {\n      q <- q + 1\n      if (q > floor(sqrt(n))) {\n        q <- n\n        break\n      }\n    }\n    repeat {\n      ifelse(n %% q == 0, n <- n\/q, break)\n      rval <- c(rval, q)\n    }\n    rval <- c(rval, primeFactors(n))\n  }\n  return(rval)\n}\n\nkPrimesStep <- function(k, step, start, nd) {\n  v <- seq(start,nd)\n  s <- v[sapply(v, function(x) length(primeFactors(x))==k)]\n  if (length(s) == 0) return(NULL)\n  r <- c()\n  for (v in s) {\n    if ((v+step) %in% s) {\n      r <- c(r,c(v,v+step))\n    }\n  }\n  return(r)\n}\n\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288949,"user_id":null,"body":"factorize <- function(n) {\n  ret <- vector()\n  while (n%%2 == 0) {\n    ret <- c(ret, 2)\n    n <- n\/2\n  }\n  m <- 3\n  while (m <= sqrt(n)) {\n    while (n%%m == 0) {\n      ret <- c(ret, m)\n      n <- n\/m\n    }\n    m <- m+2\n  }  \n  if (n > 2) ret <- c(ret, n)\n  ret\n}\n\nkPrimesStep <- function(k, step, start, nd) {\n  ret <- list()\n  kprimes <- Filter(function(x) length(factorize(x)) == k, start:nd)\n  for (i in seq(1, (length(kprimes)-1)))\n    for (j in seq((i+1), length(kprimes)))\n      if (kprimes[j] - kprimes[i] == step)\n        ret <- append(ret, list(c(kprimes[i], kprimes[j])))\n  return (unlist(ret))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288950,"user_id":null,"body":"prime <- function(n){\n  i <- 2\n  prime <- c()\n  max <- floor( sqrt(n))\n  repeat{\n    if (n %% i == 0){\n      n <- n \/ i\n      prime <- c(prime, i)\n    } else {\n      i <- i+1 \n    }\n    if (n == 1) break\n    if (i > max) {prime <- c(prime, n);break}\n    if (i > n) break\n  }\n  length(prime)\n}\n\nkPrimesStep <- function(k, step, start, nd) {\n   base <- which(sapply(start:nd, function(x) prime(x)) == k) + start -1\n   if ( length(base) == 0 | length(base) == 1) return(c())\n   res <- {}\n   for( i in 2: length(base)){\n     if ((base[i]-step) %in% base ) res <- c(res, base[i]-step, base[i])\n   }\n   res\n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a4d303f880385399b000001":[{"id":288951,"user_id":null,"body":"strong <- function(n)ifelse(sum(factorial(as.numeric(unlist(strsplit(as.character(n),'')))))==n,\"STRONG!!!!\",\"Not Strong !!\")","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288952,"user_id":null,"body":"strong <- function(n) {\n  n %>% as.character %>% strsplit('') %>% unlist %>% as.integer %>% factorial %>% sum %>% setequal(n) %>% ifelse(\"STRONG!!!!\",\"Not Strong !!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288953,"user_id":645,"body":"strong <- function(n) if (n == 1 || n == 2 || n == 145 || n == 40585) \"STRONG!!!!\" else \"Not Strong !!\"","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288954,"user_id":null,"body":"strong <- function(n) {\n  ifelse(n==sum(factorial(as.integer(unlist(strsplit(as.character(n),\"\"))))),\"STRONG!!!!\",\"Not Strong !!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288955,"user_id":null,"body":"strong <- function(n) {\n  if (n == Reduce(`+`, lapply(c(as.numeric(strsplit(as.character(n), \"\")[[1]])), factorial))) {\n    \"STRONG!!!!\"\n  } else {\n    \"Not Strong !!\"\n  } \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288956,"user_id":53,"body":"strong <- function(n) {\n  ifelse(n %in% c(1,2,145,40585),\"STRONG!!!!\",\"Not Strong !!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288957,"user_id":null,"body":"strong <- function(n) {\n  if ((sum(factorial(strtoi((strsplit(toString(n),\"\")[[1]]))))) == n) {\n    print(\"STRONG!!!!\")\n  } else {\n    print(\"Not Strong !!\")\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288958,"user_id":null,"body":"strong <- function(n) {\nsumma <- 0\n  for(i in 1:nchar(as.character(n))) {\n    summa <- summa + factorial(as.numeric(substr(as.character(n), i, i)))\n  }\nifelse(summa==n, \"STRONG!!!!\", \"Not Strong !!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288959,"user_id":null,"body":"strong <- function(n) {\n    numbers = as.numeric(unlist((strsplit(as.character(n),\"\"))))\n    numbers = sapply(numbers, factorial)\n    total = sum(numbers)\n    ifelse( n == total, \"STRONG!!!!\", \"Not Strong !!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288960,"user_id":null,"body":"strong <- function(n) {\n x <- as.numeric(strsplit(as.character(n),\"\")[[1]])\n x <- sum(factorial(x))\n  if(x == n){\n    print(\"STRONG!!!!\")\n  }else{\n    print(\"Not Strong !!\")\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a512f6a80eba857280000fc":[{"id":288961,"user_id":421,"body":"nth_smallest <- function(vec, pos){\n  sort(vec)[pos]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288962,"user_id":null,"body":"nth_smallest <- function(vec, pos){\n s=sort(vec,decreasing = FALSE)\n return(s[pos])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288963,"user_id":null,"body":"nth_smallest <- function(vec, pos){\n  vec <- sort(vec)\n  return(vec[pos])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288964,"user_id":null,"body":"nth_smallest <- function(vec, pos){\n print(sort(vec)[pos])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288965,"user_id":null,"body":"nth_smallest <- function(vec, pos){\n return(sort(vec, decreasing = F)[pos])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288966,"user_id":null,"body":"nth_smallest <- function(vec, pos){\n  while (pos > 1){\n    vec <- vec[-which.min(vec)]\n    pos <- pos - 1\n  }\n  vec[which.min(vec)]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288967,"user_id":null,"body":"nth_smallest <- function(vec, pos){\n  return(sort(vec)[pos])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a58d889880385c2f40000aa":[{"id":288968,"user_id":421,"body":"automorphic <- function(n) {\n  ifelse(endsWith(toString(n * n), toString(n)), \"Automorphic\", \"Not!!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288969,"user_id":null,"body":"automorphic <- function(n) {\n  n_is_automorphic <- grepl(paste0(n, \"$\"), as.character(n^2))\n  if (n_is_automorphic) \"Automorphic\" else \"Not!!\"\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288970,"user_id":53,"body":"automorphic <- function(n) {\n  ifelse(endsWith(as.character(n*n),as.character(n)),\"Automorphic\",\"Not!!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288971,"user_id":null,"body":"automorphic <- function(n) {\n  nsquare <- n^2\n  NumofDigits <- as.numeric(length(unlist(strsplit(as.character(n), \"\"))))\n  if (nsquare %% 10^(NumofDigits) != n)\n    return('Not!!')\n  else\n    return('Automorphic')\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288972,"user_id":669,"body":"automorphic <- function(n) {\n  d <- 1 + floor(log10(n))\n  \n  if (n ^ 2 %% 10 ^ d == n) \"Automorphic\" else \"Not!!\"\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288973,"user_id":null,"body":"automorphic <- function(n) {\n  # provide your solution here\n  ifelse(endsWith(toString(n^2),toString(n)),\"Automorphic\",\"Not!!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288974,"user_id":null,"body":"automorphic <- function(n) {\n  return(ifelse(as.character(n) == substrRight(as.character(n ** 2), nchar(as.character(n))), \"Automorphic\", \"Not!!\"))\n}\n         \nsubstrRight <- function(x, n){\n  return(substr(x, nchar(x)-n+1, nchar(x)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288975,"user_id":null,"body":"automorphic <- function(n) {\n  n_str  = unlist(strsplit(as.character(n), \"\"))\n  nn_str = unlist(strsplit(as.character(n*n), \"\"))\n  \n  a <- length(nn_str) - length(n_str) + 1\n  b <- length(nn_str)\n  \n  square_end <- as.numeric(paste0(nn_str[a:b], collapse = \"\"))\n  \n  return(ifelse(square_end == n, \"Automorphic\", \"Not!!\"))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288976,"user_id":null,"body":"automorphic <- function(n) {\n  n2 <- n*n\n  if (grepl(paste0(n,\"$\"), n2)){return(\"Automorphic\")} else {return(\"Not!!\")}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288977,"user_id":null,"body":"automorphic <- function(n) {\n  l <- as.character(n) %>% strsplit(\"\") %>% unlist() %>% length()\n  k <- 10**l\n  ifelse(n%%k == (n**2)%%k, \"Automorphic\", \"Not!!\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a62da60d39ec5d947000093":[{"id":288978,"user_id":null,"body":"findSquares <- function(x,y) {\n  sum(sapply(1:min(x, y), function(sq_len) (y - sq_len + 1) * (x - sq_len + 1)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288979,"user_id":669,"body":"findSquares <- function(x,y) {\n  y * (y + 1) * (3 * x - y + 1) \/ 6\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288980,"user_id":null,"body":"findSquares <- function(x,y) {\n  total <- 0\n  while (y > 0) {\n    total <- total + x * y\n    x <- x - 1\n    y <- y - 1\n  }\n  return(total)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288981,"user_id":null,"body":"findSquares <- function(x,y) {\n    count <- 0\n  for (i in 0:y){\n    count <- count + (x-i)*(y-i)\n  }  \n    return(count)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288982,"user_id":null,"body":"findSquares <- function(x,y) \n{\n  if (x>y)\n  {\n    temp = x\n    x = y\n    y = temp\n  }\n  squares = x*(x+1) * (2*x+1) \/ 6+(y-x) * x * (x+1)\/2\n  \n  return(squares)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288983,"user_id":null,"body":"fittedSquares <- function(x,y,s) {\n  if (s == 1) return(x*y)\n  if (x < y) return(fittedSquares(y,x,s))\n  if (s == y) {\n    if (s == x) return(1)\n    else return(x-y+1)\n  }\n  return(fittedSquares(x,s,s) * fittedSquares(y,s,s))\n}\n\nfindSquares <- function(x,y) {\n  c(1:y) %>% sapply(function(i) fittedSquares(x,y,i)) %>% sum\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288984,"user_id":null,"body":"findSquares <- function(x,y) {\n  n = min(c(x,y))\n  m = max(c(x,y))\n  return(n*(n+1)*(m-n)*0.5+n*(n+1)*(2*n+1)\/6)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288985,"user_id":53,"body":"findSquares <- function(x,y) {\n  (-y * (y + 1) * (y - (3 * x) - 1)) %\/% 6\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288986,"user_id":50,"body":"findSquares <- function(x,y) {\n  res = 0\n  while (x*y != 0){\n    res=res+x*y\n    y=y-1\n    x=x-1\n  }\n  res\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288987,"user_id":null,"body":"findSquares <- function(x,y) {\n        n=c(1:min(y,x))\n        print(sum((n-x-1)*(n-y-1)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a662a02e626c54e87000123":[{"id":288988,"user_id":421,"body":"extra_perfect <- function(n){\n  seq(1, n, 2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288989,"user_id":null,"body":"extra_perfect <- function(n){\n  c <- c()\n  i <- 0\n  while (2*i-1 < n-1) {\n    i<-i+1\n    c<-c(c,2*i-1)\n  } \n  return(c)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288990,"user_id":null,"body":"extra_perfect <- function(n) {\n  a = (1:n)\n  a[a %% 2 == 1]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288991,"user_id":null,"body":"extra_perfect <- function(n) {\n  seq.int(1, n, by=2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288992,"user_id":null,"body":"extra_perfect <- function(n){\n  seq(1,n,by=2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a6663e9fd56cb5ab800008b":[{"id":288993,"user_id":null,"body":"human_years_cat_years_dog_years <- function(human_years){\n  c(human_years, 15 + (human_years >= 2) * (9 + 4 * (human_years - 2)), 15 + (human_years >= 2) * (9 + 5 * (human_years - 2)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288994,"user_id":null,"body":"human_years_cat_years_dog_years <- function(hy){\n  years <- (hy - c(1, 2, 3)) >= 0\n  c(\n    hy,\n    sum(c(15, 9, (hy-2)*4)[years]),\n    sum(c(15, 9, (hy-2)*5)[years])\n  )\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288995,"user_id":1566,"body":"human_years_cat_years_dog_years <- function(y){\n c(y,if(y==1)15 else 16+4*y,if(y==1) 15 else 14+5*y)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288996,"user_id":null,"body":"human_years_cat_years_dog_years <- function(human_years){\n  cy <-15 + ifelse(human_years >= 2, 9, 0) +\n  ifelse(human_years >= 3, 4*(human_years -2), 0)\n  dy <-15 + ifelse(human_years >= 2, 9, 0) +\n  ifelse(human_years >= 3, 5*(human_years -2), 0)\n  return(c(human_years, cy, dy))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288997,"user_id":null,"body":"human_years_cat_years_dog_years <- function(human_years){\n  humanYears <- human_years\n  if (human_years == 1){\n    catYears <- 15\n    dogYears <- 15\n  } \n  else if (human_years == 2){\n    catYears <- 15+9\n    dogYears <- 15+9\n  } \n  else if (human_years >= 3){\n    a <- human_years-2\n    catYears <- 15+9\n    dogYears <- 15+9\n    if(a>=1){\n      catYears <- catYears + 4 * a\n      dogYears <- dogYears + 5 * a\n    }\n  }\n  y <- c(humanYears, catYears, dogYears)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288998,"user_id":null,"body":"human_years_cat_years_dog_years <- function(human_years){\n  if(human_years==1)\n    return(c(1,15,15))\n    else if(human_years==2)\n      return(c(2,24,24))\n    else\n      caat=(human_years-2)*4+15+9\n      dog=(human_years-2)*5+15+9\n      return(c(human_years,caat,dog))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":288999,"user_id":null,"body":"human_years_cat_years_dog_years <- function(human_years){\n  if(human_years ==1 ){\n    return(c(1,15,15))\n  }\n  if(human_years ==2){\n    return(c(2,24,24))\n  }\n  if(human_years>2){\n    return(c(human_years,(human_years-2)*4+24,(human_years-2)*5+24))\n  }\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289000,"user_id":null,"body":"human_years_cat_years_dog_years <- function(human_years){\n  if(human_years <= 2){\n  h = human_years\n  c_d = 15 + 9 * (h - 1)\n  c(h,c_d,c_d)}else{\n  h = human_years\n  ca = 24 + 4 * (h - 2)\n  do = 24 + 5 * (h - 2)\n  c(h,ca,do)\n}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289001,"user_id":null,"body":"human_years_cat_years_dog_years <- function(human_years){\n  if (human_years > 2){c=24+4*(human_years-2); d=24+5*(human_years-2)}\n  else if (human_years > 1){c=24;d=24}\n  else {c=15;d=15}\n  c(human_years,c,d)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289002,"user_id":null,"body":"human_years_cat_years_dog_years <- function(human_year){\n  c(human_year, 15 + 9*(human_year >1) + max(4*(human_year-2),0), 15 + 9*(human_year >1) + max(5*(human_year-2),0))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a97387e5ee396e70a00016d":[{"id":289003,"user_id":1422,"body":"pofi <- function(n){\n  c('1','i','-1','-i')[(n%%4)+1]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289004,"user_id":null,"body":"pofi<-function(n)switch(n%%4+1,'1','i','-1','-i')","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289005,"user_id":null,"body":"pofi <- function(n){\n  if(n %% 4 == 0) return(\"1\");\n  if(n %% 4 == 1) return(\"i\");\n  if(n %% 4 == 2) return(\"-1\");\n  if(n %% 4 == 3) return(\"-i\");\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289006,"user_id":1072,"body":"pofi <- function(n){\n  ifelse(n%%4==0,\"1\",ifelse(n%%4==1,\"i\",ifelse(n%%4==2,\"-1\",\"-i\")))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289007,"user_id":null,"body":"pofi <- function(n){\n  i <- c(\"1\",\"i\", \"-1\", \"-i\", 1)\n  return(i[n%%4+1])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289008,"user_id":null,"body":"pofi <- function(n){\n   if(n%%4==1){\n  return('i')\n     }else if(n%%4==2){\n  return('-1')\n     }else if(n%%4==3){\n  return('-i')\n     }else if(n%%4==0){\n  return('1')\n     }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289009,"user_id":null,"body":"pofi <- function(n){\n  if(n %% 4 == 0){\n    return(\"1\")\n  }\n  if(n %% 4 == 1){\n    return(\"i\")\n  }\n  if(n %% 4 == 2){\n    return(\"-1\")\n  }\n    return(\"-i\")\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289010,"user_id":null,"body":"pofi <- function(n){\n  if (n %in% seq(0,1000,4)) \"1\"\n  else if (n %in% seq(1,1000,4)) \"i\"\n  else if (n %in% seq(2,1000,4)) \"-1\"\n  else \"-i\"\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289011,"user_id":null,"body":"pofi <- function(n){\n  if (0 == n %% 2) {\n    as.character( (-1)^(n\/2) )\n  } else {\n    ifelse(1 == n %% 4, 'i', '-i')\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289012,"user_id":null,"body":"pofi <- function(n){\n  if(n %% 4 == 0){\n    return(\"1\")\n  } else if(n %% 4 == 1){\n    return('i')\n  } else if(n %% 4== 2){\n    return('-1')\n  } else if(n %% 4 == 3){\n    return('-i')\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5a99a03e4a6b34bb3c000124":[{"id":289013,"user_id":null,"body":"num_primorial <- function(n) {\n  p <- 2:(10*n)\n  for(i in 2:sqrt(10*n))p <- p[which(p%%i | p==i)]\n  prod(p[1:n])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289014,"user_id":null,"body":"is_prime<-function(n){\n  for(i in 2:(round(sqrt(n))+1)){\n  if(n%%i==0){\n  return(FALSE)\n  break\n  }else if(i<round(sqrt(n))+1){\n  next\n  }else{\n  return(TRUE)\n  }\n  }\n}\n\n\nnum_primorial <- function(n) {\n  if(n==1){\n  return(2)\n  }\n  k=5\n  summer=6\n  i=2\n  while(i<n){\n  if(is_prime(k)){\n  summer=summer*k\n  k=k+2\n  i=i+1\n  }else{\n  k=k+2\n  } \n  print(\"one loop\")\n  }\n  return(summer)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289015,"user_id":null,"body":"is_prime <- function(n) {\n  n == 2 || n > 2 && all(n %% 2:(as.integer(sqrt(n)) + 1) != 0)\n}\n\nnum_primorial <- function(n) {\n  i <- 2\n  total <- 1\n  while (n) {\n    if (is_prime(i)) {\n      total <- total * i\n      n <- n - 1\n    }\n    i <- i + 1\n  }\n  return (total)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289016,"user_id":null,"body":"num_primorial <- function(n) {\n  primes <- c()\n  i <- 2L\n  while (length(primes) < n) {\n    if (i == 2L || all(i %% 2L:ceiling(sqrt(i)) != 0)) {\n      primes <- c(primes, i)      \n    }\n    i <- i + 1\n  } \n  return(prod(primes))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289017,"user_id":null,"body":"is.prime <- function(num) {\n    if (num == 2) {\n        TRUE   \n    } else if (any(num %% 2:(num-1) == 0)) {\n        FALSE   \n    } else {\n        TRUE   }}\n\nnum_primorial <- function(n) {\n    i  <- 2\n    count_n  <- n\n    res  <- 1    \n    while (count_n != 0){\n        if (is.prime(i)){\n            count_n  <- count_n - 1\n            res  <- res * i                  \n        }              \n        i  <- i + 1\n    }\n    return (res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289018,"user_id":null,"body":"num_primorial <- function(n) {\n  sushu <- c()\n  i <- 2\n  while (length(sushu) < n) {\n    if(length(which(i %% (1:sqrt(i)) == 0)) == 1){\n      sushu <- append(sushu,i)\n      i <- i+1\n    }else{\n      i <- i+1\n    }\n  }\n  \n  return(prod(sushu))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289019,"user_id":null,"body":"num_primorial <- function(n) {\n  primes <- c(2)\n  x <- 2\n  \n  while(length(primes) < n) {\n    \n    if(!any(x %% 2:ceiling(sqrt(x)) == 0) == T) {primes <- append(primes, x)}\n    x <- x + 1\n  }\n  return(prod(primes))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289020,"user_id":null,"body":"is.prime <- function(n) n == 2L || all(n %% 2L:max(2,floor(sqrt(n))) != 0)\n\nnum_primorial <- function(n) {\n  i <- 1\n  j <- 2\n  while(n > 0){\n  \tif(is.prime(j)){\n  \t\ti <- i * j\n  \t\tn <- n - 1\n  \t}\n  \tj <- j + 1\n  }\n  \n  return(i)\n  \n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289021,"user_id":53,"body":"num_primorial <- function(n) {\n  if (n == 0) {\n    return(1)\n  } else {\n    m <- 2\n    i <- 3\n    k <- 0\n    while (k+1<n) {\n      if (is_prime(i)) {\n        m <- m*i\n        k <- k+1\n      }\n      i <- i+2\n    }\n    return(m)\n  }\n}\n\nis_prime <- function(n) {\n  if (n %% 2 == 0 || n %% 3 == 0) {\n    return(n < 4)\n  }\n  i <- 5\n  while (i * i <= n) {\n    if (n %% i == 0 || n %% (i + 2) == 0) {\n      return(FALSE)\n    }\n    i <- i + 6\n  }\n  TRUE\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289022,"user_id":null,"body":"num_primorial <- function(n) {\n  # your code here\nnumlist<-c(2,3,5,7)\noutput<-1\nif(n<=length(numlist)){\n  for(i in numlist[1:n]){\n    output<-i*output\n  }  \n  \n}else{\n  \n  X<-NULL    \n    for(x in 2:(n*10)){\n      if(x%in%numlist|all(x%%numlist!=0)){\n       # count<-count-1\n        X<-c(X,x)\n      }    \n  }\n\n  for(i in X[1:n]){\n    output<-i*output\n  } \n}\nreturn(output)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5aba780a6a176b029800041c":[{"id":289023,"user_id":645,"body":"max_multiple <- function(divisor, bound) bound - (bound %% divisor)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289024,"user_id":null,"body":"max_multiple <- function(divisor, bound) {\n    return (bound - (bound %% divisor));\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289025,"user_id":null,"body":"max_multiple <- function(divisor, bound) {\n  divisor*(bound %\/% divisor)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289026,"user_id":50,"body":"max_multiple <- function(d, b) {\n  d*floor(b\/d)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289027,"user_id":null,"body":"max_multiple <- function(divisor, bound) {\nbou = bound\n  while(TRUE){\n    if(divisor*bou<=bound){\n      return(divisor*bou)\n    } else {\n      bou = bou - 1\n    }\n  }\n            }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289028,"user_id":null,"body":"max_multiple <- function(divisor, bound) {\n  # your code here\n  return(divisor * (bound %\/% divisor))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289029,"user_id":null,"body":"isWhole <- function(x){\n  round(x) == x\n}\n\nmax_multiple <- function(divisor, bound) {\n  seq <- seq_len(bound)\n  seq[max(which(isWhole(seq\/divisor)))]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289030,"user_id":null,"body":"max_multiple <- function(divisor, bound) {\n  n <- bound\n  \n  while (n > 0) {\n    if (n %% divisor == 0) {\n      return(n)\n    }\n    \n    n <- n - 1\n  }\n    \n  n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289031,"user_id":null,"body":"max_multiple <- function(divisor, bound) {\n  c <- c()\n  for (i in bound:1) {\n    if(i %% divisor == 0){\n      #c = c(c,i)\n      return(i)\n    }\n  }\n  #return(i)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289032,"user_id":null,"body":"max_multiple <- function(divisor, bound) {\n  for(N in bound:1){\n    if(N %% divisor==0){\n      break\n    }\n  }\n N\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5ad0d8356165e63c140014d4":[{"id":289033,"user_id":null,"body":"final_grade <- function(exam, projects){\n    if (exam > 90 | projects > 10) return(100)\n    if (exam > 75 & projects >=5)  return(90)\n    if (exam > 50 & projects >=2)  return(75)\n    return(0)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289034,"user_id":null,"body":"final_grade <- function(exam, projects){\n  if (exam > 90 | projects > 10) {\n    return (100)\n  } else if (exam > 75 & projects > 4) {\n    return (90)\n  } else if (exam > 50 & projects >1) {\n    return (75)\n  } else {\n    return (0)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289035,"user_id":null,"body":"final_grade <- function(exam, projects){\n  \n  if(exam > 90 | projects > 10){\n    return(100)\n  }\n  if(exam > 75 && projects >= 5){\n    return(90)\n  }\n  if(exam > 50 && projects >= 2){\n    return(75)\n  }\n  else{\n    return(0)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289036,"user_id":null,"body":"final_grade <- function(exam, projects){\n  if(exam>90|projects>10){\n    return(100)\n  }\n  if(exam>75&projects>=5){\n    return(90)\n  }\n  if(exam>50&projects>=2){\n    return(75)\n  }else(return(0))\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289037,"user_id":null,"body":"final_grade <- function(exam, projects){\n  print(exam, projects)\n  if (exam >= 90 | projects >= 10){\n    return(100)\n  } else if (exam >= 75 & projects >= 5){\n    return(90)\n  } else if (exam >= 50 & projects >= 2){\n    return(75)\n  } else { \n  return(0)}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289038,"user_id":null,"body":"final_grade <- function(exam, projects){\n  if (exam > 90 | projects > 10) return(100)\n  else if (exam >= 75 & projects >= 5) return(90)\n  else if (exam >= 50 & projects >= 2) return(75)\n  return(0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289039,"user_id":null,"body":"final_grade <- function(exam, projects)\n{\n  if(exam > 90 || projects > 10)\n    {\n      final_grade <- 100\n    }\n  else\n  {\n    if(exam > 75 && projects > 4)\n    {\n      final_grade <- 90\n    }\n    else\n    {\n      if(exam > 50 && projects > 1)\n      {\n      final_grade <- 75\n      }\n      else\n      {\n        final_grade <- 0\n      }\n     }\n   }\n    \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289040,"user_id":null,"body":"final_grade <- function(exam, projects){\n  if(exam>90 | projects>10){return(100)}\n  else if(exam>75 & projects>=5){return(90)}\n  else if(exam>50 & projects>=2){return(75)}\n  else(return(0))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289041,"user_id":null,"body":"final_grade <- function(exam, projects)\n{\n  if (exam>90 || projects>10 )\n    {\n      print(100)\n    }\n  else if (exam>75 && projects>=5)\n    {\n      print(90)\n    }\n  else if (exam>50 && projects>=2)\n    {\n      print(75)\n    }\n  else\n    {\n      print(0)\n    }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289042,"user_id":null,"body":"final_grade <- function(exam, projects){\n  ifelse(exam > 90 | projects > 10, 100, \n         ifelse(exam > 75 & projects >= 5, 90, \n                ifelse(exam > 50 & projects >= 2, 75, 0)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5ad29cd95e8240dd85000b54":[{"id":289043,"user_id":null,"body":"friends <- function(n) {\n    return (floor(log2(max(2, n) - 1)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289044,"user_id":53,"body":"friends <- function(n) {\n  ifelse(n<2,0,ceiling(log2(n))-1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289045,"user_id":null,"body":"friends <- function(n) {\n  ifelse(n > 1, ceiling(log2(n)) - 1, 0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289046,"user_id":421,"body":"friends <- function(n) {\n  ifelse(n < 3, 0, floor(log2(n - 1)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289047,"user_id":null,"body":"friends <- function(n) {\n  if (n < 3)\n    return(0)\n  else\n    return(ceiling(log(n, 2)) - 1) \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289048,"user_id":null,"body":"friends <- function(n) {\n  if(n < 3) {\n    return(0)\n  } else if (n == 4) {\n    return(1)\n  } \n  floor(log2(n))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289049,"user_id":null,"body":"friends <- function(n) {\n  if (n <= 2){\n    return(0)\n  }else{\n    return( floor(log(n-1, base = 2)) )\n  }\n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289050,"user_id":null,"body":"friends <- function(n) {\nif(n<2)(return(0))\nc=0\n  while(2^c<n){c=c+1}\nreturn(c-1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289051,"user_id":null,"body":"friends <- function(n) {\n  # In my opinion, n friends can check 2n jars and not 2^n.\n  # But this code passes all tests ...\n  if(n<=2) return(0)\n  floor(log((n-1),2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289052,"user_id":null,"body":"friends <- function(n)max(ceiling(log(n,2))-1,0)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5ae3ad4a2c50613a77000014":[{"id":289053,"user_id":527,"body":"s=sum;sum=function(n){k=n%\/%abs(m<-c(3,5,-15));s(m*k*(k+1)\/2)}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289054,"user_id":null,"body":"sum=function(n,p=n%\/%c(3,5,15))c(c(3,5,-15)%*%(p+p^2)\/2)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289055,"user_id":null,"body":"sum=function(n,z=function(t)t*n%\/%t*(1+n%\/%t)\/2)z(3)+z(5)-z(15)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289056,"user_id":53,"body":"sum=function(n)(s=function(d)(m=n%\/%d)*(m+1)\/2*d)(3)+s(5)-s(15)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289057,"user_id":null,"body":"sum=function(n,m=c(3,5,-15),x=n%\/%abs(m)){c(m%*%(x*(x+1)\/2))}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289058,"user_id":null,"body":"z=sum;sum=function(n){m=c(3,5,-15);x=n%\/%abs(m);z(m*x*(x+1)\/2)}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289059,"user_id":132,"body":"sum=function(n,s=function(v)v*n%\/%v*(n%\/%v+1)\/2)s(3)+s(5)-s(15)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289060,"user_id":null,"body":"sum=function(n){x=n%\/%c(3,5,15);(c(3,5,-15)%*%(x*(x+1))\/2)[,]}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289061,"user_id":null,"body":"sum<-function(n,a=n%\/%c(3,5,15))base::sum(c(3,5,-15)*(a+a^2))\/2","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289062,"user_id":null,"body":"sum=function(n){x=3:15;y=n%\/%x;z=x*y*(y+1)\/2;z[1]+z[3]-z[13]}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5ae62fcf252e66d44d00008e":[{"id":289063,"user_id":null,"body":"expression_matter <- function(a, b, c) {\n  # your code here\n  max(c(a*b*c, a+b+c, a*b+c, a+b*c, (a+b)*c, a*(b+c)))\n  \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289064,"user_id":1015,"body":"expression_matter <- function(a, b, c) {\n  if (a == 1 & c == 1){\n    return(a + b + c)\n  }\n  if (a == 1 | b == 1 | c == 1){\n    return(max(a * (b + c), (a + b) * c))\n  }\n  return(a * b * c)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289065,"user_id":null,"body":"expression_matter <- function(a, b, c) {\n  max(as.integer(c(a*b*c, (a+b)*c, a*(b+c), a+b+c)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289066,"user_id":null,"body":"expression_matter <- function(a, b, c) {\n  max(a * b * c, a + b + c, (a + b) * c, a * (b + c))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289067,"user_id":null,"body":"expression_matter <- function(a, b, c) {\n  max(c(a+b+c\n        ,a*b*c\n        ,a+b*c\n        ,a*b+c\n        ,(a+b)*c\n        ,a*(b+c)\n        ,a*b*c\n       ))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289068,"user_id":null,"body":"expression_matter <- function(a, b, c) {\n  return(max(c(a+b+c, a*b*c, a*(b+c), (a+b)*c)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289069,"user_id":null,"body":"expression_matter <- function(a, b, c) {\n  max(a*(b+c), a*b*c, a+b*c, (a+b)*c, a+b+c)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289070,"user_id":null,"body":"expression_matter <- function(a, b, c) {\n  vals <- c(a*b*c, a+b+c, (a+b)*c, a*(b+c))\n  return (max(vals))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289071,"user_id":null,"body":"expression_matter <- function(a, b, c) {\n  simple_sum<-sum(a,b,c)\n  simple_prod<-prod(a,b,c)\n  sumab<- sum(a,b) * c\n  sumbc<- sum(b,c) * a\n  return(max(simple_sum,simple_prod,sumab,sumbc))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289072,"user_id":null,"body":"expression_matter <- function(a, b, c) {\n  # your code here\n  a1 = c()\n  a1[1] = (a+b)*c\n  a1[2] = (c+b)*a\n  a1[3] = a*b*c\n  a1[4] = a*b+c\n  a1[5] = a+b+c\n  a1[6] = a+b*c\n  return(max(a1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5afa08f23e971553170001e0":[{"id":289073,"user_id":527,"body":"count_squareable <- function(n) {\n  (3 * n + 1) %\/% 4\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289074,"user_id":132,"body":"count_squareable <- function(n) {\n  return(n%\/%4+(n+1)%\/%2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289075,"user_id":null,"body":"count_squareable <- function(n) {\n  sum(vapply(seq_len(n),\n             function(n) {\n               k <- floor(sqrt(n))\n               r <- n %\/% seq.int(k)\n               p <- r[!n %% seq.int(k)]\n               any(!(p + n \/ p) %% 2)\n             },\n            integer(1)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289076,"user_id":492,"body":"count_squareable <- function(n) {\n  n%\/%4+(n+1)%\/%2\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289077,"user_id":669,"body":"count_squareable <- function(n) {\n  n - (n - 2) %\/% 4 - 1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289078,"user_id":null,"body":"count_squareable <- function(n) {\n  # Returns int. vector of count of odd numbers & multiples of four less than n\n  #\n  # Args:\n  #  n: a numeric value or vector of a positive integers\n  \n  # Calculate number of odd numbers less than n and multiples of four, add them\n  n <- as.integer(n)\n  odd <- (n + 1L) %\/% 2L\n  frs <- n %\/% 4L\n  odd + frs\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289079,"user_id":null,"body":"count_squareable <- function(n) {\n  # all odd numbers are squareable\n  # only even numbers divisible by 4 are squareable\n  return(floor((n+1)\/2) + floor(n\/4))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289080,"user_id":null,"body":"isSquareable <- function(n) {\n  f1 <- seq(floor(sqrt(n)))\n  f2 <- n\/f1\n  v <- (f2+f1)\/2\n  ifelse(any(v %% 1 == 0),return(TRUE),return(FALSE))\n}\n\ncount_squareable <- function(n) {\n  r <- sapply(seq(n), function(v) ifelse(isSquareable(v),return(1),return(0)))\n  return(sum(r))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289081,"user_id":null,"body":"only1prime2 <- function(n) {\n  if (n %% 2 == 0) n%%4 != 0 else FALSE\n}\n\n\ncount_squareable <- function(n) {\n  n - sum(sapply(1:n, function(x) only1prime2(x)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289082,"user_id":null,"body":"count_squareable <- function(n) {\n  length(Filter(function (x) {x%%4 == 0 || x%%2 == 1}, 1:n))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5aff237c578a14752d0035ae":[{"id":289083,"user_id":785,"body":"predict_age<-function(...) sqrt(sum(c(...) ^ 2)) %\/% 2","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289084,"user_id":null,"body":"predict_age<-function(...){\n  ages<-c(...)\n  result<-trunc(sqrt(sum(ages*ages))\/2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289085,"user_id":null,"body":"predict_age<-function(age1,age2,age3,age4,age5,age6,age7,age8){\n  return(trunc(sqrt(sum(c(age1,age2,age3,age4,age5,age6,age7,age8)^2))\/2, digits=0))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289086,"user_id":null,"body":"predict_age<-function(age1,age2,age3,age4,age5,age6,age7,age8){\n  age <- c(age1,age2,age3,age4,age5,age6,age7,age8)\n  sapply(age, function(i) (i*i)) %>%\n  sum() %>%\n  sqrt() -> age_1 \n  return(floor(age_1\/2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289087,"user_id":null,"body":"predict_age<-function(age1,age2,age3,age4,age5,age6,age7,age8){\n   as.integer((sum(c(age1,age2,age3,age4,age5,age6,age7,age8)^2)^.5)\/2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289088,"user_id":null,"body":"predict_age<-function(age1,age2,age3,age4,age5,age6,age7,age8){\n    ages <- c(age1,age2,age3,age4,age5,age6,age7,age8)\n    return(floor((sqrt(sum(ages**2)))\/2))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289089,"user_id":null,"body":"predict_age<-function(age1,age2,age3,age4,age5,age6,age7,age8){\n  ages <- floor(sqrt(sum(c(age1, age2, age3, age4, age5, age6, age7, age8) ^ 2))\/2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289090,"user_id":null,"body":"predict_age<-function(age1,age2,age3,age4,age5,age6,age7,age8){\n  vec<- c(age1,age2,age3,age4,age5,age6,age7,age8)\n  as.integer(sqrt(sum((vec ^ 2)))\/2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289091,"user_id":null,"body":"predict_age<-function(age1,age2,age3,age4,age5,age6,age7,age8){\n  vars <- paste0(\"age\",1:8, collapse=\",\")\n  x <- eval(parse(text = paste0(\"c(\", vars, \")\", collapse = \"\")))\n  floor(sqrt(sum(x^2))\/2)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289092,"user_id":null,"body":"predict_age<-function(...){\n  x <- as.numeric(list(...))\n  floor(sqrt(sum(x^2))\/2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5b06c990908b7eea73000069":[{"id":289093,"user_id":492,"body":"f <- function(z, eps) {\n  if (Mod(z) >= 1) {\n    return (-1)\n  }\n  v = log(eps) \/ log(Mod(z))\n  return (as.integer(v))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289094,"user_id":53,"body":"f <- function(z, eps) {\n  max(-1, log(eps, abs(z)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289095,"user_id":17,"body":"f <- function(z, eps) {\n  return(if (Mod(z) < 1) as.integer(log(eps) \/ log(Mod(z))) else -1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289096,"user_id":168,"body":"f <- function(z, eps) {\n  a <- abs(z)\n  if (a >= 1) {\n    -1\n  } else {\n    log(eps, a)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289097,"user_id":669,"body":"f <- function(z, eps) {\n  if (abs(z) >= 1) {\n    return(-1)\n  }\n  n <- 1:10000\n  S <- (1 - z) * cumsum(z^n)\n\n  min(which(abs(S - z) < eps))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289098,"user_id":null,"body":"f <- function(z, eps) {\n  # Returns an integer value of the lowest n where Mod(S - L) < eps\n  \n  # Calculate Mod(z), if >= 1 the function will not converge, so return -1\n  modz <- Mod(z)\n  if(modz >= 1) return(-1L)\n  \n  # Calculate \"n + 1\" as log base modz of eps, truncate to integer to get n\n  np1 <- log(eps, base = modz)\n  as.integer(np1)\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289099,"user_id":null,"body":"f <- function(z, eps) {\n  # Returns an integer value of the lowest n where Mod(S - L) < eps\n  \n  # Extract real and imaginary parts of z, if not in conv. domain return -1\n  a <- Re(z)\n  b <- Im(z)\n  if(a <= -1 | a >= 1) return(-1L)\n  if(b <= -1 | b >= 1) return(-1L)\n  \n  # Loop until n is high enough for ModD < eps\n  n <- 0L\n  repeat {\n    n <- n + 1L\n    zn1 <- z ^ (n + 1L)\n    modD <- Mod(-zn1)\n    if(modD < eps) break\n  }\n  \n  # Return n, an integer > 0\n  n\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289100,"user_id":null,"body":"f = function(z, eps){\n  if(abs(z) >= 1){\n    return(-1)\n  }\n  return(floor(log(eps, base=abs(z)) + 1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289101,"user_id":null,"body":"f <- function(z, eps) {\n  if (abs(z) >= 1) {\n    return(-1)\n  } else {\n    n <- 0\n    repeat  {\n      if (abs(z**(n+1)) < eps) {\n        break\n      }\n      n <- n + 1\n    }\n    return(n)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289102,"user_id":null,"body":"f <- function(z, eps) {\n  Sn <- function(z, n) {\n    (1-z) * sum(z^(1:n))\n  }\n  n <- 1\n  S2 <- 0\n  S <- 1\n  while (S > eps) {\n    S <- Mod(Sn(z, n) - z)\n    if (n > 100 & (S - S2) > 10) return(-1)\n    S2 <- S\n    n <- n+1\n  }\n  n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5b0c0ec907756ffcff00006e":[{"id":289103,"user_id":492,"body":"quadratic <- function(a, b, c) {\n  return (- c \/ b)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289104,"user_id":null,"body":"quadratic <- function(a, b, c) {\n  x1 = (-b - (b^2 - 4*a*c)^0.5 )\/ (2*a)\n  x2 = c\/a\/x1\n\n  # your code\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289105,"user_id":527,"body":"quadratic <- function(a, b, c) {\n  -c \/ b\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289106,"user_id":492,"body":"quadratic <- function(a, b, c) {\n  return (- c \/ b)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289107,"user_id":null,"body":"quadratic <- function(a, b, c) {\n  discriminant <- (b^2) - (4*a*c)\n  return(c \/ (a * (-1 * b - sign(b)*sqrt(discriminant)) \/ (2*a)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289108,"user_id":null,"body":"quadratic <- function(a, b, c) {\n  x2 <- (2*c)\/((-b)-sqrt((b^2)-4*a*c))\n  return(x2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289109,"user_id":null,"body":"quadratic <- function(a, b, c) {\n  (2*c)\/(-b - sqrt(b^2 - 4*a*c))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289110,"user_id":null,"body":"quadratic <- function(a, b, c) {\n  2 * c \/ (-b - sqrt(b * b - 4 * a * c))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289111,"user_id":null,"body":"quadratic <- function(a, b, c) {\n  delta=b**2-4*a*c\n\n  x1 = 2*c\/(-b-sqrt(delta))\n\n\n\n  return(x1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289112,"user_id":null,"body":"quadratic <- function(a, b, c) {\n2*c\/(-b-(b^2-4*a*c)**0.5)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5b1cd19fcd206af728000056":[{"id":289113,"user_id":null,"body":"solve <- function(m) {\n    uniroot(function(x) m * x ** 2 - (2 * m + 1) * x + m, lower = 0, upper = 1, tol = 1e-12)$root\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289114,"user_id":492,"body":"solve <- function(m) {\n  s <- sqrt(4.0 * m + 1.0)\n  return ((2.0 * m + 1.0 - s) \/ (2.0 * m))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289115,"user_id":null,"body":"solve <- function(m) {\nl<-1\/m\n1\/((l+2+sqrt(l*(l+4)))\/2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289116,"user_id":null,"body":"solve <- function(m) {\n (2 * m + 1 - sqrt(4 * m + 1))\/(2 * m)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289117,"user_id":null,"body":"solve <- function (m) {\n  a <- m\n  b <- -2 * m - 1\n  c <- m\n  discriminant <- (b^2) - (4*a*c)\n  return((-1 * b - sqrt(discriminant)) \/ (2*a))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289118,"user_id":null,"body":"solve <- function(m) {\n  # U(n,x)=x\/((1-x)^2)=m when n goes to infinity and x<1 and element real numbers without 0\n  \np= -(2*m + 1)\/m\nq= 1\n\nx1 = -(p\/2)+sqrt(((p\/2)^2) - q)\nx2 = -(p\/2)-sqrt(((p\/2)^2) - q)\n\nif (x1 >0 && x1 <1) {\n  return(x1)\n}\n\nif (x2>0&&x2<1) {\n  return(x2)\n}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289119,"user_id":null,"body":"solve <- function(m) {\n  # your code\n  if(m > 1) {1 + 0.5 \/ m - (4*m+1)^0.5\/(2*m)}\n  else {NULL}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289120,"user_id":null,"body":"solve <- function(m) {\n  return(((2*m+1)-sqrt((2*m+1)^2-4*m^2))\/(2*m))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289121,"user_id":null,"body":"u <- function(x){\n  out <- 0\n  pot<-1\n  for(n in 1:17000){\n    pot<-pot*x\n    out <- out+n*pot\n  }\n  out\n}\n\nsolve <- function(m) {\n  uniroot(function(x) u(x)-m,c(0,1),tol=1e-13)$root\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289122,"user_id":null,"body":"delta<-function(a,b,c){\n  b^2-4*a*c\n}\n\nresult <- function(a,b,c){\n  if(delta(a,b,c) > 0){ # first case D>0\n    x_1 = (-b+sqrt(delta(a,b,c)))\/(2*a)\n    x_2 = (-b-sqrt(delta(a,b,c)))\/(2*a)\n    return(min(x_1,x_2))\n  }\n  else if(delta(a,b,c) == 0){ # second case D=0\n    return(-b\/(2*a))\n  }\n  else {\"There are no real roots.\"} # third case D<0\n}\n\nsolve <- function(m) {\n  return(result(m, -(2*m + 1), m))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5b33452ab6989d2407000100":[{"id":289123,"user_id":null,"body":"count_pal <- function(n) {\n  x <- 9 * 10^((seq_len(n) - 1) %\/% 2)\n  c(x[n], cumsum(x)[n])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289124,"user_id":null,"body":"count_pal <- function(n) {\n  \n  palPerDigit <- function(d) {\n    n <- (d-1) %\/% 2\n    dPals <- 9 * (10 ^ n)\n    return(dPals)\n  }\n  \n  totalPal <- sapply(1:n, palPerDigit)\n  \n  return(c(totalPal[n], sum(totalPal)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289125,"user_id":null,"body":"count_pal <- function(n) {\n  getPal <- function(x) 9 * 10 ^ (ceiling(x \/ 2) - 1)\n  allPal <- sapply(n:1, getPal)\n  \n  return(c(allPal[1], sum(allPal)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289126,"user_id":null,"body":"count_pal <- function(n) {\n  nth <- 9 * 10^(floor((n-1)\/2))\n  if ( n==1 | n ==2 ) return(c(nth, nth * n))\n  total <- sum( 10^(seq(0, floor((n-1)\/2) - 1  ))) * 9 * 2 + nth * (1 + (n %% 2 == 0 ))\n  return(c(nth, total))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289127,"user_id":null,"body":"count <- function(x){\n    if (x%%2 == 1){\n    nb <- (x-1)\/2\n  } else {\n    nb <- (x-2)\/2\n  }\n  return((10**nb)*9)\n}\n\ncount_pal <- function(n) {\n  i <- 1:n\n  t <- sapply(i, count)\n  return(c(t[n], sum(t)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289128,"user_id":null,"body":"count_pal <- function(n) {\n  c(9 * 10^((n-1) %\/% 2), sum(9 * 10^(0:(n-1) %\/% 2)))  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289129,"user_id":null,"body":"count_pal <- function(n) {\n  s <- 10^((n-1)%\/%2)\n  max_n <- floor(2*log10(.Machine$double.xmax))-1\n  if(n<= max_n) return(c(9*s,2*(10*s-1)-(n%%2)*9*s))\n  else return(c(Inf,Inf))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289130,"user_id":null,"body":"count_pal <- function(n)c(9*10**((n-1)%\/%2),9*as.numeric(paste0(as.character(n%%2),strrep('2',n%\/%2),collapse='')))","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289131,"user_id":null,"body":"count_pal <- function(n) {\n  x <- 9 * 10^((seq_len(n) - 1) %\/% 2)\n  c(tail(x, 1), tail(cumsum(x), 1))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289132,"user_id":669,"body":"count_pal <- function(n) {\n  m <- as.numeric(n:1)\n  h <- m %\/% 2\n  k <- (10^h - 10^(h - 1)) * 10^(m %% 2)\n  \n  k[is.nan(k)] <- Inf\n  c(k[1], sum(k))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5b40b666dfb4291ad9000049":[{"id":289133,"user_id":492,"body":"solve <- function(a, b, c, alpha, beta, gamma) {\n    alpha <- alpha * pi \/180; beta <- beta * pi \/180; gamma <- gamma * pi \/ 180\n    x <- a * cos(alpha) - b * sin(beta) - c * cos(gamma)\n    y <- a * sin(alpha) + b * cos(beta) - c * sin(gamma)\n    r <- sqrt(x * x + y * y)\n    theta <- as.integer(acos(x\/r) * 180 * 3600 \/ pi)\n    d <- theta %\/% 3600\n    mm <- theta %% 3600\n    m <- mm %\/% 60\n    s <- mm %% 60\n    c(round(r), d, m, s)\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289134,"user_id":null,"body":"solve <- function(a, b, c, alpha, beta, gamma) {\n    rad = 180\/pi\n    x = abs(a * cos(alpha \/ rad) - b * sin(beta \/ rad) - c * cos(gamma \/ rad))\n    y = abs(a * sin(alpha \/ rad) + b * cos(beta \/ rad) - c * sin(gamma \/ rad))\n    range = round(sqrt(x ** 2 + y ** 2))\n    angle = 180 - (atan(y \/ x) * 180 \/ pi)\n    c(range, floor(angle), floor((angle %% 1) * 60), floor(((angle %% 1) * 60) %% 1 * 60))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289135,"user_id":null,"body":"solve <- function(a, b, c, alpha, beta, gamma){\n  go <- function(angle){ c(cos(angle\/180*pi), sin(angle\/180*pi)) }\n\n  cc <-      go(alpha)       * a\n  cc <- cc + go(beta  + 90)  * b\n  cc <- cc + go(gamma + 180) * c\n  \n  co <- sqrt(sum(cc^2))\n  \n  xx <- cc\/co\n  dg <- atan2(xx[2], xx[1])*180\/pi\n  do <- trunc(dg)\n  do[2] <- trunc((dg - do[1L]) * 60)\n  do[3] <- trunc((dg*60 - do[1]*60-do[2])*60)\n  \n  return(c(round(co), do))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289136,"user_id":53,"body":"solve <- function(a, b, c, alpha, beta, gamma) {\n  u <- alpha * pi \/ 180\n  v <- beta * pi \/ 180\n  w <- gamma * pi \/ 180\n  x <- a * cos(u) - b * sin(v) - c * cos(w)\n  y <- a * sin(u) + b * cos(v) - c * sin(w)\n  t <- atan2(y, x) * 180 \/ pi\n  r <- sqrt(x * x + y * y)\n  c(round(r), as.integer(t), as.integer(t * 60) %% 60, as.integer(t * 3600) %% 60)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289137,"user_id":null,"body":"solve <- function(a, b, c, alpha, beta, gamma) {\n  dists    <- c(a, b, c)\n  angles   <- c(alpha, beta + 90, gamma + 180) \/ 180 * pi\n  \n  y_delta  <- sum(dists * sin(angles))\n  x_delta  <- sum(dists * cos(angles))\n  \n  distance <- round(sqrt(y_delta^2 + x_delta^2))\n  angle    <- (atan(y_delta \/ x_delta) \/ pi * 180) %% 180\n  degree   <- trunc(angle)\n  angle    <- 60 * (angle %% 1)\n  minute   <- trunc(angle)\n  angle    <- 60 * (angle %% 1)\n  second   <- trunc(angle)\n  c(distance, degree, minute, second)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289138,"user_id":669,"body":"solve <- function(a, b, c, alpha, beta, gamma) {\n  cossindeg <- function(deg) c(cos(deg \/ 180 * pi), sin(deg \/ 180 * pi))\n\n  oa <- cossindeg(alpha) * a\n  ab <- cossindeg(90 + beta) * b\n  bc <- cossindeg(180 + gamma) * c\n  \n  oc <- oa + ab + bc\n  h <- sqrt(sum(oc^2))\n  angle <- acos(oc[1] \/ h) \/ (2 * pi) * 360\n  \n  c(round(h), trunc(c(angle, (angle * 60) %% 60, (angle * 3600) %% 60)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289139,"user_id":null,"body":"solve <- function(a, b, d, alp, bet, gam) {\n  # Returns an integer vector of the length, degrees, minutes, and seconds\n  \n  # Calculate the x and y coordinates of the point c\n  xc <- -a * cospi(alp\/180) + b * sinpi(bet\/180) + d * cospi(gam\/180)\n  yc <- a * sinpi(alp\/180) + b * cospi(bet\/180) - d * sinpi(gam\/180)\n  \n  # Calculate the distance from point c to the origin\n  co <- sqrt(xc * xc + yc * yc)\n  co <- as.integer(round(co))\n  \n  # Calculate the angle \"toc\", extract degree, minute, and second portions\n  toc <- 180  - atan(yc \/ xc) * 180 \/ pi\n  deg <- as.integer(toc %\/% 1)\n  rem <- 60 * toc %% 1\n  min <- as.integer(rem %\/% 1)\n  sec <- as.integer(60 * rem %% 1)\n  \n  # Return all four values as an integer vector\n  c(co, deg, min, sec)\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289140,"user_id":null,"body":"solve <- function(a, b, c, alpha, beta, gamma) {\n  v <- sum(c(a,b,c)*exp(1i*c(alpha, beta+90 , gamma+180)\/180*pi))\n  dist <- round(Mod(v))\n  angle <- Arg(v)*180\/pi\n  deg <- floor(angle)\n  min <- floor((angle - deg)*60)\n  sec <- floor((angle - deg - min\/60)*3600)\n  return(as.integer(c(dist, deg, min, sec)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289141,"user_id":null,"body":"solve <- function(a, b, c, alpha, beta, gamma) {\n  pointa <- c(a*cos((alpha\/180)*pi), a*sin((alpha\/180)*pi))\n  pointb <- pointa + c(b*cos(((90+beta)\/180)*pi), b*sin(((90+beta)\/180)*pi))\n  pointc <- pointb + c(c*cos(((180+gamma)\/180)*pi), c*sin(((180+gamma)\/180)*pi))\n  dist <- round(sqrt(sum(pointc^2)))\n  degrees_full <- 180-180*atan(abs(pointc[2])\/abs(pointc[1]))\/pi\n  degrees <- degrees_full %\/% 1\n  minutes_full <- (degrees_full %% 1) * 60\n  minutes <- minutes_full %\/% 1\n  seconds <- ((minutes_full %% 1) * 60) %\/% 1\n  return(c(dist, degrees, minutes, seconds))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289142,"user_id":null,"body":"solve <- function(a, b, c, alpha, beta, gamma) {\n  x <- a * cos(alpha\/180*pi)\n  y <- a * sin(alpha\/180*pi)\n  \n  x <- x - b * sin(beta\/180*pi)\n  y <- y + b * cos(beta\/180*pi)\n  \n  x <- x - c *cos(gamma\/180*pi)\n  y <- y - c *sin(gamma\/180*pi)\n  \n  distance <- round(sqrt( x^2+ y^2 ))\n  deg <- atan(y\/x) \/pi * 180 + 180 * (atan(y\/x) < 0)\n  degree <- floor(deg)\n  minutes <- floor(deg %% 1 * 60)\n  seconds <- floor((deg %% 1 * 60) %% 1 * 60)\n  return(c(distance, degree, minutes, seconds))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5b55c49d4a317adff500015f":[{"id":289143,"user_id":null,"body":"points <- function(radius) {\n  # Purely mathematical solution\n  1 + 4 * sum(1 + floor(sqrt(radius^2 - seq_len(radius)^2)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289144,"user_id":null,"body":"points <- function(radius) {\n  r2 <- radius^2\n  x_points <- seq(0, floor(radius))^2\n  y <- x_points[-1]\n  sum(vapply(x_points,\n             function(x){\n               x + y <= r2\n             },\n             logical(length(y)))) * 4 + 1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289145,"user_id":null,"body":"points <- function(r) {\n  if (r==0){\n    return(1)\n  } \n  return(1+4*floor(r)+4*sum(floor(sqrt(-(1:floor(r))**2+r**2))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289146,"user_id":null,"body":"points <- function(radius) {\n  count <- 0\n  for (i in -radius:radius) {\n    ymax <- floor(sqrt(radius^2 - i^2))\n    count <- count + ymax * 2 + 1\n  }\n  return(count)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289147,"user_id":53,"body":"points <- function(r) {\n  m <- 0\n  for (i in 0:r) {\n    m <- m + floor(sqrt(r*r - i*i))\n  }\n  m * 4 + 1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289148,"user_id":null,"body":"points <- function(r) {\n  key = 0\n  for (i in 0:r) {\n    key = key + (2 * floor(sqrt(r^2 - i^2)) + 1)\n  }\n  2 * key - (2 * r + 1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289149,"user_id":null,"body":"points <- function(r) {\n  x = 0:r\n  rr = rep(r*r, length(x))\n  return( sum(floor(sqrt(rr - x*x))) * 4 + 1 )\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289150,"user_id":132,"body":"points <- function(n) {\n  if(n==0) return(1)\n  1+4*sum(as.integer((n^2-seq(0,n-1)^2)^0.5))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289151,"user_id":null,"body":"points <- function(r) {\n  if(r==0) return(1)\n  4*(sum(outer(1:r,1:r, function(x,y) x^2+y^2<=r*r))+r)+1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289152,"user_id":null,"body":"points <- function(radius) {\npyt <- function(a,b)sqrt(a^2+b^2)\ncircle <- outer(1:(radius-1),1:(radius-1),'pyt')\nifelse(radius > 1,4*sum(circle <= radius),0) + 4*radius + 1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5b853229cfde412a470000d0":[{"id":289153,"user_id":421,"body":"twice_as_old <- function(dad_years_old, son_years_old){\n    abs(dad_years_old - son_years_old * 2)\n  }","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289154,"user_id":53,"body":"twice_as_old <- function(a, b) {\n   abs(a - 2 * b)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289155,"user_id":null,"body":"twice_as_old <- function(dad_years_old, son_years_old){\n   abs(2 * son_years_old - dad_years_old)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289156,"user_id":null,"body":"twice_as_old <- function(dad_years_old, son_years_old){\n  diff <- dad_years_old-son_years_old\n  ans <- abs(diff-son_years_old)\n  ans\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289157,"user_id":null,"body":"twice_as_old <- function(dad_years_old, son_years_old){t <- son_years_old*2\n                                                       abs(dad_years_old - t)\n   \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289158,"user_id":null,"body":"twice_as_old <- function(dad_years_old, son_years_old){\n  a=dad_years_old;   \n  b= son_years_old;\n  print(abs(2*b-a))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289159,"user_id":null,"body":"twice_as_old <- function(d, s){\n  res <- 0 \n  if (d>2*s){\n    while (d != 2*s){\n      res <- res + 1 \n      d <- d-1 \n    }\n  } else if ((d<2*s)){\n        while (d != 2*s){\n      res <- res + 1 \n      d <- d+1 \n    }\n  }\n  return(res)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289160,"user_id":null,"body":"twice_as_old <- function(dad_years_old, son_years_old){\n  d <- dad_years_old\n  s <- son_years_old\n  r <- 2*s-d\n  t <- d-2*s\n  if(r>0){\n    return(r)\n  }else{\n    return(t)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289161,"user_id":null,"body":"twice_as_old <- function(dad_years_old, son_years_old){\n   if (dad_years_old==2*son_years_old){0}\n  else{ abs(dad_years_old-2*son_years_old)}\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289162,"user_id":null,"body":"twice_as_old <- function(dad_years_old, son_years_old){\n  result <- abs(dad_years_old-son_years_old*2)\n  return(result)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5bb0c58f484fcd170700063d":[{"id":289163,"user_id":149,"body":"pillars = function(n, d, w) {\n  (n - 1) * d * 100 + max(c(n - 2, 0)) * w\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289164,"user_id":null,"body":"pillars = function(num, dist, width) {\n  if(num<2) return(0)\n  (num-2)*width + dist*100*(num-1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289165,"user_id":1566,"body":"pillars = function(n, d, w) {\n  (n-1)*d*100+(n-2)*w*(n>1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289166,"user_id":null,"body":"pillars = function(num_of_pillars, distance, width) {\n  if (num_of_pillars == 1){\n    return(0)\n  } else if (num_of_pillars == 2){\n    return(distance * 100)\n  } else {\n    return((distance*(num_of_pillars-1)*100)+(width*(num_of_pillars-2)))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289167,"user_id":null,"body":"pillars = function(n, d, w) {\n    x <- ifelse(n == 1, 0, (n - 1) * (d * 100) + (w * (n - 2)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289168,"user_id":null,"body":"pillars = function(p, d, w) {\n  if(p==1){\n    return(0)\n  }else{\n    return((p-2)*w + (p-1)*d*100)\n  }\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289169,"user_id":null,"body":"pillars = function(n, distance, width) {\n  ifelse(n > 1, (n - 1) * distance * 100 + (n - 2) * width, 0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289170,"user_id":168,"body":"pillars = function(n, distance, width) {\n  (n - 1) * distance * 100 + max(0, n - 2) * width\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289171,"user_id":null,"body":"pillars <- function(num_of_pillars, distance, width){\n  if(num_of_pillars==1){\n    return(0)\n  } else{\n    return(distance*(num_of_pillars-1)*100 + width*(num_of_pillars-2))\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289172,"user_id":null,"body":"pillars = function(num_of_pillars, distance, width) {\n  library(tidyverse)\n  case_when(num_of_pillars > 1 ~ (num_of_pillars-2)*width + distance*(num_of_pillars-1)*100,\n           TRUE ~ 0)\n  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5bb804397274c772b40000ca":[{"id":289173,"user_id":421,"body":"stack_height_2d <- function(layers) {\n  ifelse(layers, (layers - 1) * 3 ^ 0.5 \/ 2 + 1, 0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289174,"user_id":null,"body":"stack_height_2d <- function(layers) {\n  ifelse(layers, 1 + (layers - 1) * 0.866025, 0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289175,"user_id":null,"body":"stack_height_2d <- function(layers) {\n  ifelse(layers > 1, (layers - 1) * cos(pi \/ 6) + 1, layers)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289176,"user_id":null,"body":"stack_height_2d <- function(layers) {\n  if (layers == 0) {\n    return(0)\n  } else {\n    return((layers - 1) * sqrt(3) \/ 2 + 1)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289177,"user_id":null,"body":"stack_height_2d <- function(layers) {\n  (layers != 0) * ((layers - 1) * sqrt(3) \/ 2 + 1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289178,"user_id":null,"body":"stack_height_2d <- function(layers) {\n  ifelse(layers > 0, layers-(0.067*(layers+layers-2)), 0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289179,"user_id":null,"body":"stack_height_2d <- function(layers) {\n  if (0 == layers) return(0)\n  n <- layers-1\n  1 + sqrt(n^2 - (n\/2)^2)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289180,"user_id":null,"body":"stack_height_2d <- function(layers) {\n  ifelse(layers == 0, 0, 1 + sqrt(3) * (layers - 1) \/ 2 %>% round(3))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289181,"user_id":null,"body":"stack_height_2d <- function(layers) {\n  if (layers == 0) return(0)\n  (layers - 1) * sqrt(3) \/ 2 + 1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289182,"user_id":null,"body":"stack_height_2d <- function(layers) {\n  if (layers == 0){\n    return( 0 )\n  }else{\n    return( (layers-1)*(3\/4)**0.5 + 1 )\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5bd776533a7e2720c40000e5":[{"id":289183,"user_id":null,"body":"pendulum <- function(values) {\n  n <- length(values)\n  if(!n) return(c())\n  \n  l <- sort(seq(from = 1, to = n, by = 2), decreasing = TRUE)\n  r <- seq(from = 2, to = n, by = 2)\n  \n  values <- sort(values)\n  \n  return(c(values[l], values[r]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289184,"user_id":null,"body":"pendulum <- function(values) {\n  # Returns the input vector arranged with larger values towards the ends\n  \n  # Sort input vector and subset into odd and even indicies\n  arr.sorted <- sort(values)\n  odds <- arr.sorted[c(TRUE, FALSE)]\n  evens <- arr.sorted[c(FALSE, TRUE)]\n  \n  # Reverse the odds vector and attach the evens one\n  odds.sorted <- sort(odds, decreasing = TRUE)\n  c(odds.sorted, evens)\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289185,"user_id":null,"body":"pendulum <- function(values) {\n  sort(values)[c(rev(seq(1,length(values),2)), seq(2,length(values),2))]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289186,"user_id":669,"body":"pendulum <- function(values) {\n  n <- length(values)\n  \n  sort(values)[c(seq(n - (n + 1) %% 2, 1, by = -2), seq(2, n, by = 2))]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289187,"user_id":null,"body":"pendulum <- function(y) {\norders <- c(1:length(y))\nevens <- orders[orders %% 2 ==0]\nodds <- sort(orders[orders %% 2 != 0], decreasing = TRUE)\npendulum_ord <- c(odds, evens)\n\nsort(y)[pendulum_ord]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289188,"user_id":null,"body":"pendulum <- function(values) {\n  pen <- c()\n  while (length(values) > 0) {\n    pen <- c(min(values), pen)\n    values <- values[-which.min(values)]\n    if (length(values) == 0) {\n      break\n    }\n    pen <- c(pen, min(values))\n    values <- values[-which.min(values)]\n  }\n  pen\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289189,"user_id":null,"body":"pendulum <- function(values) {\n  vals = sort(values, decreasing = TRUE)\n  p = integer(length(vals))\n  print(vals)\n  if(length(values)%%2 == 0){\n    j = length(vals)\n    for(i in seq(1,length(vals),2)){\n      p[j] <- vals[i]\n      j = j-1\n    }\n    j = 1\n    for(i in seq(2,length(vals),2)){\n      p[j] <- vals[i]\n      j = j+1\n    }\n  }else{\n    j = 1\n    for(i in seq(1,length(vals),2)){\n      p[j] <- vals[i]\n      j = j+1\n    }\n    j = length(vals)\n    for(i in seq(2,length(vals),2)){\n      p[j] <- vals[i]\n      j = j-1\n    }\n  }\n  p\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289190,"user_id":null,"body":"pendulum <- function(values) {\n  values <- sort(values)\n  res <- c()\n  for (i in 1:length(values)){\n    if (i%%2==0){\n      res <- c(res,values[i])\n    }else{\n      res <- c(values[i],res)\n    }\n  }\n  res\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289191,"user_id":null,"body":"pendulum <- function(values) {\n  a <- c()\n  tick <- 1\n  for (x in sort(values)){ \n    if (tick == 1) a = c(x,a) else a = c(a,x)\n    tick <- tick * -1\n  }\n  a\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289192,"user_id":null,"body":"pendulum <- function(values) {\n  values = sort(values)\n  len = length(values)\n  center = ceiling(len\/2)\n  ans = integer(len)\n  ans[center] = values[1]\n  for(i in 1:len-1){\n    if(i %% 2 == 1){\n      ans[center + i] = values[i + 1]\n      center = center + i\n    }\n    else{\n      ans[center - i] = values[i + 1]\n      center = center - i\n    }\n  }\n  ans\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5bfb0d9b392c5bf79a00015a":[{"id":289193,"user_id":null,"body":"create_octahedron <- function(n) {\n  \n  if(n < 2 || n %% 2 == 0) return(array(0, dim=c(0,0,0)))\n  \n  arr <- array(0, dim = c(n,n,n))\n  center <- rep(ceiling(n\/2), 3)\n  \n  for(i in 1:n){\n    for(j in 1:n){\n      for(k in 1:n){\n        if(sum(abs(center-c(i,j,k))) < n\/2) arr[i,j,k] <- 1\n      }\n    }\n  }\n  \n  arr\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289194,"user_id":null,"body":"create_octahedron <- function(n) {\n  if(n < 3 | n%%2==0) return(array(0, dim = c(0, 0, 0)))\n  oct <- array(0L, dim = c(n,n,n))\n  oct[n%\/%2+1,n%\/%2+1,1] <- 1\n  for(i in 1:(n%\/%2)){\n    for(j in 1:n)for(k in 1:n)if(oct[j,k,i]){\n      oct[-1:1+j,k,i+1] <- 1\n      oct[j,-1:1+k,i+1] <- 1\n    }\n    oct[,,n-i+1] <- oct[,,i]\n  }\n  oct\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289195,"user_id":669,"body":"create_octahedron <- function(n) {\n  if (n <= 1 || n %% 2 == 0) {\n    return(array(0, rep(0, 3)))\n  }\n  mat <- expand.grid(rep(list(1:n), 3)) - (n + 1) %\/% 2 # centered\n  \n  array(as.numeric(rowSums(abs(mat)) <= n %\/% 2), rep(n, 3))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289196,"user_id":null,"body":"create_octahedron <- function(n) {\n  \n  # Input must be odd and greater than 1 to continue, otherwise return empty arr\n  n <- as.integer(n)\n  if(n %% 2L == 0L) return(array(0L, dim = c(0, 0, 0)))\n  if(n <= 1L) return(array(0L, dim = c(0, 0, 0)))\n  \n  # Size empty array, find number of layers on each side of mid, find mid index\n  res <- array(0L, dim = c(n, n, n))\n  layers <- n %\/% 2L\n  mid <- layers + 1L\n  \n  # Find distances from center on center line, calculate distances for all lines\n  vec <- abs((1:n) - mid)\n  dis <- sapply(-layers:layers, function(x) vec + abs(x))\n  \n  # Loop over all layers, test if in octahedron, store at correct layer index\n  for(i in 0:(layers - 1L)) {\n    layer <- ifelse(dis <= i, 1L, 0L)\n    res[, , i + 1L] <- layer\n    res[, , n - i] <- layer\n  }\n  \n  res[, , mid] <- ifelse(dis <= layers, 1L, 0L)\n  res\n  \n}\n\n\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289197,"user_id":null,"body":"create_octahedron <- function(n) {\n  if (n %% 2 != 0 & n > 1 ) {\n    rval <- array(dim = rep(n,3))\n    C <- (1+n)\/2\n    for (l in 1:n ) {\n      rval[,,l] <- outer(1:n,1:n,function(x,y) ifelse(abs(x-C)+abs(y-C)<= C-1-abs(l-C),1,0) )\n    }\n  } else {\n    rval <- array(0,dim = rep(0,3))\n  }\n  return(rval)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289198,"user_id":null,"body":"create_octahedron <- function(n) {\n  print(n)\n  if (n <= 1 | n %% 2 == 0) return(array(0, dim=c(0, 0, 0)))\n  arr <- array(0, dim=c(n,n,n))\n  core <- (n+1)\/2\n  for (i in 1:n){\n    for (p in 1:n){\n      for (q in 1:n){\n        if (abs(p - core)+abs(q-core) <= abs(core-1-abs(i-core))) arr[p,q,i] <- 1     \n      }\n    }\n  }\n  return(arr)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289199,"user_id":149,"body":"create_octahedron <- function(n) {\n  if (max(c(n, 2)) %% 2 == 0) n = 0\n  r = array(0, dim=c(n,n,n))\n  x = y = z = ceiling(n \/ 2)\n  n = n %\/% 2\n  for (i in seq(-n, n))\n    for (j in seq(-n+abs(i), n-abs(i)))\n      for (k in seq(-n+(abs(i)+abs(j)), n-(abs(i)+abs(j))))\n        r[x+i, y+j, z+k] = 1\n  r\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5c1bb3d8e514df60b1000242":[{"id":289200,"user_id":149,"body":"artificial_rain <- function(v) {\n  r <- cur_high <- last_low <- cur_size <- 1\n  i <- 2\n  while (i <= length(v)) {\n    x <- v[i]\n    if (x < v[i-1]) {\n      last_low <- i\n    } else if (x > v[i-1]) {\n      r = max(c(r, cur_size))\n      cur_size <- i - last_low\n      cur_high <- i\n    }\n    cur_size = cur_size + 1\n    i <- i + 1\n  }\n  max(c(r, cur_size))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289201,"user_id":669,"body":"artificial_rain <- function(v) {\n  max_increase <- function(x) {\n    purrr::accumulate(c(0, diff(x) >= 0), ~.x * .y + .y)\n  }\n  max(1 + max_increase(v) + rev(max_increase(rev(v))))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289202,"user_id":null,"body":"artificial_rain <- function(v){\n  a <- 1\n  if(length(unique(v))==1){return(length(v))}\n  indices <- (1:length(v))[c(10, diff(v))>=0 & c(rev(diff(rev(v))), 10)>=0 & !(c(10, diff(v))+c(rev(diff(rev(v))), 10) == 0)] #Remove irrelelvant indices\n  for(i in indices){ #One iteration\n    count <- 1\n    if(i!=length(v) | i == 1){ #Looking right\n      index <- i\n      flow <- TRUE\n      while(flow){\n        if(v[index] < v[index+1]){break;}\n        count <- count + 1\n        index <- index + 1\n        if(index == length(v)){flow <- FALSE}\n      }\n    }\n    if(i!=1 | i == length(v)){ #Looking left\n      index <- i\n      flow <- TRUE\n      while(flow){\n        if(v[index] < v[index-1]){break;}\n        count <- count + 1\n        index <- index - 1\n        if(index == 1){flow <- FALSE}\n      }\n    }\n    a <- max(a, count)\n  }\n  return(a)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289203,"user_id":null,"body":"artificial_rain <- function(v){\n switch <- F\n start <- index <- counter <- 1L\n while(index < length(v)){\n  if(v[index] > v[index +1L]){\n    switch <- T\n    start <- index +1L\n  } \n  if(v[index] < v[index +1L] & switch){\n    index <- start\n    counter[length(counter) +1L] <- 1L\n    switch <- F\n  } else {\n    index <- index +1L\n    counter[length(counter)] <- counter[length(counter)] +1L\n  }\n }\n max(counter)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289204,"user_id":null,"body":"# neighbouring watered sections\nnws <- function(v, pos, gap=1) {\n  len <- length(v)\n  states <- integer(len)-1\n  idx <- pos\n  while(1 <= idx & idx <= len) {\n    prv <- idx - gap\n    if (prv <= 0 | len < prv) {\n      states[idx] <- 1\n    } else {\n      states[idx] <- ifelse(v[prv] <= v[idx], 1+states[prv], 1)\n    }\n    idx <- idx + gap\n  }\n  states\n}\nartificial_rain <- function(v) {\n  max(nws(v,1,1)+nws(v,length(v),-1)-1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289205,"user_id":669,"body":"artificial_rain <- function(v) {\n  if (length(v) == 1) {\n    return(1)\n  }\n  \n  longest_increase <- function(x) {\n    u <- rep(0, length(x))\n\n    for (i in 2:length(x)) {\n      if (x[i] >= x[i - 1]) {\n        u[i] <- 1 + u[i - 1]\n      } else {\n        u[i] <- 0\n      }\n    }\n    u\n  }\n  u <- longest_increase(v)\n  d <- rev(longest_increase(rev(v)))\n  \n  1 + max(u + d)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289206,"user_id":null,"body":"\n\nartificial_rain <- function(x) {\n  if (length(x) == 1) {\n    result = 1\n  } else{\n    inclBorders = TRUE\n    if (inclBorders) {\n      y <- c(min(x), x, min(x))\n    } else {\n      y <- c(x[1], x)\n    }\n    y <- data.frame(x = sign(diff(y)), i = 1:(length(y) - 1))\n    y <- y[y$x != 0,]\n    idx <- diff(y$x) < 0\n    pos = (y$i[c(idx, F)] + y$i[c(F, idx)] - 1) \/ 2\n    pos2 = unique(sort(c(y$i[c(idx, F)] , y$i[c(F, idx)] - 1)))\n    y <- c(x[1], x)\n    y <- data.frame(x = sign(diff(y)), i = 1:(length(y) - 1))\n    y <- y[y$x != 0,]\n    idx <- diff(y$x) < 0\n    pos3 = unique(sort(c(y$i[c(idx, F)] , y$i[c(F, idx)] - 1)))\n    #diff(pos2)\n    if(length(pos3)==0)\n    {\n      remove=c(1,length(x))\n      pos3= pos2 [! pos2 %in% remove]\n    }\n    if ((length(pos2) == 1) | (length(pos2) == 0))\n    {\n      result = length(x)\n    } else{\n      result = c()\n      for (j in (1:length(pos3)))\n      {\n        count = 1\n        i = pos3[j]\n        #triggerbegin= ifelse(i==1,FALSE,TRUE)\n        #triggerend=ifelse(i==length(x),F,T)\n        while (i > 1 & (x[i - 1] <= x[i]))\n          \n        {\n          count = count + 1\n          i = i - 1\n          if (i == 1)\n            break\n        }\n        i = pos3[j]\n        while (i < length(x) & (x[i + 1] <= x[i]))\n        {\n          count = count + 1\n          i = i + 1\n        }\n        \n        result[j] = count\n      }\n      \n    }\n  }\n  return(max(result))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289207,"user_id":null,"body":"artificial_rain <- function(a) {\n\n  a <- as.integer(a)\n  n <- length(a)\n  diff_a <- diff(a)\n  \n  stp_tst_left <- c(TRUE, -diff_a > 0L)\n  stp_ind_left <- which(stp_tst_left)\n  left_lengths <- diff(c(stp_ind_left, n + 1L))\n  fill_left <- unlist(lapply(left_lengths, function(x) 1:x))\n  \n  stp_tst_right <- c(diff_a > 0L, TRUE)\n  stp_ind_right <- which(stp_tst_right)\n  right_lengths <- diff(c(0, stp_ind_right))\n  fill_right <- unlist(lapply(right_lengths, function(x) x:1))\n  \n  max(fill_left + fill_right - 1L)\n  \n}\n\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289208,"user_id":null,"body":"artificial_rain <- function(v) {\n  #diff_elevation = diff(v)\n  #want longest stretch of +ve diff followed by -ve diff\n  ascending_run = 1\n  descending_run = 1\n  best_run = 1\n  if(length(v) == 1){return(1)}\n  for(i in 1:(length(v) - 1)){\n    if(v[i+1] < v[i]){\n      #ascending run ends\n      best_run = max(best_run, ascending_run)\n      descending_run = max(descending_run + 1,ascending_run + 1)\n      ascending_run = 1\n    } else if(v[i + 1] > v[i]){\n      #descending run ends\n      best_run = max(best_run, descending_run)\n      ascending_run = ascending_run + 1\n      descending_run = 1\n    } else {\n      ascending_run = ascending_run + 1\n      descending_run = descending_run + 1\n    }\n  }\n  return(max(best_run, descending_run, ascending_run))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289209,"user_id":null,"body":"flowdown <- function(v) {\n  d <- diff(v)\n  z <- which(d > 0)\n  ifelse(length(z) == 0,return(length(v)),return(which(d>0)[1]))\n}\n\npeaks <- function(v) {\n  d <- diff(c(0,v,0))\n  r <- sapply(seq_along(d), function(l) ifelse((d[l]>=0 & d[l+1] < 0) | (d[l] > 0 & d[l+1] <= 0), return(l),return(0)))\n  return(r[r > 0])\n}\n\nartificial_rain <- function(v) {\n  pidx <- peaks(v)\n  r <- sapply(pidx, function(k) return(flowdown(rev(v[1:k])) + flowdown(v[k:length(v)]) - 1))\n  return(max(r))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5cb05eee03c3ff002153d4ef":[{"id":289210,"user_id":null,"body":"get_section_id <- function(a, sizes) {\n  # your code here\n  ifelse(a >= sum(sizes),-1, findInterval(a,cumsum(sizes)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289211,"user_id":null,"body":"get_section_id <- function(scroll_y, sizes) {\n  index <- which(scroll_y <= (cumsum(sizes)-1))[1] - 1\n  ifelse(is.na(index), -1, index)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289212,"user_id":null,"body":"get_section_id <- function(s, l) {\n  l_save <- l\n  for (i in (1:length(l))){\n    l[i] <- sum(l_save[1:i])\n  }\n  if (any(s<l)){\n    \n  \n  return(min(which((s<l)))-1)\n  } else {\n    return(-1)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289213,"user_id":null,"body":"get_section_id <- function(scroll_y, sizes) {\n  sizes<-cumsum(sizes)\n  n <- length(sizes)\n  position <- 0\n  if (scroll_y>=sizes[n]) position <- -1\n  else{\n  for(i in 1:n){\n    if(scroll_y>=sizes[i]) position<-i\n  }\n    \n  }\n  return(position)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289214,"user_id":645,"body":"get_section_id <- function(n, a) {\n  res <- -1\n  for (i in 1:length(a)) {\n    if (a[i] > n) {\n      res <- i - 1\n      break\n    }\n    n <- n - a[i]\n  }\n  res\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5ce399e0047a45001c853c2b":[{"id":289215,"user_id":null,"body":"parts_sum <- function(v) {\n#calculate cumulative from reversed vector and reverse to original form, then add 0 at end\nc(rev(cumsum(rev(v))), 0)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289216,"user_id":null,"body":"parts_sum <- function(v)  c(v, 0) + sum(v) - cumsum(c(v, 0))","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289217,"user_id":null,"body":"#' Calculates sums of vector by leaving out\n#' the first element (reverse of cumsum).\n#'\n#' @param vec double; vector\n#' A numeric vector.\n#'\n#' @return double; vector\n#' A decreasing sums of numbers of input vector.\n#' @export\n#'\n#' @examples\nparts_sum <- function(vec) {\n  if (length(vec) == 0) {\n    return(0)\n  }\n\n  res = rev(cumsum(rev(vec)))\n  res = c(res, 0)\n\n  return(res)\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289218,"user_id":null,"body":"parts_sum <- function(v) {\n  if (length(v) == 0) return(0)\n  c(rev(cumsum(rev(v))),0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289219,"user_id":null,"body":"parts_sum <- function(v) {\n  append(rev(cumsum(rev(v))), 0)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289220,"user_id":null,"body":"parts_sum <- function(v){\n  \n  r <- cumsum(rev(v))\n  r <- c(rev(r), 0)\n  return(r)\n\n  }\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289221,"user_id":null,"body":"parts_sum <- function(v) {\n  if(length(v) == 0) {\n    return(0)\n  }\n  # cumsum already calculates cumulative sums.  This requires doing that from the end\n  # so we start by reversing the vector, calculating cumulative sums, then reversing\n  # the result\n  u = rev(v)\n  rev(c(0, cumsum(u)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289222,"user_id":null,"body":"parts_sum <- function(v){ \n  rev(cumsum(rev(c(v,0))))\n}\n","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289223,"user_id":null,"body":"parts_sum <- function(v){\n  return(sum(v)-c(0,cumsum(v)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289224,"user_id":669,"body":"parts_sum <- function(v) rev(cumsum(c(0, rev(v))))","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5ce9c1000bab0b001134f5af":[{"id":289225,"user_id":null,"body":"quarter_of <- function(month){\n   return(ceiling(month\/3))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289226,"user_id":null,"body":"quarter_of <- function(month){\n  as.integer((month + 2) \/ 3)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289227,"user_id":null,"body":"quarter_of <- function(month){\n  if (1 <= month && month <= 3) {\n    return (1)\n  } else if (4 <= month && month <= 6) {\n    return (2)\n  } else if (7 <= month && month <= 9) {\n    return (3)\n  } else if ( 10 <= month && month <= 12) {\n    return (4)\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289228,"user_id":null,"body":"quarter_of <- function(month)\n{\n  if (month>=1 && month<=3) return (1)\n  else if (month>=4 && month<=6) return (2)\n  else if (month>=7 && month<=9) return (3)\n  else if (month>=10 && month<=12) return (4)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289229,"user_id":null,"body":"quarter_of <- function(month){\n  print(month)\n  if (month %in% 1:3){1}\n  else if (month %in% 4:6){2}\n  else if (month %in% 7:9){3}\n  else if (month %in% 10:12){4}\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289230,"user_id":null,"body":"quarter_of <- function(month){\n   ifelse(month <= 3, 1, \n         ifelse(month <= 6, 2, \n               ifelse(month <= 9, 3, \n                     ifelse(month <= 12, 4, 0))))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289231,"user_id":null,"body":"quarter_of <- function(month){\n  q <- c(3,6,9)\n  if(all(q < month)){\n    return (4)  \n  }    \n  else{\n    for(x in q){\n      if(month <= x)\n        return(x%\/%3)\n    }\n  }    \n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289232,"user_id":null,"body":"quarter_of=function(month){return(rep(1:4,each=3)[month])}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289233,"user_id":null,"body":"quarter_of <- function(month){\n  quarter <- if(month<4){1}\n  else {if(month>3 & month<7){2}\n  else {if(month>6 & month<10){3}\n  else{if(month>9 & month<13){4}}}}\n   return(quarter)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289234,"user_id":null,"body":"quarter_of <- function(month){\n   if (month%%3!=0){\n     res <- month%\/%3+1\n   }\n  else {res <- month\/3}\n  res\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5d376cdc9bcee7001fcb84c0":[{"id":289235,"user_id":null,"body":"odd_ones_out <- function(numbers){\n  t <- table(numbers)\n  even <- t[t%%2==0]\n  numbers[numbers %in% names(even)]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289236,"user_id":null,"body":"odd_ones_out <- function(numbers){\n  odds <- as.numeric(names(which(table(numbers) %% 2 == 0)))\n  numbers[numbers %in% odds]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289237,"user_id":null,"body":"odd_ones_out <- function(numbers){\n  numbers[sapply(numbers, function(x) sum(numbers == x) %% 2 == 0)]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289238,"user_id":null,"body":"odd_ones_out <- function(a){\n  c<-c()\n  l1 <- sapply(unique(a), function(x) a[x == a])\n  for (i in l1) {\n    if(length(i)%%2 == 0){\n      c<-c(c,i)\n    }\n  }\n  return(a[a %in% c])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289239,"user_id":null,"body":"require(dplyr)\nrequire(tidyr)\n\nodd_ones_out <- function(numbers){\n  data.frame(v = numbers) %>% group_by(v) %>% mutate(n = n())  %>% ungroup()  %>% filter(n %% 2 == 0) %>% pull(v)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289240,"user_id":null,"body":"odd_ones_out <- function(numbers) {\n  numbers[tabulate(numbers)[numbers] %% 2 == 0]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289241,"user_id":null,"body":"odd_ones_out <- function(numbers){\n  numbers[numbers %in% as.integer(names(which(table(numbers) %% 2 == 0)))]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289242,"user_id":null,"body":"odd_ones_out <- function(numbers){\n  num = NULL\n  for (i in unique(numbers)){\n    if(length(which(numbers == i)) %% 2 == 0) num = c(num, i)\n  }\n  numbers[numbers %in% num]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289243,"user_id":421,"body":"odd_ones_out <- function(numbers){\n  Filter(function(x){sum(numbers == x) %% 2 == 0}, numbers)  \n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289244,"user_id":null,"body":"odd_ones_out <- function(c){\n  b <- table(c)\n  odds<-as.numeric(names(which(b%%2!=0)))\n  c[!c %in% as.numeric(names(which(b%%2!=0)))]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5d50e3914861a500121e1958":[{"id":289245,"user_id":null,"body":"add_letters <- function(input) {\n  i <- sum(match(input,letters)) %% 26\n  if (length(input)==0 | i == 0) {'z'}\n  else{letters[i]}\n}","lang_id":43,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289246,"user_id":null,"body":"add_letters <- function(x) {\n  letters[sum(as.integer(factor(x, levels = letters)), -1) %% 26 + 1]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289247,"user_id":null,"body":"library(dplyr)\n\nindexer <- function(input) {\n    output <- vector()\n    for (i in input){\n        output <- append(output, c(which(base::letters == i)))\n    }\n    return (output)\n}\n\naccount_for_overflow <- function(number) {\n    ifelse(number > 26,\n           ifelse(number %% 26 == 0, 26, number %% 26),\n                  number)\n}\n\nadd_letters <- function(input) {\n    # check for emptiness\n    if (length(input) == 0) {\n        return ('z')\n    }\n    \n    # main business logic\n    final_index <- input %>%   # take the input...\n        indexer %>%            # get a list of corresponding indices\n        sum %>%                # sum the index values\n        account_for_overflow   # modulo if number spills over 26\n    \n    return (base::letters[final_index])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289248,"user_id":null,"body":"add_letters <- function(arr) {\n  if (length(arr) == 0){\n    return(\"z\")\n  }\n  res <- 0\n  l <- letters\n  arr <- match(arr, l)\n  print(arr)\n  res <- sum(arr)\n  if (res < 27){\n    return(l[res])\n  } else {\n        res <- res %% 26\n    if (res == 0){\n      return(\"z\")\n    }\n  print(res)\n  return(l[res])\n  }\n  \n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289249,"user_id":null,"body":"add_letters <- function(letters) {\n  if ((is.null(letters)) || !(intToUtf8(sum(sapply(letters, utf8ToInt)%%96) %% 26 + 96) %in% tolower(LETTERS)) ) {\n    \"z\"\n  } else {\n    intToUtf8(sum(sapply(letters, utf8ToInt)%%96) %% 26 + 96)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289250,"user_id":null,"body":"add_letters <- function(array) {\n  if (length(array)==0) return(\"z\")\n  a <- c()\n  for (i in array){\n    a <- c(a, (1:26)[i==letters[1:26]])\n  }\n  a <- sum(a)\n  if(a %% 26 == 0) return(\"z\")\n  return(letters[a %% 26])\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289251,"user_id":null,"body":"add_letters <- function(letter) {\n  if (length(letter)==0) 'z'\n  else {s <- c()\n  n <-0\n  for (i in 1:length(letter)){\n    s[i] <- which(letters==tolower(letter[i]))\n    n <- n + s[i]\n    if(n <= 26) out <- letters[n]\n    else out <- letters[n-floor(n\/26)*26]\n    }\n    print(out)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289252,"user_id":null,"body":"add_letters <- function(ch) {\n  total <- sum(match(ch, letters))\n  ifelse(total %% 26 == 0, return(\"z\"), return(letters[total %% 26]))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289253,"user_id":null,"body":"add_letters <- function(c){\n  if(length(c)>=2){\n    num <- c()\n    for(i in 1:length(c)){\n      num[i] <- which(letters==c[i])\n      mod <- sum(num)%%26\n      output <- letters[mod]\n    }\n    return(output)\n  }\n  if(length(c)==1){\n    return(c)\n  }\n  if(length(c)==0){\n    return(\"z\")\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289254,"user_id":null,"body":"add_letters <- function(s) {\n  n <- sum(match(s, letters)) %% 26\n  n <- ifelse(0 == n, 26, n)\n  intToUtf8(utf8ToInt('a') - 1 + n)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5efae11e2d12df00331f91a6":[{"id":289255,"user_id":null,"body":"crack <- function(hash) {\n  pins <- sprintf(\"%05d\", seq.int(0L, 99999L))\n  rt <- openssl::md5(pins)\n  pins[rt == hash]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289256,"user_id":669,"body":"pins <- sprintf(\"%05d\", 0:99999)\nmd5s <- openssl::md5(pins)\n\ncrack <- function(hash) pins[md5s == hash][1]","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289257,"user_id":null,"body":"crack <- function(hash) {\n  # C0d3 g03s h3r3\n  v <- sprintf(\"%05d\", 0:99999)\n  v[openssl::md5(v)==hash]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289258,"user_id":null,"body":"crack <- function(hash) {\n  library(digest)\n  for (i in 0:99999) {\n    pin <- paste0(paste(rep(0, times = 5-nchar(i)), collapse = \"\"), i)\n    encoded <- digest(pin, algo = \"md5\", serialize = FALSE)\n    if (encoded == hash)\n      return(pin)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289259,"user_id":null,"body":"library(openssl)\n\nx <- sprintf(\"%05d\",c(0:99999))\nhmd5 <- md5(x)\n\ncrack <- function(hash) {\n  x[hmd5 == hash]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289260,"user_id":null,"body":"library(openssl)\n\ncrack <- function(hash) {\n  for (i in 0:9){\n    for (j in 0:9){\n      for (k in 0:9){\n        for (m in 0:9){\n          for (n in 0:9){\n            s=paste(c(i,j,k,m,n), collapse='')\n            if (md5(s)==hash){\n              return(s)\n            }\n          }\n        }\n      }\n    }\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289261,"user_id":null,"body":"library(\"openssl\")\nlibrary(stringr)\n\ncrack <- function(hash) {\n  # C0d3 g03s h3r3\n  key <- data.frame(nums = str_pad(1:99999, 5, pad = \"0\"), hashes = rep(0, 99999))\n  key[,2] <- md5(as.character(key$nums))\n  \n  result <- key$nums[which(hash == key$hashes)]\n  \n  return(as.character(result));\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289262,"user_id":null,"body":"crack <- function(hash) {\n  df <- data.frame(pin=as.character(0:99999))\n  df$pin <- paste0(c(rep(\"0000\", 10),\n                   rep(\"000\", 90),\n                   rep(\"00\", 900),\n                   rep(\"0\", 9000),\n                   rep(\"\", 90000)), df$pin)\n  df$pin_hash <- as.character(openssl::md5(df$pin))\n  df[df$pin_hash==hash, \"pin\"]\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289263,"user_id":null,"body":"library(digest)\ncrack <- function(hash) {\n  for(i in 0:99999){\n    pin<-formatC(i, width = 5, format = \"d\", flag = \"0\");\n    if(digest(pin, algo=\"md5\", serialize=F)==hash){\n    return(pin);}\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289264,"user_id":76,"body":"library(digest)\n\ncrack <- function(hash) {\n  for (i in 0:99999) {\n    pin <- sprintf(\"%05d\", i)\n    if (hash == digest(pin, \"md5\", serialize = FALSE))\n      return(pin)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5f0ed36164f2bc00283aed07":[{"id":289265,"user_id":421,"body":"over_the_road <- function(address, n){\n  n * 2 - address + 1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289266,"user_id":527,"body":"over_the_road <- function(address, n) 2 * n + 1 - address","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289267,"user_id":572,"body":"over_the_road <- function(address, n){\n  2*n-address+1\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289268,"user_id":null,"body":"over_the_road <- function(address, n){\n  return((n*2 + 1) - address)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289269,"user_id":null,"body":"over_the_road <- function(address, n){\n  return(2*n + 1 - address)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289270,"user_id":null,"body":"over_the_road <- function(address, n){\n  n * 2 + 1 - address\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289271,"user_id":50,"body":"over_the_road <- function(add, n){\n      1-add+2*n\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289272,"user_id":null,"body":"over_the_road <- function(address, n){\n  answer <- 0\n  \n  odd <- TRUE\n  if(address%%2 == 0){\n    odd <- FALSE\n  }\n  \n  if(odd){\n    index <- ((address-1)\/2)+1\n    answer <- (n*2)-((index-1)*2)\n    return(answer)\n  }else{\n    index <- (((n*2)-address)\/2)+1\n    answer <- ((index-1)*2)+1\n    return(answer)\n  }\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289273,"user_id":null,"body":"over_the_road <- function(address, n){\n  if (address %% 2 == 0){\n    loc<-address\/2 #the location from start\n    2*n-(2*loc-1) \n  } else{\n    loc<-n-address\/2+1\/2\n    2*loc\n    }\n   }","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289274,"user_id":null,"body":"over_the_road <- function(a, n){\n  over_the_road <- (((n*2)+1)- a)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"5f70c883e10f9e0001c89673":[{"id":289275,"user_id":53,"body":"flip <- function(d, a){\n  sort(a, decreasing=d==\"L\")\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289276,"user_id":null,"body":"flip <- function(d, a){\n  a[order(ifelse(d==\"R\",1,-1)*a)]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289277,"user_id":null,"body":"flip <- function(d, a){\n  ifelse(d==\"R\",return (sort(a)),return (sort(a,decreasing=T)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289278,"user_id":null,"body":"flip <- function(d, a){\n  ifelse(d == 'L', return(sort(a, decreasing = TRUE)), return(sort(a, decreasing = FALSE)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289279,"user_id":null,"body":"flip <- function(d, a){\n  ifelse(d == \"R\", return(sort(a)), return(sort(a, decreasing = TRUE)))\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289280,"user_id":null,"body":"flip <- function(d, a){\n  if (d == \"L\"){\n    return(sort(a, decreasing = TRUE))\n  } else {\n    return(sort(a, decreasing = FALSE))\n  }\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289281,"user_id":null,"body":"flip <- function(d, a) { \n  if (d == \"L\") {\n    a = sort(a, decreasing = TRUE) \n  } else{\n    a = sort(a, decreasing = FALSE) \n  }\n  return(a)\n}\n\n","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289282,"user_id":null,"body":"flip <- function(d, a){\n\nm <- length(a)\nn <- max(a)\nbox <- matrix(ncol=m, nrow=n)\nfor (i in c(1:m)) {\nFILL <- c(rep(0, each=n-a[i]), rep(1, each=a[i]))\nbox[,i] <- FILL\n}\n\nif (d==\"R\") {\n\n  for (j in c(1:n)) {\n      s <- sum(box[j,])\n      FILL <- c(rep(0, each=m-s), rep(1, each=s))\n      box[j,] <- FILL\n  }\n  result <- c()\n  for (i in c(1:m)) {\n      result <- c(result,sum(box[,i]))\n  }\n    \n  }\n  \n  if (d=='L'){\n  \n  for (j in c(1:n)) {\n    s <- sum(box[j,])\n    FILL <- c(rep(1, each=s), rep(0, each=m-s))\n    box[j,] <- FILL\n  }\n  result <- c()\n  for (i in c(1:m)) {\n    result <- c(result,sum(box[,i]))\n  }\n  \n}\n\nreturn(result)\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289283,"user_id":null,"body":"flip <- function(d, a){\n  a[order(a, decreasing = (d == \"L\"))]\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289284,"user_id":null,"body":"flip <- function(d, a){\n  if (d == \"R\") {sort(a, decreasing=FALSE,)}\n  else {sort(a, decreasing=TRUE,)}\n}","lang_id":43,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"6129095b201d6b000e5a33f0":[{"id":289285,"user_id":null,"body":"f <- function(x, y, z){\n  v <- c(x,y,z)+1\n  3*prod(v) - sum(combn(v,2,prod))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289286,"user_id":50,"body":"f <- function(x, y, z){\n  z*(3*x*y+1+2*(x+y))+2*x*y+x+y\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289287,"user_id":null,"body":"f <- function(x, y, z){\n    return(3*x*y*z + 2*(x*y + x*z + y*z) + x + y + z)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289288,"user_id":null,"body":"f <- function(x, y, z) {\n  3*x*y*z + 2*(x*y + y*z + x*z) + x + y + z\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289289,"user_id":53,"body":"f <- function(x, y, z){\n  (x * (y + 1) + y * (x + 1)) * (z + 1) + z * (x + 1) * (y + 1)\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289290,"user_id":527,"body":"f <- function(x, y, z) x * (y + 1) * (z + 1) + y * (z + 1) * (x + 1) + z * (x + 1) * (y + 1)","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289291,"user_id":421,"body":"f <- function(x, y, z){\n  x * (y + 1) * (z + 1) + (x + 1) * y * (z + 1) + (x + 1) * (y + 1) * z\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}],"6146a6f1b117f50007d44460":[{"id":289292,"user_id":111,"body":"delta <- function(seq) {-diff(seq)}\n\ndual_seq <- function (seq) {if(length(seq)==1) seq else c(seq[1],dual_seq(delta(seq)))}\n\nextra_pol <- function (seq,n) {dual_seq(c(dual_seq(seq),rep(0,n)))}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289293,"user_id":null,"body":"delta <- function(v) {-diff(v)} #should return the sequence of differences of the successive terms in seq (vector)\n\ndual_seq <- function (v) {\n  sapply(\n  seq_along(v),\n  function(k) {\n    sum(head(v, k) * choose(k - 1, seq(k) - 1) * (-1)^(seq(k) - 1))\n  }\n)\n} #should return the Binomial Transform of seq\n\nextra_pol <- function (v,n) {dual_seq(c(dual_seq(v),rep(0,n)))} #should return the sequence seq, completed by the n next terms, with respect to the best possible polynomial approximation","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"},{"id":289294,"user_id":53,"body":"delta <- function(seq) {\n  res = c()\n  for (i in seq_along(seq)) {\n    if (i > 0) {\n      res <- c(res, seq[i-1] - seq[i])\n    }\n  }\n  res\n}\n\ndual_seq <- function (seq) {\n  res = c()\n  ys <- seq\n  sz <- length(seq)\n  for (i in 1:sz) {\n    res <- c(res, ys[1])\n    ys <- delta(ys)\n  }\n  res\n}\n\nextra_pol <- function (seq, n) {\n  dual_seq(c(dual_seq(seq), rep(0, n)))\n}","lang_id":43,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-30 18:39:38","updated_at":"2022-12-30 18:39:38"}]}