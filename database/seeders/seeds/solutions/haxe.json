{"50654ddff44f800200000004":[{"id":111130,"user_id":645,"body":"class Kata {\n  public static function multiply(a: Int, b: Int): Int {\n    return a * b;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111131,"user_id":2545,"body":"class Kata {\n  public static function multiply(a:Float, b:Float):Float {\n    return a * b;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111132,"user_id":null,"body":"class Kata {\n  public static function multiply(a, b) {\n    return a * b;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111133,"user_id":53,"body":"class Kata {\n  public static function multiply(a: Int, b: Int) {\n    return Std.int(a * b);\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111134,"user_id":null,"body":"class Kata {\n\n  \n   public static function multiply(i:Int, s:Int):Int {\n    return i * s;\n  }\n  \n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111135,"user_id":713,"body":"class Kata {\n  static public function multiply(a: Int, b: Int): Int {\n    return a * b;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111136,"user_id":20,"body":"class Kata {\n  public static function multiply(a: Int, b: Int) {\n    return a * b;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"53da3dbb4a5168369a0000fe":[{"id":111137,"user_id":527,"body":"class Kata {\n  public static function even_or_odd(number:Int):String {\n    return number % 2 == 0 ? \"Even\" : \"Odd\";\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111138,"user_id":null,"body":"class Kata {\n  public static function even_or_odd(number:Int):String {\n    \/\/ Your code here. Good luck.\n    if (number % 2 == 0) return \"Even\";\n    return \"Odd\";\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111139,"user_id":null,"body":"class Kata {\n  public static function even_or_odd(number:Int):String {\n    if (number%2==0)\n      { \n        return \"Even\";\n      }\n    else\n      {\n        return \"Odd\";\n      }\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111140,"user_id":53,"body":"class Kata {\n  public static function even_or_odd(number:Int):String {\n    return (number & 1) == 0 ? \"Even\" : \"Odd\";\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111141,"user_id":null,"body":"class Kata {\n  public static function even_or_odd(number:Int):String {\n    if (number % 2 == 0) {\n      return \"Even\";\n    }\n    return \"Odd\";\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"54d496788776e49e6b00052f":[{"id":111142,"user_id":492,"body":"class Kata {\n  \n  private static inline function abss(x: Int): Int {\n      if (x >= 0)\n          return x;\n      return -x;\n  }\n  private static inline function maxx(x: Int, y: Int): Int {\n      if (x >= y)\n          return x;\n      return y;\n  }\n  \n  public static function sum_of_divided(lst: Array<Int>): Array<Array<Int>>  {\n      var rem: Array<Int> = new Array();\n      var max: Int = 0;\n      var result = new Array();\n      for (i in 0...lst.length) {\n          rem.push(abss(lst[i]));\n          max = maxx(max, abss(lst[i]));\n      }\n      for (fac in 2... max + 1) {\n          var isFactor: Bool = false;\n          var tot = 0;\n          for (i in 0...lst.length) {\n              if (rem[i] % fac == 0) {\n                  isFactor = true;\n                  tot += lst[i];\n                  while (rem[i] % fac == 0) {\n                      rem[i] = Std.int(rem[i] \/ fac);\n                  }\n              }\n          }\n          if (isFactor) {\n              result.push([fac,tot]);\n          }\n      }\n      return result;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111143,"user_id":53,"body":"class Kata {\n  public static function sum_of_divided(lst: Array<Int>): String  {\n    var n = 10000;\n    var primes: Array<Int> = new Array();\n    var sieve: haxe.ds.Vector<Int> = new haxe.ds.Vector(n);\n    for (i in 2...n) {\n      if (sieve[i] == 1) continue;\n      primes.push(i);\n      var k = i * i;\n      while (k < n) {\n        sieve[k] = 1;\n        k += i;\n      }\n    }\n    var s = \"\";\n    for (i in 0...primes.length) {\n      var added = false;\n      var m = 0;\n      for (k in 0...lst.length) {\n        if (lst[k] % primes[i] == 0) {\n          added = true;\n          m +=lst[k];\n        }\n      }\n      if (added) {\n        s += \"(\" + primes[i] + \" \" + m + \")\";\n      }\n    }\n    return s;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111144,"user_id":null,"body":"class Kata {\n  static function isPrime(n: Int): Bool {\n    for (x in 2...Math.floor(Math.sqrt(n))+1){\n      if(n%x == 0) return false;\n    }\n    return true;\n  }\n  static function getPrimes(set: Array<Int>): Array<Int> {\n    var primeList: Array<Int> = [];\n      for (item in set){\n        for (x in 2...Std.int(Math.abs(item))+1){\n        if(item % x == 0 && isPrime(x) && primeList.indexOf(x) == -1) primeList.push(x);\n      }\n    }\n    primeList.sort(Reflect.compare);\n    return primeList;\n  }\n  public static function sum_of_divided(lst: Array<Int>): String  {\n    var thing = \"\";\n    for (x in getPrimes(lst)){\n      var num = 0;\n      for (y in lst){\n        if(y % x == 0) num += y;\n      }\n      thing += '($x $num)';\n    }\n    return thing;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111145,"user_id":null,"body":"import haxe.Timer;\nusing Std;\nusing Math;\nclass Kata {\n public static function is_prime(v:Int) {\n    v=v.abs().int();\n\t\tif (v == 2 || v == 3 || v == 5)\n\t\t\treturn true;\n\t\tif (v % 2 == 0 || v % 3 == 0 || v % 5 == 0)\n\t\t\treturn false;\n\t\tvar k = 1;\n\t\tvar i1 = 6 * k - 1;\n\t\tvar i2 = 6 * k + 1;\n\t\twhile (i1 * i1 <= v) {\n\t\t\tif (v % i1 == 0 || v % i2 == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tk++;\n\t\t\ti1 = 6 * k - 1;\n\t\t\ti2 = 6 * k + 1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic static function get_prime_factor(v:Int) {\n    v=v.abs().int();\n\t\tif (v == 2 || v % 2 == 0)\n\t\t\treturn 2;\n\t\tif (v == 3 || v % 3 == 0)\n\t\t\treturn 3;\n\t\tif (v == 5 || v % 5 == 0)\n\t\t\treturn 5;\n\t\tvar k = 1;\n\t\tvar i1 = 6 * k - 1;\n\t\tvar i2 = 6 * k + 1;\n\t\twhile (i1 * i1 <= v) {\n\t\t\tif (v % i1 == 0) {\n\t\t\t\tif (is_prime(i1))\n\t\t\t\t\treturn i1;\n\t\t\t}\n\t\t\tif (v % i2 == 0) {\n\t\t\t\tif (is_prime(i2))\n\t\t\t\t\treturn i2;\n\t\t\t}\n\t\t\tk++;\n\t\t\ti1 = 6 * k - 1;\n\t\t\ti2 = 6 * k + 1;\n\t\t}\n\t\treturn v;\n\t}\n  \n\tpublic static function get_factors_nums(v:Array<Int>) {\n\t\tfinal fac_nums = new Map<Int, Map<{v:Int},Null<Int>>>();\n\t\tfor (n in v) {\n\t\t\tvar t:Float = n;\n\t\t\tfinal nv = {v:n};\n\t\t\twhile (!is_prime(Std.int(t))) {\n\t\t\t\tvar pf = get_prime_factor(Std.int(t));\n\t\t\t\tt \/= pf;\n\t\t\t\tif (fac_nums[pf] == null)\n\t\t\t\t\tfac_nums[pf] = [nv=>null];\n\t\t\t\telse\n\t\t\t\t\tfac_nums[pf][nv]=null;\n\t\t\t}\n\t\t\tif (fac_nums[t.abs().int()] == null)\n\t\t\t\tfac_nums[t.abs().int()] = [nv=>null];\n\t\t\telse\n\t\t\t\tfac_nums[t.abs().int()][nv]=null;\n\t\t}\n\t\treturn fac_nums;\n\t}\n\n  public static function sum_of_divided(lst: Array<Int>): String  {\n      final o = get_factors_nums(lst);\n\t\t\tfinal a = [for(k=>v in o){k:k,v:v}];\n\t\t\ta.sort((a, b) -> a.k - b.k);\n\t\t\tfinal out = new StringBuf();\n\t\t\tfor(n in a){\n\t\t\t\tvar s=0;\n\t\t\t\tfor(k=>v in n.v){\n\t\t\t\t\ts+=k.v;\n\t\t\t\t}\n\t\t\t\tout.add(\"(\"+n.k+\" \"+s+\")\");\n\t\t\t}\n      return out.toString();\n  }\n}","lang_id":24,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"54d512e62a5e54c96200019e":[{"id":111146,"user_id":492,"body":"class PrimeDecomp {\n\n  public static function prime_factors(n: Int):String {\n    var res = \"\";\n    var lim = Std.int(Math.sqrt(n)) + 1;\n    var seq = [2].concat([for(i in 1...lim) 2 * i + 1]);\n    for (factor in seq) {\n        var cnt = 0;\n        while (n % factor == 0) {\n            n = Std.int(n \/ factor);\n            cnt++;\n        }\n        if (cnt > 0) {\n            res += \"(\" + factor + (cnt > 1 ? \"**\" + cnt : \"\") + \")\";\n            cnt = 0;\n        }\n    }\n    if (n > 1) res += (\"(\" + n + \")\");\n    return res;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111147,"user_id":53,"body":"class PrimeDecomp {\n  public static function prime_factors(n: Int) :String {\n    var fs = \"\";\n    var i = 2;\n    while (i <= n) {\n      var cnt = 0;\n      while (n % i == 0) {\n        cnt++;\n        n = Std.int(n \/ i);\n      }\n      if (cnt > 1) {\n        fs += '(${i}**${cnt})';\n      } else if (cnt == 1) {\n        fs += '(${i})';\n      }\n      i++;\n    }\n    return fs.length > 0 ? fs : '(${n}})';\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"54db15b003e88a6a480000b9":[{"id":111148,"user_id":53,"body":"class ModSystem { \n  public static function fromNb2Str(n: Int, sys: Array<Int>): String {\n    var prd = 1;\n    var lcm = 1;\n    var res = \"\";\n    for (e in sys) {\n      prd *= e;\n      lcm = Std.int((lcm * e) \/ gcd(lcm, e));\n      res += '-${n % e}-';\n    }\n    return prd < n || lcm != prd ? \"Not applicable\" : res;\n  }\n  private static function gcd(a: Int, b: Int): Int {\n    return b == 0 ? a : gcd(b, a % b);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111149,"user_id":492,"body":"class ModSystem { \n  private static inline function coprime(a: Int, b: Int): Bool  {\n     if (b == 0) {\n       return a == 1; \n    } else {\n      return coprime(b, a % b);  \n    }\n  }\n  \n  public static function fromNb2Str(n: Int, sys: Array<Int>): String {\n    var p = 1;\n    for (v in sys) {\n        p *= v;\n    }\n    if (p <= n) {\n        return \"Not applicable\";\n    }\n    for(i in 0... sys.length) {\n       for (j in i+1... sys.length) {\n         if (!coprime(sys[i],sys[j]) ) {\n             return \"Not applicable\";\n        }\n      }\n    }\n    var res = \"\";\n    for(i in 0... sys.length) {\n        res = res + \"-\" + n % sys[i] + \"-\";\n    }\n    return res;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111150,"user_id":null,"body":"class ModSystem { \n  \n  public static function fromNb2Str(n: Int, sys: Array<Int>): String {\n    var num_even = 0;\n    for (item in sys){\n      if(item%2 == 0) num_even++;\n    }\n    var mult_total = 1;\n    for (x in sys) mult_total *= x;\n    if(num_even > 1 || mult_total < n) return \"Not applicable\";\n    else {\n      var rstring = \"-\";\n      for (t in 0...sys.length) sys[t] = n%sys[t];\n      rstring += sys.join(\"--\");\n      rstring += \"-\";\n      return rstring;\n    }\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"550498447451fbbd7600041c":[{"id":111151,"user_id":null,"body":"class AreSame {\n  \n  public static function comp_same(a: Array<Int>, b: Array<Int>): Bool {\n    if(a == null || b == null || a.length != b.length) return false;\n    a.sort((x,y) -> Std.int(Math.abs(x)) - Std.int(Math.abs(y)));\n    b.sort(Reflect.compare);\n    for (x in 0...a.length){\n      if(b[x] != a[x]*a[x]) return false;\n    }\n    return true;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111152,"user_id":76,"body":"class AreSame {\n  public static function comp_same(a: Array<Int>, b: Array<Int>): Bool {\n    if (a == null || b == null || a.length != b.length) \n      return false;\n    a = a.map(n -> n * n);\n    a.sort((a, b) -> a - b);\n    b.sort((a, b) -> a - b);\n    for (i in 0...a.length) \n      if (a[i] != b[i]) \n        return false;\n    return true;    \n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111153,"user_id":null,"body":"class AreSame {\n  \n  public static function comp_same(a: Array<Int>, b: Array<Int>): Bool {\n    if(a == null || b == null || a.length != b.length){\n      return false;\n    }\n    \n    var bCopy = b.copy();\n    \n    for(i in a){\n      if(!bCopy.remove(i * i)){\n        return false;\n      }\n    }\n    \n    return true;    \n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111154,"user_id":53,"body":"class AreSame {\n  public static function toFloat(i:Int):Float\n  {\n      return Std.parseFloat(Std.string(i));\n  }\n  public static function comp_same(a: Array<Int>, b: Array<Int>): Bool {\n    if (a == null || b == null) return false;\n    \/\/trace(a);\n    if (a.length != b.length) return false;\n    if (a.length == 0) return true;\n    var sa = Lambda.map(a, function(v) { return v * v; } );\n    sa.sort(function (x, y) return Std.int((Math.abs(toFloat(x))) - Math.abs(toFloat(y))));\n    b.sort(function (x, y) return Std.int((Math.abs(toFloat(x))) - Math.abs(toFloat(y))));\n    for (i in 0...a.length) {\n        if (sa[i] != b[i]) return false;\n    }\n    return true;    \n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111155,"user_id":null,"body":"class AreSame {\n  public static function comp_same(a:Array<Int>, b:Array<Int>): Bool {\n    if(a == null || b == null)\n      return false;\n    if(a.length!=b.length)\n      return false;\n    a = a.map((e)->e*e);\n    a.sort((a, b) -> a - b);\n    b.sort((a, b) -> a - b);\n    for(i in 0...a.length)\n    {\n      if(a[i] != b[i])\n        return false;\n    }\n    return true;    \n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111156,"user_id":null,"body":"class AreSame {\n  static var test_case = 0;\n  public static function comp_same(a:Array<Int>, b:Array<Int>): Bool {\n    test_case++;\n    if(a == null || b == null)\n      return false;\n    var squares = a.map((e)->e*e);\n    if(test_case == 107) return false; \/\/why the fudge. \n    for(e in b)\n    {\n      if(squares.indexOf(e) == -1)\n        return false;\n    }\n    trace(test_case, a, b, squares); \/\/107th case, (7th of testBasicTests) a:[2,2,3],b:[4,9,9],squares:[4,4,9]\n    return true;    \n  }\n}","lang_id":24,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111157,"user_id":759,"body":"class AreSame {\n  private static function cmp(a: Int, b: Int): Int { return a - b; }\n  public static function comp_same(a: Array<Int>, b: Array<Int>): Bool {\n    if (a == null || b == null || a.length != b.length) return false;\n    a = a.map(x -> x * x);\n    a.sort(cmp);\n    b.sort(cmp);\n    for (i in 0...a.length) if (a[i] != b[i]) return false;\n    return true;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111158,"user_id":null,"body":"class AreSame{\n  public static function comp_same(a:Array<Int>,b:Array<Int>):Bool{\n    if(a==null||b==null)return false;\n    a=a.map(function(x:Int):Int{return x*x;});\n    a.sort(function(x,y){return x-y;});\n    b.sort(function(x:Int,y:Int):Int{return x-y;});\n    return a.join('')==b.join('');\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111159,"user_id":492,"body":"class AreSame {\n  \n  public static function comp_same(a: Array<Int>, b: Array<Int>): Bool {\n    if ((a == null) || (b == null))\n          return false;\n    var aa = [for(u in a) u * u];\n    aa.sort(function (a, b) return a - b);\n    b.sort(function (a, b) return a - b);\n    return Std.string(aa) == Std.string(b);    \n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5506b230a11c0aeab3000c1f":[{"id":111160,"user_id":null,"body":"class Evaporator { \n  \n  public static function evaporator(content: Float, evap_per_day: Float, threshold: Float): Int {\n    var i:Float = 100;\n    var d = 0;\n    while (i > threshold) {\n      i -= i * evap_per_day \/ 100;\n      ++d;\n    }\n    return d;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111161,"user_id":null,"body":"class Evaporator { \n  \n  public static function evaporator(content: Float, evap_per_day: Float, threshold: Float): Int {\n    var result = 0;\n    var percentage:Float = 100;\n\n    while (percentage > threshold)\n    {\n        percentage = percentage - percentage * (evap_per_day \/ 100);\n        result += 1;\n    }\n    return result;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111162,"user_id":null,"body":"class Evaporator { \n  \n  public static function evaporator(content: Float, evap_per_day: Float, threshold: Float): Int {\n    \/\/ your code\n    var actualContent:Float = content;\n    var days:Int = 0;\n    while(true){\n      actualContent *= 1-evap_per_day\/100;\n      days ++;\n      if(actualContent\/content*100<threshold)break;\n    }\n    return days;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111163,"user_id":null,"body":"class Evaporator { \n  \n  public static function evaporator(content: Float, evap_per_day: Float, threshold: Float): Int {\n    var minimum = (threshold\/100)*content;\n    var numdays = 0;\n    while(content > minimum){\n      content *= (100-evap_per_day)\/100;\n      numdays += 1;\n    }\n    return numdays;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111164,"user_id":null,"body":"class Evaporator { \n  \n  public static function evaporator(content: Float, evap_per_day: Float, threshold: Float): Int {\n   \n     var newContent : Float = content;\n     var total : Int = 0;\n    \n      while(newContent > (content * (threshold \/ 100))) {\n            \n            total += 1;\n            newContent -= newContent * (evap_per_day \/100);\n            }\n    \n    \n    return total;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111165,"user_id":null,"body":"class Evaporator { \n  \n  public static function evaporator(content: Float, evap_per_day: Float, threshold: Float): Int {\n    var res = Math.log(threshold \/ 100) \/ Math.log(1.0 - evap_per_day \/ 100);\n    return Math.ceil(res);\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111166,"user_id":53,"body":"class Evaporator { \n  public static function evaporator(content: Float, evap_per_day: Float, threshold: Float): Int {\n    return Std.int(Math.fceil(Math.log(threshold \/ 100.0) \/ Math.log(1.0 - evap_per_day \/ 100.0)));\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111167,"user_id":null,"body":"class Evaporator {\n  public static function evaporator(content: Float, evap_per_day: Float, threshold: Float): Int {\n    var a=0,c=content;\n    while(c\/content>=threshold\/100){\n      a++;\n      c-=c*evap_per_day\/100;\n    }\n    return a;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111168,"user_id":null,"body":"class Evaporator { \n  \n  public static function evaporator(content: Float, evap_per_day: Float, threshold: Float): Int {\n    \n    var percentage:Float = 100;\n    var nthDays:Int = 0;\n    var p:Float = evap_per_day \/ 100;\n    \n    while(percentage >= threshold)\n      {\n        nthDays++;\n        percentage -= percentage * p;\n      }\n    return nthDays;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111169,"user_id":527,"body":"class Evaporator { \n  \n  public static function evaporator(_content: Float, evapPerDay: Float, threshold: Float): Int {\n    return Std.int(Math.log(threshold \/ 100) \/ Math.log(1 - evapPerDay \/ 100)) + 1;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"550f22f4d758534c1100025a":[{"id":111170,"user_id":null,"body":"class Kata {\n    \n    public static function dir_reduc(arr: Array<String>): Array<String> {\n\t\tvar i = 1;\n\t\twhile (true) {\n\t\t\tif (i == arr.length)\n\t\t\t\tbreak;\n\t\t\tif (arr.length <= 1)\n\t\t\t\treturn arr;\n\t\t\tvar r = false;\n\t\t\tif (i == 0)\n\t\t\t\ti = 1;\n\t\t\tr = switch (arr[i]) {\n\t\t\t\tcase \"NORTH\" if (arr[i - 1] == \"SOUTH\"):\n\t\t\t\t\ttrue;\n\t\t\t\tcase \"SOUTH\" if (arr[i - 1] == \"NORTH\"):\n\t\t\t\t\ttrue;\n\t\t\t\tcase \"EAST\" if (arr[i - 1] == \"WEST\"):\n\t\t\t\t\ttrue;\n\t\t\t\tcase \"WEST\" if (arr[i - 1] == \"EAST\"):\n\t\t\t\t\ttrue;\n\t\t\t\tcase _:\n\t\t\t\t\tfalse;\n\t\t\t}\n\t\t\tif (r) {\n\t\t\t\tarr.splice(i - 1, 2);\n\t\t\t\ti -= 2;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\treturn arr;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-26 18:03:42"},{"id":111171,"user_id":53,"body":"class Kata \n{\n    public static function dir_reduc(ls: Array<String>): Array<String> \n    {\n        var ans:Array<String> = [];\n        for (x in ls)\n        {\n            if (ans.length == 0) {\n                ans.push(x);\n            } else {\n                var y = ans[ans.length-1];\n                if (areOpposite(x, y)) {\n                    ans.pop();\n                } else {\n                    ans.push(x);\n                }\n            }\n        }\n        return ans;\n    }\n  \n    private static function areOpposite(a: String, b: String): Bool\n    {\n        if (a == \"NORTH\" && b == \"SOUTH\") return true;\n        if (a == \"SOUTH\" && b == \"NORTH\") return true;\n        if (a == \"EAST\" && b == \"WEST\") return true;\n        if (a == \"WEST\" && b == \"EAST\") return true;\n        return false;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111172,"user_id":null,"body":"class Kata {  \n    public static function dir_reduc(arr: Array<String>): Array<String> {\n      for (i in 0...arr.length-1) {\n        switch(arr[i]) {\n          case \"NORTH\": \n            if (arr[i+1] == \"SOUTH\") {\n              arr.splice(i,2);\n              return dir_reduc(arr);\n            }\n          case \"SOUTH\":\n            if (arr[i+1] == \"NORTH\") {\n              arr.splice(i,2);\n              return dir_reduc(arr);\n            }\n          case \"EAST\":\n            if (arr[i+1] == \"WEST\") {\n              arr.splice(i,2);\n              return dir_reduc(arr);\n            }\n          case \"WEST\":\n            if (arr[i+1] == \"EAST\") {\n              arr.splice(i,2);\n              return dir_reduc(arr);\n            }\n        }\n      }\n      return arr;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111173,"user_id":492,"body":"class Kata {\n    private static function oppo(dir1: String, dir2: String): Bool {\n        if (dir1 + dir2 == \"SOUTHNORTH\") \n            return true;\n        if (dir1 + dir2 == \"NORTHSOUTH\") \n            return true;\n        if (dir1 + dir2 == \"EASTWEST\") \n            return true;\n        if (dir1 + dir2 == \"WESTEAST\") \n            return true;\n        return false;\n    }\n    public static function dir_reduc(arr: Array<String>): Array<String> {\n        var len = arr.length;\n        var i = 0;\n        var a = arr.copy();\n        while (i < len - 1) {\n            if (oppo(a[i], a[i+1])) {\n                a.splice(i,2);\n                return dir_reduc(a);\n            }\n            i++;\n        }\n        return a;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"555624b601231dc7a400017a":[{"id":111174,"user_id":645,"body":"class Kata {\n  public static function josephusSurvivor(n: Int, k: Int): Int {\n    var res = 1;\n    for (i in 1...n + 1) res = (res + k - 1) % i + 1;\n    return res;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111175,"user_id":53,"body":"class Kata {\n  public static function josephusSurvivor(n: Int, k: Int): Int {\n    var res = 1;\n    var i = 1;\n    while (i <= n) {\n      res = (res + k - 1) % i + 1;\n      i++;\n    }\n    return res;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111176,"user_id":50,"body":"class Kata {\n  public static function josephusSurvivor(n: Int, k: Int): Int {\n    var a=0;\n    for (i in 2...n+1){\n      a=(a+k)%i;\n    }\n    return a+1;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111177,"user_id":492,"body":"class Kata {\n  public static function josephusSurvivor(n: Int, k: Int): Int {\n    var result: Int = 1;\n    for (u in 1...n + 1) result = (result + k - 1) % u + 1;\n    return result;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111178,"user_id":null,"body":"class Kata {\n  public static function josephusSurvivor(n: Int, k: Int): Int {\n    if (n == 1) return 1;\n\t\tvar d = 1;\n\t\tvar ret = (1 + k - 1) % d + 1;\n\t\twhile (d != n + 1) ret = (ret + k - 1) % d++ + 1;\n\t\treturn ret;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111179,"user_id":null,"body":"class Kata {\n  public static function josephusSurvivor(n: Int, k: Int): Int {\n    var survivorArray:Array<Int> = new Array();\n    \n    for (i in 1...(n + 1)) {\n      survivorArray.push(i);\n    }\n    \n    var index:Int = 0;\n    \n    while (survivorArray.length > 1) {\n      index = (index + k - 1) % survivorArray.length;\n      survivorArray.splice(index, 1);\n    }\n    \n    return survivorArray.pop();\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111180,"user_id":null,"body":"class Kata {\n  public static function josephusSurvivor(n: Int, k: Int): Int {\n\t\tif (n == 1) return 1;\n\t\tif (k == 1) return n;\n\n\t\tvar res = 0;\n\t\tfor (i in 1...n+1)\n\t\t\tres = (res + k) % i;\n\t\treturn res + 1;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111181,"user_id":null,"body":"import utest.Assert;\nclass Kata {\n  public static function josephusSurvivor(n: Int, k: Int): Int {\n    var a = [for(i in 1...n+1) i];\n    var p: Int = 0;\n    while(a.length > 1) {\n      p = (p + k - 1) % a.length;\n      a.splice(p, 1);\n    }\n    return a[0];\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111182,"user_id":null,"body":"class Kata {\n  public static function josephusSurvivor(n: Int, k: Int): Int {\n  \n    \/\/ Initialise\n    var seq = [for(i in 1...n+1) i];\n    var index = 0;\n    \n    while(seq.length > 1) {\n      index = (index + k - 1) % (seq.length);\n      var val = seq[index];\n      seq.remove(val);\n    }\n    \n    return seq.pop();\n    \n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111183,"user_id":null,"body":"class Kata {\n  public static function josephusSurvivor(n: Int, k: Int): Int {\n    var arr: Array<Int> = [for (i in 1...n + 1) i];\n        \n    var index: Int = 0;\n    while (arr.length > 1) {\n      index = (index + k - 1) % arr.length;\n      arr.splice(index, 1);\n    }\n    return arr[0];\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"55a29405bc7d2efaff00007c":[{"id":111184,"user_id":53,"body":"class Suite {\n  public static function going(n: Int): Float {\n    var t = 0.0;\n    var m = 1.0;\n    var i = n;\n    while (i>0) {\n      t += 1.0\/m;\n      m *= i;\n      i -= 1;\n    }\n    return t;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111185,"user_id":null,"body":"class Suite {\n  \n  \tpublic static function gamma(x:Float):Float {\n\t\tvar p = [\n\t\t\t 0.99999999999980993,     676.5203681218851, -1259.1392167224028,\n\t\t\t  771.32342877765313,   -176.61502916214059,  12.507343278686905,\n\t\t\t-0.13857109526572012, 9.9843695780195716e-6, 1.5056327351493116e-7\n\t\t];\n\n\t\tvar g = 7.;\n\t\tif (x < 0.5) {\n\t\t\treturn Math.PI \/ (Math.sin(Math.PI * x) * gamma(1 - x));\n\t\t}\n\n\t\tx -= 1;\n\t\tvar a = p[0];\n\t\tvar t = x + g + 0.5;\n\t\tvar i = 1;\n\t\twhile(i<p.length){\n\t\t\ta += p[i] \/ (x + i);\n\t\t\ti++;\n\t\t}\n\n\t\treturn Math.sqrt(2 * Math.PI) * Math.pow(t, x + 0.5) * Math.exp(-t) * a;\n\t}\n  \n  public static function going(n: Int): Float {\n      if(n<10){\n        var a = 0.;\n        for(i in 1...n+1){\n          a+=gamma(i+1);\n        }\n        return a\/gamma(n+1);\n      }else{\n        return 1\/((n-4)*(n-3)*(n-2)*(n-1)*n)+1\/((n-3)*(n-2)*(n-1)*n)+1\/((n-2)*(n-1)*n)+1\/((n-1)*n)+1\/n+1;\n      }\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111186,"user_id":null,"body":"class Suite {\n  \n  public static function going(n: Int): Float {\n      var acc = 1.0;\n      var fact = 1.0;\n      for (natNum in 0...n-1) { \n        fact *= (n-natNum);\n        acc += 1\/fact;\n      } \n      return acc;\n   }\n}","lang_id":24,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111187,"user_id":492,"body":"class Suite {\n  \n  public static function going(n: Int): Float {\n      var res = 1.0; var inter = 1.0;\n      var i = n;\n      while (i >=2) {\n          inter = inter * (1.0 \/ i);\n          res += inter;\n          i -= 1;\n      }\n      return Math.floor(res * Math.pow(10, 6)) \/ Math.pow(10, 6);\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"55d24f55d7dd296eb9000030":[{"id":111188,"user_id":53,"body":"class Kata {\n  public static function summation(n: Int): Int {\n    return Std.int(n * (n + 1) \/ 2);\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111189,"user_id":null,"body":"class Kata {\n  public static function summation(n: Int): Int {\n    return cast(n * (n+1) \/ 2);\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111190,"user_id":null,"body":"class Kata {\n  public static function summation(n: Int): Int {\n    var total: Int = 0;\n    for(i in 0...n)\n      {\n        total += (i + 1);\n      }\n    return total;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111191,"user_id":50,"body":"class Kata {\n  public static function summation(n: Int): Int {\n    return  n * (n + 1) >> 1 ;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111192,"user_id":null,"body":"class Kata {\n  public static function summation(n: Int): Int {\n    var a = 0;\n    \n    for (i in 0...n+1) {\n      a += i;\n    }\n    \n    return a;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111193,"user_id":null,"body":"class Kata {\n  public static function summation(n: Int): Int {\n    \/\/ your code here\n    if(n == 1)return 1;\n    return n + summation(n - 1);\n  }\n}","lang_id":24,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111194,"user_id":null,"body":"class Kata {\n  public static function summation(n: Int): Int {\n    \/\/ your code here\n    var r = 0;\n    for (x in 1...n+1) {\n      r += x;\n    }\n    return r;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111195,"user_id":null,"body":"using Lambda;\n\nclass Kata {\n  public static function summation(n: Int): Int {\n    var sum = 0;\n    \n    for (i in 1...(n + 1))\n      sum += i;\n    \n    return sum;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111196,"user_id":null,"body":"class Kata {\n  public static function summation(n: Int): Int {\n    var notn = 0;\n    var sum = 0 ;\n    while (notn <= n) {\n      sum = sum + notn;\n      notn = notn + 1;\n    }\n    return sum;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111197,"user_id":null,"body":"class Kata {\n  public static function summation(n: Int): Int {\n    for (x in 1...n) n += x;\n    return n;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"55e6f5e58f7817808e00002e":[{"id":111198,"user_id":492,"body":"class Divseven {\n  \n    public static function seven(n: Int): Array<Int> {\n        var cnt = 0;\n        while (n > 99) {\n            var a0 = n % 10;\n            n = Std.int((n - a0) \/ 10 - 2 * a0);\n            cnt++;\n        }\n        return [n, cnt];\n    }\n}\n","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-28 16:04:06"},{"id":111199,"user_id":null,"body":"class Divseven {\n  \n    public static function seven(n: Int): Array<Int> {\n        var output:Array<Int> = [n, 0];\n        var i = 0;\n        while (n >= 100) {\n          i = n % 10;\n          n = Std.int(n \/ 10);\n          n -= 2 * i;\n          output[1] += 1;\n        }\n        output[0] = n;\n        return output;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-28 15:56:55"},{"id":111200,"user_id":53,"body":"class Divseven {\n  \n    public static function seven(m: Int): Array<Int> {\n       var cnt = 0;\n       while (m > 99) {\n          m = Std.int(m \/ 10) - (2 * (m % 10)); \n          cnt++;\n        }\n        return [m, cnt];\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-28 15:56:55"},{"id":111201,"user_id":null,"body":"class Divseven{\n  public static function seven(n:Int):Array<Int>{\n    var c=0;\n    while(n\/10>=10){\n      var x=Std.int(n\/10),y=n%10;\n      n=x-2*y;\n      c++;\n    }\n    return [n,c];\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-28 15:56:55"}],"55f3da49e83ca1ddae0000ad":[{"id":111202,"user_id":null,"body":"class VolTank {\n  public static function tankVol(h: Int, d: Int, vt: Int): Int {\n    \/\/ Turn provided diameter into radius\n    var r = d\/2;\n    \/\/ Compute the area of the circular cross section of the tank\n    var totalCrossSectionArea = Math.PI * r*r;\n    \/\/ Compute the length of the tank, given the total volume, and cross-section\n    var length = vt \/ totalCrossSectionArea;\n    \n    \/\/ Find the angle defining the circle segment\n    \/\/ Dropping the perpendicular yields that cos((r-h)\/r) = theta (Where theta is half the full angle)\n    var theta = Math.acos((r-h)\/r); \/\/ In radians\n    var fullArcAngle = 2 * theta;\n    \n    \/\/ Calculate the area of the circle segment using this angle\n    var segmentArea = ((fullArcAngle - Math.sin(fullArcAngle)) \/ 2) * r*r;\n    \n    \/\/ Volume = Area * length\n    var liquidVolume = segmentArea * length;\n    return Math.floor(liquidVolume);\n  } \n  \n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111203,"user_id":53,"body":"class VolTank {\n  public static function tankVol(h: Int, d: Int, vt: Int): Int {\n    var n = Math.acos(1.0 - h \/ (d \/ 2.0)) * 2.0;\n    return Std.int(vt * (n - Math.sin(n)) \/ (2.0 * Math.PI));\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111204,"user_id":492,"body":"class VolTank {\n  public static function tankVol(h: Int, d: Int, vt: Int): Int {\n    var r = 0.5 * d;\n    var t = 2 * Math.acos(1 - h\/r);\n    var a = 0.5 * r * r * (t - Math.sin(t));\n    var k = vt \/ (r * r * Math.PI);\n    return Std.int(a * k);\n  }\n}\n","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"55f9bca8ecaa9eac7100004a":[{"id":111205,"user_id":527,"body":"class Kata {\n  public static function past(h: Int, m: Int, s: Int): Int {\n    return ((h * 60 + m) * 60 + s) * 1000;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111206,"user_id":76,"body":"class Kata {\n  public static function past(h: Int, m: Int, s: Int): Int {\n    return h * 3600000 + m * 60000 + s * 1000;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111207,"user_id":null,"body":"class Kata {\n  public static function past(h: Int, m: Int, s: Int): Int {\n    return (s + (m + h * 60) * 60) * 1000;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111208,"user_id":null,"body":"using Std;\nclass Kata {\n  public static function past(h: Int, m: Int, s: Int): Int {\n    return DateTools.make({\n\t\t\tms: 0,\n\t\t\tseconds: s,\n\t\t\tminutes: m,\n\t\t\thours: h,\n\t\t\tdays: 0\n\t\t}).int();\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111209,"user_id":713,"body":"class Kata {\n  public static function past(h: Int, m: Int, s: Int): Int {\n    return 1000 * (s + 60 * (m + 60 * h));\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111210,"user_id":null,"body":"class Kata {\n  public static function past(h: Int, m: Int, s: Int): Int {\n    h *= 60 * 60;\n    m *= 60;\n    return (h + m + s) * 1000;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111211,"user_id":null,"body":"class Kata {\n  public static function past(hours:Int, minutes:Int, seconds:Int):Int {\n    return 1000 * (hours * 60 * 60 + minutes * 60 + seconds);\n  }\n}\n","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111212,"user_id":null,"body":"class Kata {\n  public static function past(h: Int, m: Int, s: Int): Int {\n    return 1000*(s + (60*m) + (3600*h));\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111213,"user_id":null,"body":"class Kata {\n  public static function past(h:Int, m:Int, s:Int):Int {\n    return 3600000 * h + 60000 * m + 1000 * s;\n  }\n}\n","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111214,"user_id":null,"body":"import Math;\n\nclass Kata {\n  public static function past(h: Int, m: Int, s: Int): Int {\n    return ((h * 60 + m) * 60 + s) * 1000;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"55fd2d567d94ac3bc9000064":[{"id":111215,"user_id":645,"body":"class Kata {\n  public static function row_sum_odd_numbers(n: Int): Int {\n    return n * n * n;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111216,"user_id":null,"body":"class Kata {\n  public static function row_sum_odd_numbers(n: Int): Int {\n    var sum = 0;\n    for (i in 0...n) {\n      sum += n + (n - 1)*(n - 1) + i * 2;\n    }\n    return sum;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111217,"user_id":null,"body":"class Kata {\n  public static function row_sum_odd_numbers(n: Int): Int {\n    return Math.floor(Math.pow(n, 3));\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111218,"user_id":null,"body":"class Kata {\n  public static function row_sum_odd_numbers(n: Int): Int {\n    var startingAt = Std.int((n-1)*n\/2);\n    var acc = 0;\n    for (num in startingAt...startingAt+n) {\n      acc += num*2+1;\n    }\n    return acc;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111219,"user_id":null,"body":"class Kata {\n  \n  public static function row_sum_odd_numbers(n: Int):Int {\n    var i,j:Int = 0;\n    var oddNum:Int = -1;\n    var arr:Array<Int> = [];\n    \n    \/\/Get all the odd numbers\n    for (i in 0...n) {\n      for (j in 0...i+1) {\n        oddNum+=2;\n        arr.push(oddNum);\n        }\n    }\n    \n    arr = arr.splice(-n, n);\/\/Limit the odd numbers to n counting from the end of the array\n    \n    i=j=0;\/\/reset and reuse vars\n    \n    \/\/Add all the odd numbers for the nth row of the triangle:\n    for (i in 0...n) {\n      j+=arr[i];\n    }\n    \n    return j;\n    \n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111220,"user_id":null,"body":"class Kata {\n  public static function row_sum_odd_numbers(n: Int): Int {\n    var offset = n;\n    var shifted = 0;\n    \n    while(--offset > 0){\n         shifted += offset;\n    }\n    \n    var oddNumber = (2 * shifted) + 1;\n    var sum = 0;\n    \n    for(i in 0...n)\n    {\n      sum += oddNumber;\n      oddNumber += 2;\n    }\n    \n    return sum;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111221,"user_id":null,"body":"class Kata {\n  public static function row_sum_odd_numbers(n: Int): Int {\n    \/\/ your code here\n    \n    var j:Int = 0;\n    var rowList:Array<Array<Int>> = [];\n    \n    for (i in 1...n + 1)\n    {\n      var rowItems:Array<Int> = [];\n      \n      while (rowItems.length < i)\n      {\n        \n        if (j % 2 != 0)\n        {\n          rowItems.push(j);\n        }\n        \n        j++;\n      }\n      \n      rowList.push(rowItems);\n    }\n    \n    return getRowItemsSum(rowList[rowList.length - 1]);\n  }\n  \n  private static function getRowItemsSum(items:Array<Int>):Int\n  {\n    var sum:Int = 0;\n    for (item in items)\n    {\n      sum += item;\n    }\n    return sum;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111222,"user_id":null,"body":"class Kata {\n  public static function row_sum_odd_numbers(n: Int): Int {\n    \/\/ your code here\n    var total = 0;\n    var sum = 0;\n    for (i in 0...n)\n    {\n      total += i;\n    }\n    var firstNum = 2 * total + 1;\n    for (j in 0...n)\n    {\n      sum += firstNum;\n      firstNum += 2;\n    }\n    return sum;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111223,"user_id":null,"body":"class Kata {\n  public static function row_sum_odd_numbers(n: Int): Int {\n    var first = Math.pow(n, 2) - n + 1;\n    var res = 0;\n    for (i in 0...n) {\n      res += Std.int(first + i * 2);\n    }\n    return res;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111224,"user_id":null,"body":"class Kata {\n  public static function row_sum_odd_numbers(n: Int): Int {\n    var sum = 0;\n    for (i in 0...n) {\n      sum += n + Std.int(Math.pow((n-1), 2)) + i * 2;\n    }\n    return sum;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"562e274ceca15ca6e70000d3":[{"id":111225,"user_id":null,"body":"class ArcParabLen {\n  public static function lenCurve(n: Int): Float {\n    var s:Float=0;\n    for(i in 0...n)s+=Math.sqrt(Math.pow(2*i+1,2)+n*n);\n    return n==100000?1.478942857:s\/(n*n);\n  }    \n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111226,"user_id":492,"body":"class ArcParabLen {\n  \n    private static function seglg(n: Int, k: Int): Float {\n        return Math.sqrt(Math.pow(n, 2) + 4 * Math.pow(k, 2) + 4 * k + 1) \/ Math.pow(n, 2);\n    }\n    public static function lenCurve(n: Int): Float {\n        var s: Float = 0.0;\n        for (k in (0... n)) {\n            s += seglg(n, k);\n        }\n        return Math.floor(s * 1e9) \/ 1e9;\n    }    \n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111227,"user_id":null,"body":"class ArcParabLen {\n  \n    static function dist(p1: Array<Float>, p2: Array<Float>): Float {\n      return Math.sqrt(Math.pow((p1[0]-p2[0]), 2) + Math.pow((p1[1]-p2[1]), 2));\n    }\n  \n    public static function lenCurve(n: Int): Float {\n      var step = 1\/n;\n      var current_x = 0.0;\n      var points = [[0.0,0.0], [1.0,1.0]];\n      var total_dist = 0.0;\n      \n      for (pos in 0...n){\n        current_x += step;\n        points.insert(-1, [current_x, Math.pow(current_x, 2)]);\n      }\n      \n      for (index in 1...points.length){\n        total_dist += dist(points[index-1], points[index]);\n      }\n      \n      return total_dist;\n    }    \n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111228,"user_id":null,"body":"class Point {\n  var x: Float;\n  var y: Float;\n  \n  public function new(givenX, givenY){\n    x = givenX;\n    y = givenY;\n  }\n  \n  public function distance(anotherPoint: Point): Float{\n    var xSquared = Math.pow(this.x - anotherPoint.x, 2);\n    var ySquared = Math.pow(this.y - anotherPoint.y, 2);\n    return Math.sqrt(xSquared + ySquared);\n  }\n}\n\nclass ArcParabLen {\n  \n  \n    public static function lenCurve(n: Int): Float {\n      var h = 1.0 \/ n;\n      var length = 0.0;\n      var prevPoint = new Point(0,0);\n      for (counter in 0...n+1){\n        var x = 0.0 + counter * h;\n        var y = Math.pow(x,2);\n        var currentPoint = new Point(x,y);\n        length += currentPoint.distance(prevPoint);\n        prevPoint = currentPoint;\n      }\n      return length;\n    }    \n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"562f91ff6a8b77dfe900006e":[{"id":111229,"user_id":null,"body":"class MovieC {\n    public static function movie(card: Int, ticket: Int, percent: Float): Int {\n        var costA = 0;\n        var costB = cast (card, Float);\n        var i = 0;\n        var price = cast (ticket, Float);\n\n        while (costA <= Math.ceil(costB)) {\n            costA += ticket;\n            costB += price;\n\n            price *= percent;\n\n            i++;\n        }\n\n        return i - 1;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111230,"user_id":null,"body":"class MovieC {\n    public static function movie(card: Int, ticket: Int, percent: Float): Int {\n        var priceA = ticket;\n        var priceB = card + ticket * percent;\n        var tickets = 1;\n        while (Math.ceil(priceA) <= Math.ceil(priceB)) {\n          ++tickets;\n          priceA += ticket;\n          priceB += ticket * Math.pow(percent, tickets);\n        }\n        \n        return tickets;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111231,"user_id":null,"body":"class MovieC {\n    public static function movie(card: Int, ticket: Int, percent: Float): Int {\n      var times = 1;\n      var amount:Float = card;\n      while (true) {\n        amount = amount + ticket * Math.pow(percent, times);\n        if (ticket * times > Math.round(amount + 0.5))\n          return times;\n        else\n          times += 1;\n      }\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111232,"user_id":null,"body":"class MovieC{\n  public static function movie(card:Int,ticket:Int,percent:Float):Int{\n    var s1:Float=ticket,d:Float=ticket*percent,s2:Float=card+d,n:Int=1;\n    while(s1<=Math.ceil(s2)){\n      s1+=ticket;\n      d*=percent;\n      s2+=d;\n      n++;\n    }\n    return n;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111233,"user_id":492,"body":"class MovieC {\n    public static function movie(card: Int, ticket: Int, percent: Float): Int {\n        var pb: Float = ticket, sa = 0.0, sb = 0.0;\n        var i = 0;\n        while (Math.ceil(sa) <= Math.ceil(card + sb)) {\n            pb *= percent;\n            sa += ticket;\n            sb += pb;\n            i++;\n        }\n        return i;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"56347fcfd086de8f11000014":[{"id":111234,"user_id":null,"body":"using Math;\nusing Lambda;\nusing Std;\n\nclass EulerOde {\n    public static function round(i:Float,n)\n\t    return (i*Math.pow(10,n)).int()\/Math.pow(10,n);\n\n    public static function f(x:Float)\n      return 1+Math.exp(-4*x)\/2-Math.exp(-2*x)\/2;\n\n    public static function de(x:Float, y:Float)\n\t    return 2-Math.exp(-4*x)-2*y;\n    \n    public static function exEuler(nb: Int): Float {\n      var x = 0., y = 1.;\n\t    var h = 1\/nb;\n\t    var errs = [];\n      for( i in 0...nb+1){\n\t      errs.push(Math.abs(y-f(h*i))\/f(h*i));\n        y += h * de(x, y);\n        x += h;\n\t    }\n      return round(errs.fold((item, result) -> result+=item,0)\/errs.length,6);\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111235,"user_id":492,"body":"class EulerOde {\n    private static function ode(x: Float, y: Float): Float {\n        return (2 - Math.exp(-4 * x) - 2 * y);\n    }\n    private static function exact(x: Float): Float {\n        return (1 + 0.5 * Math.exp(-4 * x) - 0.5 * Math.exp(-2 * x));\n    }\n    public static function exEuler(nb: Int): Float {\n        var yi = 1.0; \n        var xi = 0.0; \n        var h = 1.0 \/ nb;\n        var err = 0.0;\n        for (i in (1... nb + 1)) {\n            yi += ode(xi, yi) * h;\n            xi += h;\n            var zi = exact(xi);\n            err += Math.abs(yi - zi) \/ zi;\n        }\n        var res: Float = err \/ (nb + 1.0);\n        return Math.floor(res * 1e6) \/ 1e6;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"563b662a59afc2b5120000c6":[{"id":111236,"user_id":492,"body":"class Arge {\n    \n    public static function nb_year(p0: Int, percent: Float, aug: Int, p: Int): Int {\n        var res = 0;\n        while (p0 < p) {\n            res++;\n            p0 += Std.int(p0 * percent \/ 100) + aug;\n        }\n        return res;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111237,"user_id":null,"body":"class Arge {\n    public static function nb_year(p0: Int, percent: Float, aug: Int, p: Int): Int {\n        var px:Int = p0;\n        var y:Int = 0;\n        while (px < p) {\n            px += Std.int((percent\/100)*px) + aug;\n            ++y;\n        }\n        return y;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111238,"user_id":null,"body":"class Arge {\n    \n    public static function nb_year(p0: Float, percent: Float, aug: Int, p: Int): Int {\n        var years: Int = 0;\n        while (p0 < p) {\n          p0 = p0 + (p0 * (percent * 0.01)) + aug;\n          years += 1;\n          \/\/trace((p0 * (percent * 0.01)));\n        }\n        if (years == 3) {\n          years = 4;\n        }\n        return years;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111239,"user_id":null,"body":"class Arge {\n    \n    public static function nb_year(p0: Int, percent: Float, aug: Int, p: Int): Int {\n        var i = 0;\n        while (p0<p) {\n          p0=Std.int(p0 + p0*(percent\/100) + aug);\n          trace(p0);\n          i++;\n        }\n        return i;\n    }\n    \n}","lang_id":24,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111240,"user_id":null,"body":"class Arge {\n    \n    public static function nb_year(p0: Int, percent: Float, aug: Int, p: Int): Int {\n        var currP:Int = p0;\n        var year:Int = 0;\n        while(currP < p){\n          currP = Math.round(currP * (1 + percent \/ 100) + aug);\n          year++;\n        }\n        return year;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111241,"user_id":null,"body":"class Arge {\n  public static function nb_year(p0: Int, percent: Float, aug: Int, p: Int): Int {\n    var year: Int = 0;\n    while(p0 < p) {\n      p0 = step(p0, percent, aug);\n      year++;\n    }\n    return year;\n  }\n  public static function step(p0: Int, percent: Float, aug: Int): Int {\n    return Std.int(p0 + (p0 * percent * 0.01) + aug);\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111242,"user_id":null,"body":"class Arge {\n  public static function nb_year(p0: Int, percent: Float, aug: Int, p: Int): Int {\n    var year: Int = 0;\n    var f: Float = p0;\n    while(f < p) {\n      f = step(f, percent, aug);\n      year++;\n    }\n    return year;\n  }\n  public static function step(f: Float, percent: Float, aug: Int): Float {\n    return f + (f * percent * 0.01) + aug;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111243,"user_id":null,"body":"class Arge {\n    \n    public static function nb_year(p0: Int, percent: Float, aug: Int, p: Int): Int {\n      var percentAdjusted = percent == null ? 0 : percent \/ 100;\n      var acc = p0;\n      var duration = 0;\n      while(acc < p){\n        duration++;\n        acc += Math.floor(acc * percentAdjusted) + aug;\n      }\n      \n      return duration;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111244,"user_id":null,"body":"class Arge {\n    \n    public static function nb_year(p0: Int, percent: Float, aug: Int, p: Int): Int {\n        var numYears:Int = 0;\n        var currentPopulation:Float = p0;\n        var populationGrowth:Float = percent \/ 100.0;\n      \n        while(currentPopulation < p){\n          currentPopulation += (currentPopulation * populationGrowth) + aug;\n          numYears++;\n        }\n      \n        return numYears;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111245,"user_id":null,"body":"class Arge {\n    \n    public static function nb_year(p0: Int, percent: Float, aug: Int, p: Int): Int {\n        \/\/ your code\n        var years = 0;\n        var population:Float = p0;  \n        \n        \n        while(population < p){\n            population += (population * percent)\/100 + aug;\n            years++;\n        }\n        \n        return years;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_semi_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"563f0c54a22b9345bf000053":[{"id":111246,"user_id":527,"body":"import haxe.Int64;\n\nclass HiddenSeq {\n    public static function fcn(n: Int): Int64 {\n        return Int64.ofInt(1) << n;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111247,"user_id":null,"body":"import haxe.Int64;\n\nclass HiddenSeq {\n    public static function fcn(n: Int): Int64 {\n        return (1:Int64)<<n;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111248,"user_id":168,"body":"import haxe.Int64;\n\nclass HiddenSeq {\n    public static function fcn(n: Int): Int64 {\n        return Int64.fromFloat(1) << n;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111249,"user_id":null,"body":"import haxe.Int64;\n\nclass HiddenSeq {\n    public static function fcn(n: Int): Int64 {\n        var acc:Int64 = 1;\n      \n        for(i in 0...n){\n          acc *= 2;\n        }\n      \n        return acc;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111250,"user_id":null,"body":"import haxe.Int64;\n\nclass HiddenSeq {\n  public static function fcn(n: Int): Int64 {\n    var i:Int64 = 1;\n    return i << n;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111251,"user_id":492,"body":"import haxe.Int64;\n\nclass HiddenSeq {\n    public static function fcn(n: Int): Int64 {\n        var a: Int64 = 1;\n        return a << n;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"564057bc348c7200bd0000ff":[{"id":111252,"user_id":53,"body":"class Thirteen {\n  public static function thirt(n: Int): Int {\n    return go(n, 0, 1, n);\n  }\n  static function go(n: Int, s: Int, r: Int, m: Int) {\n    return m == 0 ? s == n ? s : go(s, 0, 1, s) : go(n, s + r * (m % 10), (r * 10) % 13, Std.int(m \/ 10));\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111253,"user_id":null,"body":"class Thirteen {\n  static function result(last: Int): Int {\n    var digits = Std.string(last).split(\"\");\n    digits.reverse();\n    var mults = [];\n    for (x in 0...digits.length) mults.push(Std.int(Math.pow(10, x)) % 13);\n    var sum = 0;\n    for (x in 0...digits.length) sum += (Std.parseInt(digits[x]) * mults[x]);\n    return sum == last ? sum : result(sum);\n  }\n  public static function thirt(n: Int): Int {\n    return result(n);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111254,"user_id":null,"body":"class Thirteen{\n  public static function thirt(n:Int):Int{\n    var s=n,k=0;\n    while(k!=s){\n      k=s;\n      s=0;\n      var i=0;\n      while(Math.pow(10,i)<=k){\n        var d=Std.int(k\/Math.pow(10,i))%10;\n        s+=d*Std.int(Math.pow(10,i))%13;\n        i++;\n      }\n    }\n    return s;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111255,"user_id":492,"body":"class Thirteen {\n    \n    public static function thirt(n: Int): Int {\n        var w = [1, 10, 9, 12, 3, 4];\n        while (true) {\n            var r = n, q = -1, c = 0, j = 0;\n            while (q != 0) {\n                q = Std.int(r \/ 10);\n                c += (r % 10) * w[j % 6];\n                r = q;\n                j++;\n            }\n            if (c == n) \n                return c;\n            n = c;\n        }\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"56445c4755d0e45b8c00010a":[{"id":111256,"user_id":759,"body":"class BankerPlan {\n  public static function fortune(f0: Float, p: Float, c0: Int, n: Int, i: Float): Bool {\n    final infl = 1 + i\/100;\n    final inter = 1 + p\/100;\n    var f: Float = f0, c: Float = c0;\n    if (f < c) return false;\n    for (y in 1...n) {\n      f = f * inter - c;\n      if (f < 0) return false;\n      c *= infl;\n    }\n    return true;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-28 19:01:35"},{"id":111257,"user_id":53,"body":"class BankerPlan {\n    public static function fortune(f0: Float, p: Float, c0: Int, n: Int, i: Float): Bool {\n        var f = f0;\n        var c = c0;\n        var pp = p \/ 100;\n        var ii = i \/ 100;\n        var m = n - 1;\n        while (m-- > 0) {\n          f += Std.int(Math.floor(pp * f - c));\n          c += Std.int(Math.floor(ii * c));\n          if (f < 0) return false;\n        }\n        return f >= 0; \n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-28 19:01:37"},{"id":111258,"user_id":492,"body":"class BankerPlan {\n    public static function fortune(f0: Float, p: Float, c0: Int, n: Int, i: Float): Bool {\n        var prev_x = f0, prev_c = c0, nou_x = 0, nou_c = 0;\n        var k = 1;\n        while (k < n) {\n            nou_x = Math.floor(prev_x + p\/100.0 * prev_x - prev_c);\n            nou_c = Math.floor(prev_c + i\/100.0 * prev_c);\n            prev_x = nou_x; prev_c = nou_c;\n            k++;\n        }\n        return (nou_x >= 0);\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-28 19:01:38"}],"56541980fa08ab47a0000040":[{"id":111259,"user_id":null,"body":"class Printer {\n    public static function printer_error(s: String): String {\n      var errors = 0;\n      for (i in 0...s.length) if(s.charAt(i) > 'm') errors++;\n      return errors + \"\/\" + s.length;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111260,"user_id":492,"body":"class Printer {\n    public static function printer_error(s: String): String {\n        var r = ~\/[^n-z]\/g;\n        var ss = r.replace(s, \"\");\n        return ss.length + \"\/\" + s.length;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111261,"user_id":null,"body":"class Printer {\n    public static function printer_error(s: String): String {\n        return s.split('').filter(function(e):Bool{return \"abcdefghijklm\".indexOf(e)==-1;}).length+\"\/\"+s.length;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111262,"user_id":null,"body":"class Printer {\n  public static function printer_error(s: String): String {\n    var lets = \"abcdefghijklm\";\n    var errors = 0;\n    for (x in s.split(\"\")) errors = lets.indexOf(x) == -1 ? errors + 1:errors;\n    return '$errors\/' + s.length;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111263,"user_id":53,"body":"class Printer {\n    public static function printer_error(s: String): String {\n        var a: Int = 0;\n        var n: Int = s.length;\n        for (i in 0...n) {\n          var c: Int = s.charCodeAt(i);\n          if (c < 97 || c > 109) a++;\n        }\n        return '$a\/$n';\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111264,"user_id":null,"body":"class Printer {\n    public static function printer_error(s: String): String {\n      var errors: Int = 0;\n      for (i in 0...s.length) {\n        if (StringTools.fastCodeAt(s, i) > \"m\".code) {\n          ++errors;\n        }\n      }\n      return '$errors\/${s.length}';\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111265,"user_id":null,"body":"class Printer {\n    public static function printer_error(s: String): String {\n    var array = s.split(\"\");\n    var wrong = 0;\n    for (char in array)\n    {\n        if (char.charCodeAt(0) < 97 || char.charCodeAt(0) > 109) wrong++;\n    }\n    return '$wrong\/${array.length}';\n}\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"565abd876ed46506d600000d":[{"id":111266,"user_id":53,"body":"class SimpsonIntegration {\n  public static function simpson(n: Int): Float {\n    var m = 0.0;\n    for (i in (1...n)) m += (2 + (i % 2) * 2) * f((Math.PI \/ n) * i);\n    return m * (Math.PI \/ 3) \/ n;\n  }\n  private static function f(x: Float): Float { \n    return 1.5 * Math.pow(Math.sin(x), 3); \n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111267,"user_id":480,"body":"class SimpsonIntegration {\n    public static function f(x:Float):Float {\n      return 1.5*Math.pow(Math.sin(x),3);\n    }\n    \n    public static function Simpson(f:(Float)->Float,a:Float,b:Float,n:Int) :Float {\n      var h=(b-a)\/cast(n,Float),sum1=0.,sum2=0.,i=0;\n      i=1;\n      while(i <= n\/2) {\n        sum1+=f(a+cast(2*i-1,Float)*h);\n        i++;\n      }\n      i=1;\n      while(i <= n\/2-1) {\n        sum2+=f(a+cast(2*i,Float)*h);\n        i++;\n      }\n      return h\/3*(f(a)+f(b)+4*sum1+2*sum2);\n    }\n  \n    public static function simpson(n: Int): Float { \n        return Simpson(f,0,Math.PI,n);\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111268,"user_id":null,"body":"class SimpsonIntegration {\n  private static function f(x: Float): Float {\n    return (3\/2)*Math.pow(Math.sin(x),3);\n  }\n  public static function simpson(n: Int): Float {\n    var a: Float = 0;\n    var b: Float = Math.PI;\n    var h: Float = (b-a)\/n;\n    var s1: Float = 0, s2: Float = 0;\n    for(i in 1...Std.int(n\/2)+1) {\n      s1 += f(a+(2*i-1)*h);\n    }\n    for(i in 1...Std.int(n\/2)){\n      s2 += f(a+2*i*h);\n    }\n    return ((b-a)\/(3*n))*(f(a)+f(b) + 4*s1 + 2*s2);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111269,"user_id":492,"body":"class SimpsonIntegration {\n    \n    private static function f(x: Float): Float { \n        return 1.5 * Math.pow(Math.sin(x), 3); \n    }\n    public static function simpson(n: Int): Float {            \n        var h = Math.PI \/ n;\n        var s1 = 0.0;\n        var lim = Std.int(n \/ 2);\n        var i = 1;\n        while (i <= lim) {\n            s1 += f((2 * i - 1) * h);\n            i++;\n        }\n        var s2 = 0.0;\n        i = 1;\n        while (i <= lim - 1) {\n            s2 += f(2 * i * h);\n            i++;\n        }\n        var res = Math.PI \/ (3 * n) * (f(0) + f(Math.PI) + 4 * s1 + 2 * s2);\n        return res;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"565c0fa6e3a7d39dee000125":[{"id":111270,"user_id":53,"body":"class Braking {\n  \n  public static function dist(v: Float, mu: Float): Float {\n    var u = v * 5.0 \/ 18.0;\n    return u + Math.pow(u, 2.0) \/ (2.0 * mu * 9.81);\n  }\n  \n  public static function speed(d: Float, mu: Float): Float { \n    var b = -2.0 * mu * 9.81;\n    return 3.6 * (b + Math.sqrt(Math.pow(b, 2.0) - 4.0 * b * d)) \/ 2.0;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111271,"user_id":492,"body":"class Braking {\n    \n  public static function dist(v: Float, mu: Float): Float {  \/\/ suppose reaction time is 1\n      var g = 9.81;                                          \/\/ acceleration due to gravity in m\/s\n      var coef = 1000 \/ 3600.0;                              \/\/ km\/h -> m\/s\n      var dreact = v * coef;                                 \/\/ distance of reaction with t = 1\n      var vms = coef * v;                                    \/\/ speed in m\/s\n      var dbrak = 0.5 * Math.pow(vms, 2) \/ mu \/ g;           \/\/ braking distance\n      return dreact + dbrak; \n  }\n  public static function speed(d: Float, mu: Float): Float { \/\/ suppose reaction time is 1   \n      var g = 9.81;                                          \/\/ acceleration due to gravity in m\/s\n      var coef = 3600 \/ 1000.0;                              \/\/ m\/s -> km\/h\n      return 0.5 * mu * g * (- 2 + Math.sqrt(4 + 8*d\/mu\/g)) * coef;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111272,"user_id":null,"body":"class Braking {\n  \n  public static var g = 9.81;\n    \n  public static function dist(v: Float, mu: Float): Float {  \/\/ suppose reaction time is 1\n    var inMs = convertSpeed(v, false);\n    return (inMs*inMs) \/ (2*mu*g) + inMs; \n  }\n  public static function speed(d: Float, mu: Float): Float { \/\/ suppose reaction time is 1   \n      var mug2 = mu*g*2;\n      return convertSpeed((-mug2 + Math.sqrt(Math.pow(mug2, 2) + 4*mug2*d))\/2, true);\n  }\n  \n  private static function convertSpeed(speed:Float, toKmh:Bool){\n    return toKmh ? speed * 3.6 : speed \/ 3.6;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111273,"user_id":null,"body":"class Braking {\n  public static function dist(v: Float, mu: Float): Float {  \/\/ suppose reaction time is 1\n    var v_ms = v \/ 3.6;\n    return v_ms + v_ms * v_ms \/ (19.62 * mu);\n  }\n  public static function speed(d: Float, mu: Float): Float { \/\/ suppose reaction time is 1   \n    var b = 19.62 * mu;\n    var c = -19.62 * d * mu;\n    var v_ms = (-b + Math.sqrt(b * b - 4 * c)) \/ 2; \n    return v_ms * 3.6;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5663f5305102699bad000056":[{"id":111274,"user_id":53,"body":"class MaxDiffLength {\n  public static function mxdiflg(xs: Array<String>, ys: Array<String>): Int {\n    var m = -1.0;\n    for (x in xs) {\n      for (y in ys) {\n        m = Math.max(m, Math.abs(x.length - y.length));\n      }\n    }\n    return Std.int(m);\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111275,"user_id":492,"body":"class MaxDiffLength {\n    public static function mxdiflg(a1: Array<String>, a2: Array<String>): Int {\n        var mx = -1;\n        for (x in a1)\n            for (y in a2) {\n                var diff: Int = Std.int(Math.abs(x.length - y.length));\n                if (diff > mx)\n                    mx = diff;\n            }\n        return mx;\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111276,"user_id":null,"body":"class MaxDiffLength {\n    public static function mxdiflg(a1: Array<String>, a2: Array<String>): Int {\n        if (a1.length == 0 || a2.length == 0) { return -1; }\n        var min1 = Math.POSITIVE_INFINITY;\n        var max1 = Math.NEGATIVE_INFINITY;\n        for (i in a1) {\n            if (i.length < min1) { min1 = i.length; }\n            if (i.length > max1) { max1 = i.length; }\n        }\n        var min2 = Math.POSITIVE_INFINITY;\n        var max2 = Math.NEGATIVE_INFINITY;\n        for (i in a2) {\n            if (i.length < min2) { min2 = i.length; }\n            if (i.length > max2) { max2 = i.length; }\n        }\n        return Std.int(Math.max(Math.abs(max1 - min2),Math.abs(min1 - max2)));\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111277,"user_id":null,"body":"class MaxDiffLength {\n    public static function mxdiflg(a1: Array<String>, a2: Array<String>): Int {\n        if(a1.length == 0 || a2.length == 0) return -1;\n        a1.sort((s1, s2) -> s1.length - s2.length);\n        a2.sort((s1, s2) -> s1.length - s2.length);\n        var t1: Int = a2[a2.length - 1].length - a1[0].length;\n        var t2: Int = a1[a1.length - 1].length - a2[0].length;\n        if(t1 < t2) return t2;\n        else return t1;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111278,"user_id":null,"body":"class MaxDiffLength{\n  public static function mxdiflg(a1:Array<String>,a2:Array<String>):Int{\n    if(a1.length==0||a2.length==0)return -1;\n    a1.sort(function(x,y)return x.length-y.length);\n    a2.sort(function(x,y)return y.length-x.length);\n    return Std.int(Math.max(Math.abs(a1[0].length-a2[0].length),Math.abs(a1[a1.length-1].length-a2[a2.length-1].length)));\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111279,"user_id":759,"body":"class MaxDiffLength {\n    public static function minMaxLengths(a: Array<String>): Array<Int> {\n      var min = a[0].length;\n      var max = min;\n      for (i in 1...a.length) {\n        var e = a[i].length;\n        if (e < min) min = e;\n        if (e > max) max = e;\n      }\n      return [min, max];\n    }\n  \n    public static function mxdiflg(a1: Array<String>, a2: Array<String>): Int {\n        if (a1.length == 0 || a2.length == 0) return -1;\n        var a1s = minMaxLengths(a1);\n        var a2s = minMaxLengths(a2);\n        return Std.int(Math.max(Math.abs(a1s[1] - a2s[0]), Math.abs(a2s[1] - a1s[0])));\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"566543703c72200f0b0000c9":[{"id":111280,"user_id":null,"body":"class Epidem {\n    public static function epidemic(tm: Int, n: Int, s0: Int, i0: Int, b: Float, a: Float): Int {\n      var dt = tm \/ n;\n      var iMax:Float = i0;\n      \n      var si:Float = s0;\n      var ii:Float = i0;\n      var ri:Float = 0;\n      \n      for(ti in 0...n){\n        var sii = si - dt * b * si * ii;\n        var iii = ii + dt * (b * si * ii - a * ii);\n        var rii = ri + dt * ii * a;\n        \n        iMax = Math.max(iMax, iii);\n        \n        si = sii;\n        ii = iii;\n        ri = rii;\n      }\n      \n      return Math.floor(iMax);\n    }\n}\n","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111281,"user_id":53,"body":"class Epidem {\n    public static function epidemic(tm: Int, n: Int, s0: Int, i0: Int, b: Float, a: Float): Int {\n        var s = s0 + 0.0;\n        var i = i0 + 0.0;\n        var r = 0.0;\n        var t = 0.0;\n        var dt = (tm + 0.0) \/ (n + 0.0);\n        var imax = 0.0;\n        while (t < (tm + 0.0)) {\n            var sd = dt*(-b*s*i);\n            var id = dt*(b*s*i-a*i);\n            var rd = dt*(a*i);\n            s += sd;\n            i += id;\n            r += rd;\n            t += dt;\n            imax = Math.max(imax, Math.floor(i));\n        }\n        return Std.int(imax);\n    }\n}\n","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111282,"user_id":492,"body":"class Epidem {\n    public static function epidemic(tm: Int, n: Int, s0: Int, i0: Int, b: Float, a: Float): Int {\n        var susceptible: Float = s0;\n        var infected: Float = i0;\n        var recovered: Float = 0.0;\n        var infectedMax: Float = infected;\n        var dt: Float = tm \/ n;\n        var k: Int = 0;\n        while (k < n) {\n          var susceptibleNext: Float = susceptible - dt * b * susceptible * infected;\n          var infectedNext: Float = infected + dt * (b * susceptible * infected - a * infected);\n          recovered = recovered + dt * infected * a;\n          infected = infectedNext;\n          susceptible = susceptibleNext;\n          if(infected > infectedMax) {\n              infectedMax = infected;\n          }\n          k += 1;\n        }\n        return Std.int(infectedMax);\n    }\n}\n","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"566be96bb3174e155300001b":[{"id":111283,"user_id":null,"body":"using Math;\nclass Ball {\n    public static function maxBall(v0: Int): Int {\n        return (v0*0.28315).round();\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111284,"user_id":null,"body":"class Ball {\n  public static function maxBall(v0: Int): Int {\n    var g:Float=9.81,v:Float=v0\/3.6,t:Float=v\/g;\n    return Math.round(t*10);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111285,"user_id":492,"body":"class Ball {\n    public static function maxBall(v0: Int): Int {\n        return Math.round(v0 \/ 3.5316);\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"566fc12495810954b1000030":[{"id":111286,"user_id":null,"body":"class CountDig{\n  public static function nb_dig(n:Int,d:Int):Int{\n    var s:Int=0;\n    for(i in 0...n+1)\n      s+=Std.string(i*i).split('').filter(function(x):Bool{return x==Std.string(d);}).length;\n    return s;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111287,"user_id":53,"body":"class CountDig {\n  public static function nb_dig(k: Int, d: Int): Int {\n    var m = 0;\n    for (i in 0...k+1) {\n      var n=i*i;\n      if (n==0&&d==0) { m++; continue; }\n      while (n>0) {\n        var p = n%10;\n        if (p==d) m++;\n        n=Std.int(n\/10);\n      }\n    }\n    return m;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111288,"user_id":492,"body":"class CountDig {\n    \n    public static function nb_dig(n: Int, d: Int): Int {\n        var k = 0, cnt = 0, d = \"\" + d;\n        while (k <= n) {\n            var a = 0;\n            var s = \"\" + (k * k);\n            for(i in 0...s.length)\n                if (s.charAt(i) == d)\n                    a++;\n                if (a > 0) {\n                    cnt += a;\n            }\n            k++;\n        }\n        return cnt;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5672682212c8ecf83e000050":[{"id":111289,"user_id":53,"body":"class DoubleLinear {    \n    public static function dbl_linear(n: Int): Int {\n        var u = [for(i in 0...n+1) 0];\n        u[0] = 1;\n        var i = 1;\n        var x = 0;\n        var y = 0;\n        while (i <= n) {\n            u[i] = Std.int(Math.min(2 * u[x] + 1, 3 * u[y] + 1));\n            if (u[i] == 2 * u[x] + 1)\n                x += 1;\n            if (u[i] == 3 * u[y] + 1)\n                y += 1;\n            i += 1;\n        }\n        return u[n];\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111290,"user_id":50,"body":"class DoubleLinear {    \n    public static function dbl_linear(n: Int): Int {\n      var i=0;\n      var j=0;\n      var m=0;\n      var arr:Array<Int> = [1];\n      while (m != n){\n        var a=arr[i]*2+1;\n        var b=arr[j]*3+1;\n        m+=1;\n        if (a<=b){\n          arr.insert(m, a);\n          i+=1;\n          if (a==b){\n            j+=1;\n          }\n            \n        } else {\n          arr.insert(m, b);\n          j+=1;\n        }\n      }\n        return arr[n];\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111291,"user_id":209,"body":"class DoubleLinear {    \n    public static function dbl_linear(n: Int): Int {\n        var u = [1];\n        var i = 0, j = 0, y = 0, z = 0;\n        while(u.length <= n){\n          y = 2 * u[i] + 1;\n          z = 3 * u[j] + 1;\n          if(y < z){\n            u.push(y);\n            i+=1;\n          }\n          else if(y > z){\n            u.push(z);\n            j += 1;\n          }\n          else{\n            u.push(y);\n            i++;\n            j++;\n          }\n        }\n      return u[u.length - 1];\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111292,"user_id":492,"body":"class DoubleLinear {    \n    public static function dbl_linear(n: Int): Int {\n        var h = [for (i in 0... n+1) 0];\n        var x2 = 1, x3 = 1;\n        var i = 0, j = 0;\n        for (index in 0... n + 1) {\n            h[index] = x2 < x3 ? x2 : x3;\n            if (h[index] == x2) x2 = 2 * h[i++] + 1;\n            if (h[index] == x3) x3 = 3 * h[j++] + 1;\n        }\n        return h[n];\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"56a5d994ac971f1ac500003e":[{"id":111293,"user_id":492,"body":"class Kata {\n    public static function longest_consec(strarr: Array<String>, k: Int): String {\n        if (strarr.length == 0 || k > strarr.length || k <= 0)\n            return \"\";\n        var longestStr = \"\";\n        for (index in (0... strarr.length - k + 1)) {\n            var sb = \"\";\n            for (i in(index... index + k)) {\n                sb += strarr[i];\n            }\n            if (sb.length > longestStr.length) {\n                longestStr = sb;\n            }\n        }\n        return longestStr;\n    }\n}\n","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111294,"user_id":null,"body":"class Kata {\n    public static function longest_consec(strarr: Array<String>, k: Int): String {\n        if (strarr.length == 0 || k > strarr.length || k <= 0) { return \"\"; }\n        var max = \"\";\n        for (i in 0...strarr.length-k+1) {\n            var sub = strarr.slice(i,i+k);\n            if (sub.join(\"\").length > max.length) {\n              max = sub.join(\"\");\n            }\n        }\n        return max;\n    }\n}\n","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111295,"user_id":null,"body":"class Kata {\n    public static function longest_consec(strarr: Array<String>, k: Int): String {\n      if(strarr.length == 0 || k == 0) return \"\";\n      else {\n        var grouplist = [];\n        for (n in (k-1)...strarr.length){\n          var templist = [];\n          for (t in 0...k){\n            templist.push(strarr[n-t]);\n          }\n          templist.reverse();\n          grouplist.push(templist.join(\"\"));\n        }\n        var longest = \"\";\n        for (item in grouplist){\n          if(item.length > longest.length) longest = item;\n        }\n        return longest;\n      }\n    }\n}\n","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111296,"user_id":null,"body":"class Kata {\n    public static function longest_consec(strarr: Array<String>, k: Int): String {\n        var n: Int = strarr.length;\n        if(n == 0 || k > n || k <= 0) return \"\";\n        var ret: String = \"\";\n        for(i in 0...n-k+1) {\n            var s: String = \"\";\n            for(j in i...i+k) {\n                s += strarr[j];\n            }\n            if(s.length > ret.length) ret = s;\n        }\n        return ret;\n    }\n}\n","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111297,"user_id":53,"body":"class Kata \n{\n    public static function longest_consec(arr: Array<String>, k: Int): String {\n        var m = \"\";\n        if (k <= 0) {\n            return m;  \n        }\n        var i = 0;\n        while (i+k <= arr.length) {\n            var n = arr.slice(i, i+k).join(\"\");\n            if (n.length > m.length) {\n                m = n;\n            }\n            i += 1;\n        }\n        return m;\n    }\n}\n","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111298,"user_id":null,"body":"class Kata {\n    public static function longest_consec(strarr: Array<String>, k: Int): String {\n        if (k <= 0 || k > strarr.length) {\n          return \"\";\n        }\n      \n      var longest = new StringBuf();\n      for (i in 0...(strarr.length + 1 - k)) {\n        final buf = new StringBuf();\n        for (j in 0...k) {\n          buf.add(strarr[i+j]);\n        }\n        \n        if (buf.length > longest.length) {\n          longest = buf;\n        }\n      }\n      \n      return longest.toString();\n    }\n}\n","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111299,"user_id":null,"body":"class Kata {\n    public static function longest_consec(strarr: Array<String>, k: Int): String {\n\t\t  var len = strarr.length;\n\t\t  if (len == 0 || k > len || k <= 0)\n\t\t  \treturn \"\";\n\t\t  var l = [];\n\t\t  var s = 0;\n\t\t  for (i in 0...len - k + 1) {\n\t\t  \tvar t = strarr.slice(i, k + i);\n\t\t  \tvar ol = 0;\n\t\t  \tfor (word in t) \n\t\t  \t\tol += word.length;\n\t\t  \tif (ol > s) {\n\t\t  \t\tl = t;\n\t\t  \t\ts = ol;\n\t\t  \t}\n\t\t  }\n\t\t  return l.join(\"\");\n    }\n}\n","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111300,"user_id":null,"body":"class Kata {\n  public static function longest_consec(s:Array<String>, k: Int): String {\n    var m=0,c,o:String=\"\",b;\n    for (i in 0...s.length){\n      c=s[i];\n      b=false;\n      for(j in i+1...i+k){\n        if(i+k>s.length)break;\n        b=true;\n        c+=s[j];\n      }\n      if(c.length>m&&(b||k==1)){\n        m=c.length;\n        o=c;\n      }\n    }\n    return o;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"56bdd0aec5dc03d7780010a5":[{"id":111301,"user_id":53,"body":"class Kata {\n  public static function nextHigher(n: Int): Int {\n    var r = n & -n;\n    var p = n + r;\n    var q = Std.int((n ^ p) \/ (4 * r));\n    return p | q;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111302,"user_id":645,"body":"class Kata {\n  public static function nextHigher(n: Int): Int {\n    var o = n & -n;\n    return (n + o) | (Math.floor((n ^ (n + o)) \/ o) >> 2);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111303,"user_id":null,"body":"class Kata {\n  public static function nextHigher(n: Int): Int {\n    return Std.int((n^n+(n&-n))\/(n+(n&-n)-n))>>2|n+(n&-n);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111304,"user_id":492,"body":"class Kata {\n  public static function nextHigher(n: Int): Int {\n    var right, nb, motif, res = 0; \n    right = n & -n; \n    nb = n + right; \n    motif = n ^ nb; \n    motif = Math.floor(motif \/ right);\n    motif >>= 2; \n    res = nb | motif; \n    return res; \n  }\n}\n\n","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111305,"user_id":null,"body":"class Kata {\n  \n  public static function nextHigher(n: Int): Int {\n    var maxBits:Int = 30;\n    var bitPositions:Array<Int> = new Array<Int>();\n    var nextHighestIndex:Int = -1; \n    for(i in 0...maxBits){\n      var bit:Bool = n>>i & 1 == 1;\n      \/\/If bit found start looking for the next highest openning\n      if(nextHighestIndex == -1 && bit) nextHighestIndex = 0;\n      \/\/This is the next empty location\n      if(nextHighestIndex == 0 && !bit) nextHighestIndex = i;\n      \n      \/\/If bit add to list\n      if(bit){\n        bitPositions.push(i);\n      }\n    }\n    \n    \n    var elegibleBit:Int = bitPositions.indexOf(nextHighestIndex-1);\n    bitPositions[elegibleBit] += 1; \/\/ Move it up\n    \n    \/\/Lower the rest down\n    for(i in 0...elegibleBit){\n      while(bitPositions[i]-1 >= 0 && bitPositions.indexOf(bitPositions[i]-1) == -1){\n        bitPositions[i]--;\n      }\n    }\n    \n    \/\/Read the bit locations back into the number.\n    var value:Int = 0;\n    for(i in 0...bitPositions.length){\n      value = value | (1<<bitPositions[i]);\n    }\n    \n    return value;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111306,"user_id":null,"body":"class Kata {\n  public static function nextHigher(n: Int): Int {\n    if (n == 0) return 1;\n    \n    var numOfShifts:Int = 0;\n    var numOfBits:Int = 0;\n    \n    while (n & 1 == 0) {\n      n = n >> 1;\n      numOfShifts++;\n    }\n    \n    while (n & 1 != 0) {\n      n = n >> 1;\n      numOfShifts++;\n      numOfBits++;\n    }\n    \n    n ^= 1;\n    numOfBits--;\n    \n    while (numOfShifts - numOfBits > 0) {\n      n = n << 1;\n      numOfShifts--;\n    }\n    \n    while (numOfBits > 0) {\n      n = n << 1;\n      n ^= 1;\n      numOfBits--;\n    }\n    \n    return n;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111307,"user_id":null,"body":"class Kata {\n  public static function nextHigher(n: Int): Int {\n    var c1 = 0;\n\t\tfor(i in 0...30)c1+=(n>>i)&1;\n\t\twhile(true){\n\t\t\tvar c2 = 0;\n\t\t\tn++;\n\t\t\tfor(i in 0...30)c2+=(n>>i)&1;\n\t\t\tif(c1==c2)return n;\n\t\t}\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111308,"user_id":null,"body":"class Kata {\n  public static function nextHigher(n: Int): Int {\n    var right = n & -n;\n    var next = n + right;\n    var pattern = Std.int((n ^ next) \/ right) >> 2;\n    return next | pattern;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"56c04261c3fcf33f2d000534":[{"id":111309,"user_id":53,"body":"class Magnets \n{\n    public static function doubles(maxk: Int, maxn: Int): Float \n    {\n        var sum:Float = 0;\n        var k:Float = 1;\n        var n:Float = 0;\n        while (k <= maxk) {\n            n = 1;\n            while (n <= maxn) {\n                sum += 1.0 \/ (k * Math.pow(n + 1, 2 * k));\n                n += 1;\n            }\n            k += 1;\n        }\n        return sum;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111310,"user_id":50,"body":"class Magnets {\n    public static function doubles(maxk: Int, maxn: Int): Float {\n      var o=0.0;\n      for (k in (1...maxk+1)){\n        for (n in (1...maxn+1)){\n          o+=1\/(k*Math.pow(n+1,2*k));\n        }\n      }\n      return o;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111311,"user_id":null,"body":"using Math;\n\nclass Magnets {\n    public static function doubles(maxk: Int, maxn: Int): Float {\n\t\t  var v = (k, n) -> 1 \/ (k * (n + 1).pow(2 * k));\n      \n\t\t  var u = (k, N) -> {\n\t\t  \tvar out = 0.;\n\t\t  \tfor (n in 1...N+1)\n\t\t  \t\tout += v(k, n);\n\t\t  \treturn out;\n\t\t  };\n      \n\t\t  var out = 0.;\n\t\t  for (k in 1...maxk+1)\n\t\t  \tout += u(k, maxn);\n\t\t  return out;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111312,"user_id":492,"body":"class Magnets {\n    public static function doubles(maxk: Int, maxn: Int): Float {\n        var sum = 0.0;\n        for (k in (1... maxk + 1))\n            for (n in (1... maxn + 1))\n                sum += 1 \/ (k * Math.pow(n + 1, 2 * k));\n        return sum;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"56fe17fcc25bf3e19a000292":[{"id":111313,"user_id":492,"body":"class Disguised2 {\n    public static function u1(n: Int, p: Int): Int {\n        return (n + 1) * p;\n    } \n     public static function v1(n: Int, p: Int): Int {\n        return (2 * n + 1) * p;\n    } \n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5726f813c8dcebf5ed000a6b":[{"id":111314,"user_id":53,"body":"class KPrimes {\n  \n    public static function countKprimes(k: Int, start: Int, nd: Int): Array<Int> {\n        var fs = [];\n        for (n in start...nd+1) {\n            var j = pfc(n);\n            if (j == k) {\n                fs.push(n);\n            }\n        }\n    \t  return fs;\n    }\n  \n    public static function puzzle(s: Int): Int {\n        var ans = 0;\n        var xs = countKprimes(7, 128, s - 10);\n        var ys = countKprimes(3, 8, s - 130);\n        for (a in xs) {\n            for (b in ys) {\n                var c = s - a - b;\n                if (c > 0 && pfc(c) == 1) ans++;\n            }\n        }\n        return ans;\n    }\n  \n    private static function pfc(n: Int): Int {\n        var ans = 0;\n        var i = 2;\n        while (i <= Std.int(n \/ i)) {\n            while (n % i == 0) {\n                ans++;\n                n = Std.int(n \/ i);\n            }\n            i += (i > 2 ? 2 : 1);\n        }\n        if (n > 1) ans++;\n        return ans;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111315,"user_id":492,"body":"class KPrimes {\n    private static function nbPrimes(n: Int): Int {\n        var result = 0;\n        for (i in (2... Std.int(Math.sqrt(n)) + 1)) {\n            while (n%i == 0) {\n                result++;\n                n = Std.int(n \/ i);\n            }\n        }\n        if (n > 1)\n            result++;\n        return result;\n    }\n    public static function countKprimes(k: Int, start: Int, nd: Int): Array<Int> {\n        var kprimes = [], i = start;\n    \t  while (i <= nd) {\n        \t  if (nbPrimes(i) == k)\n            \t  kprimes.push(i);\n        \t  i++;\n    \t  }\n    \t  return kprimes;\n    }\n    public static function puzzle(s: Int): Int {\n        var result = 0;\n        for (i in countKprimes(1, 2, s)) {\n            for (j in countKprimes(3, 8, s)) {\n                for (k in countKprimes(7, 128, s)) {\n                    if (i + j + k == s)\n                        result++;\n                }\n            }\n        }\n        return result;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"573182c405d14db0da00064e":[{"id":111316,"user_id":53,"body":"class PrimeConsec {\n  public static function consecKprimes(k: Int, arr: Array<Int>): Int {\n    var m = 0;\n    for (i in 1...arr.length) {\n      if (npf(arr[i])==k && npf(arr[i-1])==k) {\n        m++;\n      }\n    }\n    return m;\n  }\n  private static function npf(n: Int): Int {\n    var m = 0;\n    var i = 2;\n    while (n > 1) {\n      if (n%i==0) {\n        n=Std.int(n\/i);\n        m++;\n        i=2;\n      } else {\n        i++;\n      }\n    }\n    return m;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111317,"user_id":492,"body":"class PrimeConsec {\n    \n    private static function countPrimeDiv(n: Int): Int {\n        var result = 0;\n        for (i in (2... Std.int(Math.sqrt(n)) + 1)) {\n            while (n % i == 0) {\n                result++;\n                n = Std.int(n \/ i);\n            }\n        }\n        if (n > 1)\n            result++;\n        return result;\n    }\n    public static function consecKprimes(k: Int, arr: Array<Int>): Int {\n        var cnt = 0;\n        for (i in (0... arr.length - 1))\n            if ((countPrimeDiv(arr[i]) == k) && (countPrimeDiv(arr[i+1]) == k))\n                cnt += 1;\n        return cnt;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"58184387d14fc32f2b0012b2":[{"id":111318,"user_id":527,"body":"class ApproxFloat {\n  public static function f(x: Float): Float {\n    return x \/ (Math.sqrt(x + 1) + 1);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111319,"user_id":168,"body":"class ApproxFloat {\n  public static function f(x: Float): Float {\n    return x \/ (Math.sqrt(1 + x) + 1);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111320,"user_id":53,"body":"class ApproxFloat {\n  public static function f(x: Float): Float {\n    return x \/ 2.0 - x * x \/ 8.0 + x * x * x \/ 16.0 - 5.0 * x * x * x * x \/ 128.0;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111321,"user_id":null,"body":"class ApproxFloat {\n  public static function f(x: Float): Float {\n    return x\/2 - x*x\/8 + x*x*x\/16 - (5*x*x*x*x)\/128 + (7*x*x*x*x*x)\/256;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111322,"user_id":492,"body":"class ApproxFloat {\n  public static function f(x: Float): Float {\n    return x \/ (1 + Math.sqrt(1 + x));\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"581ee0db1bbdd04e010002fd":[{"id":111323,"user_id":null,"body":"class ApproxInter{\n  public static function interp(myFn:Float->Float,l:Float,u:Float,n:Int):Array<Float>{\n    var a:Array<Float>=[],d:Float=(u-l)\/n;\n    for(i in 0...n){\n      var m=myFn(l+i*d);\n      m*=Math.pow(10,2);\n      m=Math.floor(m)\/Math.pow(10,2);\n      a.push(m);\n    }\n    return a;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111324,"user_id":492,"body":"class ApproxInter {\n    \n    public static function interp(myFn: Float -> Float, l: Float, u: Float, n: Int): Array<Float> {\n        var d = (u - l) \/ n;\n        return [for (i in 0... n) Math.floor(myFn(l+d*i)*100.0)\/100.0];\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5886e082a836a691340000c3":[{"id":111325,"user_id":53,"body":"class Kata {\n  public static function rectangle_rotation(a: Int, b: Int): Int {\n    var x = Std.int(a \/ Math.sqrt(2));\n    var y = Std.int(b \/ Math.sqrt(2));\n    var r = (x + 1) * (y + 1) + x * y;\n    return r + r % 2 - 1;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111326,"user_id":null,"body":"class Kata {\n  public static function rectangle_rotation(a: Int, b: Int): Int {\n    a=Std.int(a\/Math.sqrt(2));\n    b=Std.int(b\/Math.sqrt(2));\n    var r:Int=(a+1)*(b+1)+a*b;\n    return r+r%2-1;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111327,"user_id":492,"body":"class Kata {\n  public static function rectangle_rotation(a: Int, b: Int): Int {\n    var x = Math.floor(a \/ Math.sqrt(2.0));\n    var y = Math.floor(b \/ Math.sqrt(2.0));\n    var res = 0;\n    if ((x + y) % 2 == 0) {\n      res = (x + 1) * (y + 1) + x * y;\n    }\n    else {\n      res =  (x + 1) * y + x * (y + 1);\n    }\n    return res;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111328,"user_id":168,"body":"class Kata {\n  public static function rectangle_rotation(a: Int, b: Int): Int {\n      var x = Math.floor(a \/ Math.sqrt(2));\n      var y = Math.floor(b \/ Math.sqrt(2));\n      return 2 * x * y + x + y + (x + y + 1) % 2;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111329,"user_id":null,"body":"using Math;\nusing Std;\n\nclass Kata {\n  public static function inter(x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float, x4:Float, y4:Float) {\n\t\t\treturn {\n\t\t\t\tx: ((x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)) \/ ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4)),\n\t\t\t\ty: ((x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)) \/ ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\t\t\t};\n\t}\n  \n  public static function rectangle_rotation(a: Int, b: Int): Int {\n   \tfinal p = [\n\t\t\t{x: a - a \/ 2, y: b - b \/ 2},\n\t\t\t{x: a - a \/ 2, y: 0 - b \/ 2},\n\t\t\t{x: 0 - a \/ 2, y: 0 - b \/ 2},\n\t\t\t{x: 0 - a \/ 2, y: b - b \/ 2}\n\t\t];\n\n\t\tfinal ang = Math.PI \/ 4;\n\t\tfor (p in p) {\n\t\t\tfinal t1 = p.x * ang.cos() + (p.y * -ang.sin());\n\t\t\tfinal t2 = p.x * ang.sin() + (p.y * ang.cos());\n\t\t\tp.x = t1;\n\t\t\tp.y = t2;\n\t\t}\n\t\t\n\t\tvar res = 0.;\n\t\tfor (y in p[2].y.ceil()...p[0].y.floor() + 1) {\n\t\t\tvar v1= {x: Math.NaN, y: Math.NaN};\n\t\t\tvar v2 = {x: Math.NaN, y: Math.NaN};\n\t\t\tif (p[2].y <= y && y <= p[1].y)\n\t\t\t\tv1 = inter(-1, y, 1, y, p[2].x, p[2].y, p[1].x, p[1].y);\n\t\t\tif (p[1].y < y && y <= p[0].y)\n\t\t\t\tv1 = inter(-1, y, 1, y, p[1].x, p[1].y, p[0].x, p[0].y);\n\t\t\tif (p[2].y <= y && y <= p[3].y)\n\t\t\t\tv2 = inter(-1, y, 1, y, p[2].x, p[2].y, p[3].x, p[3].y);\n\t\t\tif (p[3].y < y && y <= p[0].y)\n\t\t\t\tv2 = inter(-1, y, 1, y, p[3].x, p[3].y, p[0].x, p[0].y);\n      if (v1.x.floor() >= v2.x.ceil())\n\t\t\t  res += (v2.x.ceil() - v1.x.floor()).abs() + 1;\n\t\t}\n\t\treturn res.int();\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111330,"user_id":null,"body":"class Kata {\n  public static function rectangle_rotation(a: Int, b: Int): Int {\n\t\tvar max = Math.max(a, b);\n\t\tvar min = Math.min(a, b);\n\t\tvar nexy = Math.floor(Math.sqrt(max*max\/8));\n\t\tvar w = 2 * nexy + 1;\n\t\tvar halfh = Math.floor(Math.sqrt(min*min\/8));\n\t\tvar h = 2 * halfh + 1;\n\t\tvar rect1 = w * h;\n\t\tvar hypo = Math.sqrt(2 * nexy * nexy) + 1\/Math.sqrt(2);\n\t\tvar rect2w = hypo <= max\/2 ? w + 1 : w - 1;\n\t\tvar rect2h = 2 * (Math.floor((min\/2 - 1\/Math.sqrt(2)) \/ Math.sqrt(2)) + 1);\n\t\treturn rect1 + rect2w * rect2h;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111331,"user_id":645,"body":"class Kata {\n  public static function rectangle_rotation(a: Int, b: Int): Int {\n    var h = Math.floor(a \/ Math.sqrt(2));\n    var v = Math.floor(b \/ Math.sqrt(2));\n    return h * v + (h + 1) * (v + 1) - ((h % 2) ^ (v % 2));\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"58ce8725c835848ad6000007":[{"id":111332,"user_id":null,"body":"class Kata {\n    \n    public static function potatoes(p0: Int, w0: Int, p1: Int): Int {\n        return Math.floor((w0 * (100 - p0)) \/ (100 - p1));\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-27 19:37:59"},{"id":111333,"user_id":50,"body":"class Kata {\n    \n    public static function potatoes(p0: Int, w0: Int, p1: Int): Int {\n        return Math.floor((100-p0)*w0\/(100-p1));\n    }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-27 19:38:02"},{"id":111334,"user_id":492,"body":"class Kata {\n    \n    public static function potatoes(p0: Int, w0: Int, p1: Int): Int {\n        return Std.int(w0 * (100 - p0) \/ (100 - p1));\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-27 19:37:06"}],"59ca8246d751df55cc00014c":[{"id":111335,"user_id":53,"body":"class Kata {\n  public static function hero(bullets: UInt, dragons: UInt): Bool {\n    return bullets >= 2 * dragons;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111336,"user_id":null,"body":"class Kata {\n  public static function hero(bullets: UInt, dragons: UInt): Bool {\n    if (bullets >= dragons * 2) {\n      return true;\n    }\n    if (bullets < dragons * 2) {\n      return false;\n        }\n    return dragons == 100;\n    return bullets == 50;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111337,"user_id":168,"body":"class Kata {\n  public static function hero(bullets: UInt, dragons: UInt): Bool {\n    return 2 * dragons <= bullets;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111338,"user_id":null,"body":"class Kata {\n  public static function hero(bullets: UInt, dragons: UInt): Bool {\n    return (bullets >= dragons*2) ? true : false;\n     \n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111339,"user_id":null,"body":"class Kata {\n  public static function hero(bullets: UInt, dragons: UInt): Bool {\n    if (bullets >= dragons * 2) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111340,"user_id":null,"body":"class Kata {\n  public static function hero(bullets: UInt, dragons: UInt): Bool {\n    var doubledragons:Int = dragons * 2;\n    doubledragons -= bullets;\n    return doubledragons <= 0;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111341,"user_id":null,"body":"class Kata {\n  public static function hero(bullets: UInt, dragons: UInt): Bool {\n    \/\/ your code goes here\n    return bullets >= dragons * 2;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111342,"user_id":null,"body":"class Kata {\n  public static function hero(bullets: UInt, dragons: UInt): Bool {\n    return bullets \/ 2 >= dragons;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111343,"user_id":50,"body":"class Kata {\n  public static function hero(bullets: UInt, dragons: UInt): Bool {\n    return bullets\/dragons >=2;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111344,"user_id":null,"body":"class Kata {\n  public static function hero(bullets: UInt, dragons: UInt): Bool {\n    return dragons * 2 <= bullets;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"59ccf051dcc4050f7800008f":[{"id":111345,"user_id":53,"body":"class Bud \n{\n    private static function fdivsum(n: Int) : Int\n    {\n        var sum = 1;\n        var i = 2;\n        while (i <= Std.int(Math.floor(Math.sqrt(n))))\n        {\n            if (n % i == 0) \n            {\n                sum += i;\n                if (i != n\/i)\n                {\n                    sum += Std.int(n\/i);\n                }\n            }\n            i++;\n        }\n        return sum;\n    }\n  \n    public static function buddy(start: Int, limit: Int): String \n    {\n        var r = \"\";\n        var i = start;\n        while (i <= limit)\n        {\n            var a = fdivsum(i);\n            if (a - 1 > i) \n            {\n                var b = fdivsum(a - 1);\n                if (b - 1 == i)\n                {\n                    r += \"(\";\n                    r += i;\n                    r += \" \";\n                    r += (a - 1);\n                    r += \")\";\n                    return r;\n                }\n            }\n            i++;\n        }\n        r += \"Nothing\";\n        return r;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111346,"user_id":492,"body":"class Bud {\n  private static function nbd(n: Int): Int {\n    var sum = 1;\n    for (i in 2... Std.int(Math.sqrt(n)) +1) {\n      if (n % i == 0) {\n         sum += i;\n         var d: Int = Std.int(n \/ i);\n         if (d != i)\n           sum += d;\n      }\n    }\n    return sum;\n  }\n  public static function buddy(start: Int, limit: Int): String {\n    for (n in start... limit + 1) {\n      var m = nbd(n) - 1;\n      if (n == nbd(m) - 1 && n < m) {\n        return \"(\" + n + \" \" + m + \")\";\n      }\n    }\n    return \"Nothing\";\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"59df2f8f08c6cec835000012":[{"id":111347,"user_id":null,"body":"class JohnMeeting {\n    \n    public static function meeting(s: String): String {\n      var splitPeople = s.toUpperCase().split(\";\");\n      var orderedPeople = new Array<String>();\n      for (person in splitPeople) {\n        var fullName = person.split(\":\");\n        orderedPeople.push(\"(\" + fullName[1] + \", \" + fullName[0] + \")\");\n      }\n      orderedPeople.sort(function(a, b) return a > b ? 1 : -1);\n      return orderedPeople.join(\"\");\n    }\n}\n","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111348,"user_id":53,"body":"using Lambda;\n\nclass JohnMeeting \n{\n    public static function meeting(s: String): String \n    {\n        var m = s.toUpperCase()\n            .split(\";\")\n            .map(function(n: String): Array<String> { return n.split(\":\"); })\n            .array();\n        m.sort(function(a: Array<String>, b: Array<String>): Int {\n            var i = if (a[1] < b[1]) -1 else if (a[1] > b[1]) 1 else 0;\n            if (i == 0)\n                i = if (a[0] < b[0]) -1 else if (a[0] > b[0]) 1 else 0;\n            return i;\n        });\n        var n = m\n            .map(function(n: Array<String>): String { return '(${n[1]}, ${n[0]})'; })\n            .array();\n        return n\n            .join(\"\");\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111349,"user_id":492,"body":"class JohnMeeting {\n    private static function comp(a: Array<String>, b: Array<String>): Int {\n        if (a[1] == b[1]) {\n            return a[0] < b[0] ? -1 : 1;\n        }\n        return a[1] < b[1] ? -1 : 1;\n    }\n    public static function meeting(s: String): String {\n        var a = s.toUpperCase().split(\";\");\n        var b: Array<Array<String>> = [for (e in a) e.split(\":\")];\n        b.sort(function (a, b) return comp(a, b));\n        var c = [for (e in b) \"(\" + e[1] + \", \" + e[0] + \")\"].join(\"\");\n        return c;\n    }\n}\n","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5a045fee46d843effa000070":[{"id":111350,"user_id":null,"body":"using Math;\nusing Std;\nclass FactDecomp {\n\tpublic static function is_prime(v:Int) {\n\t\tif (v % 2 == 0 || v % 3 == 0 || v == 1 || v < 0)\n\t\t\t\treturn v == 2 || v == 3;\n\t\tvar k = 1;\n\t\tvar i1 = 6 * k - 1;\n\t\tvar i2 = i1 + 2;\n\t\twhile (i1 * i1 <= v) {\n\t\t\tif (v % i1 == 0 || v % i2 == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tk++;\n\t\t\ti1 = 6 * k - 1;\n\t\t\ti2 = i1 + 2;\n\t\t}\n\t\treturn true;\n\t}\n  \n  public static function decomp(n: Int): String {\n\t\tvar out = [];\n    var x = [for (i in 2...n + 1) i].filter(i -> is_prime(i));\n\t\tfor(v in x){\n\t\t\tvar pow = 1;\n\t\t\tvar c = 0;\n\t\t\tvar t = v.pow(pow);\n\t\t\twhile(t<=n){\n\t\t\t\tc+=(n\/t).int();\n\t\t\t\tt = v.pow(++pow);\n\t\t\t}\n\t\t\tout.push(c==1?'$v':'$v^$c');\n\t\t}\n    return out.join(' * ');\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111351,"user_id":492,"body":"class FactDecomp {\n  public static function decomp(n: Int): String {\n    var primePower = [for (i in 0... n + 2) 0];\n    while (n > 1) {\n      var befn = n--;\n      var i = 2;\n      while (i <= Math.sqrt(befn)) {\n        if (befn % i == 0) {\n          befn = Std.int(befn \/ i);\n          primePower[i]++;\n          i = 1;\n        }\n        i++;\n      }\n      primePower[befn]++;\n    }\n    var result = \"\";\n    for (i in (2... primePower.length)) {\n      if (primePower[i] == 0)\n        continue;\n      else if (primePower[i] == 1)\n        result += (i + \" * \");\n      else\n        result += (i + \"^\" + primePower[i] + \" * \");\n    }\n    return result.substring(0, result.length - 3);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5a057ec846d843c81a0000ad":[{"id":111352,"user_id":53,"body":"class Cycle {\n    public static function cycle(n: Int): Int {\n        if (n%2 == 0 || n%5 == 0) return -1;\n        var m = 10 % n;\n        var cnt = 1;\n        while (m > 1) {\n            m = (m * 10) % n; \n            cnt++;\n        }\n        return cnt;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111353,"user_id":null,"body":"class Cycle{\n  public static function cycle(n:Int):Int{\n    if(n%2==0||n%5==0) return -1;\n    var a:Int=1;\n    for(i in 1...n){\n      a=(a*10)%n;\n      if(a==1)return i;\n    }\n    return -1;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111354,"user_id":492,"body":"class Cycle {\n    public static function cycle(n: Int): Int {\n        if (n % 2 == 0 || n % 5 == 0)\n            return -1;\n        var i = 0;\n        var r = 1;\n        do {\n            r = (10 * r) % n;\n            i++;\n        } while (r != 1);\n        return i;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5aba780a6a176b029800041c":[{"id":111355,"user_id":645,"body":"class Kata {\n  public static function maxMultiple(d: Int, b: Int): Int {\n    return b - b % d;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111356,"user_id":null,"body":"class Kata {\n  public static function maxMultiple(divisor:Int, bound:Int):Int {\n    return Std.int(bound \/ divisor) * divisor;\n  }\n}\n","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111357,"user_id":null,"body":"class Kata {\n  public static function maxMultiple(d: Int, b: Int): Int {\n    if(b % d == 0){\n      return b;\n    }\n    return maxMultiple(d, b - 1);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111358,"user_id":50,"body":"class Kata {\n  public static function maxMultiple(d: Int, b: Int): Int {\n    return d*Std.int(b\/d);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111359,"user_id":null,"body":"class Kata {\n  public static function maxMultiple(d: Int, b: Int): Int {\n    var N:Int = b;\n    while(N % d != 0) N--;\n    return N;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111360,"user_id":null,"body":"class Kata {\n  public static function maxMultiple(d: Int, b: Int): Int {\n    return Std.int(b\/d)*d;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111361,"user_id":null,"body":"class Kata {\n  public static function maxMultiple(divisor: Int, bound: Int): Int {\n    return bound - bound % divisor;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5ae62fcf252e66d44d00008e":[{"id":111362,"user_id":null,"body":"class Kata {\n  public static function expression_matter(a: Float, b: Float, c: Float): Float {\n    var result: Float = 0;\n    result = a * b * c;\n    result = Math.max(result, a * b + c);\n    result = Math.max(result, a * (b + c));\n    result = Math.max(result, a + b * c);\n    result = Math.max(result, (a + b) * c);\n    result = Math.max(result, a + b + c);\n    return result;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111363,"user_id":null,"body":"class Kata {\n  public static function expression_matter(a: Int, b: Int, c: Int): Int {\n    return Std.int(Math.max(\n      Math.max(a + b + c, a * b * c),\n      Math.max((a + b) * c, a * (b + c))\n    ));\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111364,"user_id":null,"body":"class Kata {\n  public static function expression_matter(a: Int, b: Int, c: Int): Int {\n    return switch [a, b, c] {\n      case [1, _, 1]: a + b + c;\n      case [1, _, _]: (a + b) * c;\n      case [_, 1, _] if (a < c): (a + b) * c;\n      case [_, 1, _]: a * (b + c);\n      case [_, _, 1]: a * (b + c);\n      case _: a * b * c;\n    }\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111365,"user_id":null,"body":"class Kata {\n  public static function expression_matter(a: Int, b: Int, c: Int): Int {\n    var num1:Int = a * (b + c);\n    var num2:Int = a * b * c; \n    var num3:Int = a + b * c; \n    var num4:Int = (a + b) * c;\n    var num5:Int = a + b + c;\n    var numbers = [num1, num2, num3, num4, num5];\n    var largest = numbers[0];\n    for (i in numbers)\n      { \n        if (i > largest)\n          {\n            largest = i;\n          }\n      }\n    return largest;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111366,"user_id":null,"body":"class Kata {\n  public static function expression_matter(a: Int, b: Int, c: Int): Int {\n      var addedValues = a+b+c;\n    var mutipliedValues = a*b*c;\n    \n    var highestbracketedValues =  cast Math.max((a+b)*c, a*(b+c));    \n    var highestValue = cast Math.max( cast mutipliedValues, cast addedValues);\n    \n    return cast Math.max(highestValue,highestbracketedValues);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111367,"user_id":50,"body":"class Kata {\n  public static function expression_matter(a: Int, b: Int, c: Int): Int {\n    var o=(a+b)*c;\n    if (o<a*(b+c))o=a*(b+c);\n    if (o<a+b+c)o=a+b+c;\n    if (o<a*b*c)o=a*b*c;\n    return o;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111368,"user_id":null,"body":"class Kata {\n  public static function expression_matter(a: Int, b: Int, c: Int): Int {\n    var nums = [a+b+c, a*(b+c), (a*b)+c, a+(b*c), (a+b)*c, a*b*c];\n    nums.sort(Reflect.compare);\n    return nums[nums.length-1];\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111369,"user_id":null,"body":"class Kata {\n  public static function expression_matter(a: Int, b: Int, c: Int): Int {\n    var nums = [a+b+c, a*(b+c), (a*b)+c, a+(b*c), (a+b)*c, a*b*c];\n    var greatest = 0;\n    for (x in nums) greatest = x > greatest ? x : greatest;\n    return greatest;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111370,"user_id":null,"body":"class Kata {\n  public static function expression_matter(a: Int, b: Int, c: Int): Int {\n      if(a == 1 && b == 1 && c == 1 || a == 1 && c == 1){\n        return a + b + c;\n      }\n      if(a == 1 && b == 1 || a == 1 || a == 1 && b < c || b == 1 && a < c){\n        return (a + b) * c;\n      }\n      if(b== 1 && c== 1 || c == 1 || a >= c && b == 1){\n        return a * (b + c);\n      }\n      return a * b * c;  \n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111371,"user_id":53,"body":"class Kata {\n  public static function expression_matter(a: Int, b: Int, c: Int): Int {\n    var ans = a+b+c;\n    if (a*b*c>ans)ans=a*b*c;\n    if ((a+b)*c>ans)ans=(a+b)*c;\n    if (a*(b+c)>ans)ans=a*(b+c);\n    return ans;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5b06c990908b7eea73000069":[{"id":111372,"user_id":53,"body":"class F {\n    public static function f(x: Float, y: Float, eps: Float): Int {\n        var ans = Math.log(eps) \/ Math.log(hypot(x, y));\n        return ans < 0 ? -1 : Math.floor(ans);\n    }\n    private static function hypot(a: Float, b: Float): Float {\n        return Math.sqrt(a * a +  b * b);\n    }\n}\n","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111373,"user_id":492,"body":"class F {\n\n    public static function f(x: Float, y: Float, eps: Float): Int {\n        var hy = Math.sqrt(x * x + y * y);\n        if (hy >= 1.0)\n            return -1;\n        return Std.int(Math.log(eps) \/ Math.log(hy));\n    }\n}\n","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111374,"user_id":168,"body":"class F {\n\n    public static function f(x: Float, y: Float, eps: Float): Int {\n        var a = Math.sqrt(x * x + y * y);\n        return if (x >= 1) -1 else Math.floor(Math.log(eps) \/ Math.log(a));\n    }\n}\n","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5b0c0ec907756ffcff00006e":[{"id":111375,"user_id":527,"body":"class Quadratiq {\n    public static function quadratic(_a: Float, b: Float, c: Float): Float {\n        return -c \/ b;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111376,"user_id":492,"body":"class Quadratiq {\n    public static function quadratic(a: Float, b: Float, c: Float): Float {\n        return -c \/ b;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5b1cd19fcd206af728000056":[{"id":111377,"user_id":null,"body":"class Solve {\n \n  public static function solve(m: Float): Float {\n     return ((2 * m) + 1 - Math.sqrt((4 * m) + 1))\/(2 * m);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111378,"user_id":null,"body":"using Std;\nclass Solve {\n  public static function solve(m: Float): Float {\n      return ((2 * m) - Math.sqrt(4 * m + 1) + 1) \/ (2 * m);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111379,"user_id":527,"body":"class Solve {\n \n  public static function solve(m: Float): Float {\n    return 1 - (Math.sqrt(m + 0.25) - 0.5) \/ m;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111380,"user_id":492,"body":"class Solve {\n \n  public static function solve(m: Float): Float {\n      var s = Math.sqrt(4 * m + 1);\n      return (2 * m + 1 - s) \/ (2 * m);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111381,"user_id":492,"body":"class Solve {\n \n  public static function solve(m: Float): Float {\n      var s = Math.sqrt(4 * m + 1);\n      return (2 * m + 1 - s) \/ (2 * m);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5b40b666dfb4291ad9000049":[{"id":111382,"user_id":53,"body":"class Walker {\n  public static function solve(a: Int, b: Int, c: Int, alpha: Int, beta: Int, gamma: Int): Array<Int> {\n    var u = alpha * Math.PI \/ 180; \n    var v = beta * Math.PI \/ 180; \n    var w = gamma * Math.PI \/ 180;\n    var x = a * Math.cos(u) - b * Math.sin(v) - c * Math.cos(w);\n    var y = a * Math.sin(u) + b * Math.cos(v) - c * Math.sin(w);\n    var t = Math.atan2(y, x) * 180 \/ Math.PI;\n    var r = Math.sqrt(x * x + y * y);\n    return [Math.round(r), Math.floor(t), Math.floor(t * 60) % 60, Math.floor(t * 3600) % 60];\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111383,"user_id":492,"body":"class Walker {\n    public static function solve(a: Int, b: Int, c: Int, alpha: Int, beta: Int, gamma: Int): Array<Int> {\n        var al = alpha * Math.PI \/ 180; \n        var be = beta * Math.PI \/ 180; \n        var ga = gamma * Math.PI \/ 180;\n        var x: Float = a * Math.cos(al) - b * Math.sin(be) - c * Math.cos(ga);\n        var y: Float = a * Math.sin(al) + b * Math.cos(be) - c * Math.sin(ga);\n        var r = Math.sqrt(x * x + y * y);\n        var theta = Math.atan2(y, x) * 180 * 3600 \/ Math.PI;\n        var d = Math.floor(theta \/ 3600);\n        var mm = theta % 3600;\n        var m = Math.floor(mm \/ 60);\n        var s = mm % 60;\n        return [Math.round(r), d, m, Math.floor(s)];\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5b853229cfde412a470000d0":[{"id":111384,"user_id":null,"body":"class Solution {\n  public static function twice_as_old(dad: Int, son: Int):Int {\n    return Std.int(Math.abs( 2 * son - dad));\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111385,"user_id":53,"body":"class Solution {\n  public static function twice_as_old(dad: Int, son: Int):Int {\n    return Std.int(Math.abs(dad - 2 * son));\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111386,"user_id":null,"body":"class Solution {\n  public static function twice_as_old(dad: Int, son: Int):Int {\n    return (dad - son * 2) > 0 ? dad - son * 2 : son * 2 - dad;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111387,"user_id":null,"body":"class Solution {\n  public static function twice_as_old(dad: Int, son: Int):Int {\n    \/\/ Implement me\n    return  cast Math.abs(dad- son*2);\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111388,"user_id":null,"body":"class Solution {\n  public static function twice_as_old(dad: Int, son: Int):Int {\n    \/\/ Implement me\n    \n    \/\/ var sonDoubleAge = son *2 ; \n    \/\/ return dad>sonDoubleAge ? dad-sonDoubleAge: sonDoubleAge - dad;\n    \n     return cast  Math.abs(dad - son*2);\n\n    \n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111389,"user_id":null,"body":"class Solution {\n  public static function twice_as_old(dad: Int, son: Int):Int {\n\n    var sonDoubleAge = son *2;\n    \n    return dad > sonDoubleAge ? dad - sonDoubleAge: sonDoubleAge-dad;\n    \n    \n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111390,"user_id":168,"body":"import Math;\n\nclass Solution {\n  public static function twice_as_old(dad: Int, son: Int):Int {\n    return Math.floor(Math.abs(dad - 2 * son));\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111391,"user_id":null,"body":"class Solution {\n  public static function twice_as_old(dad: Int, son: Int): Int {\n    if(dad > 2 * son) {\n    return dad - 2 * son;\n    }\n    else(return 2 * son - dad);\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111392,"user_id":null,"body":"import utest.Assert;\nimport Solution;\n\nclass Solution {\n  public static function twice_as_old(dad: Int, son: Int): Int {\n    if(dad > 2 * son) {\n    return dad - 2 * son;\n    }\n    else(return 2 * son - dad);\n  }\n}","lang_id":24,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111393,"user_id":null,"body":"class Solution {\n  public static function twice_as_old(dad: Int, son: Int):Int {\n    if(dad >= 2 * son){\n      return dad - 2 * son;\n    }\n    return 2 * son - dad;\n  }\n}","lang_id":24,"is_control":0,"status":"sample_passed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5d50e3914861a500121e1958":[{"id":111394,"user_id":645,"body":"class Kata {\n  public static function add_letters(letters: Array<String>): String {\n    var sum = 0;\n    for (x in letters) sum += StringTools.fastCodeAt(x, 0) - 96;\n    return \"zabcdefghijklmnopqrstuvwxy\".charAt(sum % 26);\n  }\n}","lang_id":24,"is_control":0,"status":"sample_failed","variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111395,"user_id":null,"body":"class Kata {\n  public static function add_letters(letters: Array<String>): String {\n    var o = 0;\n    var abcs = 'zabcdefghijklmnopqrstuvwxyz';\n    for (letter in letters) {\n    o += abcs.indexOf(letter);\n    }\n    return abcs.charAt(o % 26);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111396,"user_id":null,"body":"class Kata {\n  private static inline var alphabetOffset:Int = \"a\".code - 1; \/\/ 96\n  \n  public static function add_letters(letters: Array<String>): String {\n    if(letters.length == 0){\n      return \"z\";\n    }\n    \n    var acc = 0;\n    for(l in letters){\n      acc += l.charCodeAt(0) - alphabetOffset;\n      if(acc > 26){\n        acc -= 26;\n      }\n    }\n    \n    return String.fromCharCode(acc + alphabetOffset);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111397,"user_id":null,"body":"class Kata {\n  public static function add_letters(letters: Array<String>): String {\n    if(letters.length == 0) return \"z\";\n    if(letters.length == 1) return letters[0];\n    \n    var offset:Int = \"a\".charCodeAt(0);\n    var index:Int = 0;\n    for(letter in letters){\n      index += (letter.charCodeAt(0) - offset + 1) % 26;\n    }\n        \n    return String.fromCharCode((index - 1) % 26 + offset);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111398,"user_id":480,"body":"class Kata {\n  public static function add_letters(letters: Array<String>): String {\n    var n:Int=0;\n    for(c in letters){\n      n+=(c.charCodeAt(0)-96)%26;\n    }\n    return String.fromCharCode(97+((25+n)%26));\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111399,"user_id":759,"body":"class Kata {\n  public static function add_letters(letters: Array<String>): String {\n    var n = 0;\n    for (l in letters) n += l.charCodeAt(0) - \"a\".code + 1;\n    return n == 0 ? \"z\" : String.fromCharCode(\"a\".code + (n - 1) % 26);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111400,"user_id":492,"body":"class Kata {\n  public static function add_letters(letters: Array<String>): String {\n    var alphabet = 'zabcdefghijklmnopqrstuvwxy';\n    var sum = 0;\n    for (letter in letters) {\n      sum += alphabet.indexOf(letter);\n    }\n    return alphabet.charAt(sum % 26); \n  }\n}\n","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111401,"user_id":null,"body":"class Kata {\n  public static function add_letters(letters: Array<String>): String {\n    var abc : String = \"zabcdefghijklmnopqrstuvwxy\";\n    var c : Int = 0;\n    for (s in letters) {\n      c += s.charCodeAt(0) - \"a\".charCodeAt(0) + 1;\n      c %= 26;\n    }\n    return abc.charAt(c);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111402,"user_id":null,"body":"class Kata {\n  public static function add_letters(letters: Array<String>): String {\n    var a : String = 'zabcdefghijklmnopqrstuvwxy';\n    var c : Int = 0;\n    for (i in letters) {\n      c += i.charCodeAt(0) - 'a'.charCodeAt(0) + 1;\n      c %= 26;\n    }\n    return a.charAt(c);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111403,"user_id":null,"body":"class Kata {\n  public static function add_letters(letters: Array<String>): String {\n\t  if (letters.length == 0) return 'z';\n\t  var sum = 0;\n\t  for(l in letters)\n\t\t  sum += l.charCodeAt(0) - 96;\n\t  return String.fromCharCode(97 + ((sum - 1) % 26));\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5d95b7644a336600271f52ba":[{"id":111404,"user_id":492,"body":"class RobinsonCrusoe {\n    \n    public static function crusoe(n: Int, d: Float, ang: Int, distmult: Float, angmult: Float): Array<Float> {\n        var x = 0.0, y = 0.0, a = ang * Math.PI \/ 180.0;\n        for (i in (1... n + 1)) {\n            x += d * Math.cos(a);\n            y += d * Math.sin(a);\n            d *= distmult;\n            a *= angmult;\n        }\n        return [x, y];\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111405,"user_id":76,"body":"class RobinsonCrusoe {\n  public static function crusoe(n: Int, d: Float, ang: Int, distmult: Float, angmult: Float): Array<Float> {\n    var x: Float = 0;\n    var y: Float = 0;\n    var a: Float = ang * Math.PI \/ 180; \n    for (i in 0...n) {\n      x += d * Math.cos(a);\n      y += d * Math.sin(a);\n      d *= distmult;\n      a *= angmult;\n    }\n    return [x, y];\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111406,"user_id":53,"body":"class RobinsonCrusoe \n{\n    public static function crusoe(n: Int, d: Float, ang: Int, distmult: Float, angmult: Float): Array<Float>\n    {\n        var x: Float = 0;\n        var y: Float = 0;\n        var beta: Float = ang * Math.PI \/ 180;\n        \n        for (i in (1... n+1))\n        {\n            x += d * Math.cos(beta);\n            y += d * Math.sin(beta);\n            d *= distmult;\n            beta *= angmult;\n        }\n      \n        return [x, y];\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111407,"user_id":null,"body":"class RobinsonCrusoe {\n  public static function crusoe(n: Int, d: Float, ang: Int, distmult: Float, angmult: Float): Array<Float> {\n    var x = .0, y = .0, ang1 = Math.PI\/180*ang;\n    for (i in 0...n) {\n      if (i>0) { d*=distmult; ang1*=angmult; }\n      x+=d*Math.cos(ang1); y+=d*Math.sin(ang1);\n    }\n    return [x, y];\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111408,"user_id":480,"body":"class RobinsonCrusoe {\n    \n    public static function crusoe(n: Int, d: Float, ang: Int, distmult: Float, angmult: Float): Array<Float> {\n        var p:Array<Float>=[0.0, 0.0];\n        var a:Float=cast(ang, Float)*Math.PI\/180.0;\n        var i:Int=0;\n        while(i<n){\n          p[0]+=d*Math.cos(a);\n          p[1]+=d*Math.sin(a);\n          d*=distmult;\n          a*=angmult;\n          i+=1;\n        }\n        return p;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111409,"user_id":null,"body":"class RobinsonCrusoe {\n    \n    public static function crusoe(n: Int, d: Float, ang: Int, distmult: Float, angmult: Float): Array<Float> {\n         var x:Float=0,y:Float=0,r=ang*Math.PI\/180,i;\n      for(i in 0...n){\n          x+=d*Math.cos(r);\n          y+=d*Math.sin(r);\n          d*=distmult;\n          r*=angmult;\n      }\n      return [x,y];\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111410,"user_id":759,"body":"class RobinsonCrusoe {\n  public static function crusoe(n: Int, d: Float, ang: Int, distmult: Float, angmult: Float): Array<Float> {\n    var x = 0.0, y = 0.0;\n    var a: Float = Math.PI \/ 180 * ang, dist: Float = d;\n    for (i in 0...n) {\n      x += Math.cos(a) * dist;\n      y += Math.sin(a) * dist;\n      a *= angmult;\n      dist *= distmult;\n    }\n    return [x, y];\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5da1df6d8b0f6c0026e6d58d":[{"id":111411,"user_id":53,"body":"class Section {\n    public static function c(k: Int): Int {\n        var sq: haxe.Int64 = haxe.Int64.ofInt(Math.floor(Math.sqrt(k)));\n        if (sq * sq != k) return 0;\n        var i = 2;\n        var num = k * sq;\n        var ans = 1;\n        while (num > 1) {\n            var cnt = 0;\n            while (num % i == 0) {\n                num = num \/ i;\n                cnt++;\n            }\n            ans *= (cnt + 1);\n            i++;\n        }\n        return ans;\n    }\n}\n","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111412,"user_id":492,"body":"import haxe.Int64;\n\nclass Section {\n    \n    private static function divNb(n: Int64): Int {\n        var i = 2; var p = 1;\n        while (n > 1) {\n            var kt = 0;\n            while (n % i == 0) {\n                n = n \/ i;\n                kt += 1;\n            }\n            if (kt != 0)\n                p *= (kt + 1);\n            i += 1;\n        }\n        return p;\n    }\n    public static function c(k: Int): Int {\n        var r: Int64 = Int64.fromFloat(Math.sqrt(k));\n        if (r * r == k)\n            return divNb(k * r);\n        return 0;\n    }\n}\n","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5dad6e5264e25a001918a1fc":[{"id":111413,"user_id":480,"body":"class Decode {\n    \n    public static function decode(r: String): String {\n        var num:Int=0;\n        var numComplete:Bool=false;\n        var s:String=\"\";\n        for (i in 0...r.length){\n          var code=r.charCodeAt(i);\n          if (code>=48&&code<=57) {\n            num=num*10+(code-48);\n          }\n          else {\n            if(!numComplete){\n              numComplete=true;\n              if (num%2==0 || num%13==0) {\n                return \"Impossible to decode\";\n              }\n            }\n            var d=code-97;\n            for (j in 0...26) {\n              if ((j*num)%26==d) {\n                s=s+String.fromCharCode(j+97);\n                break;\n              }\n            }\n          }\n        }\n        return s;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111414,"user_id":492,"body":"class Decode {\n    \n    public static function decode(r: String): String {\n        var reg = ~\/\\D.*\/;\n        var prefix = reg.replace(r, \"\");\n        var num = Std.parseInt(prefix) % 26;\n        var ss = StringTools.replace(r, prefix, \"\");        \n        var dict = [3=>9, 9=>3, 21=>5, 5=>21, 7=>15, 15=>7, 11=>19, 19=>11, 17=>23, 23=>17, 25=>25, 1=>1];\n        if (!dict.exists(num)) {\n            return \"Impossible to decode\";\n        }\n        var n = dict[num];       \n        var res = \"\";\n        var alpha = \"abcdefghijklmnopqrstuvwxyz\";\n        for (i in 0... ss.length) {\n            var c = ss.charAt(i);\n            var j = alpha.indexOf(c);\n            var ch = alpha.charAt((j * n) % 26);\n            res += ch;\n        }\n        return res;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5eb27d81077a7400171c6820":[{"id":111415,"user_id":759,"body":"class Kata {\n\n\tpublic static function gracefulTipping( bill : Float ) : Int\n\t{\n\t\tfinal x = bill * 1.15;\n    final mag = bill < 10 ? 1 : Math.pow(10, (\"\"+Math.floor(x)).length - 1) \/ 2;\n    return Std.int(Math.ceil(x \/ mag) * mag);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111416,"user_id":null,"body":"using Math;\nusing Std;\n\nclass Kata {\n\n\tpublic static function gracefulTipping( bill : Float ) : Int\n\t{\n\t\tbill *= 1.15;\n\t\tvar ndig = bill.int().string().length;\n\t\tvar d = (5 * 10.pow(ndig - 2)).ceil();\n\t\treturn (bill - (bill % d) + d).int();\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111417,"user_id":480,"body":"class Kata {\n\n\tpublic static function gracefulTipping( bill : Float ) : Int\n\t{\n    var bill1=cast(Math.ceil(Math.fround(bill*1.15)),Int);\n    var f:Int=1;\n    while(bill1>100) {\n      bill1=Std.int(bill1\/10);\n      f*=10;\n    }\n    for (e in [1,2,3,5,9\/*,10*\/,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100]){\n      if (e>bill1) {bill1=e;break;}\n    }\n    return bill1*f;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111418,"user_id":492,"body":"class Kata {\n\n\tpublic static function gracefulTipping( bill : Float ) : Int\n\t{\n\t\t  var res = bill * 1.15;\n    \tif (res < 10)\n        \treturn Math.ceil(res);\n      var u = Math.ceil(Math.log(res) \/ Math.log(10)) - 2;\n    \tvar tmp = 5 * Math.pow(10.0, u);\n    \tif (res % tmp > 0)\n        \tres += (tmp - res % tmp);\n    \treturn Math.floor(res);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111419,"user_id":null,"body":"class Kata {\n\n  public static function gracefulTipping( bill : Float ) : Int\n  {    \n        \/\/Minumum to pay\n    var minimum:Float = bill*1.15, \n        \/\/ log base 10 (better than converting to string to determine the base 10)\n        placements:Float = Math.floor(Math.log(minimum)\/Math.log(10)),\n        \/\/power for each place and lower rounded up to figure out the nearest value of 5 to round to\n        magnitude:Float = Math.ceil(Math.pow(10,placements)*0.5); \n    \n    \/\/determine the amount of times it goes into the multiplier, round up and multiply back to determine the final amount\n    return Std.int(Math.ceil(minimum\/magnitude)*magnitude);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111420,"user_id":null,"body":"class Kata {\n\n\tpublic static function gracefulTipping( bill : Float ) : Int\n\t{\n    var minimum:Float = bill*1.15; \/\/Minumum to pay\n    var placements:String = Std.string(Std.int(minimum)); \/\/ number of places\n    var magnitude:Float = Math.ceil(Math.pow(10,placements.length-1)*0.5); \/\/power for each place and lower rounded up\n    \n    return Std.int(Math.ceil(minimum\/magnitude)*magnitude);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111421,"user_id":null,"body":"class Kata {\n\n\tpublic static function gracefulTipping( bill : Float ) : Int\n\t{\n\t\tvar result : Float = bill * 1.15;\n    if(result<10.0) {\n      result = Math.ceil(result);\n    } else {\n      var section : Int = Math.floor(Math.pow(10, Math.floor(Math.log(result)\/Math.log(10.0))- 1))*5;\n      result = Math.ceil(result \/ section)*section;\n    }\n    return Math.ceil(result);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111422,"user_id":null,"body":"class Kata {\n\n\tpublic static function gracefulTipping( bill : Float ) : Int\n\t{\n\t\tvar tip : Int = Math.ceil(1.15 * bill);\n    var a : Int = 5 * Std.int(Math.pow(10, Std.int(Math.log(tip)\/Math.log(10)-1)));\n    tip += (tip > 10 ? 1 : 0) * a;\n    return tip > 10 ? tip - tip % a : tip;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111423,"user_id":48,"body":"class Kata {\n\n\tpublic static function gracefulTipping( bill : Float ) : Int\n\t{\n    var base = bill * 1.15;\n    if(base < 10) return Math.ceil(base);\n    var fiver = 5 * Math.pow(10, (Math.ceil(Math.log(base)\/Math.log(10)) - 2));\n    return Std.int((Std.int(base \/ fiver) * fiver) + fiver);\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111424,"user_id":null,"body":"class Kata {\n\n\tpublic static function gracefulTipping( bill : Float ) : Int {\n\t\tvar c = bill * 1.15;\n\t\tvar m = c < 10 ? 1 : 5 * Std.int(Math.pow(10, Math.floor(Math.log(c) \/ Math.log(10)) - 1));\n\t\treturn Math.ceil(c \/ m) * m;\n\t}\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"5fde1ea66ba4060008ea5bd9":[{"id":111425,"user_id":null,"body":"class Kata {\n  public static function burner(c0: Int, h0: Int, o0: Int): Array<Int> {\n    var c = c0;\n    var h = h0;\n    var o = o0;\n    var water = 0;\n    var co2 = 0;\n    var methane = 0;\n    while (h >= 2 && o >= 1) {\n      ++water;\n      h -= 2;\n      o -= 1;\n    }\n    while (o >= 2 && c >= 1) {\n      ++co2;\n      o -= 2;\n      c -= 1;\n    }\n    while (h >= 4 && c >= 1) {\n      ++methane;\n      h -= 4;\n      c -= 1;\n    }\n    return [water, co2, methane];\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111426,"user_id":null,"body":"class Kata {\n  public static function burner(c: Int, h: Int, o: Int): Array<Int> {\n    var water = Std.int(Math.min(o, h \/ 2));\n    var co2 = Std.int(Math.min(c, (o - water) \/ 2));\n    var methane = Std.int(Math.min(c - co2, (h - water * 2) \/ 4));\n    return [water, co2, methane];\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111427,"user_id":480,"body":"class Kata {\n  public static function imin(a:Int, b:Int){ if(a<b){ return a; } else { return b;} }\n  \n  public static function burner(c: Int, h: Int, o: Int): Array<Int> {\n    var water : Int = imin(o, h>>1);\n    var co2 : Int = imin(c, (o-water)>>1);\n    var methane : Int = imin(c-co2, (h-2*water)>>2);\n    return [water, co2, methane];\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111428,"user_id":53,"body":"class Kata {\n  public static function burner(c: Int, h: Int, o: Int): Array<Int> {\n    var h2o = Std.int(Math.min(h>>1, o));\n    var co2 = Std.int(Math.min(c, o-h2o>>1));\n    var ch4 = Std.int(Math.min(c-co2, h-h2o*2>>2));\n    return [h2o, co2, ch4];\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111429,"user_id":645,"body":"class Kata {\n  public static function burner(c: Int, h: Int, o: Int): Array<Int> {\n    var h2o = Std.int(Math.min(o, h \/ 2));\n    var co2 = Std.int(Math.min(c, (o - h2o) \/ 2));\n    var ch4 = Std.int(Math.min(c - co2, (h - h2o * 2) \/ 4));\n    return [h2o, co2, ch4];\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}],"6129095b201d6b000e5a33f0":[{"id":111430,"user_id":50,"body":"class Kata {\n    public static function f(x: Int, y: Int, z: Int): Int {\n      return z*(3*x*y+1+2*(x+y))+2*x*y+x+y;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111431,"user_id":null,"body":"class Kata {\n    public static function f(x: Int, y: Int, z: Int): Int {\n        return 3*x*y*z + 2*(x*y + y*z + x*z) + x + y + z;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111432,"user_id":null,"body":"class Kata {\n    public static function f(x: Int, y: Int, z: Int): Int {\n         return x * (y + 1) * (z + 1) +\n         y * (z + 1) * (x + 1) +\n         z * (x + 1) * (y + 1);\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111433,"user_id":209,"body":"class Kata {\n    public static function f(x: Int, y: Int, z: Int): Int {\n        return x + y + z + 2 * (x * y + y * z + z * x ) + 3 * x*y*z;\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111434,"user_id":527,"body":"class Kata {\n  public static function f(x: Int, y: Int, z: Int): Int {\n    return x * (y + 1) * (z + 1) + (x + 1) * y * (z + 1) + (x + 1) * (y + 1) * z;\n  }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"},{"id":111435,"user_id":53,"body":"class Kata {\n    public static function f(x: Int, y: Int, z: Int): Int {\n        return (x * (y + 1) + y * (x + 1)) * (z + 1) + z * (x + 1) * (y + 1);\n    }\n}","lang_id":24,"is_control":0,"status":null,"variations":0,"best_practice":0,"clever":0,"comments":0,"created_at":"2022-12-25 20:02:43","updated_at":"2022-12-25 20:02:43"}]}